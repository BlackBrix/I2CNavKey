

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Nov 17 19:24:25 2019

Microchip MPLAB XC8 C Compiler v2.05 (Pro license) build 20181220022703 Og9f 
     1                           	processor	16F18345
     2                           	opt	pw 120
     3                           	opt	plic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text15,local,class=CODE,merge=1,delta=2
    17                           	psect	swtext1,local,class=CONST,delta=2
    18                           	psect	text20,local,class=CODE,merge=1,delta=2
    19                           	psect	swtext2,local,class=CONST,delta=2
    20                           	psect	swtext3,local,class=CONST,delta=2
    21                           	psect	swtext4,local,class=CONST,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	text42,local,class=CODE,merge=1,delta=2
    24                           	psect	text45,local,class=CODE,merge=1,delta=2
    25                           	psect	text46,local,class=CODE,merge=1,delta=2
    26                           	psect	text47,local,class=CODE,merge=1,delta=2
    27                           	psect	swtext5,local,class=CONST,delta=2
    28                           	psect	text51,local,class=CODE,merge=1,delta=2
    29                           	psect	swtext6,local,class=CONST,delta=2
    30                           	psect	text52,local,class=CODE,merge=1,delta=2
    31                           	psect	text53,local,class=CODE,merge=1,delta=2
    32                           	psect	text54,local,class=CODE,merge=1,delta=2
    33                           	psect	text55,local,class=CODE,merge=1,delta=2
    34                           	psect	text57,local,class=CODE,merge=1,delta=2
    35                           	psect	swtext7,local,class=CONST,delta=2
    36                           	psect	swtext8,local,class=CONST,delta=2
    37                           	psect	swtext9,local,class=CONST,delta=2
    38                           	psect	swtext10,local,class=CONST,delta=2
    39                           	psect	text73,local,class=CODE,merge=1,delta=2
    40                           	dabs	1,0x7E,2
    41  0000                     
    42                           ; Version 2.05
    43                           ; Generated 20/12/2018 GMT
    44                           ; 
    45                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F18345 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  001D                     	;# 
   108  001E                     	;# 
   109  001F                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  0090                     	;# 
   114  0091                     	;# 
   115  0092                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0097                     	;# 
   119  009B                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  009F                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  0111                     	;# 
   129  0112                     	;# 
   130  0113                     	;# 
   131  0114                     	;# 
   132  0115                     	;# 
   133  0116                     	;# 
   134  0117                     	;# 
   135  0118                     	;# 
   136  0119                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  018E                     	;# 
   140  0197                     	;# 
   141  0199                     	;# 
   142  0199                     	;# 
   143  0199                     	;# 
   144  019A                     	;# 
   145  019A                     	;# 
   146  019A                     	;# 
   147  019B                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019B                     	;# 
   152  019C                     	;# 
   153  019C                     	;# 
   154  019C                     	;# 
   155  019D                     	;# 
   156  019D                     	;# 
   157  019D                     	;# 
   158  019E                     	;# 
   159  019E                     	;# 
   160  019E                     	;# 
   161  019F                     	;# 
   162  019F                     	;# 
   163  019F                     	;# 
   164  019F                     	;# 
   165  019F                     	;# 
   166  020C                     	;# 
   167  020D                     	;# 
   168  020E                     	;# 
   169  0211                     	;# 
   170  0211                     	;# 
   171  0212                     	;# 
   172  0212                     	;# 
   173  0213                     	;# 
   174  0213                     	;# 
   175  0214                     	;# 
   176  0214                     	;# 
   177  0215                     	;# 
   178  0215                     	;# 
   179  0215                     	;# 
   180  0215                     	;# 
   181  0216                     	;# 
   182  0216                     	;# 
   183  0217                     	;# 
   184  0217                     	;# 
   185  0219                     	;# 
   186  021A                     	;# 
   187  021B                     	;# 
   188  021C                     	;# 
   189  021D                     	;# 
   190  021D                     	;# 
   191  021E                     	;# 
   192  021F                     	;# 
   193  028C                     	;# 
   194  028D                     	;# 
   195  028E                     	;# 
   196  0291                     	;# 
   197  0291                     	;# 
   198  0292                     	;# 
   199  0293                     	;# 
   200  0294                     	;# 
   201  0295                     	;# 
   202  0295                     	;# 
   203  0296                     	;# 
   204  0297                     	;# 
   205  0298                     	;# 
   206  029F                     	;# 
   207  030C                     	;# 
   208  030D                     	;# 
   209  030E                     	;# 
   210  0311                     	;# 
   211  0311                     	;# 
   212  0312                     	;# 
   213  0313                     	;# 
   214  0314                     	;# 
   215  0315                     	;# 
   216  0315                     	;# 
   217  0316                     	;# 
   218  0317                     	;# 
   219  0318                     	;# 
   220  038C                     	;# 
   221  038D                     	;# 
   222  038E                     	;# 
   223  0391                     	;# 
   224  0392                     	;# 
   225  0393                     	;# 
   226  0394                     	;# 
   227  0395                     	;# 
   228  0396                     	;# 
   229  0397                     	;# 
   230  0398                     	;# 
   231  0399                     	;# 
   232  039A                     	;# 
   233  039C                     	;# 
   234  039D                     	;# 
   235  039E                     	;# 
   236  039F                     	;# 
   237  0411                     	;# 
   238  0411                     	;# 
   239  0412                     	;# 
   240  0413                     	;# 
   241  0414                     	;# 
   242  0415                     	;# 
   243  0416                     	;# 
   244  0417                     	;# 
   245  0418                     	;# 
   246  0418                     	;# 
   247  0419                     	;# 
   248  041A                     	;# 
   249  041B                     	;# 
   250  041C                     	;# 
   251  041D                     	;# 
   252  041E                     	;# 
   253  041F                     	;# 
   254  0498                     	;# 
   255  0498                     	;# 
   256  0499                     	;# 
   257  049A                     	;# 
   258  049B                     	;# 
   259  049B                     	;# 
   260  049C                     	;# 
   261  049D                     	;# 
   262  049E                     	;# 
   263  049F                     	;# 
   264  0617                     	;# 
   265  0618                     	;# 
   266  0619                     	;# 
   267  0619                     	;# 
   268  061A                     	;# 
   269  061B                     	;# 
   270  061C                     	;# 
   271  061C                     	;# 
   272  061F                     	;# 
   273  0691                     	;# 
   274  0692                     	;# 
   275  0693                     	;# 
   276  0694                     	;# 
   277  0695                     	;# 
   278  0696                     	;# 
   279  0697                     	;# 
   280  0698                     	;# 
   281  0699                     	;# 
   282  0711                     	;# 
   283  0712                     	;# 
   284  0713                     	;# 
   285  0714                     	;# 
   286  0715                     	;# 
   287  0716                     	;# 
   288  0717                     	;# 
   289  0718                     	;# 
   290  0719                     	;# 
   291  0891                     	;# 
   292  0891                     	;# 
   293  0891                     	;# 
   294  0891                     	;# 
   295  0891                     	;# 
   296  0891                     	;# 
   297  0892                     	;# 
   298  0892                     	;# 
   299  0892                     	;# 
   300  0893                     	;# 
   301  0893                     	;# 
   302  0893                     	;# 
   303  0893                     	;# 
   304  0893                     	;# 
   305  0893                     	;# 
   306  0894                     	;# 
   307  0894                     	;# 
   308  0894                     	;# 
   309  0895                     	;# 
   310  0895                     	;# 
   311  0895                     	;# 
   312  0896                     	;# 
   313  0896                     	;# 
   314  0896                     	;# 
   315  089B                     	;# 
   316  0911                     	;# 
   317  0912                     	;# 
   318  0913                     	;# 
   319  0914                     	;# 
   320  0915                     	;# 
   321  0916                     	;# 
   322  0918                     	;# 
   323  0919                     	;# 
   324  091A                     	;# 
   325  091B                     	;# 
   326  091C                     	;# 
   327  091D                     	;# 
   328  091E                     	;# 
   329  091F                     	;# 
   330  0E0F                     	;# 
   331  0E10                     	;# 
   332  0E11                     	;# 
   333  0E12                     	;# 
   334  0E13                     	;# 
   335  0E14                     	;# 
   336  0E15                     	;# 
   337  0E16                     	;# 
   338  0E17                     	;# 
   339  0E18                     	;# 
   340  0E19                     	;# 
   341  0E1A                     	;# 
   342  0E1B                     	;# 
   343  0E1C                     	;# 
   344  0E1D                     	;# 
   345  0E1E                     	;# 
   346  0E1F                     	;# 
   347  0E20                     	;# 
   348  0E21                     	;# 
   349  0E22                     	;# 
   350  0E24                     	;# 
   351  0E25                     	;# 
   352  0E28                     	;# 
   353  0E29                     	;# 
   354  0E2A                     	;# 
   355  0E2B                     	;# 
   356  0E2C                     	;# 
   357  0E2D                     	;# 
   358  0E2E                     	;# 
   359  0E2F                     	;# 
   360  0E90                     	;# 
   361  0E91                     	;# 
   362  0E92                     	;# 
   363  0E94                     	;# 
   364  0E95                     	;# 
   365  0E9C                     	;# 
   366  0E9D                     	;# 
   367  0E9E                     	;# 
   368  0E9F                     	;# 
   369  0EA0                     	;# 
   370  0EA1                     	;# 
   371  0EA2                     	;# 
   372  0EA3                     	;# 
   373  0EA4                     	;# 
   374  0EA5                     	;# 
   375  0EA6                     	;# 
   376  0EA7                     	;# 
   377  0F0F                     	;# 
   378  0F10                     	;# 
   379  0F11                     	;# 
   380  0F12                     	;# 
   381  0F13                     	;# 
   382  0F14                     	;# 
   383  0F15                     	;# 
   384  0F16                     	;# 
   385  0F17                     	;# 
   386  0F18                     	;# 
   387  0F19                     	;# 
   388  0F1A                     	;# 
   389  0F1B                     	;# 
   390  0F1C                     	;# 
   391  0F1D                     	;# 
   392  0F1E                     	;# 
   393  0F1F                     	;# 
   394  0F20                     	;# 
   395  0F21                     	;# 
   396  0F22                     	;# 
   397  0F23                     	;# 
   398  0F24                     	;# 
   399  0F25                     	;# 
   400  0F26                     	;# 
   401  0F27                     	;# 
   402  0F28                     	;# 
   403  0F29                     	;# 
   404  0F2A                     	;# 
   405  0F2B                     	;# 
   406  0F2C                     	;# 
   407  0F2D                     	;# 
   408  0F2E                     	;# 
   409  0F2F                     	;# 
   410  0F30                     	;# 
   411  0F31                     	;# 
   412  0F32                     	;# 
   413  0F33                     	;# 
   414  0F34                     	;# 
   415  0F35                     	;# 
   416  0F36                     	;# 
   417  0F37                     	;# 
   418  0FE4                     	;# 
   419  0FE5                     	;# 
   420  0FE6                     	;# 
   421  0FE7                     	;# 
   422  0FE8                     	;# 
   423  0FE9                     	;# 
   424  0FEA                     	;# 
   425  0FEB                     	;# 
   426  0FED                     	;# 
   427  0FEE                     	;# 
   428  0FEF                     	;# 
   429  0000                     	;# 
   430  0001                     	;# 
   431  0002                     	;# 
   432  0003                     	;# 
   433  0004                     	;# 
   434  0005                     	;# 
   435  0006                     	;# 
   436  0007                     	;# 
   437  0008                     	;# 
   438  0009                     	;# 
   439  000A                     	;# 
   440  000B                     	;# 
   441  000C                     	;# 
   442  000D                     	;# 
   443  000E                     	;# 
   444  0010                     	;# 
   445  0011                     	;# 
   446  0012                     	;# 
   447  0013                     	;# 
   448  0014                     	;# 
   449  0015                     	;# 
   450  0015                     	;# 
   451  0016                     	;# 
   452  0016                     	;# 
   453  0017                     	;# 
   454  0018                     	;# 
   455  0019                     	;# 
   456  0019                     	;# 
   457  001A                     	;# 
   458  001B                     	;# 
   459  001C                     	;# 
   460  001D                     	;# 
   461  001E                     	;# 
   462  001F                     	;# 
   463  008C                     	;# 
   464  008D                     	;# 
   465  008E                     	;# 
   466  0090                     	;# 
   467  0091                     	;# 
   468  0092                     	;# 
   469  0093                     	;# 
   470  0094                     	;# 
   471  0097                     	;# 
   472  009B                     	;# 
   473  009B                     	;# 
   474  009C                     	;# 
   475  009D                     	;# 
   476  009E                     	;# 
   477  009F                     	;# 
   478  010C                     	;# 
   479  010D                     	;# 
   480  010E                     	;# 
   481  0111                     	;# 
   482  0112                     	;# 
   483  0113                     	;# 
   484  0114                     	;# 
   485  0115                     	;# 
   486  0116                     	;# 
   487  0117                     	;# 
   488  0118                     	;# 
   489  0119                     	;# 
   490  018C                     	;# 
   491  018D                     	;# 
   492  018E                     	;# 
   493  0197                     	;# 
   494  0199                     	;# 
   495  0199                     	;# 
   496  0199                     	;# 
   497  019A                     	;# 
   498  019A                     	;# 
   499  019A                     	;# 
   500  019B                     	;# 
   501  019B                     	;# 
   502  019B                     	;# 
   503  019B                     	;# 
   504  019B                     	;# 
   505  019C                     	;# 
   506  019C                     	;# 
   507  019C                     	;# 
   508  019D                     	;# 
   509  019D                     	;# 
   510  019D                     	;# 
   511  019E                     	;# 
   512  019E                     	;# 
   513  019E                     	;# 
   514  019F                     	;# 
   515  019F                     	;# 
   516  019F                     	;# 
   517  019F                     	;# 
   518  019F                     	;# 
   519  020C                     	;# 
   520  020D                     	;# 
   521  020E                     	;# 
   522  0211                     	;# 
   523  0211                     	;# 
   524  0212                     	;# 
   525  0212                     	;# 
   526  0213                     	;# 
   527  0213                     	;# 
   528  0214                     	;# 
   529  0214                     	;# 
   530  0215                     	;# 
   531  0215                     	;# 
   532  0215                     	;# 
   533  0215                     	;# 
   534  0216                     	;# 
   535  0216                     	;# 
   536  0217                     	;# 
   537  0217                     	;# 
   538  0219                     	;# 
   539  021A                     	;# 
   540  021B                     	;# 
   541  021C                     	;# 
   542  021D                     	;# 
   543  021D                     	;# 
   544  021E                     	;# 
   545  021F                     	;# 
   546  028C                     	;# 
   547  028D                     	;# 
   548  028E                     	;# 
   549  0291                     	;# 
   550  0291                     	;# 
   551  0292                     	;# 
   552  0293                     	;# 
   553  0294                     	;# 
   554  0295                     	;# 
   555  0295                     	;# 
   556  0296                     	;# 
   557  0297                     	;# 
   558  0298                     	;# 
   559  029F                     	;# 
   560  030C                     	;# 
   561  030D                     	;# 
   562  030E                     	;# 
   563  0311                     	;# 
   564  0311                     	;# 
   565  0312                     	;# 
   566  0313                     	;# 
   567  0314                     	;# 
   568  0315                     	;# 
   569  0315                     	;# 
   570  0316                     	;# 
   571  0317                     	;# 
   572  0318                     	;# 
   573  038C                     	;# 
   574  038D                     	;# 
   575  038E                     	;# 
   576  0391                     	;# 
   577  0392                     	;# 
   578  0393                     	;# 
   579  0394                     	;# 
   580  0395                     	;# 
   581  0396                     	;# 
   582  0397                     	;# 
   583  0398                     	;# 
   584  0399                     	;# 
   585  039A                     	;# 
   586  039C                     	;# 
   587  039D                     	;# 
   588  039E                     	;# 
   589  039F                     	;# 
   590  0411                     	;# 
   591  0411                     	;# 
   592  0412                     	;# 
   593  0413                     	;# 
   594  0414                     	;# 
   595  0415                     	;# 
   596  0416                     	;# 
   597  0417                     	;# 
   598  0418                     	;# 
   599  0418                     	;# 
   600  0419                     	;# 
   601  041A                     	;# 
   602  041B                     	;# 
   603  041C                     	;# 
   604  041D                     	;# 
   605  041E                     	;# 
   606  041F                     	;# 
   607  0498                     	;# 
   608  0498                     	;# 
   609  0499                     	;# 
   610  049A                     	;# 
   611  049B                     	;# 
   612  049B                     	;# 
   613  049C                     	;# 
   614  049D                     	;# 
   615  049E                     	;# 
   616  049F                     	;# 
   617  0617                     	;# 
   618  0618                     	;# 
   619  0619                     	;# 
   620  0619                     	;# 
   621  061A                     	;# 
   622  061B                     	;# 
   623  061C                     	;# 
   624  061C                     	;# 
   625  061F                     	;# 
   626  0691                     	;# 
   627  0692                     	;# 
   628  0693                     	;# 
   629  0694                     	;# 
   630  0695                     	;# 
   631  0696                     	;# 
   632  0697                     	;# 
   633  0698                     	;# 
   634  0699                     	;# 
   635  0711                     	;# 
   636  0712                     	;# 
   637  0713                     	;# 
   638  0714                     	;# 
   639  0715                     	;# 
   640  0716                     	;# 
   641  0717                     	;# 
   642  0718                     	;# 
   643  0719                     	;# 
   644  0891                     	;# 
   645  0891                     	;# 
   646  0891                     	;# 
   647  0891                     	;# 
   648  0891                     	;# 
   649  0891                     	;# 
   650  0892                     	;# 
   651  0892                     	;# 
   652  0892                     	;# 
   653  0893                     	;# 
   654  0893                     	;# 
   655  0893                     	;# 
   656  0893                     	;# 
   657  0893                     	;# 
   658  0893                     	;# 
   659  0894                     	;# 
   660  0894                     	;# 
   661  0894                     	;# 
   662  0895                     	;# 
   663  0895                     	;# 
   664  0895                     	;# 
   665  0896                     	;# 
   666  0896                     	;# 
   667  0896                     	;# 
   668  089B                     	;# 
   669  0911                     	;# 
   670  0912                     	;# 
   671  0913                     	;# 
   672  0914                     	;# 
   673  0915                     	;# 
   674  0916                     	;# 
   675  0918                     	;# 
   676  0919                     	;# 
   677  091A                     	;# 
   678  091B                     	;# 
   679  091C                     	;# 
   680  091D                     	;# 
   681  091E                     	;# 
   682  091F                     	;# 
   683  0E0F                     	;# 
   684  0E10                     	;# 
   685  0E11                     	;# 
   686  0E12                     	;# 
   687  0E13                     	;# 
   688  0E14                     	;# 
   689  0E15                     	;# 
   690  0E16                     	;# 
   691  0E17                     	;# 
   692  0E18                     	;# 
   693  0E19                     	;# 
   694  0E1A                     	;# 
   695  0E1B                     	;# 
   696  0E1C                     	;# 
   697  0E1D                     	;# 
   698  0E1E                     	;# 
   699  0E1F                     	;# 
   700  0E20                     	;# 
   701  0E21                     	;# 
   702  0E22                     	;# 
   703  0E24                     	;# 
   704  0E25                     	;# 
   705  0E28                     	;# 
   706  0E29                     	;# 
   707  0E2A                     	;# 
   708  0E2B                     	;# 
   709  0E2C                     	;# 
   710  0E2D                     	;# 
   711  0E2E                     	;# 
   712  0E2F                     	;# 
   713  0E90                     	;# 
   714  0E91                     	;# 
   715  0E92                     	;# 
   716  0E94                     	;# 
   717  0E95                     	;# 
   718  0E9C                     	;# 
   719  0E9D                     	;# 
   720  0E9E                     	;# 
   721  0E9F                     	;# 
   722  0EA0                     	;# 
   723  0EA1                     	;# 
   724  0EA2                     	;# 
   725  0EA3                     	;# 
   726  0EA4                     	;# 
   727  0EA5                     	;# 
   728  0EA6                     	;# 
   729  0EA7                     	;# 
   730  0F0F                     	;# 
   731  0F10                     	;# 
   732  0F11                     	;# 
   733  0F12                     	;# 
   734  0F13                     	;# 
   735  0F14                     	;# 
   736  0F15                     	;# 
   737  0F16                     	;# 
   738  0F17                     	;# 
   739  0F18                     	;# 
   740  0F19                     	;# 
   741  0F1A                     	;# 
   742  0F1B                     	;# 
   743  0F1C                     	;# 
   744  0F1D                     	;# 
   745  0F1E                     	;# 
   746  0F1F                     	;# 
   747  0F20                     	;# 
   748  0F21                     	;# 
   749  0F22                     	;# 
   750  0F23                     	;# 
   751  0F24                     	;# 
   752  0F25                     	;# 
   753  0F26                     	;# 
   754  0F27                     	;# 
   755  0F28                     	;# 
   756  0F29                     	;# 
   757  0F2A                     	;# 
   758  0F2B                     	;# 
   759  0F2C                     	;# 
   760  0F2D                     	;# 
   761  0F2E                     	;# 
   762  0F2F                     	;# 
   763  0F30                     	;# 
   764  0F31                     	;# 
   765  0F32                     	;# 
   766  0F33                     	;# 
   767  0F34                     	;# 
   768  0F35                     	;# 
   769  0F36                     	;# 
   770  0F37                     	;# 
   771  0FE4                     	;# 
   772  0FE5                     	;# 
   773  0FE6                     	;# 
   774  0FE7                     	;# 
   775  0FE8                     	;# 
   776  0FE9                     	;# 
   777  0FEA                     	;# 
   778  0FEB                     	;# 
   779  0FED                     	;# 
   780  0FEE                     	;# 
   781  0FEF                     	;# 
   782  0000                     	;# 
   783  0001                     	;# 
   784  0002                     	;# 
   785  0003                     	;# 
   786  0004                     	;# 
   787  0005                     	;# 
   788  0006                     	;# 
   789  0007                     	;# 
   790  0008                     	;# 
   791  0009                     	;# 
   792  000A                     	;# 
   793  000B                     	;# 
   794  000C                     	;# 
   795  000D                     	;# 
   796  000E                     	;# 
   797  0010                     	;# 
   798  0011                     	;# 
   799  0012                     	;# 
   800  0013                     	;# 
   801  0014                     	;# 
   802  0015                     	;# 
   803  0015                     	;# 
   804  0016                     	;# 
   805  0016                     	;# 
   806  0017                     	;# 
   807  0018                     	;# 
   808  0019                     	;# 
   809  0019                     	;# 
   810  001A                     	;# 
   811  001B                     	;# 
   812  001C                     	;# 
   813  001D                     	;# 
   814  001E                     	;# 
   815  001F                     	;# 
   816  008C                     	;# 
   817  008D                     	;# 
   818  008E                     	;# 
   819  0090                     	;# 
   820  0091                     	;# 
   821  0092                     	;# 
   822  0093                     	;# 
   823  0094                     	;# 
   824  0097                     	;# 
   825  009B                     	;# 
   826  009B                     	;# 
   827  009C                     	;# 
   828  009D                     	;# 
   829  009E                     	;# 
   830  009F                     	;# 
   831  010C                     	;# 
   832  010D                     	;# 
   833  010E                     	;# 
   834  0111                     	;# 
   835  0112                     	;# 
   836  0113                     	;# 
   837  0114                     	;# 
   838  0115                     	;# 
   839  0116                     	;# 
   840  0117                     	;# 
   841  0118                     	;# 
   842  0119                     	;# 
   843  018C                     	;# 
   844  018D                     	;# 
   845  018E                     	;# 
   846  0197                     	;# 
   847  0199                     	;# 
   848  0199                     	;# 
   849  0199                     	;# 
   850  019A                     	;# 
   851  019A                     	;# 
   852  019A                     	;# 
   853  019B                     	;# 
   854  019B                     	;# 
   855  019B                     	;# 
   856  019B                     	;# 
   857  019B                     	;# 
   858  019C                     	;# 
   859  019C                     	;# 
   860  019C                     	;# 
   861  019D                     	;# 
   862  019D                     	;# 
   863  019D                     	;# 
   864  019E                     	;# 
   865  019E                     	;# 
   866  019E                     	;# 
   867  019F                     	;# 
   868  019F                     	;# 
   869  019F                     	;# 
   870  019F                     	;# 
   871  019F                     	;# 
   872  020C                     	;# 
   873  020D                     	;# 
   874  020E                     	;# 
   875  0211                     	;# 
   876  0211                     	;# 
   877  0212                     	;# 
   878  0212                     	;# 
   879  0213                     	;# 
   880  0213                     	;# 
   881  0214                     	;# 
   882  0214                     	;# 
   883  0215                     	;# 
   884  0215                     	;# 
   885  0215                     	;# 
   886  0215                     	;# 
   887  0216                     	;# 
   888  0216                     	;# 
   889  0217                     	;# 
   890  0217                     	;# 
   891  0219                     	;# 
   892  021A                     	;# 
   893  021B                     	;# 
   894  021C                     	;# 
   895  021D                     	;# 
   896  021D                     	;# 
   897  021E                     	;# 
   898  021F                     	;# 
   899  028C                     	;# 
   900  028D                     	;# 
   901  028E                     	;# 
   902  0291                     	;# 
   903  0291                     	;# 
   904  0292                     	;# 
   905  0293                     	;# 
   906  0294                     	;# 
   907  0295                     	;# 
   908  0295                     	;# 
   909  0296                     	;# 
   910  0297                     	;# 
   911  0298                     	;# 
   912  029F                     	;# 
   913  030C                     	;# 
   914  030D                     	;# 
   915  030E                     	;# 
   916  0311                     	;# 
   917  0311                     	;# 
   918  0312                     	;# 
   919  0313                     	;# 
   920  0314                     	;# 
   921  0315                     	;# 
   922  0315                     	;# 
   923  0316                     	;# 
   924  0317                     	;# 
   925  0318                     	;# 
   926  038C                     	;# 
   927  038D                     	;# 
   928  038E                     	;# 
   929  0391                     	;# 
   930  0392                     	;# 
   931  0393                     	;# 
   932  0394                     	;# 
   933  0395                     	;# 
   934  0396                     	;# 
   935  0397                     	;# 
   936  0398                     	;# 
   937  0399                     	;# 
   938  039A                     	;# 
   939  039C                     	;# 
   940  039D                     	;# 
   941  039E                     	;# 
   942  039F                     	;# 
   943  0411                     	;# 
   944  0411                     	;# 
   945  0412                     	;# 
   946  0413                     	;# 
   947  0414                     	;# 
   948  0415                     	;# 
   949  0416                     	;# 
   950  0417                     	;# 
   951  0418                     	;# 
   952  0418                     	;# 
   953  0419                     	;# 
   954  041A                     	;# 
   955  041B                     	;# 
   956  041C                     	;# 
   957  041D                     	;# 
   958  041E                     	;# 
   959  041F                     	;# 
   960  0498                     	;# 
   961  0498                     	;# 
   962  0499                     	;# 
   963  049A                     	;# 
   964  049B                     	;# 
   965  049B                     	;# 
   966  049C                     	;# 
   967  049D                     	;# 
   968  049E                     	;# 
   969  049F                     	;# 
   970  0617                     	;# 
   971  0618                     	;# 
   972  0619                     	;# 
   973  0619                     	;# 
   974  061A                     	;# 
   975  061B                     	;# 
   976  061C                     	;# 
   977  061C                     	;# 
   978  061F                     	;# 
   979  0691                     	;# 
   980  0692                     	;# 
   981  0693                     	;# 
   982  0694                     	;# 
   983  0695                     	;# 
   984  0696                     	;# 
   985  0697                     	;# 
   986  0698                     	;# 
   987  0699                     	;# 
   988  0711                     	;# 
   989  0712                     	;# 
   990  0713                     	;# 
   991  0714                     	;# 
   992  0715                     	;# 
   993  0716                     	;# 
   994  0717                     	;# 
   995  0718                     	;# 
   996  0719                     	;# 
   997  0891                     	;# 
   998  0891                     	;# 
   999  0891                     	;# 
  1000  0891                     	;# 
  1001  0891                     	;# 
  1002  0891                     	;# 
  1003  0892                     	;# 
  1004  0892                     	;# 
  1005  0892                     	;# 
  1006  0893                     	;# 
  1007  0893                     	;# 
  1008  0893                     	;# 
  1009  0893                     	;# 
  1010  0893                     	;# 
  1011  0893                     	;# 
  1012  0894                     	;# 
  1013  0894                     	;# 
  1014  0894                     	;# 
  1015  0895                     	;# 
  1016  0895                     	;# 
  1017  0895                     	;# 
  1018  0896                     	;# 
  1019  0896                     	;# 
  1020  0896                     	;# 
  1021  089B                     	;# 
  1022  0911                     	;# 
  1023  0912                     	;# 
  1024  0913                     	;# 
  1025  0914                     	;# 
  1026  0915                     	;# 
  1027  0916                     	;# 
  1028  0918                     	;# 
  1029  0919                     	;# 
  1030  091A                     	;# 
  1031  091B                     	;# 
  1032  091C                     	;# 
  1033  091D                     	;# 
  1034  091E                     	;# 
  1035  091F                     	;# 
  1036  0E0F                     	;# 
  1037  0E10                     	;# 
  1038  0E11                     	;# 
  1039  0E12                     	;# 
  1040  0E13                     	;# 
  1041  0E14                     	;# 
  1042  0E15                     	;# 
  1043  0E16                     	;# 
  1044  0E17                     	;# 
  1045  0E18                     	;# 
  1046  0E19                     	;# 
  1047  0E1A                     	;# 
  1048  0E1B                     	;# 
  1049  0E1C                     	;# 
  1050  0E1D                     	;# 
  1051  0E1E                     	;# 
  1052  0E1F                     	;# 
  1053  0E20                     	;# 
  1054  0E21                     	;# 
  1055  0E22                     	;# 
  1056  0E24                     	;# 
  1057  0E25                     	;# 
  1058  0E28                     	;# 
  1059  0E29                     	;# 
  1060  0E2A                     	;# 
  1061  0E2B                     	;# 
  1062  0E2C                     	;# 
  1063  0E2D                     	;# 
  1064  0E2E                     	;# 
  1065  0E2F                     	;# 
  1066  0E90                     	;# 
  1067  0E91                     	;# 
  1068  0E92                     	;# 
  1069  0E94                     	;# 
  1070  0E95                     	;# 
  1071  0E9C                     	;# 
  1072  0E9D                     	;# 
  1073  0E9E                     	;# 
  1074  0E9F                     	;# 
  1075  0EA0                     	;# 
  1076  0EA1                     	;# 
  1077  0EA2                     	;# 
  1078  0EA3                     	;# 
  1079  0EA4                     	;# 
  1080  0EA5                     	;# 
  1081  0EA6                     	;# 
  1082  0EA7                     	;# 
  1083  0F0F                     	;# 
  1084  0F10                     	;# 
  1085  0F11                     	;# 
  1086  0F12                     	;# 
  1087  0F13                     	;# 
  1088  0F14                     	;# 
  1089  0F15                     	;# 
  1090  0F16                     	;# 
  1091  0F17                     	;# 
  1092  0F18                     	;# 
  1093  0F19                     	;# 
  1094  0F1A                     	;# 
  1095  0F1B                     	;# 
  1096  0F1C                     	;# 
  1097  0F1D                     	;# 
  1098  0F1E                     	;# 
  1099  0F1F                     	;# 
  1100  0F20                     	;# 
  1101  0F21                     	;# 
  1102  0F22                     	;# 
  1103  0F23                     	;# 
  1104  0F24                     	;# 
  1105  0F25                     	;# 
  1106  0F26                     	;# 
  1107  0F27                     	;# 
  1108  0F28                     	;# 
  1109  0F29                     	;# 
  1110  0F2A                     	;# 
  1111  0F2B                     	;# 
  1112  0F2C                     	;# 
  1113  0F2D                     	;# 
  1114  0F2E                     	;# 
  1115  0F2F                     	;# 
  1116  0F30                     	;# 
  1117  0F31                     	;# 
  1118  0F32                     	;# 
  1119  0F33                     	;# 
  1120  0F34                     	;# 
  1121  0F35                     	;# 
  1122  0F36                     	;# 
  1123  0F37                     	;# 
  1124  0FE4                     	;# 
  1125  0FE5                     	;# 
  1126  0FE6                     	;# 
  1127  0FE7                     	;# 
  1128  0FE8                     	;# 
  1129  0FE9                     	;# 
  1130  0FEA                     	;# 
  1131  0FEB                     	;# 
  1132  0FED                     	;# 
  1133  0FEE                     	;# 
  1134  0FEF                     	;# 
  1135  0000                     	;# 
  1136  0001                     	;# 
  1137  0002                     	;# 
  1138  0003                     	;# 
  1139  0004                     	;# 
  1140  0005                     	;# 
  1141  0006                     	;# 
  1142  0007                     	;# 
  1143  0008                     	;# 
  1144  0009                     	;# 
  1145  000A                     	;# 
  1146  000B                     	;# 
  1147  000C                     	;# 
  1148  000D                     	;# 
  1149  000E                     	;# 
  1150  0010                     	;# 
  1151  0011                     	;# 
  1152  0012                     	;# 
  1153  0013                     	;# 
  1154  0014                     	;# 
  1155  0015                     	;# 
  1156  0015                     	;# 
  1157  0016                     	;# 
  1158  0016                     	;# 
  1159  0017                     	;# 
  1160  0018                     	;# 
  1161  0019                     	;# 
  1162  0019                     	;# 
  1163  001A                     	;# 
  1164  001B                     	;# 
  1165  001C                     	;# 
  1166  001D                     	;# 
  1167  001E                     	;# 
  1168  001F                     	;# 
  1169  008C                     	;# 
  1170  008D                     	;# 
  1171  008E                     	;# 
  1172  0090                     	;# 
  1173  0091                     	;# 
  1174  0092                     	;# 
  1175  0093                     	;# 
  1176  0094                     	;# 
  1177  0097                     	;# 
  1178  009B                     	;# 
  1179  009B                     	;# 
  1180  009C                     	;# 
  1181  009D                     	;# 
  1182  009E                     	;# 
  1183  009F                     	;# 
  1184  010C                     	;# 
  1185  010D                     	;# 
  1186  010E                     	;# 
  1187  0111                     	;# 
  1188  0112                     	;# 
  1189  0113                     	;# 
  1190  0114                     	;# 
  1191  0115                     	;# 
  1192  0116                     	;# 
  1193  0117                     	;# 
  1194  0118                     	;# 
  1195  0119                     	;# 
  1196  018C                     	;# 
  1197  018D                     	;# 
  1198  018E                     	;# 
  1199  0197                     	;# 
  1200  0199                     	;# 
  1201  0199                     	;# 
  1202  0199                     	;# 
  1203  019A                     	;# 
  1204  019A                     	;# 
  1205  019A                     	;# 
  1206  019B                     	;# 
  1207  019B                     	;# 
  1208  019B                     	;# 
  1209  019B                     	;# 
  1210  019B                     	;# 
  1211  019C                     	;# 
  1212  019C                     	;# 
  1213  019C                     	;# 
  1214  019D                     	;# 
  1215  019D                     	;# 
  1216  019D                     	;# 
  1217  019E                     	;# 
  1218  019E                     	;# 
  1219  019E                     	;# 
  1220  019F                     	;# 
  1221  019F                     	;# 
  1222  019F                     	;# 
  1223  019F                     	;# 
  1224  019F                     	;# 
  1225  020C                     	;# 
  1226  020D                     	;# 
  1227  020E                     	;# 
  1228  0211                     	;# 
  1229  0211                     	;# 
  1230  0212                     	;# 
  1231  0212                     	;# 
  1232  0213                     	;# 
  1233  0213                     	;# 
  1234  0214                     	;# 
  1235  0214                     	;# 
  1236  0215                     	;# 
  1237  0215                     	;# 
  1238  0215                     	;# 
  1239  0215                     	;# 
  1240  0216                     	;# 
  1241  0216                     	;# 
  1242  0217                     	;# 
  1243  0217                     	;# 
  1244  0219                     	;# 
  1245  021A                     	;# 
  1246  021B                     	;# 
  1247  021C                     	;# 
  1248  021D                     	;# 
  1249  021D                     	;# 
  1250  021E                     	;# 
  1251  021F                     	;# 
  1252  028C                     	;# 
  1253  028D                     	;# 
  1254  028E                     	;# 
  1255  0291                     	;# 
  1256  0291                     	;# 
  1257  0292                     	;# 
  1258  0293                     	;# 
  1259  0294                     	;# 
  1260  0295                     	;# 
  1261  0295                     	;# 
  1262  0296                     	;# 
  1263  0297                     	;# 
  1264  0298                     	;# 
  1265  029F                     	;# 
  1266  030C                     	;# 
  1267  030D                     	;# 
  1268  030E                     	;# 
  1269  0311                     	;# 
  1270  0311                     	;# 
  1271  0312                     	;# 
  1272  0313                     	;# 
  1273  0314                     	;# 
  1274  0315                     	;# 
  1275  0315                     	;# 
  1276  0316                     	;# 
  1277  0317                     	;# 
  1278  0318                     	;# 
  1279  038C                     	;# 
  1280  038D                     	;# 
  1281  038E                     	;# 
  1282  0391                     	;# 
  1283  0392                     	;# 
  1284  0393                     	;# 
  1285  0394                     	;# 
  1286  0395                     	;# 
  1287  0396                     	;# 
  1288  0397                     	;# 
  1289  0398                     	;# 
  1290  0399                     	;# 
  1291  039A                     	;# 
  1292  039C                     	;# 
  1293  039D                     	;# 
  1294  039E                     	;# 
  1295  039F                     	;# 
  1296  0411                     	;# 
  1297  0411                     	;# 
  1298  0412                     	;# 
  1299  0413                     	;# 
  1300  0414                     	;# 
  1301  0415                     	;# 
  1302  0416                     	;# 
  1303  0417                     	;# 
  1304  0418                     	;# 
  1305  0418                     	;# 
  1306  0419                     	;# 
  1307  041A                     	;# 
  1308  041B                     	;# 
  1309  041C                     	;# 
  1310  041D                     	;# 
  1311  041E                     	;# 
  1312  041F                     	;# 
  1313  0498                     	;# 
  1314  0498                     	;# 
  1315  0499                     	;# 
  1316  049A                     	;# 
  1317  049B                     	;# 
  1318  049B                     	;# 
  1319  049C                     	;# 
  1320  049D                     	;# 
  1321  049E                     	;# 
  1322  049F                     	;# 
  1323  0617                     	;# 
  1324  0618                     	;# 
  1325  0619                     	;# 
  1326  0619                     	;# 
  1327  061A                     	;# 
  1328  061B                     	;# 
  1329  061C                     	;# 
  1330  061C                     	;# 
  1331  061F                     	;# 
  1332  0691                     	;# 
  1333  0692                     	;# 
  1334  0693                     	;# 
  1335  0694                     	;# 
  1336  0695                     	;# 
  1337  0696                     	;# 
  1338  0697                     	;# 
  1339  0698                     	;# 
  1340  0699                     	;# 
  1341  0711                     	;# 
  1342  0712                     	;# 
  1343  0713                     	;# 
  1344  0714                     	;# 
  1345  0715                     	;# 
  1346  0716                     	;# 
  1347  0717                     	;# 
  1348  0718                     	;# 
  1349  0719                     	;# 
  1350  0891                     	;# 
  1351  0891                     	;# 
  1352  0891                     	;# 
  1353  0891                     	;# 
  1354  0891                     	;# 
  1355  0891                     	;# 
  1356  0892                     	;# 
  1357  0892                     	;# 
  1358  0892                     	;# 
  1359  0893                     	;# 
  1360  0893                     	;# 
  1361  0893                     	;# 
  1362  0893                     	;# 
  1363  0893                     	;# 
  1364  0893                     	;# 
  1365  0894                     	;# 
  1366  0894                     	;# 
  1367  0894                     	;# 
  1368  0895                     	;# 
  1369  0895                     	;# 
  1370  0895                     	;# 
  1371  0896                     	;# 
  1372  0896                     	;# 
  1373  0896                     	;# 
  1374  089B                     	;# 
  1375  0911                     	;# 
  1376  0912                     	;# 
  1377  0913                     	;# 
  1378  0914                     	;# 
  1379  0915                     	;# 
  1380  0916                     	;# 
  1381  0918                     	;# 
  1382  0919                     	;# 
  1383  091A                     	;# 
  1384  091B                     	;# 
  1385  091C                     	;# 
  1386  091D                     	;# 
  1387  091E                     	;# 
  1388  091F                     	;# 
  1389  0E0F                     	;# 
  1390  0E10                     	;# 
  1391  0E11                     	;# 
  1392  0E12                     	;# 
  1393  0E13                     	;# 
  1394  0E14                     	;# 
  1395  0E15                     	;# 
  1396  0E16                     	;# 
  1397  0E17                     	;# 
  1398  0E18                     	;# 
  1399  0E19                     	;# 
  1400  0E1A                     	;# 
  1401  0E1B                     	;# 
  1402  0E1C                     	;# 
  1403  0E1D                     	;# 
  1404  0E1E                     	;# 
  1405  0E1F                     	;# 
  1406  0E20                     	;# 
  1407  0E21                     	;# 
  1408  0E22                     	;# 
  1409  0E24                     	;# 
  1410  0E25                     	;# 
  1411  0E28                     	;# 
  1412  0E29                     	;# 
  1413  0E2A                     	;# 
  1414  0E2B                     	;# 
  1415  0E2C                     	;# 
  1416  0E2D                     	;# 
  1417  0E2E                     	;# 
  1418  0E2F                     	;# 
  1419  0E90                     	;# 
  1420  0E91                     	;# 
  1421  0E92                     	;# 
  1422  0E94                     	;# 
  1423  0E95                     	;# 
  1424  0E9C                     	;# 
  1425  0E9D                     	;# 
  1426  0E9E                     	;# 
  1427  0E9F                     	;# 
  1428  0EA0                     	;# 
  1429  0EA1                     	;# 
  1430  0EA2                     	;# 
  1431  0EA3                     	;# 
  1432  0EA4                     	;# 
  1433  0EA5                     	;# 
  1434  0EA6                     	;# 
  1435  0EA7                     	;# 
  1436  0F0F                     	;# 
  1437  0F10                     	;# 
  1438  0F11                     	;# 
  1439  0F12                     	;# 
  1440  0F13                     	;# 
  1441  0F14                     	;# 
  1442  0F15                     	;# 
  1443  0F16                     	;# 
  1444  0F17                     	;# 
  1445  0F18                     	;# 
  1446  0F19                     	;# 
  1447  0F1A                     	;# 
  1448  0F1B                     	;# 
  1449  0F1C                     	;# 
  1450  0F1D                     	;# 
  1451  0F1E                     	;# 
  1452  0F1F                     	;# 
  1453  0F20                     	;# 
  1454  0F21                     	;# 
  1455  0F22                     	;# 
  1456  0F23                     	;# 
  1457  0F24                     	;# 
  1458  0F25                     	;# 
  1459  0F26                     	;# 
  1460  0F27                     	;# 
  1461  0F28                     	;# 
  1462  0F29                     	;# 
  1463  0F2A                     	;# 
  1464  0F2B                     	;# 
  1465  0F2C                     	;# 
  1466  0F2D                     	;# 
  1467  0F2E                     	;# 
  1468  0F2F                     	;# 
  1469  0F30                     	;# 
  1470  0F31                     	;# 
  1471  0F32                     	;# 
  1472  0F33                     	;# 
  1473  0F34                     	;# 
  1474  0F35                     	;# 
  1475  0F36                     	;# 
  1476  0F37                     	;# 
  1477  0FE4                     	;# 
  1478  0FE5                     	;# 
  1479  0FE6                     	;# 
  1480  0FE7                     	;# 
  1481  0FE8                     	;# 
  1482  0FE9                     	;# 
  1483  0FEA                     	;# 
  1484  0FEB                     	;# 
  1485  0FED                     	;# 
  1486  0FEE                     	;# 
  1487  0FEF                     	;# 
  1488  0000                     	;# 
  1489  0001                     	;# 
  1490  0002                     	;# 
  1491  0003                     	;# 
  1492  0004                     	;# 
  1493  0005                     	;# 
  1494  0006                     	;# 
  1495  0007                     	;# 
  1496  0008                     	;# 
  1497  0009                     	;# 
  1498  000A                     	;# 
  1499  000B                     	;# 
  1500  000C                     	;# 
  1501  000D                     	;# 
  1502  000E                     	;# 
  1503  0010                     	;# 
  1504  0011                     	;# 
  1505  0012                     	;# 
  1506  0013                     	;# 
  1507  0014                     	;# 
  1508  0015                     	;# 
  1509  0015                     	;# 
  1510  0016                     	;# 
  1511  0016                     	;# 
  1512  0017                     	;# 
  1513  0018                     	;# 
  1514  0019                     	;# 
  1515  0019                     	;# 
  1516  001A                     	;# 
  1517  001B                     	;# 
  1518  001C                     	;# 
  1519  001D                     	;# 
  1520  001E                     	;# 
  1521  001F                     	;# 
  1522  008C                     	;# 
  1523  008D                     	;# 
  1524  008E                     	;# 
  1525  0090                     	;# 
  1526  0091                     	;# 
  1527  0092                     	;# 
  1528  0093                     	;# 
  1529  0094                     	;# 
  1530  0097                     	;# 
  1531  009B                     	;# 
  1532  009B                     	;# 
  1533  009C                     	;# 
  1534  009D                     	;# 
  1535  009E                     	;# 
  1536  009F                     	;# 
  1537  010C                     	;# 
  1538  010D                     	;# 
  1539  010E                     	;# 
  1540  0111                     	;# 
  1541  0112                     	;# 
  1542  0113                     	;# 
  1543  0114                     	;# 
  1544  0115                     	;# 
  1545  0116                     	;# 
  1546  0117                     	;# 
  1547  0118                     	;# 
  1548  0119                     	;# 
  1549  018C                     	;# 
  1550  018D                     	;# 
  1551  018E                     	;# 
  1552  0197                     	;# 
  1553  0199                     	;# 
  1554  0199                     	;# 
  1555  0199                     	;# 
  1556  019A                     	;# 
  1557  019A                     	;# 
  1558  019A                     	;# 
  1559  019B                     	;# 
  1560  019B                     	;# 
  1561  019B                     	;# 
  1562  019B                     	;# 
  1563  019B                     	;# 
  1564  019C                     	;# 
  1565  019C                     	;# 
  1566  019C                     	;# 
  1567  019D                     	;# 
  1568  019D                     	;# 
  1569  019D                     	;# 
  1570  019E                     	;# 
  1571  019E                     	;# 
  1572  019E                     	;# 
  1573  019F                     	;# 
  1574  019F                     	;# 
  1575  019F                     	;# 
  1576  019F                     	;# 
  1577  019F                     	;# 
  1578  020C                     	;# 
  1579  020D                     	;# 
  1580  020E                     	;# 
  1581  0211                     	;# 
  1582  0211                     	;# 
  1583  0212                     	;# 
  1584  0212                     	;# 
  1585  0213                     	;# 
  1586  0213                     	;# 
  1587  0214                     	;# 
  1588  0214                     	;# 
  1589  0215                     	;# 
  1590  0215                     	;# 
  1591  0215                     	;# 
  1592  0215                     	;# 
  1593  0216                     	;# 
  1594  0216                     	;# 
  1595  0217                     	;# 
  1596  0217                     	;# 
  1597  0219                     	;# 
  1598  021A                     	;# 
  1599  021B                     	;# 
  1600  021C                     	;# 
  1601  021D                     	;# 
  1602  021D                     	;# 
  1603  021E                     	;# 
  1604  021F                     	;# 
  1605  028C                     	;# 
  1606  028D                     	;# 
  1607  028E                     	;# 
  1608  0291                     	;# 
  1609  0291                     	;# 
  1610  0292                     	;# 
  1611  0293                     	;# 
  1612  0294                     	;# 
  1613  0295                     	;# 
  1614  0295                     	;# 
  1615  0296                     	;# 
  1616  0297                     	;# 
  1617  0298                     	;# 
  1618  029F                     	;# 
  1619  030C                     	;# 
  1620  030D                     	;# 
  1621  030E                     	;# 
  1622  0311                     	;# 
  1623  0311                     	;# 
  1624  0312                     	;# 
  1625  0313                     	;# 
  1626  0314                     	;# 
  1627  0315                     	;# 
  1628  0315                     	;# 
  1629  0316                     	;# 
  1630  0317                     	;# 
  1631  0318                     	;# 
  1632  038C                     	;# 
  1633  038D                     	;# 
  1634  038E                     	;# 
  1635  0391                     	;# 
  1636  0392                     	;# 
  1637  0393                     	;# 
  1638  0394                     	;# 
  1639  0395                     	;# 
  1640  0396                     	;# 
  1641  0397                     	;# 
  1642  0398                     	;# 
  1643  0399                     	;# 
  1644  039A                     	;# 
  1645  039C                     	;# 
  1646  039D                     	;# 
  1647  039E                     	;# 
  1648  039F                     	;# 
  1649  0411                     	;# 
  1650  0411                     	;# 
  1651  0412                     	;# 
  1652  0413                     	;# 
  1653  0414                     	;# 
  1654  0415                     	;# 
  1655  0416                     	;# 
  1656  0417                     	;# 
  1657  0418                     	;# 
  1658  0418                     	;# 
  1659  0419                     	;# 
  1660  041A                     	;# 
  1661  041B                     	;# 
  1662  041C                     	;# 
  1663  041D                     	;# 
  1664  041E                     	;# 
  1665  041F                     	;# 
  1666  0498                     	;# 
  1667  0498                     	;# 
  1668  0499                     	;# 
  1669  049A                     	;# 
  1670  049B                     	;# 
  1671  049B                     	;# 
  1672  049C                     	;# 
  1673  049D                     	;# 
  1674  049E                     	;# 
  1675  049F                     	;# 
  1676  0617                     	;# 
  1677  0618                     	;# 
  1678  0619                     	;# 
  1679  0619                     	;# 
  1680  061A                     	;# 
  1681  061B                     	;# 
  1682  061C                     	;# 
  1683  061C                     	;# 
  1684  061F                     	;# 
  1685  0691                     	;# 
  1686  0692                     	;# 
  1687  0693                     	;# 
  1688  0694                     	;# 
  1689  0695                     	;# 
  1690  0696                     	;# 
  1691  0697                     	;# 
  1692  0698                     	;# 
  1693  0699                     	;# 
  1694  0711                     	;# 
  1695  0712                     	;# 
  1696  0713                     	;# 
  1697  0714                     	;# 
  1698  0715                     	;# 
  1699  0716                     	;# 
  1700  0717                     	;# 
  1701  0718                     	;# 
  1702  0719                     	;# 
  1703  0891                     	;# 
  1704  0891                     	;# 
  1705  0891                     	;# 
  1706  0891                     	;# 
  1707  0891                     	;# 
  1708  0891                     	;# 
  1709  0892                     	;# 
  1710  0892                     	;# 
  1711  0892                     	;# 
  1712  0893                     	;# 
  1713  0893                     	;# 
  1714  0893                     	;# 
  1715  0893                     	;# 
  1716  0893                     	;# 
  1717  0893                     	;# 
  1718  0894                     	;# 
  1719  0894                     	;# 
  1720  0894                     	;# 
  1721  0895                     	;# 
  1722  0895                     	;# 
  1723  0895                     	;# 
  1724  0896                     	;# 
  1725  0896                     	;# 
  1726  0896                     	;# 
  1727  089B                     	;# 
  1728  0911                     	;# 
  1729  0912                     	;# 
  1730  0913                     	;# 
  1731  0914                     	;# 
  1732  0915                     	;# 
  1733  0916                     	;# 
  1734  0918                     	;# 
  1735  0919                     	;# 
  1736  091A                     	;# 
  1737  091B                     	;# 
  1738  091C                     	;# 
  1739  091D                     	;# 
  1740  091E                     	;# 
  1741  091F                     	;# 
  1742  0E0F                     	;# 
  1743  0E10                     	;# 
  1744  0E11                     	;# 
  1745  0E12                     	;# 
  1746  0E13                     	;# 
  1747  0E14                     	;# 
  1748  0E15                     	;# 
  1749  0E16                     	;# 
  1750  0E17                     	;# 
  1751  0E18                     	;# 
  1752  0E19                     	;# 
  1753  0E1A                     	;# 
  1754  0E1B                     	;# 
  1755  0E1C                     	;# 
  1756  0E1D                     	;# 
  1757  0E1E                     	;# 
  1758  0E1F                     	;# 
  1759  0E20                     	;# 
  1760  0E21                     	;# 
  1761  0E22                     	;# 
  1762  0E24                     	;# 
  1763  0E25                     	;# 
  1764  0E28                     	;# 
  1765  0E29                     	;# 
  1766  0E2A                     	;# 
  1767  0E2B                     	;# 
  1768  0E2C                     	;# 
  1769  0E2D                     	;# 
  1770  0E2E                     	;# 
  1771  0E2F                     	;# 
  1772  0E90                     	;# 
  1773  0E91                     	;# 
  1774  0E92                     	;# 
  1775  0E94                     	;# 
  1776  0E95                     	;# 
  1777  0E9C                     	;# 
  1778  0E9D                     	;# 
  1779  0E9E                     	;# 
  1780  0E9F                     	;# 
  1781  0EA0                     	;# 
  1782  0EA1                     	;# 
  1783  0EA2                     	;# 
  1784  0EA3                     	;# 
  1785  0EA4                     	;# 
  1786  0EA5                     	;# 
  1787  0EA6                     	;# 
  1788  0EA7                     	;# 
  1789  0F0F                     	;# 
  1790  0F10                     	;# 
  1791  0F11                     	;# 
  1792  0F12                     	;# 
  1793  0F13                     	;# 
  1794  0F14                     	;# 
  1795  0F15                     	;# 
  1796  0F16                     	;# 
  1797  0F17                     	;# 
  1798  0F18                     	;# 
  1799  0F19                     	;# 
  1800  0F1A                     	;# 
  1801  0F1B                     	;# 
  1802  0F1C                     	;# 
  1803  0F1D                     	;# 
  1804  0F1E                     	;# 
  1805  0F1F                     	;# 
  1806  0F20                     	;# 
  1807  0F21                     	;# 
  1808  0F22                     	;# 
  1809  0F23                     	;# 
  1810  0F24                     	;# 
  1811  0F25                     	;# 
  1812  0F26                     	;# 
  1813  0F27                     	;# 
  1814  0F28                     	;# 
  1815  0F29                     	;# 
  1816  0F2A                     	;# 
  1817  0F2B                     	;# 
  1818  0F2C                     	;# 
  1819  0F2D                     	;# 
  1820  0F2E                     	;# 
  1821  0F2F                     	;# 
  1822  0F30                     	;# 
  1823  0F31                     	;# 
  1824  0F32                     	;# 
  1825  0F33                     	;# 
  1826  0F34                     	;# 
  1827  0F35                     	;# 
  1828  0F36                     	;# 
  1829  0F37                     	;# 
  1830  0FE4                     	;# 
  1831  0FE5                     	;# 
  1832  0FE6                     	;# 
  1833  0FE7                     	;# 
  1834  0FE8                     	;# 
  1835  0FE9                     	;# 
  1836  0FEA                     	;# 
  1837  0FEB                     	;# 
  1838  0FED                     	;# 
  1839  0FEE                     	;# 
  1840  0FEF                     	;# 
  1841  0000                     	;# 
  1842  0001                     	;# 
  1843  0002                     	;# 
  1844  0003                     	;# 
  1845  0004                     	;# 
  1846  0005                     	;# 
  1847  0006                     	;# 
  1848  0007                     	;# 
  1849  0008                     	;# 
  1850  0009                     	;# 
  1851  000A                     	;# 
  1852  000B                     	;# 
  1853  000C                     	;# 
  1854  000D                     	;# 
  1855  000E                     	;# 
  1856  0010                     	;# 
  1857  0011                     	;# 
  1858  0012                     	;# 
  1859  0013                     	;# 
  1860  0014                     	;# 
  1861  0015                     	;# 
  1862  0015                     	;# 
  1863  0016                     	;# 
  1864  0016                     	;# 
  1865  0017                     	;# 
  1866  0018                     	;# 
  1867  0019                     	;# 
  1868  0019                     	;# 
  1869  001A                     	;# 
  1870  001B                     	;# 
  1871  001C                     	;# 
  1872  001D                     	;# 
  1873  001E                     	;# 
  1874  001F                     	;# 
  1875  008C                     	;# 
  1876  008D                     	;# 
  1877  008E                     	;# 
  1878  0090                     	;# 
  1879  0091                     	;# 
  1880  0092                     	;# 
  1881  0093                     	;# 
  1882  0094                     	;# 
  1883  0097                     	;# 
  1884  009B                     	;# 
  1885  009B                     	;# 
  1886  009C                     	;# 
  1887  009D                     	;# 
  1888  009E                     	;# 
  1889  009F                     	;# 
  1890  010C                     	;# 
  1891  010D                     	;# 
  1892  010E                     	;# 
  1893  0111                     	;# 
  1894  0112                     	;# 
  1895  0113                     	;# 
  1896  0114                     	;# 
  1897  0115                     	;# 
  1898  0116                     	;# 
  1899  0117                     	;# 
  1900  0118                     	;# 
  1901  0119                     	;# 
  1902  018C                     	;# 
  1903  018D                     	;# 
  1904  018E                     	;# 
  1905  0197                     	;# 
  1906  0199                     	;# 
  1907  0199                     	;# 
  1908  0199                     	;# 
  1909  019A                     	;# 
  1910  019A                     	;# 
  1911  019A                     	;# 
  1912  019B                     	;# 
  1913  019B                     	;# 
  1914  019B                     	;# 
  1915  019B                     	;# 
  1916  019B                     	;# 
  1917  019C                     	;# 
  1918  019C                     	;# 
  1919  019C                     	;# 
  1920  019D                     	;# 
  1921  019D                     	;# 
  1922  019D                     	;# 
  1923  019E                     	;# 
  1924  019E                     	;# 
  1925  019E                     	;# 
  1926  019F                     	;# 
  1927  019F                     	;# 
  1928  019F                     	;# 
  1929  019F                     	;# 
  1930  019F                     	;# 
  1931  020C                     	;# 
  1932  020D                     	;# 
  1933  020E                     	;# 
  1934  0211                     	;# 
  1935  0211                     	;# 
  1936  0212                     	;# 
  1937  0212                     	;# 
  1938  0213                     	;# 
  1939  0213                     	;# 
  1940  0214                     	;# 
  1941  0214                     	;# 
  1942  0215                     	;# 
  1943  0215                     	;# 
  1944  0215                     	;# 
  1945  0215                     	;# 
  1946  0216                     	;# 
  1947  0216                     	;# 
  1948  0217                     	;# 
  1949  0217                     	;# 
  1950  0219                     	;# 
  1951  021A                     	;# 
  1952  021B                     	;# 
  1953  021C                     	;# 
  1954  021D                     	;# 
  1955  021D                     	;# 
  1956  021E                     	;# 
  1957  021F                     	;# 
  1958  028C                     	;# 
  1959  028D                     	;# 
  1960  028E                     	;# 
  1961  0291                     	;# 
  1962  0291                     	;# 
  1963  0292                     	;# 
  1964  0293                     	;# 
  1965  0294                     	;# 
  1966  0295                     	;# 
  1967  0295                     	;# 
  1968  0296                     	;# 
  1969  0297                     	;# 
  1970  0298                     	;# 
  1971  029F                     	;# 
  1972  030C                     	;# 
  1973  030D                     	;# 
  1974  030E                     	;# 
  1975  0311                     	;# 
  1976  0311                     	;# 
  1977  0312                     	;# 
  1978  0313                     	;# 
  1979  0314                     	;# 
  1980  0315                     	;# 
  1981  0315                     	;# 
  1982  0316                     	;# 
  1983  0317                     	;# 
  1984  0318                     	;# 
  1985  038C                     	;# 
  1986  038D                     	;# 
  1987  038E                     	;# 
  1988  0391                     	;# 
  1989  0392                     	;# 
  1990  0393                     	;# 
  1991  0394                     	;# 
  1992  0395                     	;# 
  1993  0396                     	;# 
  1994  0397                     	;# 
  1995  0398                     	;# 
  1996  0399                     	;# 
  1997  039A                     	;# 
  1998  039C                     	;# 
  1999  039D                     	;# 
  2000  039E                     	;# 
  2001  039F                     	;# 
  2002  0411                     	;# 
  2003  0411                     	;# 
  2004  0412                     	;# 
  2005  0413                     	;# 
  2006  0414                     	;# 
  2007  0415                     	;# 
  2008  0416                     	;# 
  2009  0417                     	;# 
  2010  0418                     	;# 
  2011  0418                     	;# 
  2012  0419                     	;# 
  2013  041A                     	;# 
  2014  041B                     	;# 
  2015  041C                     	;# 
  2016  041D                     	;# 
  2017  041E                     	;# 
  2018  041F                     	;# 
  2019  0498                     	;# 
  2020  0498                     	;# 
  2021  0499                     	;# 
  2022  049A                     	;# 
  2023  049B                     	;# 
  2024  049B                     	;# 
  2025  049C                     	;# 
  2026  049D                     	;# 
  2027  049E                     	;# 
  2028  049F                     	;# 
  2029  0617                     	;# 
  2030  0618                     	;# 
  2031  0619                     	;# 
  2032  0619                     	;# 
  2033  061A                     	;# 
  2034  061B                     	;# 
  2035  061C                     	;# 
  2036  061C                     	;# 
  2037  061F                     	;# 
  2038  0691                     	;# 
  2039  0692                     	;# 
  2040  0693                     	;# 
  2041  0694                     	;# 
  2042  0695                     	;# 
  2043  0696                     	;# 
  2044  0697                     	;# 
  2045  0698                     	;# 
  2046  0699                     	;# 
  2047  0711                     	;# 
  2048  0712                     	;# 
  2049  0713                     	;# 
  2050  0714                     	;# 
  2051  0715                     	;# 
  2052  0716                     	;# 
  2053  0717                     	;# 
  2054  0718                     	;# 
  2055  0719                     	;# 
  2056  0891                     	;# 
  2057  0891                     	;# 
  2058  0891                     	;# 
  2059  0891                     	;# 
  2060  0891                     	;# 
  2061  0891                     	;# 
  2062  0892                     	;# 
  2063  0892                     	;# 
  2064  0892                     	;# 
  2065  0893                     	;# 
  2066  0893                     	;# 
  2067  0893                     	;# 
  2068  0893                     	;# 
  2069  0893                     	;# 
  2070  0893                     	;# 
  2071  0894                     	;# 
  2072  0894                     	;# 
  2073  0894                     	;# 
  2074  0895                     	;# 
  2075  0895                     	;# 
  2076  0895                     	;# 
  2077  0896                     	;# 
  2078  0896                     	;# 
  2079  0896                     	;# 
  2080  089B                     	;# 
  2081  0911                     	;# 
  2082  0912                     	;# 
  2083  0913                     	;# 
  2084  0914                     	;# 
  2085  0915                     	;# 
  2086  0916                     	;# 
  2087  0918                     	;# 
  2088  0919                     	;# 
  2089  091A                     	;# 
  2090  091B                     	;# 
  2091  091C                     	;# 
  2092  091D                     	;# 
  2093  091E                     	;# 
  2094  091F                     	;# 
  2095  0E0F                     	;# 
  2096  0E10                     	;# 
  2097  0E11                     	;# 
  2098  0E12                     	;# 
  2099  0E13                     	;# 
  2100  0E14                     	;# 
  2101  0E15                     	;# 
  2102  0E16                     	;# 
  2103  0E17                     	;# 
  2104  0E18                     	;# 
  2105  0E19                     	;# 
  2106  0E1A                     	;# 
  2107  0E1B                     	;# 
  2108  0E1C                     	;# 
  2109  0E1D                     	;# 
  2110  0E1E                     	;# 
  2111  0E1F                     	;# 
  2112  0E20                     	;# 
  2113  0E21                     	;# 
  2114  0E22                     	;# 
  2115  0E24                     	;# 
  2116  0E25                     	;# 
  2117  0E28                     	;# 
  2118  0E29                     	;# 
  2119  0E2A                     	;# 
  2120  0E2B                     	;# 
  2121  0E2C                     	;# 
  2122  0E2D                     	;# 
  2123  0E2E                     	;# 
  2124  0E2F                     	;# 
  2125  0E90                     	;# 
  2126  0E91                     	;# 
  2127  0E92                     	;# 
  2128  0E94                     	;# 
  2129  0E95                     	;# 
  2130  0E9C                     	;# 
  2131  0E9D                     	;# 
  2132  0E9E                     	;# 
  2133  0E9F                     	;# 
  2134  0EA0                     	;# 
  2135  0EA1                     	;# 
  2136  0EA2                     	;# 
  2137  0EA3                     	;# 
  2138  0EA4                     	;# 
  2139  0EA5                     	;# 
  2140  0EA6                     	;# 
  2141  0EA7                     	;# 
  2142  0F0F                     	;# 
  2143  0F10                     	;# 
  2144  0F11                     	;# 
  2145  0F12                     	;# 
  2146  0F13                     	;# 
  2147  0F14                     	;# 
  2148  0F15                     	;# 
  2149  0F16                     	;# 
  2150  0F17                     	;# 
  2151  0F18                     	;# 
  2152  0F19                     	;# 
  2153  0F1A                     	;# 
  2154  0F1B                     	;# 
  2155  0F1C                     	;# 
  2156  0F1D                     	;# 
  2157  0F1E                     	;# 
  2158  0F1F                     	;# 
  2159  0F20                     	;# 
  2160  0F21                     	;# 
  2161  0F22                     	;# 
  2162  0F23                     	;# 
  2163  0F24                     	;# 
  2164  0F25                     	;# 
  2165  0F26                     	;# 
  2166  0F27                     	;# 
  2167  0F28                     	;# 
  2168  0F29                     	;# 
  2169  0F2A                     	;# 
  2170  0F2B                     	;# 
  2171  0F2C                     	;# 
  2172  0F2D                     	;# 
  2173  0F2E                     	;# 
  2174  0F2F                     	;# 
  2175  0F30                     	;# 
  2176  0F31                     	;# 
  2177  0F32                     	;# 
  2178  0F33                     	;# 
  2179  0F34                     	;# 
  2180  0F35                     	;# 
  2181  0F36                     	;# 
  2182  0F37                     	;# 
  2183  0FE4                     	;# 
  2184  0FE5                     	;# 
  2185  0FE6                     	;# 
  2186  0FE7                     	;# 
  2187  0FE8                     	;# 
  2188  0FE9                     	;# 
  2189  0FEA                     	;# 
  2190  0FEB                     	;# 
  2191  0FED                     	;# 
  2192  0FEE                     	;# 
  2193  0FEF                     	;# 
  2194  0000                     	;# 
  2195  0001                     	;# 
  2196  0002                     	;# 
  2197  0003                     	;# 
  2198  0004                     	;# 
  2199  0005                     	;# 
  2200  0006                     	;# 
  2201  0007                     	;# 
  2202  0008                     	;# 
  2203  0009                     	;# 
  2204  000A                     	;# 
  2205  000B                     	;# 
  2206  000C                     	;# 
  2207  000D                     	;# 
  2208  000E                     	;# 
  2209  0010                     	;# 
  2210  0011                     	;# 
  2211  0012                     	;# 
  2212  0013                     	;# 
  2213  0014                     	;# 
  2214  0015                     	;# 
  2215  0015                     	;# 
  2216  0016                     	;# 
  2217  0016                     	;# 
  2218  0017                     	;# 
  2219  0018                     	;# 
  2220  0019                     	;# 
  2221  0019                     	;# 
  2222  001A                     	;# 
  2223  001B                     	;# 
  2224  001C                     	;# 
  2225  001D                     	;# 
  2226  001E                     	;# 
  2227  001F                     	;# 
  2228  008C                     	;# 
  2229  008D                     	;# 
  2230  008E                     	;# 
  2231  0090                     	;# 
  2232  0091                     	;# 
  2233  0092                     	;# 
  2234  0093                     	;# 
  2235  0094                     	;# 
  2236  0097                     	;# 
  2237  009B                     	;# 
  2238  009B                     	;# 
  2239  009C                     	;# 
  2240  009D                     	;# 
  2241  009E                     	;# 
  2242  009F                     	;# 
  2243  010C                     	;# 
  2244  010D                     	;# 
  2245  010E                     	;# 
  2246  0111                     	;# 
  2247  0112                     	;# 
  2248  0113                     	;# 
  2249  0114                     	;# 
  2250  0115                     	;# 
  2251  0116                     	;# 
  2252  0117                     	;# 
  2253  0118                     	;# 
  2254  0119                     	;# 
  2255  018C                     	;# 
  2256  018D                     	;# 
  2257  018E                     	;# 
  2258  0197                     	;# 
  2259  0199                     	;# 
  2260  0199                     	;# 
  2261  0199                     	;# 
  2262  019A                     	;# 
  2263  019A                     	;# 
  2264  019A                     	;# 
  2265  019B                     	;# 
  2266  019B                     	;# 
  2267  019B                     	;# 
  2268  019B                     	;# 
  2269  019B                     	;# 
  2270  019C                     	;# 
  2271  019C                     	;# 
  2272  019C                     	;# 
  2273  019D                     	;# 
  2274  019D                     	;# 
  2275  019D                     	;# 
  2276  019E                     	;# 
  2277  019E                     	;# 
  2278  019E                     	;# 
  2279  019F                     	;# 
  2280  019F                     	;# 
  2281  019F                     	;# 
  2282  019F                     	;# 
  2283  019F                     	;# 
  2284  020C                     	;# 
  2285  020D                     	;# 
  2286  020E                     	;# 
  2287  0211                     	;# 
  2288  0211                     	;# 
  2289  0212                     	;# 
  2290  0212                     	;# 
  2291  0213                     	;# 
  2292  0213                     	;# 
  2293  0214                     	;# 
  2294  0214                     	;# 
  2295  0215                     	;# 
  2296  0215                     	;# 
  2297  0215                     	;# 
  2298  0215                     	;# 
  2299  0216                     	;# 
  2300  0216                     	;# 
  2301  0217                     	;# 
  2302  0217                     	;# 
  2303  0219                     	;# 
  2304  021A                     	;# 
  2305  021B                     	;# 
  2306  021C                     	;# 
  2307  021D                     	;# 
  2308  021D                     	;# 
  2309  021E                     	;# 
  2310  021F                     	;# 
  2311  028C                     	;# 
  2312  028D                     	;# 
  2313  028E                     	;# 
  2314  0291                     	;# 
  2315  0291                     	;# 
  2316  0292                     	;# 
  2317  0293                     	;# 
  2318  0294                     	;# 
  2319  0295                     	;# 
  2320  0295                     	;# 
  2321  0296                     	;# 
  2322  0297                     	;# 
  2323  0298                     	;# 
  2324  029F                     	;# 
  2325  030C                     	;# 
  2326  030D                     	;# 
  2327  030E                     	;# 
  2328  0311                     	;# 
  2329  0311                     	;# 
  2330  0312                     	;# 
  2331  0313                     	;# 
  2332  0314                     	;# 
  2333  0315                     	;# 
  2334  0315                     	;# 
  2335  0316                     	;# 
  2336  0317                     	;# 
  2337  0318                     	;# 
  2338  038C                     	;# 
  2339  038D                     	;# 
  2340  038E                     	;# 
  2341  0391                     	;# 
  2342  0392                     	;# 
  2343  0393                     	;# 
  2344  0394                     	;# 
  2345  0395                     	;# 
  2346  0396                     	;# 
  2347  0397                     	;# 
  2348  0398                     	;# 
  2349  0399                     	;# 
  2350  039A                     	;# 
  2351  039C                     	;# 
  2352  039D                     	;# 
  2353  039E                     	;# 
  2354  039F                     	;# 
  2355  0411                     	;# 
  2356  0411                     	;# 
  2357  0412                     	;# 
  2358  0413                     	;# 
  2359  0414                     	;# 
  2360  0415                     	;# 
  2361  0416                     	;# 
  2362  0417                     	;# 
  2363  0418                     	;# 
  2364  0418                     	;# 
  2365  0419                     	;# 
  2366  041A                     	;# 
  2367  041B                     	;# 
  2368  041C                     	;# 
  2369  041D                     	;# 
  2370  041E                     	;# 
  2371  041F                     	;# 
  2372  0498                     	;# 
  2373  0498                     	;# 
  2374  0499                     	;# 
  2375  049A                     	;# 
  2376  049B                     	;# 
  2377  049B                     	;# 
  2378  049C                     	;# 
  2379  049D                     	;# 
  2380  049E                     	;# 
  2381  049F                     	;# 
  2382  0617                     	;# 
  2383  0618                     	;# 
  2384  0619                     	;# 
  2385  0619                     	;# 
  2386  061A                     	;# 
  2387  061B                     	;# 
  2388  061C                     	;# 
  2389  061C                     	;# 
  2390  061F                     	;# 
  2391  0691                     	;# 
  2392  0692                     	;# 
  2393  0693                     	;# 
  2394  0694                     	;# 
  2395  0695                     	;# 
  2396  0696                     	;# 
  2397  0697                     	;# 
  2398  0698                     	;# 
  2399  0699                     	;# 
  2400  0711                     	;# 
  2401  0712                     	;# 
  2402  0713                     	;# 
  2403  0714                     	;# 
  2404  0715                     	;# 
  2405  0716                     	;# 
  2406  0717                     	;# 
  2407  0718                     	;# 
  2408  0719                     	;# 
  2409  0891                     	;# 
  2410  0891                     	;# 
  2411  0891                     	;# 
  2412  0891                     	;# 
  2413  0891                     	;# 
  2414  0891                     	;# 
  2415  0892                     	;# 
  2416  0892                     	;# 
  2417  0892                     	;# 
  2418  0893                     	;# 
  2419  0893                     	;# 
  2420  0893                     	;# 
  2421  0893                     	;# 
  2422  0893                     	;# 
  2423  0893                     	;# 
  2424  0894                     	;# 
  2425  0894                     	;# 
  2426  0894                     	;# 
  2427  0895                     	;# 
  2428  0895                     	;# 
  2429  0895                     	;# 
  2430  0896                     	;# 
  2431  0896                     	;# 
  2432  0896                     	;# 
  2433  089B                     	;# 
  2434  0911                     	;# 
  2435  0912                     	;# 
  2436  0913                     	;# 
  2437  0914                     	;# 
  2438  0915                     	;# 
  2439  0916                     	;# 
  2440  0918                     	;# 
  2441  0919                     	;# 
  2442  091A                     	;# 
  2443  091B                     	;# 
  2444  091C                     	;# 
  2445  091D                     	;# 
  2446  091E                     	;# 
  2447  091F                     	;# 
  2448  0E0F                     	;# 
  2449  0E10                     	;# 
  2450  0E11                     	;# 
  2451  0E12                     	;# 
  2452  0E13                     	;# 
  2453  0E14                     	;# 
  2454  0E15                     	;# 
  2455  0E16                     	;# 
  2456  0E17                     	;# 
  2457  0E18                     	;# 
  2458  0E19                     	;# 
  2459  0E1A                     	;# 
  2460  0E1B                     	;# 
  2461  0E1C                     	;# 
  2462  0E1D                     	;# 
  2463  0E1E                     	;# 
  2464  0E1F                     	;# 
  2465  0E20                     	;# 
  2466  0E21                     	;# 
  2467  0E22                     	;# 
  2468  0E24                     	;# 
  2469  0E25                     	;# 
  2470  0E28                     	;# 
  2471  0E29                     	;# 
  2472  0E2A                     	;# 
  2473  0E2B                     	;# 
  2474  0E2C                     	;# 
  2475  0E2D                     	;# 
  2476  0E2E                     	;# 
  2477  0E2F                     	;# 
  2478  0E90                     	;# 
  2479  0E91                     	;# 
  2480  0E92                     	;# 
  2481  0E94                     	;# 
  2482  0E95                     	;# 
  2483  0E9C                     	;# 
  2484  0E9D                     	;# 
  2485  0E9E                     	;# 
  2486  0E9F                     	;# 
  2487  0EA0                     	;# 
  2488  0EA1                     	;# 
  2489  0EA2                     	;# 
  2490  0EA3                     	;# 
  2491  0EA4                     	;# 
  2492  0EA5                     	;# 
  2493  0EA6                     	;# 
  2494  0EA7                     	;# 
  2495  0F0F                     	;# 
  2496  0F10                     	;# 
  2497  0F11                     	;# 
  2498  0F12                     	;# 
  2499  0F13                     	;# 
  2500  0F14                     	;# 
  2501  0F15                     	;# 
  2502  0F16                     	;# 
  2503  0F17                     	;# 
  2504  0F18                     	;# 
  2505  0F19                     	;# 
  2506  0F1A                     	;# 
  2507  0F1B                     	;# 
  2508  0F1C                     	;# 
  2509  0F1D                     	;# 
  2510  0F1E                     	;# 
  2511  0F1F                     	;# 
  2512  0F20                     	;# 
  2513  0F21                     	;# 
  2514  0F22                     	;# 
  2515  0F23                     	;# 
  2516  0F24                     	;# 
  2517  0F25                     	;# 
  2518  0F26                     	;# 
  2519  0F27                     	;# 
  2520  0F28                     	;# 
  2521  0F29                     	;# 
  2522  0F2A                     	;# 
  2523  0F2B                     	;# 
  2524  0F2C                     	;# 
  2525  0F2D                     	;# 
  2526  0F2E                     	;# 
  2527  0F2F                     	;# 
  2528  0F30                     	;# 
  2529  0F31                     	;# 
  2530  0F32                     	;# 
  2531  0F33                     	;# 
  2532  0F34                     	;# 
  2533  0F35                     	;# 
  2534  0F36                     	;# 
  2535  0F37                     	;# 
  2536  0FE4                     	;# 
  2537  0FE5                     	;# 
  2538  0FE6                     	;# 
  2539  0FE7                     	;# 
  2540  0FE8                     	;# 
  2541  0FE9                     	;# 
  2542  0FEA                     	;# 
  2543  0FEB                     	;# 
  2544  0FED                     	;# 
  2545  0FEE                     	;# 
  2546  0FEF                     	;# 
  2547  0000                     	;# 
  2548  0001                     	;# 
  2549  0002                     	;# 
  2550  0003                     	;# 
  2551  0004                     	;# 
  2552  0005                     	;# 
  2553  0006                     	;# 
  2554  0007                     	;# 
  2555  0008                     	;# 
  2556  0009                     	;# 
  2557  000A                     	;# 
  2558  000B                     	;# 
  2559  000C                     	;# 
  2560  000D                     	;# 
  2561  000E                     	;# 
  2562  0010                     	;# 
  2563  0011                     	;# 
  2564  0012                     	;# 
  2565  0013                     	;# 
  2566  0014                     	;# 
  2567  0015                     	;# 
  2568  0015                     	;# 
  2569  0016                     	;# 
  2570  0016                     	;# 
  2571  0017                     	;# 
  2572  0018                     	;# 
  2573  0019                     	;# 
  2574  0019                     	;# 
  2575  001A                     	;# 
  2576  001B                     	;# 
  2577  001C                     	;# 
  2578  001D                     	;# 
  2579  001E                     	;# 
  2580  001F                     	;# 
  2581  008C                     	;# 
  2582  008D                     	;# 
  2583  008E                     	;# 
  2584  0090                     	;# 
  2585  0091                     	;# 
  2586  0092                     	;# 
  2587  0093                     	;# 
  2588  0094                     	;# 
  2589  0097                     	;# 
  2590  009B                     	;# 
  2591  009B                     	;# 
  2592  009C                     	;# 
  2593  009D                     	;# 
  2594  009E                     	;# 
  2595  009F                     	;# 
  2596  010C                     	;# 
  2597  010D                     	;# 
  2598  010E                     	;# 
  2599  0111                     	;# 
  2600  0112                     	;# 
  2601  0113                     	;# 
  2602  0114                     	;# 
  2603  0115                     	;# 
  2604  0116                     	;# 
  2605  0117                     	;# 
  2606  0118                     	;# 
  2607  0119                     	;# 
  2608  018C                     	;# 
  2609  018D                     	;# 
  2610  018E                     	;# 
  2611  0197                     	;# 
  2612  0199                     	;# 
  2613  0199                     	;# 
  2614  0199                     	;# 
  2615  019A                     	;# 
  2616  019A                     	;# 
  2617  019A                     	;# 
  2618  019B                     	;# 
  2619  019B                     	;# 
  2620  019B                     	;# 
  2621  019B                     	;# 
  2622  019B                     	;# 
  2623  019C                     	;# 
  2624  019C                     	;# 
  2625  019C                     	;# 
  2626  019D                     	;# 
  2627  019D                     	;# 
  2628  019D                     	;# 
  2629  019E                     	;# 
  2630  019E                     	;# 
  2631  019E                     	;# 
  2632  019F                     	;# 
  2633  019F                     	;# 
  2634  019F                     	;# 
  2635  019F                     	;# 
  2636  019F                     	;# 
  2637  020C                     	;# 
  2638  020D                     	;# 
  2639  020E                     	;# 
  2640  0211                     	;# 
  2641  0211                     	;# 
  2642  0212                     	;# 
  2643  0212                     	;# 
  2644  0213                     	;# 
  2645  0213                     	;# 
  2646  0214                     	;# 
  2647  0214                     	;# 
  2648  0215                     	;# 
  2649  0215                     	;# 
  2650  0215                     	;# 
  2651  0215                     	;# 
  2652  0216                     	;# 
  2653  0216                     	;# 
  2654  0217                     	;# 
  2655  0217                     	;# 
  2656  0219                     	;# 
  2657  021A                     	;# 
  2658  021B                     	;# 
  2659  021C                     	;# 
  2660  021D                     	;# 
  2661  021D                     	;# 
  2662  021E                     	;# 
  2663  021F                     	;# 
  2664  028C                     	;# 
  2665  028D                     	;# 
  2666  028E                     	;# 
  2667  0291                     	;# 
  2668  0291                     	;# 
  2669  0292                     	;# 
  2670  0293                     	;# 
  2671  0294                     	;# 
  2672  0295                     	;# 
  2673  0295                     	;# 
  2674  0296                     	;# 
  2675  0297                     	;# 
  2676  0298                     	;# 
  2677  029F                     	;# 
  2678  030C                     	;# 
  2679  030D                     	;# 
  2680  030E                     	;# 
  2681  0311                     	;# 
  2682  0311                     	;# 
  2683  0312                     	;# 
  2684  0313                     	;# 
  2685  0314                     	;# 
  2686  0315                     	;# 
  2687  0315                     	;# 
  2688  0316                     	;# 
  2689  0317                     	;# 
  2690  0318                     	;# 
  2691  038C                     	;# 
  2692  038D                     	;# 
  2693  038E                     	;# 
  2694  0391                     	;# 
  2695  0392                     	;# 
  2696  0393                     	;# 
  2697  0394                     	;# 
  2698  0395                     	;# 
  2699  0396                     	;# 
  2700  0397                     	;# 
  2701  0398                     	;# 
  2702  0399                     	;# 
  2703  039A                     	;# 
  2704  039C                     	;# 
  2705  039D                     	;# 
  2706  039E                     	;# 
  2707  039F                     	;# 
  2708  0411                     	;# 
  2709  0411                     	;# 
  2710  0412                     	;# 
  2711  0413                     	;# 
  2712  0414                     	;# 
  2713  0415                     	;# 
  2714  0416                     	;# 
  2715  0417                     	;# 
  2716  0418                     	;# 
  2717  0418                     	;# 
  2718  0419                     	;# 
  2719  041A                     	;# 
  2720  041B                     	;# 
  2721  041C                     	;# 
  2722  041D                     	;# 
  2723  041E                     	;# 
  2724  041F                     	;# 
  2725  0498                     	;# 
  2726  0498                     	;# 
  2727  0499                     	;# 
  2728  049A                     	;# 
  2729  049B                     	;# 
  2730  049B                     	;# 
  2731  049C                     	;# 
  2732  049D                     	;# 
  2733  049E                     	;# 
  2734  049F                     	;# 
  2735  0617                     	;# 
  2736  0618                     	;# 
  2737  0619                     	;# 
  2738  0619                     	;# 
  2739  061A                     	;# 
  2740  061B                     	;# 
  2741  061C                     	;# 
  2742  061C                     	;# 
  2743  061F                     	;# 
  2744  0691                     	;# 
  2745  0692                     	;# 
  2746  0693                     	;# 
  2747  0694                     	;# 
  2748  0695                     	;# 
  2749  0696                     	;# 
  2750  0697                     	;# 
  2751  0698                     	;# 
  2752  0699                     	;# 
  2753  0711                     	;# 
  2754  0712                     	;# 
  2755  0713                     	;# 
  2756  0714                     	;# 
  2757  0715                     	;# 
  2758  0716                     	;# 
  2759  0717                     	;# 
  2760  0718                     	;# 
  2761  0719                     	;# 
  2762  0891                     	;# 
  2763  0891                     	;# 
  2764  0891                     	;# 
  2765  0891                     	;# 
  2766  0891                     	;# 
  2767  0891                     	;# 
  2768  0892                     	;# 
  2769  0892                     	;# 
  2770  0892                     	;# 
  2771  0893                     	;# 
  2772  0893                     	;# 
  2773  0893                     	;# 
  2774  0893                     	;# 
  2775  0893                     	;# 
  2776  0893                     	;# 
  2777  0894                     	;# 
  2778  0894                     	;# 
  2779  0894                     	;# 
  2780  0895                     	;# 
  2781  0895                     	;# 
  2782  0895                     	;# 
  2783  0896                     	;# 
  2784  0896                     	;# 
  2785  0896                     	;# 
  2786  089B                     	;# 
  2787  0911                     	;# 
  2788  0912                     	;# 
  2789  0913                     	;# 
  2790  0914                     	;# 
  2791  0915                     	;# 
  2792  0916                     	;# 
  2793  0918                     	;# 
  2794  0919                     	;# 
  2795  091A                     	;# 
  2796  091B                     	;# 
  2797  091C                     	;# 
  2798  091D                     	;# 
  2799  091E                     	;# 
  2800  091F                     	;# 
  2801  0E0F                     	;# 
  2802  0E10                     	;# 
  2803  0E11                     	;# 
  2804  0E12                     	;# 
  2805  0E13                     	;# 
  2806  0E14                     	;# 
  2807  0E15                     	;# 
  2808  0E16                     	;# 
  2809  0E17                     	;# 
  2810  0E18                     	;# 
  2811  0E19                     	;# 
  2812  0E1A                     	;# 
  2813  0E1B                     	;# 
  2814  0E1C                     	;# 
  2815  0E1D                     	;# 
  2816  0E1E                     	;# 
  2817  0E1F                     	;# 
  2818  0E20                     	;# 
  2819  0E21                     	;# 
  2820  0E22                     	;# 
  2821  0E24                     	;# 
  2822  0E25                     	;# 
  2823  0E28                     	;# 
  2824  0E29                     	;# 
  2825  0E2A                     	;# 
  2826  0E2B                     	;# 
  2827  0E2C                     	;# 
  2828  0E2D                     	;# 
  2829  0E2E                     	;# 
  2830  0E2F                     	;# 
  2831  0E90                     	;# 
  2832  0E91                     	;# 
  2833  0E92                     	;# 
  2834  0E94                     	;# 
  2835  0E95                     	;# 
  2836  0E9C                     	;# 
  2837  0E9D                     	;# 
  2838  0E9E                     	;# 
  2839  0E9F                     	;# 
  2840  0EA0                     	;# 
  2841  0EA1                     	;# 
  2842  0EA2                     	;# 
  2843  0EA3                     	;# 
  2844  0EA4                     	;# 
  2845  0EA5                     	;# 
  2846  0EA6                     	;# 
  2847  0EA7                     	;# 
  2848  0F0F                     	;# 
  2849  0F10                     	;# 
  2850  0F11                     	;# 
  2851  0F12                     	;# 
  2852  0F13                     	;# 
  2853  0F14                     	;# 
  2854  0F15                     	;# 
  2855  0F16                     	;# 
  2856  0F17                     	;# 
  2857  0F18                     	;# 
  2858  0F19                     	;# 
  2859  0F1A                     	;# 
  2860  0F1B                     	;# 
  2861  0F1C                     	;# 
  2862  0F1D                     	;# 
  2863  0F1E                     	;# 
  2864  0F1F                     	;# 
  2865  0F20                     	;# 
  2866  0F21                     	;# 
  2867  0F22                     	;# 
  2868  0F23                     	;# 
  2869  0F24                     	;# 
  2870  0F25                     	;# 
  2871  0F26                     	;# 
  2872  0F27                     	;# 
  2873  0F28                     	;# 
  2874  0F29                     	;# 
  2875  0F2A                     	;# 
  2876  0F2B                     	;# 
  2877  0F2C                     	;# 
  2878  0F2D                     	;# 
  2879  0F2E                     	;# 
  2880  0F2F                     	;# 
  2881  0F30                     	;# 
  2882  0F31                     	;# 
  2883  0F32                     	;# 
  2884  0F33                     	;# 
  2885  0F34                     	;# 
  2886  0F35                     	;# 
  2887  0F36                     	;# 
  2888  0F37                     	;# 
  2889  0FE4                     	;# 
  2890  0FE5                     	;# 
  2891  0FE6                     	;# 
  2892  0FE7                     	;# 
  2893  0FE8                     	;# 
  2894  0FE9                     	;# 
  2895  0FEA                     	;# 
  2896  0FEB                     	;# 
  2897  0FED                     	;# 
  2898  0FEE                     	;# 
  2899  0FEF                     	;# 
  2900  0000                     	;# 
  2901  0001                     	;# 
  2902  0002                     	;# 
  2903  0003                     	;# 
  2904  0004                     	;# 
  2905  0005                     	;# 
  2906  0006                     	;# 
  2907  0007                     	;# 
  2908  0008                     	;# 
  2909  0009                     	;# 
  2910  000A                     	;# 
  2911  000B                     	;# 
  2912  000C                     	;# 
  2913  000D                     	;# 
  2914  000E                     	;# 
  2915  0010                     	;# 
  2916  0011                     	;# 
  2917  0012                     	;# 
  2918  0013                     	;# 
  2919  0014                     	;# 
  2920  0015                     	;# 
  2921  0015                     	;# 
  2922  0016                     	;# 
  2923  0016                     	;# 
  2924  0017                     	;# 
  2925  0018                     	;# 
  2926  0019                     	;# 
  2927  0019                     	;# 
  2928  001A                     	;# 
  2929  001B                     	;# 
  2930  001C                     	;# 
  2931  001D                     	;# 
  2932  001E                     	;# 
  2933  001F                     	;# 
  2934  008C                     	;# 
  2935  008D                     	;# 
  2936  008E                     	;# 
  2937  0090                     	;# 
  2938  0091                     	;# 
  2939  0092                     	;# 
  2940  0093                     	;# 
  2941  0094                     	;# 
  2942  0097                     	;# 
  2943  009B                     	;# 
  2944  009B                     	;# 
  2945  009C                     	;# 
  2946  009D                     	;# 
  2947  009E                     	;# 
  2948  009F                     	;# 
  2949  010C                     	;# 
  2950  010D                     	;# 
  2951  010E                     	;# 
  2952  0111                     	;# 
  2953  0112                     	;# 
  2954  0113                     	;# 
  2955  0114                     	;# 
  2956  0115                     	;# 
  2957  0116                     	;# 
  2958  0117                     	;# 
  2959  0118                     	;# 
  2960  0119                     	;# 
  2961  018C                     	;# 
  2962  018D                     	;# 
  2963  018E                     	;# 
  2964  0197                     	;# 
  2965  0199                     	;# 
  2966  0199                     	;# 
  2967  0199                     	;# 
  2968  019A                     	;# 
  2969  019A                     	;# 
  2970  019A                     	;# 
  2971  019B                     	;# 
  2972  019B                     	;# 
  2973  019B                     	;# 
  2974  019B                     	;# 
  2975  019B                     	;# 
  2976  019C                     	;# 
  2977  019C                     	;# 
  2978  019C                     	;# 
  2979  019D                     	;# 
  2980  019D                     	;# 
  2981  019D                     	;# 
  2982  019E                     	;# 
  2983  019E                     	;# 
  2984  019E                     	;# 
  2985  019F                     	;# 
  2986  019F                     	;# 
  2987  019F                     	;# 
  2988  019F                     	;# 
  2989  019F                     	;# 
  2990  020C                     	;# 
  2991  020D                     	;# 
  2992  020E                     	;# 
  2993  0211                     	;# 
  2994  0211                     	;# 
  2995  0212                     	;# 
  2996  0212                     	;# 
  2997  0213                     	;# 
  2998  0213                     	;# 
  2999  0214                     	;# 
  3000  0214                     	;# 
  3001  0215                     	;# 
  3002  0215                     	;# 
  3003  0215                     	;# 
  3004  0215                     	;# 
  3005  0216                     	;# 
  3006  0216                     	;# 
  3007  0217                     	;# 
  3008  0217                     	;# 
  3009  0219                     	;# 
  3010  021A                     	;# 
  3011  021B                     	;# 
  3012  021C                     	;# 
  3013  021D                     	;# 
  3014  021D                     	;# 
  3015  021E                     	;# 
  3016  021F                     	;# 
  3017  028C                     	;# 
  3018  028D                     	;# 
  3019  028E                     	;# 
  3020  0291                     	;# 
  3021  0291                     	;# 
  3022  0292                     	;# 
  3023  0293                     	;# 
  3024  0294                     	;# 
  3025  0295                     	;# 
  3026  0295                     	;# 
  3027  0296                     	;# 
  3028  0297                     	;# 
  3029  0298                     	;# 
  3030  029F                     	;# 
  3031  030C                     	;# 
  3032  030D                     	;# 
  3033  030E                     	;# 
  3034  0311                     	;# 
  3035  0311                     	;# 
  3036  0312                     	;# 
  3037  0313                     	;# 
  3038  0314                     	;# 
  3039  0315                     	;# 
  3040  0315                     	;# 
  3041  0316                     	;# 
  3042  0317                     	;# 
  3043  0318                     	;# 
  3044  038C                     	;# 
  3045  038D                     	;# 
  3046  038E                     	;# 
  3047  0391                     	;# 
  3048  0392                     	;# 
  3049  0393                     	;# 
  3050  0394                     	;# 
  3051  0395                     	;# 
  3052  0396                     	;# 
  3053  0397                     	;# 
  3054  0398                     	;# 
  3055  0399                     	;# 
  3056  039A                     	;# 
  3057  039C                     	;# 
  3058  039D                     	;# 
  3059  039E                     	;# 
  3060  039F                     	;# 
  3061  0411                     	;# 
  3062  0411                     	;# 
  3063  0412                     	;# 
  3064  0413                     	;# 
  3065  0414                     	;# 
  3066  0415                     	;# 
  3067  0416                     	;# 
  3068  0417                     	;# 
  3069  0418                     	;# 
  3070  0418                     	;# 
  3071  0419                     	;# 
  3072  041A                     	;# 
  3073  041B                     	;# 
  3074  041C                     	;# 
  3075  041D                     	;# 
  3076  041E                     	;# 
  3077  041F                     	;# 
  3078  0498                     	;# 
  3079  0498                     	;# 
  3080  0499                     	;# 
  3081  049A                     	;# 
  3082  049B                     	;# 
  3083  049B                     	;# 
  3084  049C                     	;# 
  3085  049D                     	;# 
  3086  049E                     	;# 
  3087  049F                     	;# 
  3088  0617                     	;# 
  3089  0618                     	;# 
  3090  0619                     	;# 
  3091  0619                     	;# 
  3092  061A                     	;# 
  3093  061B                     	;# 
  3094  061C                     	;# 
  3095  061C                     	;# 
  3096  061F                     	;# 
  3097  0691                     	;# 
  3098  0692                     	;# 
  3099  0693                     	;# 
  3100  0694                     	;# 
  3101  0695                     	;# 
  3102  0696                     	;# 
  3103  0697                     	;# 
  3104  0698                     	;# 
  3105  0699                     	;# 
  3106  0711                     	;# 
  3107  0712                     	;# 
  3108  0713                     	;# 
  3109  0714                     	;# 
  3110  0715                     	;# 
  3111  0716                     	;# 
  3112  0717                     	;# 
  3113  0718                     	;# 
  3114  0719                     	;# 
  3115  0891                     	;# 
  3116  0891                     	;# 
  3117  0891                     	;# 
  3118  0891                     	;# 
  3119  0891                     	;# 
  3120  0891                     	;# 
  3121  0892                     	;# 
  3122  0892                     	;# 
  3123  0892                     	;# 
  3124  0893                     	;# 
  3125  0893                     	;# 
  3126  0893                     	;# 
  3127  0893                     	;# 
  3128  0893                     	;# 
  3129  0893                     	;# 
  3130  0894                     	;# 
  3131  0894                     	;# 
  3132  0894                     	;# 
  3133  0895                     	;# 
  3134  0895                     	;# 
  3135  0895                     	;# 
  3136  0896                     	;# 
  3137  0896                     	;# 
  3138  0896                     	;# 
  3139  089B                     	;# 
  3140  0911                     	;# 
  3141  0912                     	;# 
  3142  0913                     	;# 
  3143  0914                     	;# 
  3144  0915                     	;# 
  3145  0916                     	;# 
  3146  0918                     	;# 
  3147  0919                     	;# 
  3148  091A                     	;# 
  3149  091B                     	;# 
  3150  091C                     	;# 
  3151  091D                     	;# 
  3152  091E                     	;# 
  3153  091F                     	;# 
  3154  0E0F                     	;# 
  3155  0E10                     	;# 
  3156  0E11                     	;# 
  3157  0E12                     	;# 
  3158  0E13                     	;# 
  3159  0E14                     	;# 
  3160  0E15                     	;# 
  3161  0E16                     	;# 
  3162  0E17                     	;# 
  3163  0E18                     	;# 
  3164  0E19                     	;# 
  3165  0E1A                     	;# 
  3166  0E1B                     	;# 
  3167  0E1C                     	;# 
  3168  0E1D                     	;# 
  3169  0E1E                     	;# 
  3170  0E1F                     	;# 
  3171  0E20                     	;# 
  3172  0E21                     	;# 
  3173  0E22                     	;# 
  3174  0E24                     	;# 
  3175  0E25                     	;# 
  3176  0E28                     	;# 
  3177  0E29                     	;# 
  3178  0E2A                     	;# 
  3179  0E2B                     	;# 
  3180  0E2C                     	;# 
  3181  0E2D                     	;# 
  3182  0E2E                     	;# 
  3183  0E2F                     	;# 
  3184  0E90                     	;# 
  3185  0E91                     	;# 
  3186  0E92                     	;# 
  3187  0E94                     	;# 
  3188  0E95                     	;# 
  3189  0E9C                     	;# 
  3190  0E9D                     	;# 
  3191  0E9E                     	;# 
  3192  0E9F                     	;# 
  3193  0EA0                     	;# 
  3194  0EA1                     	;# 
  3195  0EA2                     	;# 
  3196  0EA3                     	;# 
  3197  0EA4                     	;# 
  3198  0EA5                     	;# 
  3199  0EA6                     	;# 
  3200  0EA7                     	;# 
  3201  0F0F                     	;# 
  3202  0F10                     	;# 
  3203  0F11                     	;# 
  3204  0F12                     	;# 
  3205  0F13                     	;# 
  3206  0F14                     	;# 
  3207  0F15                     	;# 
  3208  0F16                     	;# 
  3209  0F17                     	;# 
  3210  0F18                     	;# 
  3211  0F19                     	;# 
  3212  0F1A                     	;# 
  3213  0F1B                     	;# 
  3214  0F1C                     	;# 
  3215  0F1D                     	;# 
  3216  0F1E                     	;# 
  3217  0F1F                     	;# 
  3218  0F20                     	;# 
  3219  0F21                     	;# 
  3220  0F22                     	;# 
  3221  0F23                     	;# 
  3222  0F24                     	;# 
  3223  0F25                     	;# 
  3224  0F26                     	;# 
  3225  0F27                     	;# 
  3226  0F28                     	;# 
  3227  0F29                     	;# 
  3228  0F2A                     	;# 
  3229  0F2B                     	;# 
  3230  0F2C                     	;# 
  3231  0F2D                     	;# 
  3232  0F2E                     	;# 
  3233  0F2F                     	;# 
  3234  0F30                     	;# 
  3235  0F31                     	;# 
  3236  0F32                     	;# 
  3237  0F33                     	;# 
  3238  0F34                     	;# 
  3239  0F35                     	;# 
  3240  0F36                     	;# 
  3241  0F37                     	;# 
  3242  0FE4                     	;# 
  3243  0FE5                     	;# 
  3244  0FE6                     	;# 
  3245  0FE7                     	;# 
  3246  0FE8                     	;# 
  3247  0FE9                     	;# 
  3248  0FEA                     	;# 
  3249  0FEB                     	;# 
  3250  0FED                     	;# 
  3251  0FEE                     	;# 
  3252  0FEF                     	;# 
  3253  0000                     	;# 
  3254  0001                     	;# 
  3255  0002                     	;# 
  3256  0003                     	;# 
  3257  0004                     	;# 
  3258  0005                     	;# 
  3259  0006                     	;# 
  3260  0007                     	;# 
  3261  0008                     	;# 
  3262  0009                     	;# 
  3263  000A                     	;# 
  3264  000B                     	;# 
  3265  000C                     	;# 
  3266  000D                     	;# 
  3267  000E                     	;# 
  3268  0010                     	;# 
  3269  0011                     	;# 
  3270  0012                     	;# 
  3271  0013                     	;# 
  3272  0014                     	;# 
  3273  0015                     	;# 
  3274  0015                     	;# 
  3275  0016                     	;# 
  3276  0016                     	;# 
  3277  0017                     	;# 
  3278  0018                     	;# 
  3279  0019                     	;# 
  3280  0019                     	;# 
  3281  001A                     	;# 
  3282  001B                     	;# 
  3283  001C                     	;# 
  3284  001D                     	;# 
  3285  001E                     	;# 
  3286  001F                     	;# 
  3287  008C                     	;# 
  3288  008D                     	;# 
  3289  008E                     	;# 
  3290  0090                     	;# 
  3291  0091                     	;# 
  3292  0092                     	;# 
  3293  0093                     	;# 
  3294  0094                     	;# 
  3295  0097                     	;# 
  3296  009B                     	;# 
  3297  009B                     	;# 
  3298  009C                     	;# 
  3299  009D                     	;# 
  3300  009E                     	;# 
  3301  009F                     	;# 
  3302  010C                     	;# 
  3303  010D                     	;# 
  3304  010E                     	;# 
  3305  0111                     	;# 
  3306  0112                     	;# 
  3307  0113                     	;# 
  3308  0114                     	;# 
  3309  0115                     	;# 
  3310  0116                     	;# 
  3311  0117                     	;# 
  3312  0118                     	;# 
  3313  0119                     	;# 
  3314  018C                     	;# 
  3315  018D                     	;# 
  3316  018E                     	;# 
  3317  0197                     	;# 
  3318  0199                     	;# 
  3319  0199                     	;# 
  3320  0199                     	;# 
  3321  019A                     	;# 
  3322  019A                     	;# 
  3323  019A                     	;# 
  3324  019B                     	;# 
  3325  019B                     	;# 
  3326  019B                     	;# 
  3327  019B                     	;# 
  3328  019B                     	;# 
  3329  019C                     	;# 
  3330  019C                     	;# 
  3331  019C                     	;# 
  3332  019D                     	;# 
  3333  019D                     	;# 
  3334  019D                     	;# 
  3335  019E                     	;# 
  3336  019E                     	;# 
  3337  019E                     	;# 
  3338  019F                     	;# 
  3339  019F                     	;# 
  3340  019F                     	;# 
  3341  019F                     	;# 
  3342  019F                     	;# 
  3343  020C                     	;# 
  3344  020D                     	;# 
  3345  020E                     	;# 
  3346  0211                     	;# 
  3347  0211                     	;# 
  3348  0212                     	;# 
  3349  0212                     	;# 
  3350  0213                     	;# 
  3351  0213                     	;# 
  3352  0214                     	;# 
  3353  0214                     	;# 
  3354  0215                     	;# 
  3355  0215                     	;# 
  3356  0215                     	;# 
  3357  0215                     	;# 
  3358  0216                     	;# 
  3359  0216                     	;# 
  3360  0217                     	;# 
  3361  0217                     	;# 
  3362  0219                     	;# 
  3363  021A                     	;# 
  3364  021B                     	;# 
  3365  021C                     	;# 
  3366  021D                     	;# 
  3367  021D                     	;# 
  3368  021E                     	;# 
  3369  021F                     	;# 
  3370  028C                     	;# 
  3371  028D                     	;# 
  3372  028E                     	;# 
  3373  0291                     	;# 
  3374  0291                     	;# 
  3375  0292                     	;# 
  3376  0293                     	;# 
  3377  0294                     	;# 
  3378  0295                     	;# 
  3379  0295                     	;# 
  3380  0296                     	;# 
  3381  0297                     	;# 
  3382  0298                     	;# 
  3383  029F                     	;# 
  3384  030C                     	;# 
  3385  030D                     	;# 
  3386  030E                     	;# 
  3387  0311                     	;# 
  3388  0311                     	;# 
  3389  0312                     	;# 
  3390  0313                     	;# 
  3391  0314                     	;# 
  3392  0315                     	;# 
  3393  0315                     	;# 
  3394  0316                     	;# 
  3395  0317                     	;# 
  3396  0318                     	;# 
  3397  038C                     	;# 
  3398  038D                     	;# 
  3399  038E                     	;# 
  3400  0391                     	;# 
  3401  0392                     	;# 
  3402  0393                     	;# 
  3403  0394                     	;# 
  3404  0395                     	;# 
  3405  0396                     	;# 
  3406  0397                     	;# 
  3407  0398                     	;# 
  3408  0399                     	;# 
  3409  039A                     	;# 
  3410  039C                     	;# 
  3411  039D                     	;# 
  3412  039E                     	;# 
  3413  039F                     	;# 
  3414  0411                     	;# 
  3415  0411                     	;# 
  3416  0412                     	;# 
  3417  0413                     	;# 
  3418  0414                     	;# 
  3419  0415                     	;# 
  3420  0416                     	;# 
  3421  0417                     	;# 
  3422  0418                     	;# 
  3423  0418                     	;# 
  3424  0419                     	;# 
  3425  041A                     	;# 
  3426  041B                     	;# 
  3427  041C                     	;# 
  3428  041D                     	;# 
  3429  041E                     	;# 
  3430  041F                     	;# 
  3431  0498                     	;# 
  3432  0498                     	;# 
  3433  0499                     	;# 
  3434  049A                     	;# 
  3435  049B                     	;# 
  3436  049B                     	;# 
  3437  049C                     	;# 
  3438  049D                     	;# 
  3439  049E                     	;# 
  3440  049F                     	;# 
  3441  0617                     	;# 
  3442  0618                     	;# 
  3443  0619                     	;# 
  3444  0619                     	;# 
  3445  061A                     	;# 
  3446  061B                     	;# 
  3447  061C                     	;# 
  3448  061C                     	;# 
  3449  061F                     	;# 
  3450  0691                     	;# 
  3451  0692                     	;# 
  3452  0693                     	;# 
  3453  0694                     	;# 
  3454  0695                     	;# 
  3455  0696                     	;# 
  3456  0697                     	;# 
  3457  0698                     	;# 
  3458  0699                     	;# 
  3459  0711                     	;# 
  3460  0712                     	;# 
  3461  0713                     	;# 
  3462  0714                     	;# 
  3463  0715                     	;# 
  3464  0716                     	;# 
  3465  0717                     	;# 
  3466  0718                     	;# 
  3467  0719                     	;# 
  3468  0891                     	;# 
  3469  0891                     	;# 
  3470  0891                     	;# 
  3471  0891                     	;# 
  3472  0891                     	;# 
  3473  0891                     	;# 
  3474  0892                     	;# 
  3475  0892                     	;# 
  3476  0892                     	;# 
  3477  0893                     	;# 
  3478  0893                     	;# 
  3479  0893                     	;# 
  3480  0893                     	;# 
  3481  0893                     	;# 
  3482  0893                     	;# 
  3483  0894                     	;# 
  3484  0894                     	;# 
  3485  0894                     	;# 
  3486  0895                     	;# 
  3487  0895                     	;# 
  3488  0895                     	;# 
  3489  0896                     	;# 
  3490  0896                     	;# 
  3491  0896                     	;# 
  3492  089B                     	;# 
  3493  0911                     	;# 
  3494  0912                     	;# 
  3495  0913                     	;# 
  3496  0914                     	;# 
  3497  0915                     	;# 
  3498  0916                     	;# 
  3499  0918                     	;# 
  3500  0919                     	;# 
  3501  091A                     	;# 
  3502  091B                     	;# 
  3503  091C                     	;# 
  3504  091D                     	;# 
  3505  091E                     	;# 
  3506  091F                     	;# 
  3507  0E0F                     	;# 
  3508  0E10                     	;# 
  3509  0E11                     	;# 
  3510  0E12                     	;# 
  3511  0E13                     	;# 
  3512  0E14                     	;# 
  3513  0E15                     	;# 
  3514  0E16                     	;# 
  3515  0E17                     	;# 
  3516  0E18                     	;# 
  3517  0E19                     	;# 
  3518  0E1A                     	;# 
  3519  0E1B                     	;# 
  3520  0E1C                     	;# 
  3521  0E1D                     	;# 
  3522  0E1E                     	;# 
  3523  0E1F                     	;# 
  3524  0E20                     	;# 
  3525  0E21                     	;# 
  3526  0E22                     	;# 
  3527  0E24                     	;# 
  3528  0E25                     	;# 
  3529  0E28                     	;# 
  3530  0E29                     	;# 
  3531  0E2A                     	;# 
  3532  0E2B                     	;# 
  3533  0E2C                     	;# 
  3534  0E2D                     	;# 
  3535  0E2E                     	;# 
  3536  0E2F                     	;# 
  3537  0E90                     	;# 
  3538  0E91                     	;# 
  3539  0E92                     	;# 
  3540  0E94                     	;# 
  3541  0E95                     	;# 
  3542  0E9C                     	;# 
  3543  0E9D                     	;# 
  3544  0E9E                     	;# 
  3545  0E9F                     	;# 
  3546  0EA0                     	;# 
  3547  0EA1                     	;# 
  3548  0EA2                     	;# 
  3549  0EA3                     	;# 
  3550  0EA4                     	;# 
  3551  0EA5                     	;# 
  3552  0EA6                     	;# 
  3553  0EA7                     	;# 
  3554  0F0F                     	;# 
  3555  0F10                     	;# 
  3556  0F11                     	;# 
  3557  0F12                     	;# 
  3558  0F13                     	;# 
  3559  0F14                     	;# 
  3560  0F15                     	;# 
  3561  0F16                     	;# 
  3562  0F17                     	;# 
  3563  0F18                     	;# 
  3564  0F19                     	;# 
  3565  0F1A                     	;# 
  3566  0F1B                     	;# 
  3567  0F1C                     	;# 
  3568  0F1D                     	;# 
  3569  0F1E                     	;# 
  3570  0F1F                     	;# 
  3571  0F20                     	;# 
  3572  0F21                     	;# 
  3573  0F22                     	;# 
  3574  0F23                     	;# 
  3575  0F24                     	;# 
  3576  0F25                     	;# 
  3577  0F26                     	;# 
  3578  0F27                     	;# 
  3579  0F28                     	;# 
  3580  0F29                     	;# 
  3581  0F2A                     	;# 
  3582  0F2B                     	;# 
  3583  0F2C                     	;# 
  3584  0F2D                     	;# 
  3585  0F2E                     	;# 
  3586  0F2F                     	;# 
  3587  0F30                     	;# 
  3588  0F31                     	;# 
  3589  0F32                     	;# 
  3590  0F33                     	;# 
  3591  0F34                     	;# 
  3592  0F35                     	;# 
  3593  0F36                     	;# 
  3594  0F37                     	;# 
  3595  0FE4                     	;# 
  3596  0FE5                     	;# 
  3597  0FE6                     	;# 
  3598  0FE7                     	;# 
  3599  0FE8                     	;# 
  3600  0FE9                     	;# 
  3601  0FEA                     	;# 
  3602  0FEB                     	;# 
  3603  0FED                     	;# 
  3604  0FEE                     	;# 
  3605  0FEF                     	;# 
  3606  0000                     	;# 
  3607  0001                     	;# 
  3608  0002                     	;# 
  3609  0003                     	;# 
  3610  0004                     	;# 
  3611  0005                     	;# 
  3612  0006                     	;# 
  3613  0007                     	;# 
  3614  0008                     	;# 
  3615  0009                     	;# 
  3616  000A                     	;# 
  3617  000B                     	;# 
  3618  000C                     	;# 
  3619  000D                     	;# 
  3620  000E                     	;# 
  3621  0010                     	;# 
  3622  0011                     	;# 
  3623  0012                     	;# 
  3624  0013                     	;# 
  3625  0014                     	;# 
  3626  0015                     	;# 
  3627  0015                     	;# 
  3628  0016                     	;# 
  3629  0016                     	;# 
  3630  0017                     	;# 
  3631  0018                     	;# 
  3632  0019                     	;# 
  3633  0019                     	;# 
  3634  001A                     	;# 
  3635  001B                     	;# 
  3636  001C                     	;# 
  3637  001D                     	;# 
  3638  001E                     	;# 
  3639  001F                     	;# 
  3640  008C                     	;# 
  3641  008D                     	;# 
  3642  008E                     	;# 
  3643  0090                     	;# 
  3644  0091                     	;# 
  3645  0092                     	;# 
  3646  0093                     	;# 
  3647  0094                     	;# 
  3648  0097                     	;# 
  3649  009B                     	;# 
  3650  009B                     	;# 
  3651  009C                     	;# 
  3652  009D                     	;# 
  3653  009E                     	;# 
  3654  009F                     	;# 
  3655  010C                     	;# 
  3656  010D                     	;# 
  3657  010E                     	;# 
  3658  0111                     	;# 
  3659  0112                     	;# 
  3660  0113                     	;# 
  3661  0114                     	;# 
  3662  0115                     	;# 
  3663  0116                     	;# 
  3664  0117                     	;# 
  3665  0118                     	;# 
  3666  0119                     	;# 
  3667  018C                     	;# 
  3668  018D                     	;# 
  3669  018E                     	;# 
  3670  0197                     	;# 
  3671  0199                     	;# 
  3672  0199                     	;# 
  3673  0199                     	;# 
  3674  019A                     	;# 
  3675  019A                     	;# 
  3676  019A                     	;# 
  3677  019B                     	;# 
  3678  019B                     	;# 
  3679  019B                     	;# 
  3680  019B                     	;# 
  3681  019B                     	;# 
  3682  019C                     	;# 
  3683  019C                     	;# 
  3684  019C                     	;# 
  3685  019D                     	;# 
  3686  019D                     	;# 
  3687  019D                     	;# 
  3688  019E                     	;# 
  3689  019E                     	;# 
  3690  019E                     	;# 
  3691  019F                     	;# 
  3692  019F                     	;# 
  3693  019F                     	;# 
  3694  019F                     	;# 
  3695  019F                     	;# 
  3696  020C                     	;# 
  3697  020D                     	;# 
  3698  020E                     	;# 
  3699  0211                     	;# 
  3700  0211                     	;# 
  3701  0212                     	;# 
  3702  0212                     	;# 
  3703  0213                     	;# 
  3704  0213                     	;# 
  3705  0214                     	;# 
  3706  0214                     	;# 
  3707  0215                     	;# 
  3708  0215                     	;# 
  3709  0215                     	;# 
  3710  0215                     	;# 
  3711  0216                     	;# 
  3712  0216                     	;# 
  3713  0217                     	;# 
  3714  0217                     	;# 
  3715  0219                     	;# 
  3716  021A                     	;# 
  3717  021B                     	;# 
  3718  021C                     	;# 
  3719  021D                     	;# 
  3720  021D                     	;# 
  3721  021E                     	;# 
  3722  021F                     	;# 
  3723  028C                     	;# 
  3724  028D                     	;# 
  3725  028E                     	;# 
  3726  0291                     	;# 
  3727  0291                     	;# 
  3728  0292                     	;# 
  3729  0293                     	;# 
  3730  0294                     	;# 
  3731  0295                     	;# 
  3732  0295                     	;# 
  3733  0296                     	;# 
  3734  0297                     	;# 
  3735  0298                     	;# 
  3736  029F                     	;# 
  3737  030C                     	;# 
  3738  030D                     	;# 
  3739  030E                     	;# 
  3740  0311                     	;# 
  3741  0311                     	;# 
  3742  0312                     	;# 
  3743  0313                     	;# 
  3744  0314                     	;# 
  3745  0315                     	;# 
  3746  0315                     	;# 
  3747  0316                     	;# 
  3748  0317                     	;# 
  3749  0318                     	;# 
  3750  038C                     	;# 
  3751  038D                     	;# 
  3752  038E                     	;# 
  3753  0391                     	;# 
  3754  0392                     	;# 
  3755  0393                     	;# 
  3756  0394                     	;# 
  3757  0395                     	;# 
  3758  0396                     	;# 
  3759  0397                     	;# 
  3760  0398                     	;# 
  3761  0399                     	;# 
  3762  039A                     	;# 
  3763  039C                     	;# 
  3764  039D                     	;# 
  3765  039E                     	;# 
  3766  039F                     	;# 
  3767  0411                     	;# 
  3768  0411                     	;# 
  3769  0412                     	;# 
  3770  0413                     	;# 
  3771  0414                     	;# 
  3772  0415                     	;# 
  3773  0416                     	;# 
  3774  0417                     	;# 
  3775  0418                     	;# 
  3776  0418                     	;# 
  3777  0419                     	;# 
  3778  041A                     	;# 
  3779  041B                     	;# 
  3780  041C                     	;# 
  3781  041D                     	;# 
  3782  041E                     	;# 
  3783  041F                     	;# 
  3784  0498                     	;# 
  3785  0498                     	;# 
  3786  0499                     	;# 
  3787  049A                     	;# 
  3788  049B                     	;# 
  3789  049B                     	;# 
  3790  049C                     	;# 
  3791  049D                     	;# 
  3792  049E                     	;# 
  3793  049F                     	;# 
  3794  0617                     	;# 
  3795  0618                     	;# 
  3796  0619                     	;# 
  3797  0619                     	;# 
  3798  061A                     	;# 
  3799  061B                     	;# 
  3800  061C                     	;# 
  3801  061C                     	;# 
  3802  061F                     	;# 
  3803  0691                     	;# 
  3804  0692                     	;# 
  3805  0693                     	;# 
  3806  0694                     	;# 
  3807  0695                     	;# 
  3808  0696                     	;# 
  3809  0697                     	;# 
  3810  0698                     	;# 
  3811  0699                     	;# 
  3812  0711                     	;# 
  3813  0712                     	;# 
  3814  0713                     	;# 
  3815  0714                     	;# 
  3816  0715                     	;# 
  3817  0716                     	;# 
  3818  0717                     	;# 
  3819  0718                     	;# 
  3820  0719                     	;# 
  3821  0891                     	;# 
  3822  0891                     	;# 
  3823  0891                     	;# 
  3824  0891                     	;# 
  3825  0891                     	;# 
  3826  0891                     	;# 
  3827  0892                     	;# 
  3828  0892                     	;# 
  3829  0892                     	;# 
  3830  0893                     	;# 
  3831  0893                     	;# 
  3832  0893                     	;# 
  3833  0893                     	;# 
  3834  0893                     	;# 
  3835  0893                     	;# 
  3836  0894                     	;# 
  3837  0894                     	;# 
  3838  0894                     	;# 
  3839  0895                     	;# 
  3840  0895                     	;# 
  3841  0895                     	;# 
  3842  0896                     	;# 
  3843  0896                     	;# 
  3844  0896                     	;# 
  3845  089B                     	;# 
  3846  0911                     	;# 
  3847  0912                     	;# 
  3848  0913                     	;# 
  3849  0914                     	;# 
  3850  0915                     	;# 
  3851  0916                     	;# 
  3852  0918                     	;# 
  3853  0919                     	;# 
  3854  091A                     	;# 
  3855  091B                     	;# 
  3856  091C                     	;# 
  3857  091D                     	;# 
  3858  091E                     	;# 
  3859  091F                     	;# 
  3860  0E0F                     	;# 
  3861  0E10                     	;# 
  3862  0E11                     	;# 
  3863  0E12                     	;# 
  3864  0E13                     	;# 
  3865  0E14                     	;# 
  3866  0E15                     	;# 
  3867  0E16                     	;# 
  3868  0E17                     	;# 
  3869  0E18                     	;# 
  3870  0E19                     	;# 
  3871  0E1A                     	;# 
  3872  0E1B                     	;# 
  3873  0E1C                     	;# 
  3874  0E1D                     	;# 
  3875  0E1E                     	;# 
  3876  0E1F                     	;# 
  3877  0E20                     	;# 
  3878  0E21                     	;# 
  3879  0E22                     	;# 
  3880  0E24                     	;# 
  3881  0E25                     	;# 
  3882  0E28                     	;# 
  3883  0E29                     	;# 
  3884  0E2A                     	;# 
  3885  0E2B                     	;# 
  3886  0E2C                     	;# 
  3887  0E2D                     	;# 
  3888  0E2E                     	;# 
  3889  0E2F                     	;# 
  3890  0E90                     	;# 
  3891  0E91                     	;# 
  3892  0E92                     	;# 
  3893  0E94                     	;# 
  3894  0E95                     	;# 
  3895  0E9C                     	;# 
  3896  0E9D                     	;# 
  3897  0E9E                     	;# 
  3898  0E9F                     	;# 
  3899  0EA0                     	;# 
  3900  0EA1                     	;# 
  3901  0EA2                     	;# 
  3902  0EA3                     	;# 
  3903  0EA4                     	;# 
  3904  0EA5                     	;# 
  3905  0EA6                     	;# 
  3906  0EA7                     	;# 
  3907  0F0F                     	;# 
  3908  0F10                     	;# 
  3909  0F11                     	;# 
  3910  0F12                     	;# 
  3911  0F13                     	;# 
  3912  0F14                     	;# 
  3913  0F15                     	;# 
  3914  0F16                     	;# 
  3915  0F17                     	;# 
  3916  0F18                     	;# 
  3917  0F19                     	;# 
  3918  0F1A                     	;# 
  3919  0F1B                     	;# 
  3920  0F1C                     	;# 
  3921  0F1D                     	;# 
  3922  0F1E                     	;# 
  3923  0F1F                     	;# 
  3924  0F20                     	;# 
  3925  0F21                     	;# 
  3926  0F22                     	;# 
  3927  0F23                     	;# 
  3928  0F24                     	;# 
  3929  0F25                     	;# 
  3930  0F26                     	;# 
  3931  0F27                     	;# 
  3932  0F28                     	;# 
  3933  0F29                     	;# 
  3934  0F2A                     	;# 
  3935  0F2B                     	;# 
  3936  0F2C                     	;# 
  3937  0F2D                     	;# 
  3938  0F2E                     	;# 
  3939  0F2F                     	;# 
  3940  0F30                     	;# 
  3941  0F31                     	;# 
  3942  0F32                     	;# 
  3943  0F33                     	;# 
  3944  0F34                     	;# 
  3945  0F35                     	;# 
  3946  0F36                     	;# 
  3947  0F37                     	;# 
  3948  0FE4                     	;# 
  3949  0FE5                     	;# 
  3950  0FE6                     	;# 
  3951  0FE7                     	;# 
  3952  0FE8                     	;# 
  3953  0FE9                     	;# 
  3954  0FEA                     	;# 
  3955  0FEB                     	;# 
  3956  0FED                     	;# 
  3957  0FEE                     	;# 
  3958  0FEF                     	;# 
  3959  0000                     	;# 
  3960  0001                     	;# 
  3961  0002                     	;# 
  3962  0003                     	;# 
  3963  0004                     	;# 
  3964  0005                     	;# 
  3965  0006                     	;# 
  3966  0007                     	;# 
  3967  0008                     	;# 
  3968  0009                     	;# 
  3969  000A                     	;# 
  3970  000B                     	;# 
  3971  000C                     	;# 
  3972  000D                     	;# 
  3973  000E                     	;# 
  3974  0010                     	;# 
  3975  0011                     	;# 
  3976  0012                     	;# 
  3977  0013                     	;# 
  3978  0014                     	;# 
  3979  0015                     	;# 
  3980  0015                     	;# 
  3981  0016                     	;# 
  3982  0016                     	;# 
  3983  0017                     	;# 
  3984  0018                     	;# 
  3985  0019                     	;# 
  3986  0019                     	;# 
  3987  001A                     	;# 
  3988  001B                     	;# 
  3989  001C                     	;# 
  3990  001D                     	;# 
  3991  001E                     	;# 
  3992  001F                     	;# 
  3993  008C                     	;# 
  3994  008D                     	;# 
  3995  008E                     	;# 
  3996  0090                     	;# 
  3997  0091                     	;# 
  3998  0092                     	;# 
  3999  0093                     	;# 
  4000  0094                     	;# 
  4001  0097                     	;# 
  4002  009B                     	;# 
  4003  009B                     	;# 
  4004  009C                     	;# 
  4005  009D                     	;# 
  4006  009E                     	;# 
  4007  009F                     	;# 
  4008  010C                     	;# 
  4009  010D                     	;# 
  4010  010E                     	;# 
  4011  0111                     	;# 
  4012  0112                     	;# 
  4013  0113                     	;# 
  4014  0114                     	;# 
  4015  0115                     	;# 
  4016  0116                     	;# 
  4017  0117                     	;# 
  4018  0118                     	;# 
  4019  0119                     	;# 
  4020  018C                     	;# 
  4021  018D                     	;# 
  4022  018E                     	;# 
  4023  0197                     	;# 
  4024  0199                     	;# 
  4025  0199                     	;# 
  4026  0199                     	;# 
  4027  019A                     	;# 
  4028  019A                     	;# 
  4029  019A                     	;# 
  4030  019B                     	;# 
  4031  019B                     	;# 
  4032  019B                     	;# 
  4033  019B                     	;# 
  4034  019B                     	;# 
  4035  019C                     	;# 
  4036  019C                     	;# 
  4037  019C                     	;# 
  4038  019D                     	;# 
  4039  019D                     	;# 
  4040  019D                     	;# 
  4041  019E                     	;# 
  4042  019E                     	;# 
  4043  019E                     	;# 
  4044  019F                     	;# 
  4045  019F                     	;# 
  4046  019F                     	;# 
  4047  019F                     	;# 
  4048  019F                     	;# 
  4049  020C                     	;# 
  4050  020D                     	;# 
  4051  020E                     	;# 
  4052  0211                     	;# 
  4053  0211                     	;# 
  4054  0212                     	;# 
  4055  0212                     	;# 
  4056  0213                     	;# 
  4057  0213                     	;# 
  4058  0214                     	;# 
  4059  0214                     	;# 
  4060  0215                     	;# 
  4061  0215                     	;# 
  4062  0215                     	;# 
  4063  0215                     	;# 
  4064  0216                     	;# 
  4065  0216                     	;# 
  4066  0217                     	;# 
  4067  0217                     	;# 
  4068  0219                     	;# 
  4069  021A                     	;# 
  4070  021B                     	;# 
  4071  021C                     	;# 
  4072  021D                     	;# 
  4073  021D                     	;# 
  4074  021E                     	;# 
  4075  021F                     	;# 
  4076  028C                     	;# 
  4077  028D                     	;# 
  4078  028E                     	;# 
  4079  0291                     	;# 
  4080  0291                     	;# 
  4081  0292                     	;# 
  4082  0293                     	;# 
  4083  0294                     	;# 
  4084  0295                     	;# 
  4085  0295                     	;# 
  4086  0296                     	;# 
  4087  0297                     	;# 
  4088  0298                     	;# 
  4089  029F                     	;# 
  4090  030C                     	;# 
  4091  030D                     	;# 
  4092  030E                     	;# 
  4093  0311                     	;# 
  4094  0311                     	;# 
  4095  0312                     	;# 
  4096  0313                     	;# 
  4097  0314                     	;# 
  4098  0315                     	;# 
  4099  0315                     	;# 
  4100  0316                     	;# 
  4101  0317                     	;# 
  4102  0318                     	;# 
  4103  038C                     	;# 
  4104  038D                     	;# 
  4105  038E                     	;# 
  4106  0391                     	;# 
  4107  0392                     	;# 
  4108  0393                     	;# 
  4109  0394                     	;# 
  4110  0395                     	;# 
  4111  0396                     	;# 
  4112  0397                     	;# 
  4113  0398                     	;# 
  4114  0399                     	;# 
  4115  039A                     	;# 
  4116  039C                     	;# 
  4117  039D                     	;# 
  4118  039E                     	;# 
  4119  039F                     	;# 
  4120  0411                     	;# 
  4121  0411                     	;# 
  4122  0412                     	;# 
  4123  0413                     	;# 
  4124  0414                     	;# 
  4125  0415                     	;# 
  4126  0416                     	;# 
  4127  0417                     	;# 
  4128  0418                     	;# 
  4129  0418                     	;# 
  4130  0419                     	;# 
  4131  041A                     	;# 
  4132  041B                     	;# 
  4133  041C                     	;# 
  4134  041D                     	;# 
  4135  041E                     	;# 
  4136  041F                     	;# 
  4137  0498                     	;# 
  4138  0498                     	;# 
  4139  0499                     	;# 
  4140  049A                     	;# 
  4141  049B                     	;# 
  4142  049B                     	;# 
  4143  049C                     	;# 
  4144  049D                     	;# 
  4145  049E                     	;# 
  4146  049F                     	;# 
  4147  0617                     	;# 
  4148  0618                     	;# 
  4149  0619                     	;# 
  4150  0619                     	;# 
  4151  061A                     	;# 
  4152  061B                     	;# 
  4153  061C                     	;# 
  4154  061C                     	;# 
  4155  061F                     	;# 
  4156  0691                     	;# 
  4157  0692                     	;# 
  4158  0693                     	;# 
  4159  0694                     	;# 
  4160  0695                     	;# 
  4161  0696                     	;# 
  4162  0697                     	;# 
  4163  0698                     	;# 
  4164  0699                     	;# 
  4165  0711                     	;# 
  4166  0712                     	;# 
  4167  0713                     	;# 
  4168  0714                     	;# 
  4169  0715                     	;# 
  4170  0716                     	;# 
  4171  0717                     	;# 
  4172  0718                     	;# 
  4173  0719                     	;# 
  4174  0891                     	;# 
  4175  0891                     	;# 
  4176  0891                     	;# 
  4177  0891                     	;# 
  4178  0891                     	;# 
  4179  0891                     	;# 
  4180  0892                     	;# 
  4181  0892                     	;# 
  4182  0892                     	;# 
  4183  0893                     	;# 
  4184  0893                     	;# 
  4185  0893                     	;# 
  4186  0893                     	;# 
  4187  0893                     	;# 
  4188  0893                     	;# 
  4189  0894                     	;# 
  4190  0894                     	;# 
  4191  0894                     	;# 
  4192  0895                     	;# 
  4193  0895                     	;# 
  4194  0895                     	;# 
  4195  0896                     	;# 
  4196  0896                     	;# 
  4197  0896                     	;# 
  4198  089B                     	;# 
  4199  0911                     	;# 
  4200  0912                     	;# 
  4201  0913                     	;# 
  4202  0914                     	;# 
  4203  0915                     	;# 
  4204  0916                     	;# 
  4205  0918                     	;# 
  4206  0919                     	;# 
  4207  091A                     	;# 
  4208  091B                     	;# 
  4209  091C                     	;# 
  4210  091D                     	;# 
  4211  091E                     	;# 
  4212  091F                     	;# 
  4213  0E0F                     	;# 
  4214  0E10                     	;# 
  4215  0E11                     	;# 
  4216  0E12                     	;# 
  4217  0E13                     	;# 
  4218  0E14                     	;# 
  4219  0E15                     	;# 
  4220  0E16                     	;# 
  4221  0E17                     	;# 
  4222  0E18                     	;# 
  4223  0E19                     	;# 
  4224  0E1A                     	;# 
  4225  0E1B                     	;# 
  4226  0E1C                     	;# 
  4227  0E1D                     	;# 
  4228  0E1E                     	;# 
  4229  0E1F                     	;# 
  4230  0E20                     	;# 
  4231  0E21                     	;# 
  4232  0E22                     	;# 
  4233  0E24                     	;# 
  4234  0E25                     	;# 
  4235  0E28                     	;# 
  4236  0E29                     	;# 
  4237  0E2A                     	;# 
  4238  0E2B                     	;# 
  4239  0E2C                     	;# 
  4240  0E2D                     	;# 
  4241  0E2E                     	;# 
  4242  0E2F                     	;# 
  4243  0E90                     	;# 
  4244  0E91                     	;# 
  4245  0E92                     	;# 
  4246  0E94                     	;# 
  4247  0E95                     	;# 
  4248  0E9C                     	;# 
  4249  0E9D                     	;# 
  4250  0E9E                     	;# 
  4251  0E9F                     	;# 
  4252  0EA0                     	;# 
  4253  0EA1                     	;# 
  4254  0EA2                     	;# 
  4255  0EA3                     	;# 
  4256  0EA4                     	;# 
  4257  0EA5                     	;# 
  4258  0EA6                     	;# 
  4259  0EA7                     	;# 
  4260  0F0F                     	;# 
  4261  0F10                     	;# 
  4262  0F11                     	;# 
  4263  0F12                     	;# 
  4264  0F13                     	;# 
  4265  0F14                     	;# 
  4266  0F15                     	;# 
  4267  0F16                     	;# 
  4268  0F17                     	;# 
  4269  0F18                     	;# 
  4270  0F19                     	;# 
  4271  0F1A                     	;# 
  4272  0F1B                     	;# 
  4273  0F1C                     	;# 
  4274  0F1D                     	;# 
  4275  0F1E                     	;# 
  4276  0F1F                     	;# 
  4277  0F20                     	;# 
  4278  0F21                     	;# 
  4279  0F22                     	;# 
  4280  0F23                     	;# 
  4281  0F24                     	;# 
  4282  0F25                     	;# 
  4283  0F26                     	;# 
  4284  0F27                     	;# 
  4285  0F28                     	;# 
  4286  0F29                     	;# 
  4287  0F2A                     	;# 
  4288  0F2B                     	;# 
  4289  0F2C                     	;# 
  4290  0F2D                     	;# 
  4291  0F2E                     	;# 
  4292  0F2F                     	;# 
  4293  0F30                     	;# 
  4294  0F31                     	;# 
  4295  0F32                     	;# 
  4296  0F33                     	;# 
  4297  0F34                     	;# 
  4298  0F35                     	;# 
  4299  0F36                     	;# 
  4300  0F37                     	;# 
  4301  0FE4                     	;# 
  4302  0FE5                     	;# 
  4303  0FE6                     	;# 
  4304  0FE7                     	;# 
  4305  0FE8                     	;# 
  4306  0FE9                     	;# 
  4307  0FEA                     	;# 
  4308  0FEB                     	;# 
  4309  0FED                     	;# 
  4310  0FEE                     	;# 
  4311  0FEF                     	;# 
  4312  0000                     	;# 
  4313  0001                     	;# 
  4314  0002                     	;# 
  4315  0003                     	;# 
  4316  0004                     	;# 
  4317  0005                     	;# 
  4318  0006                     	;# 
  4319  0007                     	;# 
  4320  0008                     	;# 
  4321  0009                     	;# 
  4322  000A                     	;# 
  4323  000B                     	;# 
  4324  000C                     	;# 
  4325  000D                     	;# 
  4326  000E                     	;# 
  4327  0010                     	;# 
  4328  0011                     	;# 
  4329  0012                     	;# 
  4330  0013                     	;# 
  4331  0014                     	;# 
  4332  0015                     	;# 
  4333  0015                     	;# 
  4334  0016                     	;# 
  4335  0016                     	;# 
  4336  0017                     	;# 
  4337  0018                     	;# 
  4338  0019                     	;# 
  4339  0019                     	;# 
  4340  001A                     	;# 
  4341  001B                     	;# 
  4342  001C                     	;# 
  4343  001D                     	;# 
  4344  001E                     	;# 
  4345  001F                     	;# 
  4346  008C                     	;# 
  4347  008D                     	;# 
  4348  008E                     	;# 
  4349  0090                     	;# 
  4350  0091                     	;# 
  4351  0092                     	;# 
  4352  0093                     	;# 
  4353  0094                     	;# 
  4354  0097                     	;# 
  4355  009B                     	;# 
  4356  009B                     	;# 
  4357  009C                     	;# 
  4358  009D                     	;# 
  4359  009E                     	;# 
  4360  009F                     	;# 
  4361  010C                     	;# 
  4362  010D                     	;# 
  4363  010E                     	;# 
  4364  0111                     	;# 
  4365  0112                     	;# 
  4366  0113                     	;# 
  4367  0114                     	;# 
  4368  0115                     	;# 
  4369  0116                     	;# 
  4370  0117                     	;# 
  4371  0118                     	;# 
  4372  0119                     	;# 
  4373  018C                     	;# 
  4374  018D                     	;# 
  4375  018E                     	;# 
  4376  0197                     	;# 
  4377  0199                     	;# 
  4378  0199                     	;# 
  4379  0199                     	;# 
  4380  019A                     	;# 
  4381  019A                     	;# 
  4382  019A                     	;# 
  4383  019B                     	;# 
  4384  019B                     	;# 
  4385  019B                     	;# 
  4386  019B                     	;# 
  4387  019B                     	;# 
  4388  019C                     	;# 
  4389  019C                     	;# 
  4390  019C                     	;# 
  4391  019D                     	;# 
  4392  019D                     	;# 
  4393  019D                     	;# 
  4394  019E                     	;# 
  4395  019E                     	;# 
  4396  019E                     	;# 
  4397  019F                     	;# 
  4398  019F                     	;# 
  4399  019F                     	;# 
  4400  019F                     	;# 
  4401  019F                     	;# 
  4402  020C                     	;# 
  4403  020D                     	;# 
  4404  020E                     	;# 
  4405  0211                     	;# 
  4406  0211                     	;# 
  4407  0212                     	;# 
  4408  0212                     	;# 
  4409  0213                     	;# 
  4410  0213                     	;# 
  4411  0214                     	;# 
  4412  0214                     	;# 
  4413  0215                     	;# 
  4414  0215                     	;# 
  4415  0215                     	;# 
  4416  0215                     	;# 
  4417  0216                     	;# 
  4418  0216                     	;# 
  4419  0217                     	;# 
  4420  0217                     	;# 
  4421  0219                     	;# 
  4422  021A                     	;# 
  4423  021B                     	;# 
  4424  021C                     	;# 
  4425  021D                     	;# 
  4426  021D                     	;# 
  4427  021E                     	;# 
  4428  021F                     	;# 
  4429  028C                     	;# 
  4430  028D                     	;# 
  4431  028E                     	;# 
  4432  0291                     	;# 
  4433  0291                     	;# 
  4434  0292                     	;# 
  4435  0293                     	;# 
  4436  0294                     	;# 
  4437  0295                     	;# 
  4438  0295                     	;# 
  4439  0296                     	;# 
  4440  0297                     	;# 
  4441  0298                     	;# 
  4442  029F                     	;# 
  4443  030C                     	;# 
  4444  030D                     	;# 
  4445  030E                     	;# 
  4446  0311                     	;# 
  4447  0311                     	;# 
  4448  0312                     	;# 
  4449  0313                     	;# 
  4450  0314                     	;# 
  4451  0315                     	;# 
  4452  0315                     	;# 
  4453  0316                     	;# 
  4454  0317                     	;# 
  4455  0318                     	;# 
  4456  038C                     	;# 
  4457  038D                     	;# 
  4458  038E                     	;# 
  4459  0391                     	;# 
  4460  0392                     	;# 
  4461  0393                     	;# 
  4462  0394                     	;# 
  4463  0395                     	;# 
  4464  0396                     	;# 
  4465  0397                     	;# 
  4466  0398                     	;# 
  4467  0399                     	;# 
  4468  039A                     	;# 
  4469  039C                     	;# 
  4470  039D                     	;# 
  4471  039E                     	;# 
  4472  039F                     	;# 
  4473  0411                     	;# 
  4474  0411                     	;# 
  4475  0412                     	;# 
  4476  0413                     	;# 
  4477  0414                     	;# 
  4478  0415                     	;# 
  4479  0416                     	;# 
  4480  0417                     	;# 
  4481  0418                     	;# 
  4482  0418                     	;# 
  4483  0419                     	;# 
  4484  041A                     	;# 
  4485  041B                     	;# 
  4486  041C                     	;# 
  4487  041D                     	;# 
  4488  041E                     	;# 
  4489  041F                     	;# 
  4490  0498                     	;# 
  4491  0498                     	;# 
  4492  0499                     	;# 
  4493  049A                     	;# 
  4494  049B                     	;# 
  4495  049B                     	;# 
  4496  049C                     	;# 
  4497  049D                     	;# 
  4498  049E                     	;# 
  4499  049F                     	;# 
  4500  0617                     	;# 
  4501  0618                     	;# 
  4502  0619                     	;# 
  4503  0619                     	;# 
  4504  061A                     	;# 
  4505  061B                     	;# 
  4506  061C                     	;# 
  4507  061C                     	;# 
  4508  061F                     	;# 
  4509  0691                     	;# 
  4510  0692                     	;# 
  4511  0693                     	;# 
  4512  0694                     	;# 
  4513  0695                     	;# 
  4514  0696                     	;# 
  4515  0697                     	;# 
  4516  0698                     	;# 
  4517  0699                     	;# 
  4518  0711                     	;# 
  4519  0712                     	;# 
  4520  0713                     	;# 
  4521  0714                     	;# 
  4522  0715                     	;# 
  4523  0716                     	;# 
  4524  0717                     	;# 
  4525  0718                     	;# 
  4526  0719                     	;# 
  4527  0891                     	;# 
  4528  0891                     	;# 
  4529  0891                     	;# 
  4530  0891                     	;# 
  4531  0891                     	;# 
  4532  0891                     	;# 
  4533  0892                     	;# 
  4534  0892                     	;# 
  4535  0892                     	;# 
  4536  0893                     	;# 
  4537  0893                     	;# 
  4538  0893                     	;# 
  4539  0893                     	;# 
  4540  0893                     	;# 
  4541  0893                     	;# 
  4542  0894                     	;# 
  4543  0894                     	;# 
  4544  0894                     	;# 
  4545  0895                     	;# 
  4546  0895                     	;# 
  4547  0895                     	;# 
  4548  0896                     	;# 
  4549  0896                     	;# 
  4550  0896                     	;# 
  4551  089B                     	;# 
  4552  0911                     	;# 
  4553  0912                     	;# 
  4554  0913                     	;# 
  4555  0914                     	;# 
  4556  0915                     	;# 
  4557  0916                     	;# 
  4558  0918                     	;# 
  4559  0919                     	;# 
  4560  091A                     	;# 
  4561  091B                     	;# 
  4562  091C                     	;# 
  4563  091D                     	;# 
  4564  091E                     	;# 
  4565  091F                     	;# 
  4566  0E0F                     	;# 
  4567  0E10                     	;# 
  4568  0E11                     	;# 
  4569  0E12                     	;# 
  4570  0E13                     	;# 
  4571  0E14                     	;# 
  4572  0E15                     	;# 
  4573  0E16                     	;# 
  4574  0E17                     	;# 
  4575  0E18                     	;# 
  4576  0E19                     	;# 
  4577  0E1A                     	;# 
  4578  0E1B                     	;# 
  4579  0E1C                     	;# 
  4580  0E1D                     	;# 
  4581  0E1E                     	;# 
  4582  0E1F                     	;# 
  4583  0E20                     	;# 
  4584  0E21                     	;# 
  4585  0E22                     	;# 
  4586  0E24                     	;# 
  4587  0E25                     	;# 
  4588  0E28                     	;# 
  4589  0E29                     	;# 
  4590  0E2A                     	;# 
  4591  0E2B                     	;# 
  4592  0E2C                     	;# 
  4593  0E2D                     	;# 
  4594  0E2E                     	;# 
  4595  0E2F                     	;# 
  4596  0E90                     	;# 
  4597  0E91                     	;# 
  4598  0E92                     	;# 
  4599  0E94                     	;# 
  4600  0E95                     	;# 
  4601  0E9C                     	;# 
  4602  0E9D                     	;# 
  4603  0E9E                     	;# 
  4604  0E9F                     	;# 
  4605  0EA0                     	;# 
  4606  0EA1                     	;# 
  4607  0EA2                     	;# 
  4608  0EA3                     	;# 
  4609  0EA4                     	;# 
  4610  0EA5                     	;# 
  4611  0EA6                     	;# 
  4612  0EA7                     	;# 
  4613  0F0F                     	;# 
  4614  0F10                     	;# 
  4615  0F11                     	;# 
  4616  0F12                     	;# 
  4617  0F13                     	;# 
  4618  0F14                     	;# 
  4619  0F15                     	;# 
  4620  0F16                     	;# 
  4621  0F17                     	;# 
  4622  0F18                     	;# 
  4623  0F19                     	;# 
  4624  0F1A                     	;# 
  4625  0F1B                     	;# 
  4626  0F1C                     	;# 
  4627  0F1D                     	;# 
  4628  0F1E                     	;# 
  4629  0F1F                     	;# 
  4630  0F20                     	;# 
  4631  0F21                     	;# 
  4632  0F22                     	;# 
  4633  0F23                     	;# 
  4634  0F24                     	;# 
  4635  0F25                     	;# 
  4636  0F26                     	;# 
  4637  0F27                     	;# 
  4638  0F28                     	;# 
  4639  0F29                     	;# 
  4640  0F2A                     	;# 
  4641  0F2B                     	;# 
  4642  0F2C                     	;# 
  4643  0F2D                     	;# 
  4644  0F2E                     	;# 
  4645  0F2F                     	;# 
  4646  0F30                     	;# 
  4647  0F31                     	;# 
  4648  0F32                     	;# 
  4649  0F33                     	;# 
  4650  0F34                     	;# 
  4651  0F35                     	;# 
  4652  0F36                     	;# 
  4653  0F37                     	;# 
  4654  0FE4                     	;# 
  4655  0FE5                     	;# 
  4656  0FE6                     	;# 
  4657  0FE7                     	;# 
  4658  0FE8                     	;# 
  4659  0FE9                     	;# 
  4660  0FEA                     	;# 
  4661  0FEB                     	;# 
  4662  0FED                     	;# 
  4663  0FEE                     	;# 
  4664  0FEF                     	;# 
  4665  0000                     	;# 
  4666  0001                     	;# 
  4667  0002                     	;# 
  4668  0003                     	;# 
  4669  0004                     	;# 
  4670  0005                     	;# 
  4671  0006                     	;# 
  4672  0007                     	;# 
  4673  0008                     	;# 
  4674  0009                     	;# 
  4675  000A                     	;# 
  4676  000B                     	;# 
  4677  000C                     	;# 
  4678  000D                     	;# 
  4679  000E                     	;# 
  4680  0010                     	;# 
  4681  0011                     	;# 
  4682  0012                     	;# 
  4683  0013                     	;# 
  4684  0014                     	;# 
  4685  0015                     	;# 
  4686  0015                     	;# 
  4687  0016                     	;# 
  4688  0016                     	;# 
  4689  0017                     	;# 
  4690  0018                     	;# 
  4691  0019                     	;# 
  4692  0019                     	;# 
  4693  001A                     	;# 
  4694  001B                     	;# 
  4695  001C                     	;# 
  4696  001D                     	;# 
  4697  001E                     	;# 
  4698  001F                     	;# 
  4699  008C                     	;# 
  4700  008D                     	;# 
  4701  008E                     	;# 
  4702  0090                     	;# 
  4703  0091                     	;# 
  4704  0092                     	;# 
  4705  0093                     	;# 
  4706  0094                     	;# 
  4707  0097                     	;# 
  4708  009B                     	;# 
  4709  009B                     	;# 
  4710  009C                     	;# 
  4711  009D                     	;# 
  4712  009E                     	;# 
  4713  009F                     	;# 
  4714  010C                     	;# 
  4715  010D                     	;# 
  4716  010E                     	;# 
  4717  0111                     	;# 
  4718  0112                     	;# 
  4719  0113                     	;# 
  4720  0114                     	;# 
  4721  0115                     	;# 
  4722  0116                     	;# 
  4723  0117                     	;# 
  4724  0118                     	;# 
  4725  0119                     	;# 
  4726  018C                     	;# 
  4727  018D                     	;# 
  4728  018E                     	;# 
  4729  0197                     	;# 
  4730  0199                     	;# 
  4731  0199                     	;# 
  4732  0199                     	;# 
  4733  019A                     	;# 
  4734  019A                     	;# 
  4735  019A                     	;# 
  4736  019B                     	;# 
  4737  019B                     	;# 
  4738  019B                     	;# 
  4739  019B                     	;# 
  4740  019B                     	;# 
  4741  019C                     	;# 
  4742  019C                     	;# 
  4743  019C                     	;# 
  4744  019D                     	;# 
  4745  019D                     	;# 
  4746  019D                     	;# 
  4747  019E                     	;# 
  4748  019E                     	;# 
  4749  019E                     	;# 
  4750  019F                     	;# 
  4751  019F                     	;# 
  4752  019F                     	;# 
  4753  019F                     	;# 
  4754  019F                     	;# 
  4755  020C                     	;# 
  4756  020D                     	;# 
  4757  020E                     	;# 
  4758  0211                     	;# 
  4759  0211                     	;# 
  4760  0212                     	;# 
  4761  0212                     	;# 
  4762  0213                     	;# 
  4763  0213                     	;# 
  4764  0214                     	;# 
  4765  0214                     	;# 
  4766  0215                     	;# 
  4767  0215                     	;# 
  4768  0215                     	;# 
  4769  0215                     	;# 
  4770  0216                     	;# 
  4771  0216                     	;# 
  4772  0217                     	;# 
  4773  0217                     	;# 
  4774  0219                     	;# 
  4775  021A                     	;# 
  4776  021B                     	;# 
  4777  021C                     	;# 
  4778  021D                     	;# 
  4779  021D                     	;# 
  4780  021E                     	;# 
  4781  021F                     	;# 
  4782  028C                     	;# 
  4783  028D                     	;# 
  4784  028E                     	;# 
  4785  0291                     	;# 
  4786  0291                     	;# 
  4787  0292                     	;# 
  4788  0293                     	;# 
  4789  0294                     	;# 
  4790  0295                     	;# 
  4791  0295                     	;# 
  4792  0296                     	;# 
  4793  0297                     	;# 
  4794  0298                     	;# 
  4795  029F                     	;# 
  4796  030C                     	;# 
  4797  030D                     	;# 
  4798  030E                     	;# 
  4799  0311                     	;# 
  4800  0311                     	;# 
  4801  0312                     	;# 
  4802  0313                     	;# 
  4803  0314                     	;# 
  4804  0315                     	;# 
  4805  0315                     	;# 
  4806  0316                     	;# 
  4807  0317                     	;# 
  4808  0318                     	;# 
  4809  038C                     	;# 
  4810  038D                     	;# 
  4811  038E                     	;# 
  4812  0391                     	;# 
  4813  0392                     	;# 
  4814  0393                     	;# 
  4815  0394                     	;# 
  4816  0395                     	;# 
  4817  0396                     	;# 
  4818  0397                     	;# 
  4819  0398                     	;# 
  4820  0399                     	;# 
  4821  039A                     	;# 
  4822  039C                     	;# 
  4823  039D                     	;# 
  4824  039E                     	;# 
  4825  039F                     	;# 
  4826  0411                     	;# 
  4827  0411                     	;# 
  4828  0412                     	;# 
  4829  0413                     	;# 
  4830  0414                     	;# 
  4831  0415                     	;# 
  4832  0416                     	;# 
  4833  0417                     	;# 
  4834  0418                     	;# 
  4835  0418                     	;# 
  4836  0419                     	;# 
  4837  041A                     	;# 
  4838  041B                     	;# 
  4839  041C                     	;# 
  4840  041D                     	;# 
  4841  041E                     	;# 
  4842  041F                     	;# 
  4843  0498                     	;# 
  4844  0498                     	;# 
  4845  0499                     	;# 
  4846  049A                     	;# 
  4847  049B                     	;# 
  4848  049B                     	;# 
  4849  049C                     	;# 
  4850  049D                     	;# 
  4851  049E                     	;# 
  4852  049F                     	;# 
  4853  0617                     	;# 
  4854  0618                     	;# 
  4855  0619                     	;# 
  4856  0619                     	;# 
  4857  061A                     	;# 
  4858  061B                     	;# 
  4859  061C                     	;# 
  4860  061C                     	;# 
  4861  061F                     	;# 
  4862  0691                     	;# 
  4863  0692                     	;# 
  4864  0693                     	;# 
  4865  0694                     	;# 
  4866  0695                     	;# 
  4867  0696                     	;# 
  4868  0697                     	;# 
  4869  0698                     	;# 
  4870  0699                     	;# 
  4871  0711                     	;# 
  4872  0712                     	;# 
  4873  0713                     	;# 
  4874  0714                     	;# 
  4875  0715                     	;# 
  4876  0716                     	;# 
  4877  0717                     	;# 
  4878  0718                     	;# 
  4879  0719                     	;# 
  4880  0891                     	;# 
  4881  0891                     	;# 
  4882  0891                     	;# 
  4883  0891                     	;# 
  4884  0891                     	;# 
  4885  0891                     	;# 
  4886  0892                     	;# 
  4887  0892                     	;# 
  4888  0892                     	;# 
  4889  0893                     	;# 
  4890  0893                     	;# 
  4891  0893                     	;# 
  4892  0893                     	;# 
  4893  0893                     	;# 
  4894  0893                     	;# 
  4895  0894                     	;# 
  4896  0894                     	;# 
  4897  0894                     	;# 
  4898  0895                     	;# 
  4899  0895                     	;# 
  4900  0895                     	;# 
  4901  0896                     	;# 
  4902  0896                     	;# 
  4903  0896                     	;# 
  4904  089B                     	;# 
  4905  0911                     	;# 
  4906  0912                     	;# 
  4907  0913                     	;# 
  4908  0914                     	;# 
  4909  0915                     	;# 
  4910  0916                     	;# 
  4911  0918                     	;# 
  4912  0919                     	;# 
  4913  091A                     	;# 
  4914  091B                     	;# 
  4915  091C                     	;# 
  4916  091D                     	;# 
  4917  091E                     	;# 
  4918  091F                     	;# 
  4919  0E0F                     	;# 
  4920  0E10                     	;# 
  4921  0E11                     	;# 
  4922  0E12                     	;# 
  4923  0E13                     	;# 
  4924  0E14                     	;# 
  4925  0E15                     	;# 
  4926  0E16                     	;# 
  4927  0E17                     	;# 
  4928  0E18                     	;# 
  4929  0E19                     	;# 
  4930  0E1A                     	;# 
  4931  0E1B                     	;# 
  4932  0E1C                     	;# 
  4933  0E1D                     	;# 
  4934  0E1E                     	;# 
  4935  0E1F                     	;# 
  4936  0E20                     	;# 
  4937  0E21                     	;# 
  4938  0E22                     	;# 
  4939  0E24                     	;# 
  4940  0E25                     	;# 
  4941  0E28                     	;# 
  4942  0E29                     	;# 
  4943  0E2A                     	;# 
  4944  0E2B                     	;# 
  4945  0E2C                     	;# 
  4946  0E2D                     	;# 
  4947  0E2E                     	;# 
  4948  0E2F                     	;# 
  4949  0E90                     	;# 
  4950  0E91                     	;# 
  4951  0E92                     	;# 
  4952  0E94                     	;# 
  4953  0E95                     	;# 
  4954  0E9C                     	;# 
  4955  0E9D                     	;# 
  4956  0E9E                     	;# 
  4957  0E9F                     	;# 
  4958  0EA0                     	;# 
  4959  0EA1                     	;# 
  4960  0EA2                     	;# 
  4961  0EA3                     	;# 
  4962  0EA4                     	;# 
  4963  0EA5                     	;# 
  4964  0EA6                     	;# 
  4965  0EA7                     	;# 
  4966  0F0F                     	;# 
  4967  0F10                     	;# 
  4968  0F11                     	;# 
  4969  0F12                     	;# 
  4970  0F13                     	;# 
  4971  0F14                     	;# 
  4972  0F15                     	;# 
  4973  0F16                     	;# 
  4974  0F17                     	;# 
  4975  0F18                     	;# 
  4976  0F19                     	;# 
  4977  0F1A                     	;# 
  4978  0F1B                     	;# 
  4979  0F1C                     	;# 
  4980  0F1D                     	;# 
  4981  0F1E                     	;# 
  4982  0F1F                     	;# 
  4983  0F20                     	;# 
  4984  0F21                     	;# 
  4985  0F22                     	;# 
  4986  0F23                     	;# 
  4987  0F24                     	;# 
  4988  0F25                     	;# 
  4989  0F26                     	;# 
  4990  0F27                     	;# 
  4991  0F28                     	;# 
  4992  0F29                     	;# 
  4993  0F2A                     	;# 
  4994  0F2B                     	;# 
  4995  0F2C                     	;# 
  4996  0F2D                     	;# 
  4997  0F2E                     	;# 
  4998  0F2F                     	;# 
  4999  0F30                     	;# 
  5000  0F31                     	;# 
  5001  0F32                     	;# 
  5002  0F33                     	;# 
  5003  0F34                     	;# 
  5004  0F35                     	;# 
  5005  0F36                     	;# 
  5006  0F37                     	;# 
  5007  0FE4                     	;# 
  5008  0FE5                     	;# 
  5009  0FE6                     	;# 
  5010  0FE7                     	;# 
  5011  0FE8                     	;# 
  5012  0FE9                     	;# 
  5013  0FEA                     	;# 
  5014  0FEB                     	;# 
  5015  0FED                     	;# 
  5016  0FEE                     	;# 
  5017  0FEF                     	;# 
  5018  0000                     	;# 
  5019  0001                     	;# 
  5020  0002                     	;# 
  5021  0003                     	;# 
  5022  0004                     	;# 
  5023  0005                     	;# 
  5024  0006                     	;# 
  5025  0007                     	;# 
  5026  0008                     	;# 
  5027  0009                     	;# 
  5028  000A                     	;# 
  5029  000B                     	;# 
  5030  000C                     	;# 
  5031  000D                     	;# 
  5032  000E                     	;# 
  5033  0010                     	;# 
  5034  0011                     	;# 
  5035  0012                     	;# 
  5036  0013                     	;# 
  5037  0014                     	;# 
  5038  0015                     	;# 
  5039  0015                     	;# 
  5040  0016                     	;# 
  5041  0016                     	;# 
  5042  0017                     	;# 
  5043  0018                     	;# 
  5044  0019                     	;# 
  5045  0019                     	;# 
  5046  001A                     	;# 
  5047  001B                     	;# 
  5048  001C                     	;# 
  5049  001D                     	;# 
  5050  001E                     	;# 
  5051  001F                     	;# 
  5052  008C                     	;# 
  5053  008D                     	;# 
  5054  008E                     	;# 
  5055  0090                     	;# 
  5056  0091                     	;# 
  5057  0092                     	;# 
  5058  0093                     	;# 
  5059  0094                     	;# 
  5060  0097                     	;# 
  5061  009B                     	;# 
  5062  009B                     	;# 
  5063  009C                     	;# 
  5064  009D                     	;# 
  5065  009E                     	;# 
  5066  009F                     	;# 
  5067  010C                     	;# 
  5068  010D                     	;# 
  5069  010E                     	;# 
  5070  0111                     	;# 
  5071  0112                     	;# 
  5072  0113                     	;# 
  5073  0114                     	;# 
  5074  0115                     	;# 
  5075  0116                     	;# 
  5076  0117                     	;# 
  5077  0118                     	;# 
  5078  0119                     	;# 
  5079  018C                     	;# 
  5080  018D                     	;# 
  5081  018E                     	;# 
  5082  0197                     	;# 
  5083  0199                     	;# 
  5084  0199                     	;# 
  5085  0199                     	;# 
  5086  019A                     	;# 
  5087  019A                     	;# 
  5088  019A                     	;# 
  5089  019B                     	;# 
  5090  019B                     	;# 
  5091  019B                     	;# 
  5092  019B                     	;# 
  5093  019B                     	;# 
  5094  019C                     	;# 
  5095  019C                     	;# 
  5096  019C                     	;# 
  5097  019D                     	;# 
  5098  019D                     	;# 
  5099  019D                     	;# 
  5100  019E                     	;# 
  5101  019E                     	;# 
  5102  019E                     	;# 
  5103  019F                     	;# 
  5104  019F                     	;# 
  5105  019F                     	;# 
  5106  019F                     	;# 
  5107  019F                     	;# 
  5108  020C                     	;# 
  5109  020D                     	;# 
  5110  020E                     	;# 
  5111  0211                     	;# 
  5112  0211                     	;# 
  5113  0212                     	;# 
  5114  0212                     	;# 
  5115  0213                     	;# 
  5116  0213                     	;# 
  5117  0214                     	;# 
  5118  0214                     	;# 
  5119  0215                     	;# 
  5120  0215                     	;# 
  5121  0215                     	;# 
  5122  0215                     	;# 
  5123  0216                     	;# 
  5124  0216                     	;# 
  5125  0217                     	;# 
  5126  0217                     	;# 
  5127  0219                     	;# 
  5128  021A                     	;# 
  5129  021B                     	;# 
  5130  021C                     	;# 
  5131  021D                     	;# 
  5132  021D                     	;# 
  5133  021E                     	;# 
  5134  021F                     	;# 
  5135  028C                     	;# 
  5136  028D                     	;# 
  5137  028E                     	;# 
  5138  0291                     	;# 
  5139  0291                     	;# 
  5140  0292                     	;# 
  5141  0293                     	;# 
  5142  0294                     	;# 
  5143  0295                     	;# 
  5144  0295                     	;# 
  5145  0296                     	;# 
  5146  0297                     	;# 
  5147  0298                     	;# 
  5148  029F                     	;# 
  5149  030C                     	;# 
  5150  030D                     	;# 
  5151  030E                     	;# 
  5152  0311                     	;# 
  5153  0311                     	;# 
  5154  0312                     	;# 
  5155  0313                     	;# 
  5156  0314                     	;# 
  5157  0315                     	;# 
  5158  0315                     	;# 
  5159  0316                     	;# 
  5160  0317                     	;# 
  5161  0318                     	;# 
  5162  038C                     	;# 
  5163  038D                     	;# 
  5164  038E                     	;# 
  5165  0391                     	;# 
  5166  0392                     	;# 
  5167  0393                     	;# 
  5168  0394                     	;# 
  5169  0395                     	;# 
  5170  0396                     	;# 
  5171  0397                     	;# 
  5172  0398                     	;# 
  5173  0399                     	;# 
  5174  039A                     	;# 
  5175  039C                     	;# 
  5176  039D                     	;# 
  5177  039E                     	;# 
  5178  039F                     	;# 
  5179  0411                     	;# 
  5180  0411                     	;# 
  5181  0412                     	;# 
  5182  0413                     	;# 
  5183  0414                     	;# 
  5184  0415                     	;# 
  5185  0416                     	;# 
  5186  0417                     	;# 
  5187  0418                     	;# 
  5188  0418                     	;# 
  5189  0419                     	;# 
  5190  041A                     	;# 
  5191  041B                     	;# 
  5192  041C                     	;# 
  5193  041D                     	;# 
  5194  041E                     	;# 
  5195  041F                     	;# 
  5196  0498                     	;# 
  5197  0498                     	;# 
  5198  0499                     	;# 
  5199  049A                     	;# 
  5200  049B                     	;# 
  5201  049B                     	;# 
  5202  049C                     	;# 
  5203  049D                     	;# 
  5204  049E                     	;# 
  5205  049F                     	;# 
  5206  0617                     	;# 
  5207  0618                     	;# 
  5208  0619                     	;# 
  5209  0619                     	;# 
  5210  061A                     	;# 
  5211  061B                     	;# 
  5212  061C                     	;# 
  5213  061C                     	;# 
  5214  061F                     	;# 
  5215  0691                     	;# 
  5216  0692                     	;# 
  5217  0693                     	;# 
  5218  0694                     	;# 
  5219  0695                     	;# 
  5220  0696                     	;# 
  5221  0697                     	;# 
  5222  0698                     	;# 
  5223  0699                     	;# 
  5224  0711                     	;# 
  5225  0712                     	;# 
  5226  0713                     	;# 
  5227  0714                     	;# 
  5228  0715                     	;# 
  5229  0716                     	;# 
  5230  0717                     	;# 
  5231  0718                     	;# 
  5232  0719                     	;# 
  5233  0891                     	;# 
  5234  0891                     	;# 
  5235  0891                     	;# 
  5236  0891                     	;# 
  5237  0891                     	;# 
  5238  0891                     	;# 
  5239  0892                     	;# 
  5240  0892                     	;# 
  5241  0892                     	;# 
  5242  0893                     	;# 
  5243  0893                     	;# 
  5244  0893                     	;# 
  5245  0893                     	;# 
  5246  0893                     	;# 
  5247  0893                     	;# 
  5248  0894                     	;# 
  5249  0894                     	;# 
  5250  0894                     	;# 
  5251  0895                     	;# 
  5252  0895                     	;# 
  5253  0895                     	;# 
  5254  0896                     	;# 
  5255  0896                     	;# 
  5256  0896                     	;# 
  5257  089B                     	;# 
  5258  0911                     	;# 
  5259  0912                     	;# 
  5260  0913                     	;# 
  5261  0914                     	;# 
  5262  0915                     	;# 
  5263  0916                     	;# 
  5264  0918                     	;# 
  5265  0919                     	;# 
  5266  091A                     	;# 
  5267  091B                     	;# 
  5268  091C                     	;# 
  5269  091D                     	;# 
  5270  091E                     	;# 
  5271  091F                     	;# 
  5272  0E0F                     	;# 
  5273  0E10                     	;# 
  5274  0E11                     	;# 
  5275  0E12                     	;# 
  5276  0E13                     	;# 
  5277  0E14                     	;# 
  5278  0E15                     	;# 
  5279  0E16                     	;# 
  5280  0E17                     	;# 
  5281  0E18                     	;# 
  5282  0E19                     	;# 
  5283  0E1A                     	;# 
  5284  0E1B                     	;# 
  5285  0E1C                     	;# 
  5286  0E1D                     	;# 
  5287  0E1E                     	;# 
  5288  0E1F                     	;# 
  5289  0E20                     	;# 
  5290  0E21                     	;# 
  5291  0E22                     	;# 
  5292  0E24                     	;# 
  5293  0E25                     	;# 
  5294  0E28                     	;# 
  5295  0E29                     	;# 
  5296  0E2A                     	;# 
  5297  0E2B                     	;# 
  5298  0E2C                     	;# 
  5299  0E2D                     	;# 
  5300  0E2E                     	;# 
  5301  0E2F                     	;# 
  5302  0E90                     	;# 
  5303  0E91                     	;# 
  5304  0E92                     	;# 
  5305  0E94                     	;# 
  5306  0E95                     	;# 
  5307  0E9C                     	;# 
  5308  0E9D                     	;# 
  5309  0E9E                     	;# 
  5310  0E9F                     	;# 
  5311  0EA0                     	;# 
  5312  0EA1                     	;# 
  5313  0EA2                     	;# 
  5314  0EA3                     	;# 
  5315  0EA4                     	;# 
  5316  0EA5                     	;# 
  5317  0EA6                     	;# 
  5318  0EA7                     	;# 
  5319  0F0F                     	;# 
  5320  0F10                     	;# 
  5321  0F11                     	;# 
  5322  0F12                     	;# 
  5323  0F13                     	;# 
  5324  0F14                     	;# 
  5325  0F15                     	;# 
  5326  0F16                     	;# 
  5327  0F17                     	;# 
  5328  0F18                     	;# 
  5329  0F19                     	;# 
  5330  0F1A                     	;# 
  5331  0F1B                     	;# 
  5332  0F1C                     	;# 
  5333  0F1D                     	;# 
  5334  0F1E                     	;# 
  5335  0F1F                     	;# 
  5336  0F20                     	;# 
  5337  0F21                     	;# 
  5338  0F22                     	;# 
  5339  0F23                     	;# 
  5340  0F24                     	;# 
  5341  0F25                     	;# 
  5342  0F26                     	;# 
  5343  0F27                     	;# 
  5344  0F28                     	;# 
  5345  0F29                     	;# 
  5346  0F2A                     	;# 
  5347  0F2B                     	;# 
  5348  0F2C                     	;# 
  5349  0F2D                     	;# 
  5350  0F2E                     	;# 
  5351  0F2F                     	;# 
  5352  0F30                     	;# 
  5353  0F31                     	;# 
  5354  0F32                     	;# 
  5355  0F33                     	;# 
  5356  0F34                     	;# 
  5357  0F35                     	;# 
  5358  0F36                     	;# 
  5359  0F37                     	;# 
  5360  0FE4                     	;# 
  5361  0FE5                     	;# 
  5362  0FE6                     	;# 
  5363  0FE7                     	;# 
  5364  0FE8                     	;# 
  5365  0FE9                     	;# 
  5366  0FEA                     	;# 
  5367  0FEB                     	;# 
  5368  0FED                     	;# 
  5369  0FEE                     	;# 
  5370  0FEF                     	;# 
  5371  0000                     	;# 
  5372  0001                     	;# 
  5373  0002                     	;# 
  5374  0003                     	;# 
  5375  0004                     	;# 
  5376  0005                     	;# 
  5377  0006                     	;# 
  5378  0007                     	;# 
  5379  0008                     	;# 
  5380  0009                     	;# 
  5381  000A                     	;# 
  5382  000B                     	;# 
  5383  000C                     	;# 
  5384  000D                     	;# 
  5385  000E                     	;# 
  5386  0010                     	;# 
  5387  0011                     	;# 
  5388  0012                     	;# 
  5389  0013                     	;# 
  5390  0014                     	;# 
  5391  0015                     	;# 
  5392  0015                     	;# 
  5393  0016                     	;# 
  5394  0016                     	;# 
  5395  0017                     	;# 
  5396  0018                     	;# 
  5397  0019                     	;# 
  5398  0019                     	;# 
  5399  001A                     	;# 
  5400  001B                     	;# 
  5401  001C                     	;# 
  5402  001D                     	;# 
  5403  001E                     	;# 
  5404  001F                     	;# 
  5405  008C                     	;# 
  5406  008D                     	;# 
  5407  008E                     	;# 
  5408  0090                     	;# 
  5409  0091                     	;# 
  5410  0092                     	;# 
  5411  0093                     	;# 
  5412  0094                     	;# 
  5413  0097                     	;# 
  5414  009B                     	;# 
  5415  009B                     	;# 
  5416  009C                     	;# 
  5417  009D                     	;# 
  5418  009E                     	;# 
  5419  009F                     	;# 
  5420  010C                     	;# 
  5421  010D                     	;# 
  5422  010E                     	;# 
  5423  0111                     	;# 
  5424  0112                     	;# 
  5425  0113                     	;# 
  5426  0114                     	;# 
  5427  0115                     	;# 
  5428  0116                     	;# 
  5429  0117                     	;# 
  5430  0118                     	;# 
  5431  0119                     	;# 
  5432  018C                     	;# 
  5433  018D                     	;# 
  5434  018E                     	;# 
  5435  0197                     	;# 
  5436  0199                     	;# 
  5437  0199                     	;# 
  5438  0199                     	;# 
  5439  019A                     	;# 
  5440  019A                     	;# 
  5441  019A                     	;# 
  5442  019B                     	;# 
  5443  019B                     	;# 
  5444  019B                     	;# 
  5445  019B                     	;# 
  5446  019B                     	;# 
  5447  019C                     	;# 
  5448  019C                     	;# 
  5449  019C                     	;# 
  5450  019D                     	;# 
  5451  019D                     	;# 
  5452  019D                     	;# 
  5453  019E                     	;# 
  5454  019E                     	;# 
  5455  019E                     	;# 
  5456  019F                     	;# 
  5457  019F                     	;# 
  5458  019F                     	;# 
  5459  019F                     	;# 
  5460  019F                     	;# 
  5461  020C                     	;# 
  5462  020D                     	;# 
  5463  020E                     	;# 
  5464  0211                     	;# 
  5465  0211                     	;# 
  5466  0212                     	;# 
  5467  0212                     	;# 
  5468  0213                     	;# 
  5469  0213                     	;# 
  5470  0214                     	;# 
  5471  0214                     	;# 
  5472  0215                     	;# 
  5473  0215                     	;# 
  5474  0215                     	;# 
  5475  0215                     	;# 
  5476  0216                     	;# 
  5477  0216                     	;# 
  5478  0217                     	;# 
  5479  0217                     	;# 
  5480  0219                     	;# 
  5481  021A                     	;# 
  5482  021B                     	;# 
  5483  021C                     	;# 
  5484  021D                     	;# 
  5485  021D                     	;# 
  5486  021E                     	;# 
  5487  021F                     	;# 
  5488  028C                     	;# 
  5489  028D                     	;# 
  5490  028E                     	;# 
  5491  0291                     	;# 
  5492  0291                     	;# 
  5493  0292                     	;# 
  5494  0293                     	;# 
  5495  0294                     	;# 
  5496  0295                     	;# 
  5497  0295                     	;# 
  5498  0296                     	;# 
  5499  0297                     	;# 
  5500  0298                     	;# 
  5501  029F                     	;# 
  5502  030C                     	;# 
  5503  030D                     	;# 
  5504  030E                     	;# 
  5505  0311                     	;# 
  5506  0311                     	;# 
  5507  0312                     	;# 
  5508  0313                     	;# 
  5509  0314                     	;# 
  5510  0315                     	;# 
  5511  0315                     	;# 
  5512  0316                     	;# 
  5513  0317                     	;# 
  5514  0318                     	;# 
  5515  038C                     	;# 
  5516  038D                     	;# 
  5517  038E                     	;# 
  5518  0391                     	;# 
  5519  0392                     	;# 
  5520  0393                     	;# 
  5521  0394                     	;# 
  5522  0395                     	;# 
  5523  0396                     	;# 
  5524  0397                     	;# 
  5525  0398                     	;# 
  5526  0399                     	;# 
  5527  039A                     	;# 
  5528  039C                     	;# 
  5529  039D                     	;# 
  5530  039E                     	;# 
  5531  039F                     	;# 
  5532  0411                     	;# 
  5533  0411                     	;# 
  5534  0412                     	;# 
  5535  0413                     	;# 
  5536  0414                     	;# 
  5537  0415                     	;# 
  5538  0416                     	;# 
  5539  0417                     	;# 
  5540  0418                     	;# 
  5541  0418                     	;# 
  5542  0419                     	;# 
  5543  041A                     	;# 
  5544  041B                     	;# 
  5545  041C                     	;# 
  5546  041D                     	;# 
  5547  041E                     	;# 
  5548  041F                     	;# 
  5549  0498                     	;# 
  5550  0498                     	;# 
  5551  0499                     	;# 
  5552  049A                     	;# 
  5553  049B                     	;# 
  5554  049B                     	;# 
  5555  049C                     	;# 
  5556  049D                     	;# 
  5557  049E                     	;# 
  5558  049F                     	;# 
  5559  0617                     	;# 
  5560  0618                     	;# 
  5561  0619                     	;# 
  5562  0619                     	;# 
  5563  061A                     	;# 
  5564  061B                     	;# 
  5565  061C                     	;# 
  5566  061C                     	;# 
  5567  061F                     	;# 
  5568  0691                     	;# 
  5569  0692                     	;# 
  5570  0693                     	;# 
  5571  0694                     	;# 
  5572  0695                     	;# 
  5573  0696                     	;# 
  5574  0697                     	;# 
  5575  0698                     	;# 
  5576  0699                     	;# 
  5577  0711                     	;# 
  5578  0712                     	;# 
  5579  0713                     	;# 
  5580  0714                     	;# 
  5581  0715                     	;# 
  5582  0716                     	;# 
  5583  0717                     	;# 
  5584  0718                     	;# 
  5585  0719                     	;# 
  5586  0891                     	;# 
  5587  0891                     	;# 
  5588  0891                     	;# 
  5589  0891                     	;# 
  5590  0891                     	;# 
  5591  0891                     	;# 
  5592  0892                     	;# 
  5593  0892                     	;# 
  5594  0892                     	;# 
  5595  0893                     	;# 
  5596  0893                     	;# 
  5597  0893                     	;# 
  5598  0893                     	;# 
  5599  0893                     	;# 
  5600  0893                     	;# 
  5601  0894                     	;# 
  5602  0894                     	;# 
  5603  0894                     	;# 
  5604  0895                     	;# 
  5605  0895                     	;# 
  5606  0895                     	;# 
  5607  0896                     	;# 
  5608  0896                     	;# 
  5609  0896                     	;# 
  5610  089B                     	;# 
  5611  0911                     	;# 
  5612  0912                     	;# 
  5613  0913                     	;# 
  5614  0914                     	;# 
  5615  0915                     	;# 
  5616  0916                     	;# 
  5617  0918                     	;# 
  5618  0919                     	;# 
  5619  091A                     	;# 
  5620  091B                     	;# 
  5621  091C                     	;# 
  5622  091D                     	;# 
  5623  091E                     	;# 
  5624  091F                     	;# 
  5625  0E0F                     	;# 
  5626  0E10                     	;# 
  5627  0E11                     	;# 
  5628  0E12                     	;# 
  5629  0E13                     	;# 
  5630  0E14                     	;# 
  5631  0E15                     	;# 
  5632  0E16                     	;# 
  5633  0E17                     	;# 
  5634  0E18                     	;# 
  5635  0E19                     	;# 
  5636  0E1A                     	;# 
  5637  0E1B                     	;# 
  5638  0E1C                     	;# 
  5639  0E1D                     	;# 
  5640  0E1E                     	;# 
  5641  0E1F                     	;# 
  5642  0E20                     	;# 
  5643  0E21                     	;# 
  5644  0E22                     	;# 
  5645  0E24                     	;# 
  5646  0E25                     	;# 
  5647  0E28                     	;# 
  5648  0E29                     	;# 
  5649  0E2A                     	;# 
  5650  0E2B                     	;# 
  5651  0E2C                     	;# 
  5652  0E2D                     	;# 
  5653  0E2E                     	;# 
  5654  0E2F                     	;# 
  5655  0E90                     	;# 
  5656  0E91                     	;# 
  5657  0E92                     	;# 
  5658  0E94                     	;# 
  5659  0E95                     	;# 
  5660  0E9C                     	;# 
  5661  0E9D                     	;# 
  5662  0E9E                     	;# 
  5663  0E9F                     	;# 
  5664  0EA0                     	;# 
  5665  0EA1                     	;# 
  5666  0EA2                     	;# 
  5667  0EA3                     	;# 
  5668  0EA4                     	;# 
  5669  0EA5                     	;# 
  5670  0EA6                     	;# 
  5671  0EA7                     	;# 
  5672  0F0F                     	;# 
  5673  0F10                     	;# 
  5674  0F11                     	;# 
  5675  0F12                     	;# 
  5676  0F13                     	;# 
  5677  0F14                     	;# 
  5678  0F15                     	;# 
  5679  0F16                     	;# 
  5680  0F17                     	;# 
  5681  0F18                     	;# 
  5682  0F19                     	;# 
  5683  0F1A                     	;# 
  5684  0F1B                     	;# 
  5685  0F1C                     	;# 
  5686  0F1D                     	;# 
  5687  0F1E                     	;# 
  5688  0F1F                     	;# 
  5689  0F20                     	;# 
  5690  0F21                     	;# 
  5691  0F22                     	;# 
  5692  0F23                     	;# 
  5693  0F24                     	;# 
  5694  0F25                     	;# 
  5695  0F26                     	;# 
  5696  0F27                     	;# 
  5697  0F28                     	;# 
  5698  0F29                     	;# 
  5699  0F2A                     	;# 
  5700  0F2B                     	;# 
  5701  0F2C                     	;# 
  5702  0F2D                     	;# 
  5703  0F2E                     	;# 
  5704  0F2F                     	;# 
  5705  0F30                     	;# 
  5706  0F31                     	;# 
  5707  0F32                     	;# 
  5708  0F33                     	;# 
  5709  0F34                     	;# 
  5710  0F35                     	;# 
  5711  0F36                     	;# 
  5712  0F37                     	;# 
  5713  0FE4                     	;# 
  5714  0FE5                     	;# 
  5715  0FE6                     	;# 
  5716  0FE7                     	;# 
  5717  0FE8                     	;# 
  5718  0FE9                     	;# 
  5719  0FEA                     	;# 
  5720  0FEB                     	;# 
  5721  0FED                     	;# 
  5722  0FEE                     	;# 
  5723  0FEF                     	;# 
  5724  0000                     	;# 
  5725  0001                     	;# 
  5726  0002                     	;# 
  5727  0003                     	;# 
  5728  0004                     	;# 
  5729  0005                     	;# 
  5730  0006                     	;# 
  5731  0007                     	;# 
  5732  0008                     	;# 
  5733  0009                     	;# 
  5734  000A                     	;# 
  5735  000B                     	;# 
  5736  000C                     	;# 
  5737  000D                     	;# 
  5738  000E                     	;# 
  5739  0010                     	;# 
  5740  0011                     	;# 
  5741  0012                     	;# 
  5742  0013                     	;# 
  5743  0014                     	;# 
  5744  0015                     	;# 
  5745  0015                     	;# 
  5746  0016                     	;# 
  5747  0016                     	;# 
  5748  0017                     	;# 
  5749  0018                     	;# 
  5750  0019                     	;# 
  5751  0019                     	;# 
  5752  001A                     	;# 
  5753  001B                     	;# 
  5754  001C                     	;# 
  5755  001D                     	;# 
  5756  001E                     	;# 
  5757  001F                     	;# 
  5758  008C                     	;# 
  5759  008D                     	;# 
  5760  008E                     	;# 
  5761  0090                     	;# 
  5762  0091                     	;# 
  5763  0092                     	;# 
  5764  0093                     	;# 
  5765  0094                     	;# 
  5766  0097                     	;# 
  5767  009B                     	;# 
  5768  009B                     	;# 
  5769  009C                     	;# 
  5770  009D                     	;# 
  5771  009E                     	;# 
  5772  009F                     	;# 
  5773  010C                     	;# 
  5774  010D                     	;# 
  5775  010E                     	;# 
  5776  0111                     	;# 
  5777  0112                     	;# 
  5778  0113                     	;# 
  5779  0114                     	;# 
  5780  0115                     	;# 
  5781  0116                     	;# 
  5782  0117                     	;# 
  5783  0118                     	;# 
  5784  0119                     	;# 
  5785  018C                     	;# 
  5786  018D                     	;# 
  5787  018E                     	;# 
  5788  0197                     	;# 
  5789  0199                     	;# 
  5790  0199                     	;# 
  5791  0199                     	;# 
  5792  019A                     	;# 
  5793  019A                     	;# 
  5794  019A                     	;# 
  5795  019B                     	;# 
  5796  019B                     	;# 
  5797  019B                     	;# 
  5798  019B                     	;# 
  5799  019B                     	;# 
  5800  019C                     	;# 
  5801  019C                     	;# 
  5802  019C                     	;# 
  5803  019D                     	;# 
  5804  019D                     	;# 
  5805  019D                     	;# 
  5806  019E                     	;# 
  5807  019E                     	;# 
  5808  019E                     	;# 
  5809  019F                     	;# 
  5810  019F                     	;# 
  5811  019F                     	;# 
  5812  019F                     	;# 
  5813  019F                     	;# 
  5814  020C                     	;# 
  5815  020D                     	;# 
  5816  020E                     	;# 
  5817  0211                     	;# 
  5818  0211                     	;# 
  5819  0212                     	;# 
  5820  0212                     	;# 
  5821  0213                     	;# 
  5822  0213                     	;# 
  5823  0214                     	;# 
  5824  0214                     	;# 
  5825  0215                     	;# 
  5826  0215                     	;# 
  5827  0215                     	;# 
  5828  0215                     	;# 
  5829  0216                     	;# 
  5830  0216                     	;# 
  5831  0217                     	;# 
  5832  0217                     	;# 
  5833  0219                     	;# 
  5834  021A                     	;# 
  5835  021B                     	;# 
  5836  021C                     	;# 
  5837  021D                     	;# 
  5838  021D                     	;# 
  5839  021E                     	;# 
  5840  021F                     	;# 
  5841  028C                     	;# 
  5842  028D                     	;# 
  5843  028E                     	;# 
  5844  0291                     	;# 
  5845  0291                     	;# 
  5846  0292                     	;# 
  5847  0293                     	;# 
  5848  0294                     	;# 
  5849  0295                     	;# 
  5850  0295                     	;# 
  5851  0296                     	;# 
  5852  0297                     	;# 
  5853  0298                     	;# 
  5854  029F                     	;# 
  5855  030C                     	;# 
  5856  030D                     	;# 
  5857  030E                     	;# 
  5858  0311                     	;# 
  5859  0311                     	;# 
  5860  0312                     	;# 
  5861  0313                     	;# 
  5862  0314                     	;# 
  5863  0315                     	;# 
  5864  0315                     	;# 
  5865  0316                     	;# 
  5866  0317                     	;# 
  5867  0318                     	;# 
  5868  038C                     	;# 
  5869  038D                     	;# 
  5870  038E                     	;# 
  5871  0391                     	;# 
  5872  0392                     	;# 
  5873  0393                     	;# 
  5874  0394                     	;# 
  5875  0395                     	;# 
  5876  0396                     	;# 
  5877  0397                     	;# 
  5878  0398                     	;# 
  5879  0399                     	;# 
  5880  039A                     	;# 
  5881  039C                     	;# 
  5882  039D                     	;# 
  5883  039E                     	;# 
  5884  039F                     	;# 
  5885  0411                     	;# 
  5886  0411                     	;# 
  5887  0412                     	;# 
  5888  0413                     	;# 
  5889  0414                     	;# 
  5890  0415                     	;# 
  5891  0416                     	;# 
  5892  0417                     	;# 
  5893  0418                     	;# 
  5894  0418                     	;# 
  5895  0419                     	;# 
  5896  041A                     	;# 
  5897  041B                     	;# 
  5898  041C                     	;# 
  5899  041D                     	;# 
  5900  041E                     	;# 
  5901  041F                     	;# 
  5902  0498                     	;# 
  5903  0498                     	;# 
  5904  0499                     	;# 
  5905  049A                     	;# 
  5906  049B                     	;# 
  5907  049B                     	;# 
  5908  049C                     	;# 
  5909  049D                     	;# 
  5910  049E                     	;# 
  5911  049F                     	;# 
  5912  0617                     	;# 
  5913  0618                     	;# 
  5914  0619                     	;# 
  5915  0619                     	;# 
  5916  061A                     	;# 
  5917  061B                     	;# 
  5918  061C                     	;# 
  5919  061C                     	;# 
  5920  061F                     	;# 
  5921  0691                     	;# 
  5922  0692                     	;# 
  5923  0693                     	;# 
  5924  0694                     	;# 
  5925  0695                     	;# 
  5926  0696                     	;# 
  5927  0697                     	;# 
  5928  0698                     	;# 
  5929  0699                     	;# 
  5930  0711                     	;# 
  5931  0712                     	;# 
  5932  0713                     	;# 
  5933  0714                     	;# 
  5934  0715                     	;# 
  5935  0716                     	;# 
  5936  0717                     	;# 
  5937  0718                     	;# 
  5938  0719                     	;# 
  5939  0891                     	;# 
  5940  0891                     	;# 
  5941  0891                     	;# 
  5942  0891                     	;# 
  5943  0891                     	;# 
  5944  0891                     	;# 
  5945  0892                     	;# 
  5946  0892                     	;# 
  5947  0892                     	;# 
  5948  0893                     	;# 
  5949  0893                     	;# 
  5950  0893                     	;# 
  5951  0893                     	;# 
  5952  0893                     	;# 
  5953  0893                     	;# 
  5954  0894                     	;# 
  5955  0894                     	;# 
  5956  0894                     	;# 
  5957  0895                     	;# 
  5958  0895                     	;# 
  5959  0895                     	;# 
  5960  0896                     	;# 
  5961  0896                     	;# 
  5962  0896                     	;# 
  5963  089B                     	;# 
  5964  0911                     	;# 
  5965  0912                     	;# 
  5966  0913                     	;# 
  5967  0914                     	;# 
  5968  0915                     	;# 
  5969  0916                     	;# 
  5970  0918                     	;# 
  5971  0919                     	;# 
  5972  091A                     	;# 
  5973  091B                     	;# 
  5974  091C                     	;# 
  5975  091D                     	;# 
  5976  091E                     	;# 
  5977  091F                     	;# 
  5978  0E0F                     	;# 
  5979  0E10                     	;# 
  5980  0E11                     	;# 
  5981  0E12                     	;# 
  5982  0E13                     	;# 
  5983  0E14                     	;# 
  5984  0E15                     	;# 
  5985  0E16                     	;# 
  5986  0E17                     	;# 
  5987  0E18                     	;# 
  5988  0E19                     	;# 
  5989  0E1A                     	;# 
  5990  0E1B                     	;# 
  5991  0E1C                     	;# 
  5992  0E1D                     	;# 
  5993  0E1E                     	;# 
  5994  0E1F                     	;# 
  5995  0E20                     	;# 
  5996  0E21                     	;# 
  5997  0E22                     	;# 
  5998  0E24                     	;# 
  5999  0E25                     	;# 
  6000  0E28                     	;# 
  6001  0E29                     	;# 
  6002  0E2A                     	;# 
  6003  0E2B                     	;# 
  6004  0E2C                     	;# 
  6005  0E2D                     	;# 
  6006  0E2E                     	;# 
  6007  0E2F                     	;# 
  6008  0E90                     	;# 
  6009  0E91                     	;# 
  6010  0E92                     	;# 
  6011  0E94                     	;# 
  6012  0E95                     	;# 
  6013  0E9C                     	;# 
  6014  0E9D                     	;# 
  6015  0E9E                     	;# 
  6016  0E9F                     	;# 
  6017  0EA0                     	;# 
  6018  0EA1                     	;# 
  6019  0EA2                     	;# 
  6020  0EA3                     	;# 
  6021  0EA4                     	;# 
  6022  0EA5                     	;# 
  6023  0EA6                     	;# 
  6024  0EA7                     	;# 
  6025  0F0F                     	;# 
  6026  0F10                     	;# 
  6027  0F11                     	;# 
  6028  0F12                     	;# 
  6029  0F13                     	;# 
  6030  0F14                     	;# 
  6031  0F15                     	;# 
  6032  0F16                     	;# 
  6033  0F17                     	;# 
  6034  0F18                     	;# 
  6035  0F19                     	;# 
  6036  0F1A                     	;# 
  6037  0F1B                     	;# 
  6038  0F1C                     	;# 
  6039  0F1D                     	;# 
  6040  0F1E                     	;# 
  6041  0F1F                     	;# 
  6042  0F20                     	;# 
  6043  0F21                     	;# 
  6044  0F22                     	;# 
  6045  0F23                     	;# 
  6046  0F24                     	;# 
  6047  0F25                     	;# 
  6048  0F26                     	;# 
  6049  0F27                     	;# 
  6050  0F28                     	;# 
  6051  0F29                     	;# 
  6052  0F2A                     	;# 
  6053  0F2B                     	;# 
  6054  0F2C                     	;# 
  6055  0F2D                     	;# 
  6056  0F2E                     	;# 
  6057  0F2F                     	;# 
  6058  0F30                     	;# 
  6059  0F31                     	;# 
  6060  0F32                     	;# 
  6061  0F33                     	;# 
  6062  0F34                     	;# 
  6063  0F35                     	;# 
  6064  0F36                     	;# 
  6065  0F37                     	;# 
  6066  0FE4                     	;# 
  6067  0FE5                     	;# 
  6068  0FE6                     	;# 
  6069  0FE7                     	;# 
  6070  0FE8                     	;# 
  6071  0FE9                     	;# 
  6072  0FEA                     	;# 
  6073  0FEB                     	;# 
  6074  0FED                     	;# 
  6075  0FEE                     	;# 
  6076  0FEF                     	;# 
  6077  0000                     	;# 
  6078  0001                     	;# 
  6079  0002                     	;# 
  6080  0003                     	;# 
  6081  0004                     	;# 
  6082  0005                     	;# 
  6083  0006                     	;# 
  6084  0007                     	;# 
  6085  0008                     	;# 
  6086  0009                     	;# 
  6087  000A                     	;# 
  6088  000B                     	;# 
  6089  000C                     	;# 
  6090  000D                     	;# 
  6091  000E                     	;# 
  6092  0010                     	;# 
  6093  0011                     	;# 
  6094  0012                     	;# 
  6095  0013                     	;# 
  6096  0014                     	;# 
  6097  0015                     	;# 
  6098  0015                     	;# 
  6099  0016                     	;# 
  6100  0016                     	;# 
  6101  0017                     	;# 
  6102  0018                     	;# 
  6103  0019                     	;# 
  6104  0019                     	;# 
  6105  001A                     	;# 
  6106  001B                     	;# 
  6107  001C                     	;# 
  6108  001D                     	;# 
  6109  001E                     	;# 
  6110  001F                     	;# 
  6111  008C                     	;# 
  6112  008D                     	;# 
  6113  008E                     	;# 
  6114  0090                     	;# 
  6115  0091                     	;# 
  6116  0092                     	;# 
  6117  0093                     	;# 
  6118  0094                     	;# 
  6119  0097                     	;# 
  6120  009B                     	;# 
  6121  009B                     	;# 
  6122  009C                     	;# 
  6123  009D                     	;# 
  6124  009E                     	;# 
  6125  009F                     	;# 
  6126  010C                     	;# 
  6127  010D                     	;# 
  6128  010E                     	;# 
  6129  0111                     	;# 
  6130  0112                     	;# 
  6131  0113                     	;# 
  6132  0114                     	;# 
  6133  0115                     	;# 
  6134  0116                     	;# 
  6135  0117                     	;# 
  6136  0118                     	;# 
  6137  0119                     	;# 
  6138  018C                     	;# 
  6139  018D                     	;# 
  6140  018E                     	;# 
  6141  0197                     	;# 
  6142  0199                     	;# 
  6143  0199                     	;# 
  6144  0199                     	;# 
  6145  019A                     	;# 
  6146  019A                     	;# 
  6147  019A                     	;# 
  6148  019B                     	;# 
  6149  019B                     	;# 
  6150  019B                     	;# 
  6151  019B                     	;# 
  6152  019B                     	;# 
  6153  019C                     	;# 
  6154  019C                     	;# 
  6155  019C                     	;# 
  6156  019D                     	;# 
  6157  019D                     	;# 
  6158  019D                     	;# 
  6159  019E                     	;# 
  6160  019E                     	;# 
  6161  019E                     	;# 
  6162  019F                     	;# 
  6163  019F                     	;# 
  6164  019F                     	;# 
  6165  019F                     	;# 
  6166  019F                     	;# 
  6167  020C                     	;# 
  6168  020D                     	;# 
  6169  020E                     	;# 
  6170  0211                     	;# 
  6171  0211                     	;# 
  6172  0212                     	;# 
  6173  0212                     	;# 
  6174  0213                     	;# 
  6175  0213                     	;# 
  6176  0214                     	;# 
  6177  0214                     	;# 
  6178  0215                     	;# 
  6179  0215                     	;# 
  6180  0215                     	;# 
  6181  0215                     	;# 
  6182  0216                     	;# 
  6183  0216                     	;# 
  6184  0217                     	;# 
  6185  0217                     	;# 
  6186  0219                     	;# 
  6187  021A                     	;# 
  6188  021B                     	;# 
  6189  021C                     	;# 
  6190  021D                     	;# 
  6191  021D                     	;# 
  6192  021E                     	;# 
  6193  021F                     	;# 
  6194  028C                     	;# 
  6195  028D                     	;# 
  6196  028E                     	;# 
  6197  0291                     	;# 
  6198  0291                     	;# 
  6199  0292                     	;# 
  6200  0293                     	;# 
  6201  0294                     	;# 
  6202  0295                     	;# 
  6203  0295                     	;# 
  6204  0296                     	;# 
  6205  0297                     	;# 
  6206  0298                     	;# 
  6207  029F                     	;# 
  6208  030C                     	;# 
  6209  030D                     	;# 
  6210  030E                     	;# 
  6211  0311                     	;# 
  6212  0311                     	;# 
  6213  0312                     	;# 
  6214  0313                     	;# 
  6215  0314                     	;# 
  6216  0315                     	;# 
  6217  0315                     	;# 
  6218  0316                     	;# 
  6219  0317                     	;# 
  6220  0318                     	;# 
  6221  038C                     	;# 
  6222  038D                     	;# 
  6223  038E                     	;# 
  6224  0391                     	;# 
  6225  0392                     	;# 
  6226  0393                     	;# 
  6227  0394                     	;# 
  6228  0395                     	;# 
  6229  0396                     	;# 
  6230  0397                     	;# 
  6231  0398                     	;# 
  6232  0399                     	;# 
  6233  039A                     	;# 
  6234  039C                     	;# 
  6235  039D                     	;# 
  6236  039E                     	;# 
  6237  039F                     	;# 
  6238  0411                     	;# 
  6239  0411                     	;# 
  6240  0412                     	;# 
  6241  0413                     	;# 
  6242  0414                     	;# 
  6243  0415                     	;# 
  6244  0416                     	;# 
  6245  0417                     	;# 
  6246  0418                     	;# 
  6247  0418                     	;# 
  6248  0419                     	;# 
  6249  041A                     	;# 
  6250  041B                     	;# 
  6251  041C                     	;# 
  6252  041D                     	;# 
  6253  041E                     	;# 
  6254  041F                     	;# 
  6255  0498                     	;# 
  6256  0498                     	;# 
  6257  0499                     	;# 
  6258  049A                     	;# 
  6259  049B                     	;# 
  6260  049B                     	;# 
  6261  049C                     	;# 
  6262  049D                     	;# 
  6263  049E                     	;# 
  6264  049F                     	;# 
  6265  0617                     	;# 
  6266  0618                     	;# 
  6267  0619                     	;# 
  6268  0619                     	;# 
  6269  061A                     	;# 
  6270  061B                     	;# 
  6271  061C                     	;# 
  6272  061C                     	;# 
  6273  061F                     	;# 
  6274  0691                     	;# 
  6275  0692                     	;# 
  6276  0693                     	;# 
  6277  0694                     	;# 
  6278  0695                     	;# 
  6279  0696                     	;# 
  6280  0697                     	;# 
  6281  0698                     	;# 
  6282  0699                     	;# 
  6283  0711                     	;# 
  6284  0712                     	;# 
  6285  0713                     	;# 
  6286  0714                     	;# 
  6287  0715                     	;# 
  6288  0716                     	;# 
  6289  0717                     	;# 
  6290  0718                     	;# 
  6291  0719                     	;# 
  6292  0891                     	;# 
  6293  0891                     	;# 
  6294  0891                     	;# 
  6295  0891                     	;# 
  6296  0891                     	;# 
  6297  0891                     	;# 
  6298  0892                     	;# 
  6299  0892                     	;# 
  6300  0892                     	;# 
  6301  0893                     	;# 
  6302  0893                     	;# 
  6303  0893                     	;# 
  6304  0893                     	;# 
  6305  0893                     	;# 
  6306  0893                     	;# 
  6307  0894                     	;# 
  6308  0894                     	;# 
  6309  0894                     	;# 
  6310  0895                     	;# 
  6311  0895                     	;# 
  6312  0895                     	;# 
  6313  0896                     	;# 
  6314  0896                     	;# 
  6315  0896                     	;# 
  6316  089B                     	;# 
  6317  0911                     	;# 
  6318  0912                     	;# 
  6319  0913                     	;# 
  6320  0914                     	;# 
  6321  0915                     	;# 
  6322  0916                     	;# 
  6323  0918                     	;# 
  6324  0919                     	;# 
  6325  091A                     	;# 
  6326  091B                     	;# 
  6327  091C                     	;# 
  6328  091D                     	;# 
  6329  091E                     	;# 
  6330  091F                     	;# 
  6331  0E0F                     	;# 
  6332  0E10                     	;# 
  6333  0E11                     	;# 
  6334  0E12                     	;# 
  6335  0E13                     	;# 
  6336  0E14                     	;# 
  6337  0E15                     	;# 
  6338  0E16                     	;# 
  6339  0E17                     	;# 
  6340  0E18                     	;# 
  6341  0E19                     	;# 
  6342  0E1A                     	;# 
  6343  0E1B                     	;# 
  6344  0E1C                     	;# 
  6345  0E1D                     	;# 
  6346  0E1E                     	;# 
  6347  0E1F                     	;# 
  6348  0E20                     	;# 
  6349  0E21                     	;# 
  6350  0E22                     	;# 
  6351  0E24                     	;# 
  6352  0E25                     	;# 
  6353  0E28                     	;# 
  6354  0E29                     	;# 
  6355  0E2A                     	;# 
  6356  0E2B                     	;# 
  6357  0E2C                     	;# 
  6358  0E2D                     	;# 
  6359  0E2E                     	;# 
  6360  0E2F                     	;# 
  6361  0E90                     	;# 
  6362  0E91                     	;# 
  6363  0E92                     	;# 
  6364  0E94                     	;# 
  6365  0E95                     	;# 
  6366  0E9C                     	;# 
  6367  0E9D                     	;# 
  6368  0E9E                     	;# 
  6369  0E9F                     	;# 
  6370  0EA0                     	;# 
  6371  0EA1                     	;# 
  6372  0EA2                     	;# 
  6373  0EA3                     	;# 
  6374  0EA4                     	;# 
  6375  0EA5                     	;# 
  6376  0EA6                     	;# 
  6377  0EA7                     	;# 
  6378  0F0F                     	;# 
  6379  0F10                     	;# 
  6380  0F11                     	;# 
  6381  0F12                     	;# 
  6382  0F13                     	;# 
  6383  0F14                     	;# 
  6384  0F15                     	;# 
  6385  0F16                     	;# 
  6386  0F17                     	;# 
  6387  0F18                     	;# 
  6388  0F19                     	;# 
  6389  0F1A                     	;# 
  6390  0F1B                     	;# 
  6391  0F1C                     	;# 
  6392  0F1D                     	;# 
  6393  0F1E                     	;# 
  6394  0F1F                     	;# 
  6395  0F20                     	;# 
  6396  0F21                     	;# 
  6397  0F22                     	;# 
  6398  0F23                     	;# 
  6399  0F24                     	;# 
  6400  0F25                     	;# 
  6401  0F26                     	;# 
  6402  0F27                     	;# 
  6403  0F28                     	;# 
  6404  0F29                     	;# 
  6405  0F2A                     	;# 
  6406  0F2B                     	;# 
  6407  0F2C                     	;# 
  6408  0F2D                     	;# 
  6409  0F2E                     	;# 
  6410  0F2F                     	;# 
  6411  0F30                     	;# 
  6412  0F31                     	;# 
  6413  0F32                     	;# 
  6414  0F33                     	;# 
  6415  0F34                     	;# 
  6416  0F35                     	;# 
  6417  0F36                     	;# 
  6418  0F37                     	;# 
  6419  0FE4                     	;# 
  6420  0FE5                     	;# 
  6421  0FE6                     	;# 
  6422  0FE7                     	;# 
  6423  0FE8                     	;# 
  6424  0FE9                     	;# 
  6425  0FEA                     	;# 
  6426  0FEB                     	;# 
  6427  0FED                     	;# 
  6428  0FEE                     	;# 
  6429  0FEF                     	;# 
  6430  0000                     	;# 
  6431  0001                     	;# 
  6432  0002                     	;# 
  6433  0003                     	;# 
  6434  0004                     	;# 
  6435  0005                     	;# 
  6436  0006                     	;# 
  6437  0007                     	;# 
  6438  0008                     	;# 
  6439  0009                     	;# 
  6440  000A                     	;# 
  6441  000B                     	;# 
  6442  000C                     	;# 
  6443  000D                     	;# 
  6444  000E                     	;# 
  6445  0010                     	;# 
  6446  0011                     	;# 
  6447  0012                     	;# 
  6448  0013                     	;# 
  6449  0014                     	;# 
  6450  0015                     	;# 
  6451  0015                     	;# 
  6452  0016                     	;# 
  6453  0016                     	;# 
  6454  0017                     	;# 
  6455  0018                     	;# 
  6456  0019                     	;# 
  6457  0019                     	;# 
  6458  001A                     	;# 
  6459  001B                     	;# 
  6460  001C                     	;# 
  6461  001D                     	;# 
  6462  001E                     	;# 
  6463  001F                     	;# 
  6464  008C                     	;# 
  6465  008D                     	;# 
  6466  008E                     	;# 
  6467  0090                     	;# 
  6468  0091                     	;# 
  6469  0092                     	;# 
  6470  0093                     	;# 
  6471  0094                     	;# 
  6472  0097                     	;# 
  6473  009B                     	;# 
  6474  009B                     	;# 
  6475  009C                     	;# 
  6476  009D                     	;# 
  6477  009E                     	;# 
  6478  009F                     	;# 
  6479  010C                     	;# 
  6480  010D                     	;# 
  6481  010E                     	;# 
  6482  0111                     	;# 
  6483  0112                     	;# 
  6484  0113                     	;# 
  6485  0114                     	;# 
  6486  0115                     	;# 
  6487  0116                     	;# 
  6488  0117                     	;# 
  6489  0118                     	;# 
  6490  0119                     	;# 
  6491  018C                     	;# 
  6492  018D                     	;# 
  6493  018E                     	;# 
  6494  0197                     	;# 
  6495  0199                     	;# 
  6496  0199                     	;# 
  6497  0199                     	;# 
  6498  019A                     	;# 
  6499  019A                     	;# 
  6500  019A                     	;# 
  6501  019B                     	;# 
  6502  019B                     	;# 
  6503  019B                     	;# 
  6504  019B                     	;# 
  6505  019B                     	;# 
  6506  019C                     	;# 
  6507  019C                     	;# 
  6508  019C                     	;# 
  6509  019D                     	;# 
  6510  019D                     	;# 
  6511  019D                     	;# 
  6512  019E                     	;# 
  6513  019E                     	;# 
  6514  019E                     	;# 
  6515  019F                     	;# 
  6516  019F                     	;# 
  6517  019F                     	;# 
  6518  019F                     	;# 
  6519  019F                     	;# 
  6520  020C                     	;# 
  6521  020D                     	;# 
  6522  020E                     	;# 
  6523  0211                     	;# 
  6524  0211                     	;# 
  6525  0212                     	;# 
  6526  0212                     	;# 
  6527  0213                     	;# 
  6528  0213                     	;# 
  6529  0214                     	;# 
  6530  0214                     	;# 
  6531  0215                     	;# 
  6532  0215                     	;# 
  6533  0215                     	;# 
  6534  0215                     	;# 
  6535  0216                     	;# 
  6536  0216                     	;# 
  6537  0217                     	;# 
  6538  0217                     	;# 
  6539  0219                     	;# 
  6540  021A                     	;# 
  6541  021B                     	;# 
  6542  021C                     	;# 
  6543  021D                     	;# 
  6544  021D                     	;# 
  6545  021E                     	;# 
  6546  021F                     	;# 
  6547  028C                     	;# 
  6548  028D                     	;# 
  6549  028E                     	;# 
  6550  0291                     	;# 
  6551  0291                     	;# 
  6552  0292                     	;# 
  6553  0293                     	;# 
  6554  0294                     	;# 
  6555  0295                     	;# 
  6556  0295                     	;# 
  6557  0296                     	;# 
  6558  0297                     	;# 
  6559  0298                     	;# 
  6560  029F                     	;# 
  6561  030C                     	;# 
  6562  030D                     	;# 
  6563  030E                     	;# 
  6564  0311                     	;# 
  6565  0311                     	;# 
  6566  0312                     	;# 
  6567  0313                     	;# 
  6568  0314                     	;# 
  6569  0315                     	;# 
  6570  0315                     	;# 
  6571  0316                     	;# 
  6572  0317                     	;# 
  6573  0318                     	;# 
  6574  038C                     	;# 
  6575  038D                     	;# 
  6576  038E                     	;# 
  6577  0391                     	;# 
  6578  0392                     	;# 
  6579  0393                     	;# 
  6580  0394                     	;# 
  6581  0395                     	;# 
  6582  0396                     	;# 
  6583  0397                     	;# 
  6584  0398                     	;# 
  6585  0399                     	;# 
  6586  039A                     	;# 
  6587  039C                     	;# 
  6588  039D                     	;# 
  6589  039E                     	;# 
  6590  039F                     	;# 
  6591  0411                     	;# 
  6592  0411                     	;# 
  6593  0412                     	;# 
  6594  0413                     	;# 
  6595  0414                     	;# 
  6596  0415                     	;# 
  6597  0416                     	;# 
  6598  0417                     	;# 
  6599  0418                     	;# 
  6600  0418                     	;# 
  6601  0419                     	;# 
  6602  041A                     	;# 
  6603  041B                     	;# 
  6604  041C                     	;# 
  6605  041D                     	;# 
  6606  041E                     	;# 
  6607  041F                     	;# 
  6608  0498                     	;# 
  6609  0498                     	;# 
  6610  0499                     	;# 
  6611  049A                     	;# 
  6612  049B                     	;# 
  6613  049B                     	;# 
  6614  049C                     	;# 
  6615  049D                     	;# 
  6616  049E                     	;# 
  6617  049F                     	;# 
  6618  0617                     	;# 
  6619  0618                     	;# 
  6620  0619                     	;# 
  6621  0619                     	;# 
  6622  061A                     	;# 
  6623  061B                     	;# 
  6624  061C                     	;# 
  6625  061C                     	;# 
  6626  061F                     	;# 
  6627  0691                     	;# 
  6628  0692                     	;# 
  6629  0693                     	;# 
  6630  0694                     	;# 
  6631  0695                     	;# 
  6632  0696                     	;# 
  6633  0697                     	;# 
  6634  0698                     	;# 
  6635  0699                     	;# 
  6636  0711                     	;# 
  6637  0712                     	;# 
  6638  0713                     	;# 
  6639  0714                     	;# 
  6640  0715                     	;# 
  6641  0716                     	;# 
  6642  0717                     	;# 
  6643  0718                     	;# 
  6644  0719                     	;# 
  6645  0891                     	;# 
  6646  0891                     	;# 
  6647  0891                     	;# 
  6648  0891                     	;# 
  6649  0891                     	;# 
  6650  0891                     	;# 
  6651  0892                     	;# 
  6652  0892                     	;# 
  6653  0892                     	;# 
  6654  0893                     	;# 
  6655  0893                     	;# 
  6656  0893                     	;# 
  6657  0893                     	;# 
  6658  0893                     	;# 
  6659  0893                     	;# 
  6660  0894                     	;# 
  6661  0894                     	;# 
  6662  0894                     	;# 
  6663  0895                     	;# 
  6664  0895                     	;# 
  6665  0895                     	;# 
  6666  0896                     	;# 
  6667  0896                     	;# 
  6668  0896                     	;# 
  6669  089B                     	;# 
  6670  0911                     	;# 
  6671  0912                     	;# 
  6672  0913                     	;# 
  6673  0914                     	;# 
  6674  0915                     	;# 
  6675  0916                     	;# 
  6676  0918                     	;# 
  6677  0919                     	;# 
  6678  091A                     	;# 
  6679  091B                     	;# 
  6680  091C                     	;# 
  6681  091D                     	;# 
  6682  091E                     	;# 
  6683  091F                     	;# 
  6684  0E0F                     	;# 
  6685  0E10                     	;# 
  6686  0E11                     	;# 
  6687  0E12                     	;# 
  6688  0E13                     	;# 
  6689  0E14                     	;# 
  6690  0E15                     	;# 
  6691  0E16                     	;# 
  6692  0E17                     	;# 
  6693  0E18                     	;# 
  6694  0E19                     	;# 
  6695  0E1A                     	;# 
  6696  0E1B                     	;# 
  6697  0E1C                     	;# 
  6698  0E1D                     	;# 
  6699  0E1E                     	;# 
  6700  0E1F                     	;# 
  6701  0E20                     	;# 
  6702  0E21                     	;# 
  6703  0E22                     	;# 
  6704  0E24                     	;# 
  6705  0E25                     	;# 
  6706  0E28                     	;# 
  6707  0E29                     	;# 
  6708  0E2A                     	;# 
  6709  0E2B                     	;# 
  6710  0E2C                     	;# 
  6711  0E2D                     	;# 
  6712  0E2E                     	;# 
  6713  0E2F                     	;# 
  6714  0E90                     	;# 
  6715  0E91                     	;# 
  6716  0E92                     	;# 
  6717  0E94                     	;# 
  6718  0E95                     	;# 
  6719  0E9C                     	;# 
  6720  0E9D                     	;# 
  6721  0E9E                     	;# 
  6722  0E9F                     	;# 
  6723  0EA0                     	;# 
  6724  0EA1                     	;# 
  6725  0EA2                     	;# 
  6726  0EA3                     	;# 
  6727  0EA4                     	;# 
  6728  0EA5                     	;# 
  6729  0EA6                     	;# 
  6730  0EA7                     	;# 
  6731  0F0F                     	;# 
  6732  0F10                     	;# 
  6733  0F11                     	;# 
  6734  0F12                     	;# 
  6735  0F13                     	;# 
  6736  0F14                     	;# 
  6737  0F15                     	;# 
  6738  0F16                     	;# 
  6739  0F17                     	;# 
  6740  0F18                     	;# 
  6741  0F19                     	;# 
  6742  0F1A                     	;# 
  6743  0F1B                     	;# 
  6744  0F1C                     	;# 
  6745  0F1D                     	;# 
  6746  0F1E                     	;# 
  6747  0F1F                     	;# 
  6748  0F20                     	;# 
  6749  0F21                     	;# 
  6750  0F22                     	;# 
  6751  0F23                     	;# 
  6752  0F24                     	;# 
  6753  0F25                     	;# 
  6754  0F26                     	;# 
  6755  0F27                     	;# 
  6756  0F28                     	;# 
  6757  0F29                     	;# 
  6758  0F2A                     	;# 
  6759  0F2B                     	;# 
  6760  0F2C                     	;# 
  6761  0F2D                     	;# 
  6762  0F2E                     	;# 
  6763  0F2F                     	;# 
  6764  0F30                     	;# 
  6765  0F31                     	;# 
  6766  0F32                     	;# 
  6767  0F33                     	;# 
  6768  0F34                     	;# 
  6769  0F35                     	;# 
  6770  0F36                     	;# 
  6771  0F37                     	;# 
  6772  0FE4                     	;# 
  6773  0FE5                     	;# 
  6774  0FE6                     	;# 
  6775  0FE7                     	;# 
  6776  0FE8                     	;# 
  6777  0FE9                     	;# 
  6778  0FEA                     	;# 
  6779  0FEB                     	;# 
  6780  0FED                     	;# 
  6781  0FEE                     	;# 
  6782  0FEF                     	;# 
  6783  0000                     	;# 
  6784  0001                     	;# 
  6785  0002                     	;# 
  6786  0003                     	;# 
  6787  0004                     	;# 
  6788  0005                     	;# 
  6789  0006                     	;# 
  6790  0007                     	;# 
  6791  0008                     	;# 
  6792  0009                     	;# 
  6793  000A                     	;# 
  6794  000B                     	;# 
  6795  000C                     	;# 
  6796  000D                     	;# 
  6797  000E                     	;# 
  6798  0010                     	;# 
  6799  0011                     	;# 
  6800  0012                     	;# 
  6801  0013                     	;# 
  6802  0014                     	;# 
  6803  0015                     	;# 
  6804  0015                     	;# 
  6805  0016                     	;# 
  6806  0016                     	;# 
  6807  0017                     	;# 
  6808  0018                     	;# 
  6809  0019                     	;# 
  6810  0019                     	;# 
  6811  001A                     	;# 
  6812  001B                     	;# 
  6813  001C                     	;# 
  6814  001D                     	;# 
  6815  001E                     	;# 
  6816  001F                     	;# 
  6817  008C                     	;# 
  6818  008D                     	;# 
  6819  008E                     	;# 
  6820  0090                     	;# 
  6821  0091                     	;# 
  6822  0092                     	;# 
  6823  0093                     	;# 
  6824  0094                     	;# 
  6825  0097                     	;# 
  6826  009B                     	;# 
  6827  009B                     	;# 
  6828  009C                     	;# 
  6829  009D                     	;# 
  6830  009E                     	;# 
  6831  009F                     	;# 
  6832  010C                     	;# 
  6833  010D                     	;# 
  6834  010E                     	;# 
  6835  0111                     	;# 
  6836  0112                     	;# 
  6837  0113                     	;# 
  6838  0114                     	;# 
  6839  0115                     	;# 
  6840  0116                     	;# 
  6841  0117                     	;# 
  6842  0118                     	;# 
  6843  0119                     	;# 
  6844  018C                     	;# 
  6845  018D                     	;# 
  6846  018E                     	;# 
  6847  0197                     	;# 
  6848  0199                     	;# 
  6849  0199                     	;# 
  6850  0199                     	;# 
  6851  019A                     	;# 
  6852  019A                     	;# 
  6853  019A                     	;# 
  6854  019B                     	;# 
  6855  019B                     	;# 
  6856  019B                     	;# 
  6857  019B                     	;# 
  6858  019B                     	;# 
  6859  019C                     	;# 
  6860  019C                     	;# 
  6861  019C                     	;# 
  6862  019D                     	;# 
  6863  019D                     	;# 
  6864  019D                     	;# 
  6865  019E                     	;# 
  6866  019E                     	;# 
  6867  019E                     	;# 
  6868  019F                     	;# 
  6869  019F                     	;# 
  6870  019F                     	;# 
  6871  019F                     	;# 
  6872  019F                     	;# 
  6873  020C                     	;# 
  6874  020D                     	;# 
  6875  020E                     	;# 
  6876  0211                     	;# 
  6877  0211                     	;# 
  6878  0212                     	;# 
  6879  0212                     	;# 
  6880  0213                     	;# 
  6881  0213                     	;# 
  6882  0214                     	;# 
  6883  0214                     	;# 
  6884  0215                     	;# 
  6885  0215                     	;# 
  6886  0215                     	;# 
  6887  0215                     	;# 
  6888  0216                     	;# 
  6889  0216                     	;# 
  6890  0217                     	;# 
  6891  0217                     	;# 
  6892  0219                     	;# 
  6893  021A                     	;# 
  6894  021B                     	;# 
  6895  021C                     	;# 
  6896  021D                     	;# 
  6897  021D                     	;# 
  6898  021E                     	;# 
  6899  021F                     	;# 
  6900  028C                     	;# 
  6901  028D                     	;# 
  6902  028E                     	;# 
  6903  0291                     	;# 
  6904  0291                     	;# 
  6905  0292                     	;# 
  6906  0293                     	;# 
  6907  0294                     	;# 
  6908  0295                     	;# 
  6909  0295                     	;# 
  6910  0296                     	;# 
  6911  0297                     	;# 
  6912  0298                     	;# 
  6913  029F                     	;# 
  6914  030C                     	;# 
  6915  030D                     	;# 
  6916  030E                     	;# 
  6917  0311                     	;# 
  6918  0311                     	;# 
  6919  0312                     	;# 
  6920  0313                     	;# 
  6921  0314                     	;# 
  6922  0315                     	;# 
  6923  0315                     	;# 
  6924  0316                     	;# 
  6925  0317                     	;# 
  6926  0318                     	;# 
  6927  038C                     	;# 
  6928  038D                     	;# 
  6929  038E                     	;# 
  6930  0391                     	;# 
  6931  0392                     	;# 
  6932  0393                     	;# 
  6933  0394                     	;# 
  6934  0395                     	;# 
  6935  0396                     	;# 
  6936  0397                     	;# 
  6937  0398                     	;# 
  6938  0399                     	;# 
  6939  039A                     	;# 
  6940  039C                     	;# 
  6941  039D                     	;# 
  6942  039E                     	;# 
  6943  039F                     	;# 
  6944  0411                     	;# 
  6945  0411                     	;# 
  6946  0412                     	;# 
  6947  0413                     	;# 
  6948  0414                     	;# 
  6949  0415                     	;# 
  6950  0416                     	;# 
  6951  0417                     	;# 
  6952  0418                     	;# 
  6953  0418                     	;# 
  6954  0419                     	;# 
  6955  041A                     	;# 
  6956  041B                     	;# 
  6957  041C                     	;# 
  6958  041D                     	;# 
  6959  041E                     	;# 
  6960  041F                     	;# 
  6961  0498                     	;# 
  6962  0498                     	;# 
  6963  0499                     	;# 
  6964  049A                     	;# 
  6965  049B                     	;# 
  6966  049B                     	;# 
  6967  049C                     	;# 
  6968  049D                     	;# 
  6969  049E                     	;# 
  6970  049F                     	;# 
  6971  0617                     	;# 
  6972  0618                     	;# 
  6973  0619                     	;# 
  6974  0619                     	;# 
  6975  061A                     	;# 
  6976  061B                     	;# 
  6977  061C                     	;# 
  6978  061C                     	;# 
  6979  061F                     	;# 
  6980  0691                     	;# 
  6981  0692                     	;# 
  6982  0693                     	;# 
  6983  0694                     	;# 
  6984  0695                     	;# 
  6985  0696                     	;# 
  6986  0697                     	;# 
  6987  0698                     	;# 
  6988  0699                     	;# 
  6989  0711                     	;# 
  6990  0712                     	;# 
  6991  0713                     	;# 
  6992  0714                     	;# 
  6993  0715                     	;# 
  6994  0716                     	;# 
  6995  0717                     	;# 
  6996  0718                     	;# 
  6997  0719                     	;# 
  6998  0891                     	;# 
  6999  0891                     	;# 
  7000  0891                     	;# 
  7001  0891                     	;# 
  7002  0891                     	;# 
  7003  0891                     	;# 
  7004  0892                     	;# 
  7005  0892                     	;# 
  7006  0892                     	;# 
  7007  0893                     	;# 
  7008  0893                     	;# 
  7009  0893                     	;# 
  7010  0893                     	;# 
  7011  0893                     	;# 
  7012  0893                     	;# 
  7013  0894                     	;# 
  7014  0894                     	;# 
  7015  0894                     	;# 
  7016  0895                     	;# 
  7017  0895                     	;# 
  7018  0895                     	;# 
  7019  0896                     	;# 
  7020  0896                     	;# 
  7021  0896                     	;# 
  7022  089B                     	;# 
  7023  0911                     	;# 
  7024  0912                     	;# 
  7025  0913                     	;# 
  7026  0914                     	;# 
  7027  0915                     	;# 
  7028  0916                     	;# 
  7029  0918                     	;# 
  7030  0919                     	;# 
  7031  091A                     	;# 
  7032  091B                     	;# 
  7033  091C                     	;# 
  7034  091D                     	;# 
  7035  091E                     	;# 
  7036  091F                     	;# 
  7037  0E0F                     	;# 
  7038  0E10                     	;# 
  7039  0E11                     	;# 
  7040  0E12                     	;# 
  7041  0E13                     	;# 
  7042  0E14                     	;# 
  7043  0E15                     	;# 
  7044  0E16                     	;# 
  7045  0E17                     	;# 
  7046  0E18                     	;# 
  7047  0E19                     	;# 
  7048  0E1A                     	;# 
  7049  0E1B                     	;# 
  7050  0E1C                     	;# 
  7051  0E1D                     	;# 
  7052  0E1E                     	;# 
  7053  0E1F                     	;# 
  7054  0E20                     	;# 
  7055  0E21                     	;# 
  7056  0E22                     	;# 
  7057  0E24                     	;# 
  7058  0E25                     	;# 
  7059  0E28                     	;# 
  7060  0E29                     	;# 
  7061  0E2A                     	;# 
  7062  0E2B                     	;# 
  7063  0E2C                     	;# 
  7064  0E2D                     	;# 
  7065  0E2E                     	;# 
  7066  0E2F                     	;# 
  7067  0E90                     	;# 
  7068  0E91                     	;# 
  7069  0E92                     	;# 
  7070  0E94                     	;# 
  7071  0E95                     	;# 
  7072  0E9C                     	;# 
  7073  0E9D                     	;# 
  7074  0E9E                     	;# 
  7075  0E9F                     	;# 
  7076  0EA0                     	;# 
  7077  0EA1                     	;# 
  7078  0EA2                     	;# 
  7079  0EA3                     	;# 
  7080  0EA4                     	;# 
  7081  0EA5                     	;# 
  7082  0EA6                     	;# 
  7083  0EA7                     	;# 
  7084  0F0F                     	;# 
  7085  0F10                     	;# 
  7086  0F11                     	;# 
  7087  0F12                     	;# 
  7088  0F13                     	;# 
  7089  0F14                     	;# 
  7090  0F15                     	;# 
  7091  0F16                     	;# 
  7092  0F17                     	;# 
  7093  0F18                     	;# 
  7094  0F19                     	;# 
  7095  0F1A                     	;# 
  7096  0F1B                     	;# 
  7097  0F1C                     	;# 
  7098  0F1D                     	;# 
  7099  0F1E                     	;# 
  7100  0F1F                     	;# 
  7101  0F20                     	;# 
  7102  0F21                     	;# 
  7103  0F22                     	;# 
  7104  0F23                     	;# 
  7105  0F24                     	;# 
  7106  0F25                     	;# 
  7107  0F26                     	;# 
  7108  0F27                     	;# 
  7109  0F28                     	;# 
  7110  0F29                     	;# 
  7111  0F2A                     	;# 
  7112  0F2B                     	;# 
  7113  0F2C                     	;# 
  7114  0F2D                     	;# 
  7115  0F2E                     	;# 
  7116  0F2F                     	;# 
  7117  0F30                     	;# 
  7118  0F31                     	;# 
  7119  0F32                     	;# 
  7120  0F33                     	;# 
  7121  0F34                     	;# 
  7122  0F35                     	;# 
  7123  0F36                     	;# 
  7124  0F37                     	;# 
  7125  0FE4                     	;# 
  7126  0FE5                     	;# 
  7127  0FE6                     	;# 
  7128  0FE7                     	;# 
  7129  0FE8                     	;# 
  7130  0FE9                     	;# 
  7131  0FEA                     	;# 
  7132  0FEB                     	;# 
  7133  0FED                     	;# 
  7134  0FEE                     	;# 
  7135  0FEF                     	;# 
  7136  0000                     	;# 
  7137  0001                     	;# 
  7138  0002                     	;# 
  7139  0003                     	;# 
  7140  0004                     	;# 
  7141  0005                     	;# 
  7142  0006                     	;# 
  7143  0007                     	;# 
  7144  0008                     	;# 
  7145  0009                     	;# 
  7146  000A                     	;# 
  7147  000B                     	;# 
  7148  000C                     	;# 
  7149  000D                     	;# 
  7150  000E                     	;# 
  7151  0010                     	;# 
  7152  0011                     	;# 
  7153  0012                     	;# 
  7154  0013                     	;# 
  7155  0014                     	;# 
  7156  0015                     	;# 
  7157  0015                     	;# 
  7158  0016                     	;# 
  7159  0016                     	;# 
  7160  0017                     	;# 
  7161  0018                     	;# 
  7162  0019                     	;# 
  7163  0019                     	;# 
  7164  001A                     	;# 
  7165  001B                     	;# 
  7166  001C                     	;# 
  7167  001D                     	;# 
  7168  001E                     	;# 
  7169  001F                     	;# 
  7170  008C                     	;# 
  7171  008D                     	;# 
  7172  008E                     	;# 
  7173  0090                     	;# 
  7174  0091                     	;# 
  7175  0092                     	;# 
  7176  0093                     	;# 
  7177  0094                     	;# 
  7178  0097                     	;# 
  7179  009B                     	;# 
  7180  009B                     	;# 
  7181  009C                     	;# 
  7182  009D                     	;# 
  7183  009E                     	;# 
  7184  009F                     	;# 
  7185  010C                     	;# 
  7186  010D                     	;# 
  7187  010E                     	;# 
  7188  0111                     	;# 
  7189  0112                     	;# 
  7190  0113                     	;# 
  7191  0114                     	;# 
  7192  0115                     	;# 
  7193  0116                     	;# 
  7194  0117                     	;# 
  7195  0118                     	;# 
  7196  0119                     	;# 
  7197  018C                     	;# 
  7198  018D                     	;# 
  7199  018E                     	;# 
  7200  0197                     	;# 
  7201  0199                     	;# 
  7202  0199                     	;# 
  7203  0199                     	;# 
  7204  019A                     	;# 
  7205  019A                     	;# 
  7206  019A                     	;# 
  7207  019B                     	;# 
  7208  019B                     	;# 
  7209  019B                     	;# 
  7210  019B                     	;# 
  7211  019B                     	;# 
  7212  019C                     	;# 
  7213  019C                     	;# 
  7214  019C                     	;# 
  7215  019D                     	;# 
  7216  019D                     	;# 
  7217  019D                     	;# 
  7218  019E                     	;# 
  7219  019E                     	;# 
  7220  019E                     	;# 
  7221  019F                     	;# 
  7222  019F                     	;# 
  7223  019F                     	;# 
  7224  019F                     	;# 
  7225  019F                     	;# 
  7226  020C                     	;# 
  7227  020D                     	;# 
  7228  020E                     	;# 
  7229  0211                     	;# 
  7230  0211                     	;# 
  7231  0212                     	;# 
  7232  0212                     	;# 
  7233  0213                     	;# 
  7234  0213                     	;# 
  7235  0214                     	;# 
  7236  0214                     	;# 
  7237  0215                     	;# 
  7238  0215                     	;# 
  7239  0215                     	;# 
  7240  0215                     	;# 
  7241  0216                     	;# 
  7242  0216                     	;# 
  7243  0217                     	;# 
  7244  0217                     	;# 
  7245  0219                     	;# 
  7246  021A                     	;# 
  7247  021B                     	;# 
  7248  021C                     	;# 
  7249  021D                     	;# 
  7250  021D                     	;# 
  7251  021E                     	;# 
  7252  021F                     	;# 
  7253  028C                     	;# 
  7254  028D                     	;# 
  7255  028E                     	;# 
  7256  0291                     	;# 
  7257  0291                     	;# 
  7258  0292                     	;# 
  7259  0293                     	;# 
  7260  0294                     	;# 
  7261  0295                     	;# 
  7262  0295                     	;# 
  7263  0296                     	;# 
  7264  0297                     	;# 
  7265  0298                     	;# 
  7266  029F                     	;# 
  7267  030C                     	;# 
  7268  030D                     	;# 
  7269  030E                     	;# 
  7270  0311                     	;# 
  7271  0311                     	;# 
  7272  0312                     	;# 
  7273  0313                     	;# 
  7274  0314                     	;# 
  7275  0315                     	;# 
  7276  0315                     	;# 
  7277  0316                     	;# 
  7278  0317                     	;# 
  7279  0318                     	;# 
  7280  038C                     	;# 
  7281  038D                     	;# 
  7282  038E                     	;# 
  7283  0391                     	;# 
  7284  0392                     	;# 
  7285  0393                     	;# 
  7286  0394                     	;# 
  7287  0395                     	;# 
  7288  0396                     	;# 
  7289  0397                     	;# 
  7290  0398                     	;# 
  7291  0399                     	;# 
  7292  039A                     	;# 
  7293  039C                     	;# 
  7294  039D                     	;# 
  7295  039E                     	;# 
  7296  039F                     	;# 
  7297  0411                     	;# 
  7298  0411                     	;# 
  7299  0412                     	;# 
  7300  0413                     	;# 
  7301  0414                     	;# 
  7302  0415                     	;# 
  7303  0416                     	;# 
  7304  0417                     	;# 
  7305  0418                     	;# 
  7306  0418                     	;# 
  7307  0419                     	;# 
  7308  041A                     	;# 
  7309  041B                     	;# 
  7310  041C                     	;# 
  7311  041D                     	;# 
  7312  041E                     	;# 
  7313  041F                     	;# 
  7314  0498                     	;# 
  7315  0498                     	;# 
  7316  0499                     	;# 
  7317  049A                     	;# 
  7318  049B                     	;# 
  7319  049B                     	;# 
  7320  049C                     	;# 
  7321  049D                     	;# 
  7322  049E                     	;# 
  7323  049F                     	;# 
  7324  0617                     	;# 
  7325  0618                     	;# 
  7326  0619                     	;# 
  7327  0619                     	;# 
  7328  061A                     	;# 
  7329  061B                     	;# 
  7330  061C                     	;# 
  7331  061C                     	;# 
  7332  061F                     	;# 
  7333  0691                     	;# 
  7334  0692                     	;# 
  7335  0693                     	;# 
  7336  0694                     	;# 
  7337  0695                     	;# 
  7338  0696                     	;# 
  7339  0697                     	;# 
  7340  0698                     	;# 
  7341  0699                     	;# 
  7342  0711                     	;# 
  7343  0712                     	;# 
  7344  0713                     	;# 
  7345  0714                     	;# 
  7346  0715                     	;# 
  7347  0716                     	;# 
  7348  0717                     	;# 
  7349  0718                     	;# 
  7350  0719                     	;# 
  7351  0891                     	;# 
  7352  0891                     	;# 
  7353  0891                     	;# 
  7354  0891                     	;# 
  7355  0891                     	;# 
  7356  0891                     	;# 
  7357  0892                     	;# 
  7358  0892                     	;# 
  7359  0892                     	;# 
  7360  0893                     	;# 
  7361  0893                     	;# 
  7362  0893                     	;# 
  7363  0893                     	;# 
  7364  0893                     	;# 
  7365  0893                     	;# 
  7366  0894                     	;# 
  7367  0894                     	;# 
  7368  0894                     	;# 
  7369  0895                     	;# 
  7370  0895                     	;# 
  7371  0895                     	;# 
  7372  0896                     	;# 
  7373  0896                     	;# 
  7374  0896                     	;# 
  7375  089B                     	;# 
  7376  0911                     	;# 
  7377  0912                     	;# 
  7378  0913                     	;# 
  7379  0914                     	;# 
  7380  0915                     	;# 
  7381  0916                     	;# 
  7382  0918                     	;# 
  7383  0919                     	;# 
  7384  091A                     	;# 
  7385  091B                     	;# 
  7386  091C                     	;# 
  7387  091D                     	;# 
  7388  091E                     	;# 
  7389  091F                     	;# 
  7390  0E0F                     	;# 
  7391  0E10                     	;# 
  7392  0E11                     	;# 
  7393  0E12                     	;# 
  7394  0E13                     	;# 
  7395  0E14                     	;# 
  7396  0E15                     	;# 
  7397  0E16                     	;# 
  7398  0E17                     	;# 
  7399  0E18                     	;# 
  7400  0E19                     	;# 
  7401  0E1A                     	;# 
  7402  0E1B                     	;# 
  7403  0E1C                     	;# 
  7404  0E1D                     	;# 
  7405  0E1E                     	;# 
  7406  0E1F                     	;# 
  7407  0E20                     	;# 
  7408  0E21                     	;# 
  7409  0E22                     	;# 
  7410  0E24                     	;# 
  7411  0E25                     	;# 
  7412  0E28                     	;# 
  7413  0E29                     	;# 
  7414  0E2A                     	;# 
  7415  0E2B                     	;# 
  7416  0E2C                     	;# 
  7417  0E2D                     	;# 
  7418  0E2E                     	;# 
  7419  0E2F                     	;# 
  7420  0E90                     	;# 
  7421  0E91                     	;# 
  7422  0E92                     	;# 
  7423  0E94                     	;# 
  7424  0E95                     	;# 
  7425  0E9C                     	;# 
  7426  0E9D                     	;# 
  7427  0E9E                     	;# 
  7428  0E9F                     	;# 
  7429  0EA0                     	;# 
  7430  0EA1                     	;# 
  7431  0EA2                     	;# 
  7432  0EA3                     	;# 
  7433  0EA4                     	;# 
  7434  0EA5                     	;# 
  7435  0EA6                     	;# 
  7436  0EA7                     	;# 
  7437  0F0F                     	;# 
  7438  0F10                     	;# 
  7439  0F11                     	;# 
  7440  0F12                     	;# 
  7441  0F13                     	;# 
  7442  0F14                     	;# 
  7443  0F15                     	;# 
  7444  0F16                     	;# 
  7445  0F17                     	;# 
  7446  0F18                     	;# 
  7447  0F19                     	;# 
  7448  0F1A                     	;# 
  7449  0F1B                     	;# 
  7450  0F1C                     	;# 
  7451  0F1D                     	;# 
  7452  0F1E                     	;# 
  7453  0F1F                     	;# 
  7454  0F20                     	;# 
  7455  0F21                     	;# 
  7456  0F22                     	;# 
  7457  0F23                     	;# 
  7458  0F24                     	;# 
  7459  0F25                     	;# 
  7460  0F26                     	;# 
  7461  0F27                     	;# 
  7462  0F28                     	;# 
  7463  0F29                     	;# 
  7464  0F2A                     	;# 
  7465  0F2B                     	;# 
  7466  0F2C                     	;# 
  7467  0F2D                     	;# 
  7468  0F2E                     	;# 
  7469  0F2F                     	;# 
  7470  0F30                     	;# 
  7471  0F31                     	;# 
  7472  0F32                     	;# 
  7473  0F33                     	;# 
  7474  0F34                     	;# 
  7475  0F35                     	;# 
  7476  0F36                     	;# 
  7477  0F37                     	;# 
  7478  0FE4                     	;# 
  7479  0FE5                     	;# 
  7480  0FE6                     	;# 
  7481  0FE7                     	;# 
  7482  0FE8                     	;# 
  7483  0FE9                     	;# 
  7484  0FEA                     	;# 
  7485  0FEB                     	;# 
  7486  0FED                     	;# 
  7487  0FEE                     	;# 
  7488  0FEF                     	;# 
  7489                           
  7490                           	psect	idataBANK0
  7491  0000                     __pidataBANK0:	
  7492                           
  7493                           	psect	stringtext1
  7494  042B                     __pstringtext1:	
  7495  042B                     _gamma_table:	
  7496  042B  34F5               	retlw	245
  7497  042C  3403               	retlw	3
  7498  042D  34EB               	retlw	235
  7499  042E  3403               	retlw	3
  7500  042F  34E0               	retlw	224
  7501  0430  3403               	retlw	3
  7502  0431  34D6               	retlw	214
  7503  0432  3403               	retlw	3
  7504  0433  34CC               	retlw	204
  7505  0434  3403               	retlw	3
  7506  0435  34C2               	retlw	194
  7507  0436  3403               	retlw	3
  7508  0437  34B7               	retlw	183
  7509  0438  3403               	retlw	3
  7510  0439  34AD               	retlw	173
  7511  043A  3403               	retlw	3
  7512  043B  34A3               	retlw	163
  7513  043C  3403               	retlw	3
  7514  043D  3499               	retlw	153
  7515  043E  3403               	retlw	3
  7516  043F  348E               	retlw	142
  7517  0440  3403               	retlw	3
  7518  0441  3484               	retlw	132
  7519  0442  3403               	retlw	3
  7520  0443  347A               	retlw	122
  7521  0444  3403               	retlw	3
  7522  0445  3470               	retlw	112
  7523  0446  3403               	retlw	3
  7524  0447  3466               	retlw	102
  7525  0448  3403               	retlw	3
  7526  0449  345B               	retlw	91
  7527  044A  3403               	retlw	3
  7528  044B  3451               	retlw	81
  7529  044C  3403               	retlw	3
  7530  044D  3447               	retlw	71
  7531  044E  3403               	retlw	3
  7532  044F  343D               	retlw	61
  7533  0450  3403               	retlw	3
  7534  0451  3432               	retlw	50
  7535  0452  3403               	retlw	3
  7536  0453  3428               	retlw	40
  7537  0454  3403               	retlw	3
  7538  0455  341E               	retlw	30
  7539  0456  3403               	retlw	3
  7540  0457  3414               	retlw	20
  7541  0458  3403               	retlw	3
  7542  0459  3409               	retlw	9
  7543  045A  3403               	retlw	3
  7544  045B  34FF               	retlw	255
  7545  045C  3402               	retlw	2
  7546  045D  34F5               	retlw	245
  7547  045E  3402               	retlw	2
  7548  045F  34EB               	retlw	235
  7549  0460  3402               	retlw	2
  7550  0461  34E1               	retlw	225
  7551  0462  3402               	retlw	2
  7552  0463  34D6               	retlw	214
  7553  0464  3402               	retlw	2
  7554  0465  34CC               	retlw	204
  7555  0466  3402               	retlw	2
  7556  0467  34C2               	retlw	194
  7557  0468  3402               	retlw	2
  7558  0469  34B8               	retlw	184
  7559  046A  3402               	retlw	2
  7560  046B  34AD               	retlw	173
  7561  046C  3402               	retlw	2
  7562  046D  34A3               	retlw	163
  7563  046E  3402               	retlw	2
  7564  046F  3499               	retlw	153
  7565  0470  3402               	retlw	2
  7566  0471  348F               	retlw	143
  7567  0472  3402               	retlw	2
  7568  0473  3484               	retlw	132
  7569  0474  3402               	retlw	2
  7570  0475  347A               	retlw	122
  7571  0476  3402               	retlw	2
  7572  0477  3470               	retlw	112
  7573  0478  3402               	retlw	2
  7574  0479  3466               	retlw	102
  7575  047A  3402               	retlw	2
  7576  047B  345C               	retlw	92
  7577  047C  3402               	retlw	2
  7578  047D  3451               	retlw	81
  7579  047E  3402               	retlw	2
  7580  047F  3447               	retlw	71
  7581  0480  3402               	retlw	2
  7582  0481  343D               	retlw	61
  7583  0482  3402               	retlw	2
  7584  0483  3433               	retlw	51
  7585  0484  3402               	retlw	2
  7586  0485  3428               	retlw	40
  7587  0486  3402               	retlw	2
  7588  0487  341E               	retlw	30
  7589  0488  3402               	retlw	2
  7590  0489  3414               	retlw	20
  7591  048A  3402               	retlw	2
  7592  048B  340A               	retlw	10
  7593  048C  3402               	retlw	2
  7594  048D  34FF               	retlw	255
  7595  048E  3401               	retlw	1
  7596  048F  34F5               	retlw	245
  7597  0490  3401               	retlw	1
  7598  0491  34EB               	retlw	235
  7599  0492  3401               	retlw	1
  7600  0493  34E1               	retlw	225
  7601  0494  3401               	retlw	1
  7602  0495  34D7               	retlw	215
  7603  0496  3401               	retlw	1
  7604  0497  34CC               	retlw	204
  7605  0498  3401               	retlw	1
  7606  0499  34C2               	retlw	194
  7607  049A  3401               	retlw	1
  7608  049B  34B8               	retlw	184
  7609  049C  3401               	retlw	1
  7610  049D  34AE               	retlw	174
  7611  049E  3401               	retlw	1
  7612  049F  34A3               	retlw	163
  7613  04A0  3401               	retlw	1
  7614  04A1  3499               	retlw	153
  7615  04A2  3401               	retlw	1
  7616  04A3  348F               	retlw	143
  7617  04A4  3401               	retlw	1
  7618  04A5  3485               	retlw	133
  7619  04A6  3401               	retlw	1
  7620  04A7  347B               	retlw	123
  7621  04A8  3401               	retlw	1
  7622  04A9  3470               	retlw	112
  7623  04AA  3401               	retlw	1
  7624  04AB  3466               	retlw	102
  7625  04AC  3401               	retlw	1
  7626  04AD  345C               	retlw	92
  7627  04AE  3401               	retlw	1
  7628  04AF  3452               	retlw	82
  7629  04B0  3401               	retlw	1
  7630  04B1  3447               	retlw	71
  7631  04B2  3401               	retlw	1
  7632  04B3  343D               	retlw	61
  7633  04B4  3401               	retlw	1
  7634  04B5  3433               	retlw	51
  7635  04B6  3401               	retlw	1
  7636  04B7  3429               	retlw	41
  7637  04B8  3401               	retlw	1
  7638  04B9  341E               	retlw	30
  7639  04BA  3401               	retlw	1
  7640  04BB  3414               	retlw	20
  7641  04BC  3401               	retlw	1
  7642  04BD  340A               	retlw	10
  7643  04BE  3401               	retlw	1
  7644  04BF  3400               	retlw	0
  7645  04C0  3401               	retlw	1
  7646  04C1  34F6               	retlw	246
  7647  04C2  3400               	retlw	0
  7648  04C3  34EB               	retlw	235
  7649  04C4  3400               	retlw	0
  7650  04C5  34E1               	retlw	225
  7651  04C6  3400               	retlw	0
  7652  04C7  34D7               	retlw	215
  7653  04C8  3400               	retlw	0
  7654  04C9  34CD               	retlw	205
  7655  04CA  3400               	retlw	0
  7656  04CB  34C2               	retlw	194
  7657  04CC  3400               	retlw	0
  7658  04CD  34B8               	retlw	184
  7659  04CE  3400               	retlw	0
  7660  04CF  34AE               	retlw	174
  7661  04D0  3400               	retlw	0
  7662  04D1  34A4               	retlw	164
  7663  04D2  3400               	retlw	0
  7664  04D3  3499               	retlw	153
  7665  04D4  3400               	retlw	0
  7666  04D5  348F               	retlw	143
  7667  04D6  3400               	retlw	0
  7668  04D7  3485               	retlw	133
  7669  04D8  3400               	retlw	0
  7670  04D9  347B               	retlw	123
  7671  04DA  3400               	retlw	0
  7672  04DB  3471               	retlw	113
  7673  04DC  3400               	retlw	0
  7674  04DD  3466               	retlw	102
  7675  04DE  3400               	retlw	0
  7676  04DF  345C               	retlw	92
  7677  04E0  3400               	retlw	0
  7678  04E1  3452               	retlw	82
  7679  04E2  3400               	retlw	0
  7680  04E3  3448               	retlw	72
  7681  04E4  3400               	retlw	0
  7682  04E5  343D               	retlw	61
  7683  04E6  3400               	retlw	0
  7684  04E7  3433               	retlw	51
  7685  04E8  3400               	retlw	0
  7686  04E9  3429               	retlw	41
  7687  04EA  3400               	retlw	0
  7688  04EB  341F               	retlw	31
  7689  04EC  3400               	retlw	0
  7690  04ED  3414               	retlw	20
  7691  04EE  3400               	retlw	0
  7692  04EF  340A               	retlw	10
  7693  04F0  3400               	retlw	0
  7694  04F1  3400               	retlw	0
  7695  04F2  3400               	retlw	0
  7696  04F3  34FF               	retlw	255
  7697  04F4  3403               	retlw	3
  7698  04F5  34FE               	retlw	254
  7699  04F6  3403               	retlw	3
  7700  04F7  34FD               	retlw	253
  7701  04F8  3403               	retlw	3
  7702  04F9  34FC               	retlw	252
  7703  04FA  3403               	retlw	3
  7704  04FB  34FA               	retlw	250
  7705  04FC  3403               	retlw	3
  7706  04FD  34F9               	retlw	249
  7707  04FE  3403               	retlw	3
  7708  04FF  34F6               	retlw	246
  7709  0500  3403               	retlw	3
  7710  0501  34F4               	retlw	244
  7711  0502  3403               	retlw	3
  7712  0503  34F2               	retlw	242
  7713  0504  3403               	retlw	3
  7714  0505  34EF               	retlw	239
  7715  0506  3403               	retlw	3
  7716  0507  34EC               	retlw	236
  7717  0508  3403               	retlw	3
  7718  0509  34E8               	retlw	232
  7719  050A  3403               	retlw	3
  7720  050B  34E5               	retlw	229
  7721  050C  3403               	retlw	3
  7722  050D  34E1               	retlw	225
  7723  050E  3403               	retlw	3
  7724  050F  34DD               	retlw	221
  7725  0510  3403               	retlw	3
  7726  0511  34D9               	retlw	217
  7727  0512  3403               	retlw	3
  7728  0513  34D5               	retlw	213
  7729  0514  3403               	retlw	3
  7730  0515  34D0               	retlw	208
  7731  0516  3403               	retlw	3
  7732  0517  34CC               	retlw	204
  7733  0518  3403               	retlw	3
  7734  0519  34C7               	retlw	199
  7735  051A  3403               	retlw	3
  7736  051B  34C1               	retlw	193
  7737  051C  3403               	retlw	3
  7738  051D  34BC               	retlw	188
  7739  051E  3403               	retlw	3
  7740  051F  34B6               	retlw	182
  7741  0520  3403               	retlw	3
  7742  0521  34B1               	retlw	177
  7743  0522  3403               	retlw	3
  7744  0523  34AB               	retlw	171
  7745  0524  3403               	retlw	3
  7746  0525  34A4               	retlw	164
  7747  0526  3403               	retlw	3
  7748  0527  349E               	retlw	158
  7749  0528  3403               	retlw	3
  7750  0529  3498               	retlw	152
  7751  052A  3403               	retlw	3
  7752  052B  3491               	retlw	145
  7753  052C  3403               	retlw	3
  7754  052D  348A               	retlw	138
  7755  052E  3403               	retlw	3
  7756  052F  3483               	retlw	131
  7757  0530  3403               	retlw	3
  7758  0531  347B               	retlw	123
  7759  0532  3403               	retlw	3
  7760  0533  3474               	retlw	116
  7761  0534  3403               	retlw	3
  7762  0535  346C               	retlw	108
  7763  0536  3403               	retlw	3
  7764  0537  3464               	retlw	100
  7765  0538  3403               	retlw	3
  7766  0539  345C               	retlw	92
  7767  053A  3403               	retlw	3
  7768  053B  3454               	retlw	84
  7769  053C  3403               	retlw	3
  7770  053D  344C               	retlw	76
  7771  053E  3403               	retlw	3
  7772  053F  3443               	retlw	67
  7773  0540  3403               	retlw	3
  7774  0541  343A               	retlw	58
  7775  0542  3403               	retlw	3
  7776  0543  3431               	retlw	49
  7777  0544  3403               	retlw	3
  7778  0545  3428               	retlw	40
  7779  0546  3403               	retlw	3
  7780  0547  341F               	retlw	31
  7781  0548  3403               	retlw	3
  7782  0549  3416               	retlw	22
  7783  054A  3403               	retlw	3
  7784  054B  340C               	retlw	12
  7785  054C  3403               	retlw	3
  7786  054D  3402               	retlw	2
  7787  054E  3403               	retlw	3
  7788  054F  34F8               	retlw	248
  7789  0550  3402               	retlw	2
  7790  0551  34EE               	retlw	238
  7791  0552  3402               	retlw	2
  7792  0553  34E4               	retlw	228
  7793  0554  3402               	retlw	2
  7794  0555  34D9               	retlw	217
  7795  0556  3402               	retlw	2
  7796  0557  34CF               	retlw	207
  7797  0558  3402               	retlw	2
  7798  0559  34C4               	retlw	196
  7799  055A  3402               	retlw	2
  7800  055B  34B9               	retlw	185
  7801  055C  3402               	retlw	2
  7802  055D  34AE               	retlw	174
  7803  055E  3402               	retlw	2
  7804  055F  34A2               	retlw	162
  7805  0560  3402               	retlw	2
  7806  0561  3497               	retlw	151
  7807  0562  3402               	retlw	2
  7808  0563  348B               	retlw	139
  7809  0564  3402               	retlw	2
  7810  0565  347F               	retlw	127
  7811  0566  3402               	retlw	2
  7812  0567  3473               	retlw	115
  7813  0568  3402               	retlw	2
  7814  0569  3467               	retlw	103
  7815  056A  3402               	retlw	2
  7816  056B  345B               	retlw	91
  7817  056C  3402               	retlw	2
  7818  056D  344E               	retlw	78
  7819  056E  3402               	retlw	2
  7820  056F  3442               	retlw	66
  7821  0570  3402               	retlw	2
  7822  0571  3435               	retlw	53
  7823  0572  3402               	retlw	2
  7824  0573  3428               	retlw	40
  7825  0574  3402               	retlw	2
  7826  0575  341B               	retlw	27
  7827  0576  3402               	retlw	2
  7828  0577  340D               	retlw	13
  7829  0578  3402               	retlw	2
  7830  0579  3400               	retlw	0
  7831  057A  3402               	retlw	2
  7832  057B  34F2               	retlw	242
  7833  057C  3401               	retlw	1
  7834  057D  34E5               	retlw	229
  7835  057E  3401               	retlw	1
  7836  057F  34D7               	retlw	215
  7837  0580  3401               	retlw	1
  7838  0581  34C9               	retlw	201
  7839  0582  3401               	retlw	1
  7840  0583  34BA               	retlw	186
  7841  0584  3401               	retlw	1
  7842  0585  34AC               	retlw	172
  7843  0586  3401               	retlw	1
  7844  0587  349D               	retlw	157
  7845  0588  3401               	retlw	1
  7846  0589  348F               	retlw	143
  7847  058A  3401               	retlw	1
  7848  058B  3480               	retlw	128
  7849  058C  3401               	retlw	1
  7850  058D  3471               	retlw	113
  7851  058E  3401               	retlw	1
  7852  058F  3462               	retlw	98
  7853  0590  3401               	retlw	1
  7854  0591  3452               	retlw	82
  7855  0592  3401               	retlw	1
  7856  0593  3443               	retlw	67
  7857  0594  3401               	retlw	1
  7858  0595  3433               	retlw	51
  7859  0596  3401               	retlw	1
  7860  0597  3423               	retlw	35
  7861  0598  3401               	retlw	1
  7862  0599  3414               	retlw	20
  7863  059A  3401               	retlw	1
  7864  059B  3403               	retlw	3
  7865  059C  3401               	retlw	1
  7866  059D  34F3               	retlw	243
  7867  059E  3400               	retlw	0
  7868  059F  34E3               	retlw	227
  7869  05A0  3400               	retlw	0
  7870  05A1  34D2               	retlw	210
  7871  05A2  3400               	retlw	0
  7872  05A3  34C2               	retlw	194
  7873  05A4  3400               	retlw	0
  7874  05A5  34B1               	retlw	177
  7875  05A6  3400               	retlw	0
  7876  05A7  34A0               	retlw	160
  7877  05A8  3400               	retlw	0
  7878  05A9  348F               	retlw	143
  7879  05AA  3400               	retlw	0
  7880  05AB  347D               	retlw	125
  7881  05AC  3400               	retlw	0
  7882  05AD  346C               	retlw	108
  7883  05AE  3400               	retlw	0
  7884  05AF  345A               	retlw	90
  7885  05B0  3400               	retlw	0
  7886  05B1  3448               	retlw	72
  7887  05B2  3400               	retlw	0
  7888  05B3  3437               	retlw	55
  7889  05B4  3400               	retlw	0
  7890  05B5  3425               	retlw	37
  7891  05B6  3400               	retlw	0
  7892  05B7  3412               	retlw	18
  7893  05B8  3400               	retlw	0
  7894  05B9  3400               	retlw	0
  7895  05BA  3400               	retlw	0
  7896  05BB  34FF               	retlw	255
  7897  05BC  3403               	retlw	3
  7898  05BD  34FF               	retlw	255
  7899  05BE  3403               	retlw	3
  7900  05BF  34FE               	retlw	254
  7901  05C0  3403               	retlw	3
  7902  05C1  34FD               	retlw	253
  7903  05C2  3403               	retlw	3
  7904  05C3  34FC               	retlw	252
  7905  05C4  3403               	retlw	3
  7906  05C5  34FB               	retlw	251
  7907  05C6  3403               	retlw	3
  7908  05C7  34FA               	retlw	250
  7909  05C8  3403               	retlw	3
  7910  05C9  34F8               	retlw	248
  7911  05CA  3403               	retlw	3
  7912  05CB  34F7               	retlw	247
  7913  05CC  3403               	retlw	3
  7914  05CD  34F5               	retlw	245
  7915  05CE  3403               	retlw	3
  7916  05CF  34F3               	retlw	243
  7917  05D0  3403               	retlw	3
  7918  05D1  34F0               	retlw	240
  7919  05D2  3403               	retlw	3
  7920  05D3  34EE               	retlw	238
  7921  05D4  3403               	retlw	3
  7922  05D5  34EB               	retlw	235
  7923  05D6  3403               	retlw	3
  7924  05D7  34E8               	retlw	232
  7925  05D8  3403               	retlw	3
  7926  05D9  34E5               	retlw	229
  7927  05DA  3403               	retlw	3
  7928  05DB  34E1               	retlw	225
  7929  05DC  3403               	retlw	3
  7930  05DD  34DE               	retlw	222
  7931  05DE  3403               	retlw	3
  7932  05DF  34DA               	retlw	218
  7933  05E0  3403               	retlw	3
  7934  05E1  34D6               	retlw	214
  7935  05E2  3403               	retlw	3
  7936  05E3  34D2               	retlw	210
  7937  05E4  3403               	retlw	3
  7938  05E5  34CD               	retlw	205
  7939  05E6  3403               	retlw	3
  7940  05E7  34C9               	retlw	201
  7941  05E8  3403               	retlw	3
  7942  05E9  34C4               	retlw	196
  7943  05EA  3403               	retlw	3
  7944  05EB  34BF               	retlw	191
  7945  05EC  3403               	retlw	3
  7946  05ED  34BA               	retlw	186
  7947  05EE  3403               	retlw	3
  7948  05EF  34B4               	retlw	180
  7949  05F0  3403               	retlw	3
  7950  05F1  34AF               	retlw	175
  7951  05F2  3403               	retlw	3
  7952  05F3  34A9               	retlw	169
  7953  05F4  3403               	retlw	3
  7954  05F5  34A3               	retlw	163
  7955  05F6  3403               	retlw	3
  7956  05F7  349D               	retlw	157
  7957  05F8  3403               	retlw	3
  7958  05F9  3496               	retlw	150
  7959  05FA  3403               	retlw	3
  7960  05FB  3490               	retlw	144
  7961  05FC  3403               	retlw	3
  7962  05FD  3489               	retlw	137
  7963  05FE  3403               	retlw	3
  7964  05FF  3482               	retlw	130
  7965  0600  3403               	retlw	3
  7966  0601  347A               	retlw	122
  7967  0602  3403               	retlw	3
  7968  0603  3473               	retlw	115
  7969  0604  3403               	retlw	3
  7970  0605  346B               	retlw	107
  7971  0606  3403               	retlw	3
  7972  0607  3463               	retlw	99
  7973  0608  3403               	retlw	3
  7974  0609  345B               	retlw	91
  7975  060A  3403               	retlw	3
  7976  060B  3453               	retlw	83
  7977  060C  3403               	retlw	3
  7978  060D  344B               	retlw	75
  7979  060E  3403               	retlw	3
  7980  060F  3442               	retlw	66
  7981  0610  3403               	retlw	3
  7982  0611  3439               	retlw	57
  7983  0612  3403               	retlw	3
  7984  0613  3430               	retlw	48
  7985  0614  3403               	retlw	3
  7986  0615  3427               	retlw	39
  7987  0616  3403               	retlw	3
  7988  0617  341D               	retlw	29
  7989  0618  3403               	retlw	3
  7990  0619  3413               	retlw	19
  7991  061A  3403               	retlw	3
  7992  061B  3409               	retlw	9
  7993  061C  3403               	retlw	3
  7994  061D  34FF               	retlw	255
  7995  061E  3402               	retlw	2
  7996  061F  34F5               	retlw	245
  7997  0620  3402               	retlw	2
  7998  0621  34EA               	retlw	234
  7999  0622  3402               	retlw	2
  8000  0623  34E0               	retlw	224
  8001  0624  3402               	retlw	2
  8002  0625  34D5               	retlw	213
  8003  0626  3402               	retlw	2
  8004  0627  34CA               	retlw	202
  8005  0628  3402               	retlw	2
  8006  0629  34BE               	retlw	190
  8007  062A  3402               	retlw	2
  8008  062B  34B3               	retlw	179
  8009  062C  3402               	retlw	2
  8010  062D  34A7               	retlw	167
  8011  062E  3402               	retlw	2
  8012  062F  349B               	retlw	155
  8013  0630  3402               	retlw	2
  8014  0631  348F               	retlw	143
  8015  0632  3402               	retlw	2
  8016  0633  3482               	retlw	130
  8017  0634  3402               	retlw	2
  8018  0635  3476               	retlw	118
  8019  0636  3402               	retlw	2
  8020  0637  3469               	retlw	105
  8021  0638  3402               	retlw	2
  8022  0639  345C               	retlw	92
  8023  063A  3402               	retlw	2
  8024  063B  344F               	retlw	79
  8025  063C  3402               	retlw	2
  8026  063D  3441               	retlw	65
  8027  063E  3402               	retlw	2
  8028  063F  3434               	retlw	52
  8029  0640  3402               	retlw	2
  8030  0641  3426               	retlw	38
  8031  0642  3402               	retlw	2
  8032  0643  3418               	retlw	24
  8033  0644  3402               	retlw	2
  8034  0645  340A               	retlw	10
  8035  0646  3402               	retlw	2
  8036  0647  34FB               	retlw	251
  8037  0648  3401               	retlw	1
  8038  0649  34ED               	retlw	237
  8039  064A  3401               	retlw	1
  8040  064B  34DE               	retlw	222
  8041  064C  3401               	retlw	1
  8042  064D  34CF               	retlw	207
  8043  064E  3401               	retlw	1
  8044  064F  34C0               	retlw	192
  8045  0650  3401               	retlw	1
  8046  0651  34B0               	retlw	176
  8047  0652  3401               	retlw	1
  8048  0653  34A0               	retlw	160
  8049  0654  3401               	retlw	1
  8050  0655  3491               	retlw	145
  8051  0656  3401               	retlw	1
  8052  0657  3481               	retlw	129
  8053  0658  3401               	retlw	1
  8054  0659  3470               	retlw	112
  8055  065A  3401               	retlw	1
  8056  065B  3460               	retlw	96
  8057  065C  3401               	retlw	1
  8058  065D  344F               	retlw	79
  8059  065E  3401               	retlw	1
  8060  065F  343E               	retlw	62
  8061  0660  3401               	retlw	1
  8062  0661  342D               	retlw	45
  8063  0662  3401               	retlw	1
  8064  0663  341C               	retlw	28
  8065  0664  3401               	retlw	1
  8066  0665  340A               	retlw	10
  8067  0666  3401               	retlw	1
  8068  0667  34F9               	retlw	249
  8069  0668  3400               	retlw	0
  8070  0669  34E7               	retlw	231
  8071  066A  3400               	retlw	0
  8072  066B  34D5               	retlw	213
  8073  066C  3400               	retlw	0
  8074  066D  34C2               	retlw	194
  8075  066E  3400               	retlw	0
  8076  066F  34B0               	retlw	176
  8077  0670  3400               	retlw	0
  8078  0671  349D               	retlw	157
  8079  0672  3400               	retlw	0
  8080  0673  348A               	retlw	138
  8081  0674  3400               	retlw	0
  8082  0675  3477               	retlw	119
  8083  0676  3400               	retlw	0
  8084  0677  3464               	retlw	100
  8085  0678  3400               	retlw	0
  8086  0679  3450               	retlw	80
  8087  067A  3400               	retlw	0
  8088  067B  343C               	retlw	60
  8089  067C  3400               	retlw	0
  8090  067D  3429               	retlw	41
  8091  067E  3400               	retlw	0
  8092  067F  3414               	retlw	20
  8093  0680  3400               	retlw	0
  8094  0681  3400               	retlw	0
  8095  0682  3400               	retlw	0
  8096  0683  34FF               	retlw	255
  8097  0684  3403               	retlw	3
  8098  0685  34FF               	retlw	255
  8099  0686  3403               	retlw	3
  8100  0687  34FF               	retlw	255
  8101  0688  3403               	retlw	3
  8102  0689  34FE               	retlw	254
  8103  068A  3403               	retlw	3
  8104  068B  34FE               	retlw	254
  8105  068C  3403               	retlw	3
  8106  068D  34FD               	retlw	253
  8107  068E  3403               	retlw	3
  8108  068F  34FC               	retlw	252
  8109  0690  3403               	retlw	3
  8110  0691  34FB               	retlw	251
  8111  0692  3403               	retlw	3
  8112  0693  34FA               	retlw	250
  8113  0694  3403               	retlw	3
  8114  0695  34F9               	retlw	249
  8115  0696  3403               	retlw	3
  8116  0697  34F7               	retlw	247
  8117  0698  3403               	retlw	3
  8118  0699  34F5               	retlw	245
  8119  069A  3403               	retlw	3
  8120  069B  34F4               	retlw	244
  8121  069C  3403               	retlw	3
  8122  069D  34F1               	retlw	241
  8123  069E  3403               	retlw	3
  8124  069F  34EF               	retlw	239
  8125  06A0  3403               	retlw	3
  8126  06A1  34ED               	retlw	237
  8127  06A2  3403               	retlw	3
  8128  06A3  34EA               	retlw	234
  8129  06A4  3403               	retlw	3
  8130  06A5  34E7               	retlw	231
  8131  06A6  3403               	retlw	3
  8132  06A7  34E5               	retlw	229
  8133  06A8  3403               	retlw	3
  8134  06A9  34E1               	retlw	225
  8135  06AA  3403               	retlw	3
  8136  06AB  34DE               	retlw	222
  8137  06AC  3403               	retlw	3
  8138  06AD  34DA               	retlw	218
  8139  06AE  3403               	retlw	3
  8140  06AF  34D7               	retlw	215
  8141  06B0  3403               	retlw	3
  8142  06B1  34D3               	retlw	211
  8143  06B2  3403               	retlw	3
  8144  06B3  34CF               	retlw	207
  8145  06B4  3403               	retlw	3
  8146  06B5  34CA               	retlw	202
  8147  06B6  3403               	retlw	3
  8148  06B7  34C6               	retlw	198
  8149  06B8  3403               	retlw	3
  8150  06B9  34C1               	retlw	193
  8151  06BA  3403               	retlw	3
  8152  06BB  34BC               	retlw	188
  8153  06BC  3403               	retlw	3
  8154  06BD  34B7               	retlw	183
  8155  06BE  3403               	retlw	3
  8156  06BF  34B1               	retlw	177
  8157  06C0  3403               	retlw	3
  8158  06C1  34AC               	retlw	172
  8159  06C2  3403               	retlw	3
  8160  06C3  34A6               	retlw	166
  8161  06C4  3403               	retlw	3
  8162  06C5  34A0               	retlw	160
  8163  06C6  3403               	retlw	3
  8164  06C7  3499               	retlw	153
  8165  06C8  3403               	retlw	3
  8166  06C9  3493               	retlw	147
  8167  06CA  3403               	retlw	3
  8168  06CB  348C               	retlw	140
  8169  06CC  3403               	retlw	3
  8170  06CD  3485               	retlw	133
  8171  06CE  3403               	retlw	3
  8172  06CF  347E               	retlw	126
  8173  06D0  3403               	retlw	3
  8174  06D1  3477               	retlw	119
  8175  06D2  3403               	retlw	3
  8176  06D3  346F               	retlw	111
  8177  06D4  3403               	retlw	3
  8178  06D5  3467               	retlw	103
  8179  06D6  3403               	retlw	3
  8180  06D7  345F               	retlw	95
  8181  06D8  3403               	retlw	3
  8182  06D9  3457               	retlw	87
  8183  06DA  3403               	retlw	3
  8184  06DB  344E               	retlw	78
  8185  06DC  3403               	retlw	3
  8186  06DD  3446               	retlw	70
  8187  06DE  3403               	retlw	3
  8188  06DF  343D               	retlw	61
  8189  06E0  3403               	retlw	3
  8190  06E1  3433               	retlw	51
  8191  06E2  3403               	retlw	3
  8192  06E3  342A               	retlw	42
  8193  06E4  3403               	retlw	3
  8194  06E5  3420               	retlw	32
  8195  06E6  3403               	retlw	3
  8196  06E7  3416               	retlw	22
  8197  06E8  3403               	retlw	3
  8198  06E9  340C               	retlw	12
  8199  06EA  3403               	retlw	3
  8200  06EB  3402               	retlw	2
  8201  06EC  3403               	retlw	3
  8202  06ED  34F7               	retlw	247
  8203  06EE  3402               	retlw	2
  8204  06EF  34EC               	retlw	236
  8205  06F0  3402               	retlw	2
  8206  06F1  34E1               	retlw	225
  8207  06F2  3402               	retlw	2
  8208  06F3  34D6               	retlw	214
  8209  06F4  3402               	retlw	2
  8210  06F5  34CA               	retlw	202
  8211  06F6  3402               	retlw	2
  8212  06F7  34BF               	retlw	191
  8213  06F8  3402               	retlw	2
  8214  06F9  34B2               	retlw	178
  8215  06FA  3402               	retlw	2
  8216  06FB  34A6               	retlw	166
  8217  06FC  3402               	retlw	2
  8218  06FD  349A               	retlw	154
  8219  06FE  3402               	retlw	2
  8220  06FF  348D               	retlw	141
  8221  0700  3402               	retlw	2
  8222  0701  3480               	retlw	128
  8223  0702  3402               	retlw	2
  8224  0703  3472               	retlw	114
  8225  0704  3402               	retlw	2
  8226  0705  3465               	retlw	101
  8227  0706  3402               	retlw	2
  8228  0707  3457               	retlw	87
  8229  0708  3402               	retlw	2
  8230  0709  3449               	retlw	73
  8231  070A  3402               	retlw	2
  8232  070B  343B               	retlw	59
  8233  070C  3402               	retlw	2
  8234  070D  342C               	retlw	44
  8235  070E  3402               	retlw	2
  8236  070F  341D               	retlw	29
  8237  0710  3402               	retlw	2
  8238  0711  340E               	retlw	14
  8239  0712  3402               	retlw	2
  8240  0713  34FF               	retlw	255
  8241  0714  3401               	retlw	1
  8242  0715  34F0               	retlw	240
  8243  0716  3401               	retlw	1
  8244  0717  34E0               	retlw	224
  8245  0718  3401               	retlw	1
  8246  0719  34D0               	retlw	208
  8247  071A  3401               	retlw	1
  8248  071B  34BF               	retlw	191
  8249  071C  3401               	retlw	1
  8250  071D  34AF               	retlw	175
  8251  071E  3401               	retlw	1
  8252  071F  349E               	retlw	158
  8253  0720  3401               	retlw	1
  8254  0721  348D               	retlw	141
  8255  0722  3401               	retlw	1
  8256  0723  347C               	retlw	124
  8257  0724  3401               	retlw	1
  8258  0725  346A               	retlw	106
  8259  0726  3401               	retlw	1
  8260  0727  3458               	retlw	88
  8261  0728  3401               	retlw	1
  8262  0729  3446               	retlw	70
  8263  072A  3401               	retlw	1
  8264  072B  3434               	retlw	52
  8265  072C  3401               	retlw	1
  8266  072D  3421               	retlw	33
  8267  072E  3401               	retlw	1
  8268  072F  340E               	retlw	14
  8269  0730  3401               	retlw	1
  8270  0731  34FB               	retlw	251
  8271  0732  3400               	retlw	0
  8272  0733  34E7               	retlw	231
  8273  0734  3400               	retlw	0
  8274  0735  34D4               	retlw	212
  8275  0736  3400               	retlw	0
  8276  0737  34C0               	retlw	192
  8277  0738  3400               	retlw	0
  8278  0739  34AB               	retlw	171
  8279  073A  3400               	retlw	0
  8280  073B  3497               	retlw	151
  8281  073C  3400               	retlw	0
  8282  073D  3482               	retlw	130
  8283  073E  3400               	retlw	0
  8284  073F  346D               	retlw	109
  8285  0740  3400               	retlw	0
  8286  0741  3458               	retlw	88
  8287  0742  3400               	retlw	0
  8288  0743  3442               	retlw	66
  8289  0744  3400               	retlw	0
  8290  0745  342C               	retlw	44
  8291  0746  3400               	retlw	0
  8292  0747  3416               	retlw	22
  8293  0748  3400               	retlw	0
  8294  0749  3400               	retlw	0
  8295  074A  3400               	retlw	0
  8296  074B  34FF               	retlw	255
  8297  074C  3403               	retlw	3
  8298  074D  34FF               	retlw	255
  8299  074E  3403               	retlw	3
  8300  074F  34FF               	retlw	255
  8301  0750  3403               	retlw	3
  8302  0751  34FF               	retlw	255
  8303  0752  3403               	retlw	3
  8304  0753  34FE               	retlw	254
  8305  0754  3403               	retlw	3
  8306  0755  34FE               	retlw	254
  8307  0756  3403               	retlw	3
  8308  0757  34FD               	retlw	253
  8309  0758  3403               	retlw	3
  8310  0759  34FD               	retlw	253
  8311  075A  3403               	retlw	3
  8312  075B  34FC               	retlw	252
  8313  075C  3403               	retlw	3
  8314  075D  34FB               	retlw	251
  8315  075E  3403               	retlw	3
  8316  075F  34FA               	retlw	250
  8317  0760  3403               	retlw	3
  8318  0761  34F9               	retlw	249
  8319  0762  3403               	retlw	3
  8320  0763  34F7               	retlw	247
  8321  0764  3403               	retlw	3
  8322  0765  34F6               	retlw	246
  8323  0766  3403               	retlw	3
  8324  0767  34F4               	retlw	244
  8325  0768  3403               	retlw	3
  8326  0769  34F2               	retlw	242
  8327  076A  3403               	retlw	3
  8328  076B  34F0               	retlw	240
  8329  076C  3403               	retlw	3
  8330  076D  34EE               	retlw	238
  8331  076E  3403               	retlw	3
  8332  076F  34EC               	retlw	236
  8333  0770  3403               	retlw	3
  8334  0771  34EA               	retlw	234
  8335  0772  3403               	retlw	3
  8336  0773  34E7               	retlw	231
  8337  0774  3403               	retlw	3
  8338  0775  34E4               	retlw	228
  8339  0776  3403               	retlw	3
  8340  0777  34E1               	retlw	225
  8341  0778  3403               	retlw	3
  8342  0779  34DE               	retlw	222
  8343  077A  3403               	retlw	3
  8344  077B  34DA               	retlw	218
  8345  077C  3403               	retlw	3
  8346  077D  34D7               	retlw	215
  8347  077E  3403               	retlw	3
  8348  077F  34D3               	retlw	211
  8349  0780  3403               	retlw	3
  8350  0781  34CF               	retlw	207
  8351  0782  3403               	retlw	3
  8352  0783  34CB               	retlw	203
  8353  0784  3403               	retlw	3
  8354  0785  34C6               	retlw	198
  8355  0786  3403               	retlw	3
  8356  0787  34C1               	retlw	193
  8357  0788  3403               	retlw	3
  8358  0789  34BD               	retlw	189
  8359  078A  3403               	retlw	3
  8360  078B  34B7               	retlw	183
  8361  078C  3403               	retlw	3
  8362  078D  34B2               	retlw	178
  8363  078E  3403               	retlw	3
  8364  078F  34AD               	retlw	173
  8365  0790  3403               	retlw	3
  8366  0791  34A7               	retlw	167
  8367  0792  3403               	retlw	3
  8368  0793  34A1               	retlw	161
  8369  0794  3403               	retlw	3
  8370  0795  349B               	retlw	155
  8371  0796  3403               	retlw	3
  8372  0797  3494               	retlw	148
  8373  0798  3403               	retlw	3
  8374  0799  348E               	retlw	142
  8375  079A  3403               	retlw	3
  8376  079B  3487               	retlw	135
  8377  079C  3403               	retlw	3
  8378  079D  347F               	retlw	127
  8379  079E  3403               	retlw	3
  8380  079F  3478               	retlw	120
  8381  07A0  3403               	retlw	3
  8382  07A1  3470               	retlw	112
  8383  07A2  3403               	retlw	3
  8384  07A3  3468               	retlw	104
  8385  07A4  3403               	retlw	3
  8386  07A5  3460               	retlw	96
  8387  07A6  3403               	retlw	3
  8388  07A7  3458               	retlw	88
  8389  07A8  3403               	retlw	3
  8390  07A9  344F               	retlw	79
  8391  07AA  3403               	retlw	3
  8392  07AB  3446               	retlw	70
  8393  07AC  3403               	retlw	3
  8394  07AD  343D               	retlw	61
  8395  07AE  3403               	retlw	3
  8396  07AF  3434               	retlw	52
  8397  07B0  3403               	retlw	3
  8398  07B1  342A               	retlw	42
  8399  07B2  3403               	retlw	3
  8400  07B3  3420               	retlw	32
  8401  07B4  3403               	retlw	3
  8402  07B5  3416               	retlw	22
  8403  07B6  3403               	retlw	3
  8404  07B7  340B               	retlw	11
  8405  07B8  3403               	retlw	3
  8406  07B9  3401               	retlw	1
  8407  07BA  3403               	retlw	3
  8408  07BB  34F6               	retlw	246
  8409  07BC  3402               	retlw	2
  8410  07BD  34EA               	retlw	234
  8411  07BE  3402               	retlw	2
  8412  07BF  34DF               	retlw	223
  8413  07C0  3402               	retlw	2
  8414  07C1  34D3               	retlw	211
  8415  07C2  3402               	retlw	2
  8416  07C3  34C7               	retlw	199
  8417  07C4  3402               	retlw	2
  8418  07C5  34BA               	retlw	186
  8419  07C6  3402               	retlw	2
  8420  07C7  34AD               	retlw	173
  8421  07C8  3402               	retlw	2
  8422  07C9  34A0               	retlw	160
  8423  07CA  3402               	retlw	2
  8424  07CB  3493               	retlw	147
  8425  07CC  3402               	retlw	2
  8426  07CD  3486               	retlw	134
  8427  07CE  3402               	retlw	2
  8428  07CF  3478               	retlw	120
  8429  07D0  3402               	retlw	2
  8430  07D1  346A               	retlw	106
  8431  07D2  3402               	retlw	2
  8432  07D3  345B               	retlw	91
  8433  07D4  3402               	retlw	2
  8434  07D5  344C               	retlw	76
  8435  07D6  3402               	retlw	2
  8436  07D7  343D               	retlw	61
  8437  07D8  3402               	retlw	2
  8438  07D9  342E               	retlw	46
  8439  07DA  3402               	retlw	2
  8440  07DB  341E               	retlw	30
  8441  07DC  3402               	retlw	2
  8442  07DD  340E               	retlw	14
  8443  07DE  3402               	retlw	2
  8444  07DF  34FE               	retlw	254
  8445  07E0  3401               	retlw	1
  8446  07E1  34EE               	retlw	238
  8447  07E2  3401               	retlw	1
  8448  07E3  34DD               	retlw	221
  8449  07E4  3401               	retlw	1
  8450  07E5  34CB               	retlw	203
  8451  07E6  3401               	retlw	1
  8452  07E7  34BA               	retlw	186
  8453  07E8  3401               	retlw	1
  8454  07E9  34A8               	retlw	168
  8455  07EA  3401               	retlw	1
  8456  07EB  3496               	retlw	150
  8457  07EC  3401               	retlw	1
  8458  07ED  3484               	retlw	132
  8459  07EE  3401               	retlw	1
  8460  07EF  3471               	retlw	113
  8461  07F0  3401               	retlw	1
  8462  07F1  345E               	retlw	94
  8463  07F2  3401               	retlw	1
  8464  07F3  344A               	retlw	74
  8465  07F4  3401               	retlw	1
  8466  07F5  3437               	retlw	55
  8467  07F6  3401               	retlw	1
  8468  07F7  3423               	retlw	35
  8469  07F8  3401               	retlw	1
  8470  07F9  340E               	retlw	14
  8471  07FA  3401               	retlw	1
  8472  07FB  34FA               	retlw	250
  8473  07FC  3400               	retlw	0
  8474  07FD  34E5               	retlw	229
  8475  07FE  3400               	retlw	0
  8476  07FF  34CF               	retlw	207
  8477  0800  3400               	retlw	0
  8478  0801  34BA               	retlw	186
  8479  0802  3400               	retlw	0
  8480  0803  34A4               	retlw	164
  8481  0804  3400               	retlw	0
  8482  0805  348D               	retlw	141
  8483  0806  3400               	retlw	0
  8484  0807  3476               	retlw	118
  8485  0808  3400               	retlw	0
  8486  0809  345F               	retlw	95
  8487  080A  3400               	retlw	0
  8488  080B  3448               	retlw	72
  8489  080C  3400               	retlw	0
  8490  080D  3430               	retlw	48
  8491  080E  3400               	retlw	0
  8492  080F  3418               	retlw	24
  8493  0810  3400               	retlw	0
  8494  0811  3400               	retlw	0
  8495  0812  3400               	retlw	0
  8496  0813  34FF               	retlw	255
  8497  0814  3403               	retlw	3
  8498  0815  34FF               	retlw	255
  8499  0816  3403               	retlw	3
  8500  0817  34FF               	retlw	255
  8501  0818  3403               	retlw	3
  8502  0819  34FF               	retlw	255
  8503  081A  3403               	retlw	3
  8504  081B  34FF               	retlw	255
  8505  081C  3403               	retlw	3
  8506  081D  34FE               	retlw	254
  8507  081E  3403               	retlw	3
  8508  081F  34FE               	retlw	254
  8509  0820  3403               	retlw	3
  8510  0821  34FE               	retlw	254
  8511  0822  3403               	retlw	3
  8512  0823  34FD               	retlw	253
  8513  0824  3403               	retlw	3
  8514  0825  34FC               	retlw	252
  8515  0826  3403               	retlw	3
  8516  0827  34FC               	retlw	252
  8517  0828  3403               	retlw	3
  8518  0829  34FB               	retlw	251
  8519  082A  3403               	retlw	3
  8520  082B  34FA               	retlw	250
  8521  082C  3403               	retlw	3
  8522  082D  34F9               	retlw	249
  8523  082E  3403               	retlw	3
  8524  082F  34F8               	retlw	248
  8525  0830  3403               	retlw	3
  8526  0831  34F6               	retlw	246
  8527  0832  3403               	retlw	3
  8528  0833  34F5               	retlw	245
  8529  0834  3403               	retlw	3
  8530  0835  34F3               	retlw	243
  8531  0836  3403               	retlw	3
  8532  0837  34F1               	retlw	241
  8533  0838  3403               	retlw	3
  8534  0839  34EF               	retlw	239
  8535  083A  3403               	retlw	3
  8536  083B  34ED               	retlw	237
  8537  083C  3403               	retlw	3
  8538  083D  34EB               	retlw	235
  8539  083E  3403               	retlw	3
  8540  083F  34E9               	retlw	233
  8541  0840  3403               	retlw	3
  8542  0841  34E6               	retlw	230
  8543  0842  3403               	retlw	3
  8544  0843  34E3               	retlw	227
  8545  0844  3403               	retlw	3
  8546  0845  34E0               	retlw	224
  8547  0846  3403               	retlw	3
  8548  0847  34DD               	retlw	221
  8549  0848  3403               	retlw	3
  8550  0849  34DA               	retlw	218
  8551  084A  3403               	retlw	3
  8552  084B  34D6               	retlw	214
  8553  084C  3403               	retlw	3
  8554  084D  34D2               	retlw	210
  8555  084E  3403               	retlw	3
  8556  084F  34CE               	retlw	206
  8557  0850  3403               	retlw	3
  8558  0851  34CA               	retlw	202
  8559  0852  3403               	retlw	3
  8560  0853  34C6               	retlw	198
  8561  0854  3403               	retlw	3
  8562  0855  34C1               	retlw	193
  8563  0856  3403               	retlw	3
  8564  0857  34BC               	retlw	188
  8565  0858  3403               	retlw	3
  8566  0859  34B7               	retlw	183
  8567  085A  3403               	retlw	3
  8568  085B  34B2               	retlw	178
  8569  085C  3403               	retlw	3
  8570  085D  34AC               	retlw	172
  8571  085E  3403               	retlw	3
  8572  085F  34A7               	retlw	167
  8573  0860  3403               	retlw	3
  8574  0861  34A1               	retlw	161
  8575  0862  3403               	retlw	3
  8576  0863  349A               	retlw	154
  8577  0864  3403               	retlw	3
  8578  0865  3494               	retlw	148
  8579  0866  3403               	retlw	3
  8580  0867  348D               	retlw	141
  8581  0868  3403               	retlw	3
  8582  0869  3486               	retlw	134
  8583  086A  3403               	retlw	3
  8584  086B  347F               	retlw	127
  8585  086C  3403               	retlw	3
  8586  086D  3477               	retlw	119
  8587  086E  3403               	retlw	3
  8588  086F  346F               	retlw	111
  8589  0870  3403               	retlw	3
  8590  0871  3467               	retlw	103
  8591  0872  3403               	retlw	3
  8592  0873  345F               	retlw	95
  8593  0874  3403               	retlw	3
  8594  0875  3456               	retlw	86
  8595  0876  3403               	retlw	3
  8596  0877  344D               	retlw	77
  8597  0878  3403               	retlw	3
  8598  0879  3444               	retlw	68
  8599  087A  3403               	retlw	3
  8600  087B  343B               	retlw	59
  8601  087C  3403               	retlw	3
  8602  087D  3431               	retlw	49
  8603  087E  3403               	retlw	3
  8604  087F  3427               	retlw	39
  8605  0880  3403               	retlw	3
  8606  0881  341C               	retlw	28
  8607  0882  3403               	retlw	3
  8608  0883  3412               	retlw	18
  8609  0884  3403               	retlw	3
  8610  0885  3407               	retlw	7
  8611  0886  3403               	retlw	3
  8612  0887  34FC               	retlw	252
  8613  0888  3402               	retlw	2
  8614  0889  34F0               	retlw	240
  8615  088A  3402               	retlw	2
  8616  088B  34E4               	retlw	228
  8617  088C  3402               	retlw	2
  8618  088D  34D8               	retlw	216
  8619  088E  3402               	retlw	2
  8620  088F  34CB               	retlw	203
  8621  0890  3402               	retlw	2
  8622  0891  34BE               	retlw	190
  8623  0892  3402               	retlw	2
  8624  0893  34B1               	retlw	177
  8625  0894  3402               	retlw	2
  8626  0895  34A4               	retlw	164
  8627  0896  3402               	retlw	2
  8628  0897  3496               	retlw	150
  8629  0898  3402               	retlw	2
  8630  0899  3488               	retlw	136
  8631  089A  3402               	retlw	2
  8632  089B  3479               	retlw	121
  8633  089C  3402               	retlw	2
  8634  089D  346A               	retlw	106
  8635  089E  3402               	retlw	2
  8636  089F  345B               	retlw	91
  8637  08A0  3402               	retlw	2
  8638  08A1  344C               	retlw	76
  8639  08A2  3402               	retlw	2
  8640  08A3  343C               	retlw	60
  8641  08A4  3402               	retlw	2
  8642  08A5  342B               	retlw	43
  8643  08A6  3402               	retlw	2
  8644  08A7  341B               	retlw	27
  8645  08A8  3402               	retlw	2
  8646  08A9  340A               	retlw	10
  8647  08AA  3402               	retlw	2
  8648  08AB  34F8               	retlw	248
  8649  08AC  3401               	retlw	1
  8650  08AD  34E7               	retlw	231
  8651  08AE  3401               	retlw	1
  8652  08AF  34D5               	retlw	213
  8653  08B0  3401               	retlw	1
  8654  08B1  34C2               	retlw	194
  8655  08B2  3401               	retlw	1
  8656  08B3  34B0               	retlw	176
  8657  08B4  3401               	retlw	1
  8658  08B5  349C               	retlw	156
  8659  08B6  3401               	retlw	1
  8660  08B7  3489               	retlw	137
  8661  08B8  3401               	retlw	1
  8662  08B9  3475               	retlw	117
  8663  08BA  3401               	retlw	1
  8664  08BB  3461               	retlw	97
  8665  08BC  3401               	retlw	1
  8666  08BD  344C               	retlw	76
  8667  08BE  3401               	retlw	1
  8668  08BF  3437               	retlw	55
  8669  08C0  3401               	retlw	1
  8670  08C1  3421               	retlw	33
  8671  08C2  3401               	retlw	1
  8672  08C3  340B               	retlw	11
  8673  08C4  3401               	retlw	1
  8674  08C5  34F5               	retlw	245
  8675  08C6  3400               	retlw	0
  8676  08C7  34DE               	retlw	222
  8677  08C8  3400               	retlw	0
  8678  08C9  34C7               	retlw	199
  8679  08CA  3400               	retlw	0
  8680  08CB  34B0               	retlw	176
  8681  08CC  3400               	retlw	0
  8682  08CD  3498               	retlw	152
  8683  08CE  3400               	retlw	0
  8684  08CF  3480               	retlw	128
  8685  08D0  3400               	retlw	0
  8686  08D1  3467               	retlw	103
  8687  08D2  3400               	retlw	0
  8688  08D3  344E               	retlw	78
  8689  08D4  3400               	retlw	0
  8690  08D5  3434               	retlw	52
  8691  08D6  3400               	retlw	0
  8692  08D7  341A               	retlw	26
  8693  08D8  3400               	retlw	0
  8694  08D9  3400               	retlw	0
  8695  08DA  3400               	retlw	0
  8696  08DB  34FF               	retlw	255
  8697  08DC  3403               	retlw	3
  8698  08DD  34FF               	retlw	255
  8699  08DE  3403               	retlw	3
  8700  08DF  34FF               	retlw	255
  8701  08E0  3403               	retlw	3
  8702  08E1  34FF               	retlw	255
  8703  08E2  3403               	retlw	3
  8704  08E3  34FF               	retlw	255
  8705  08E4  3403               	retlw	3
  8706  08E5  34FF               	retlw	255
  8707  08E6  3403               	retlw	3
  8708  08E7  34FE               	retlw	254
  8709  08E8  3403               	retlw	3
  8710  08E9  34FE               	retlw	254
  8711  08EA  3403               	retlw	3
  8712  08EB  34FE               	retlw	254
  8713  08EC  3403               	retlw	3
  8714  08ED  34FD               	retlw	253
  8715  08EE  3403               	retlw	3
  8716  08EF  34FD               	retlw	253
  8717  08F0  3403               	retlw	3
  8718  08F1  34FC               	retlw	252
  8719  08F2  3403               	retlw	3
  8720  08F3  34FC               	retlw	252
  8721  08F4  3403               	retlw	3
  8722  08F5  34FB               	retlw	251
  8723  08F6  3403               	retlw	3
  8724  08F7  34FA               	retlw	250
  8725  08F8  3403               	retlw	3
  8726  08F9  34F9               	retlw	249
  8727  08FA  3403               	retlw	3
  8728  08FB  34F8               	retlw	248
  8729  08FC  3403               	retlw	3
  8730  08FD  34F7               	retlw	247
  8731  08FE  3403               	retlw	3
  8732  08FF  34F5               	retlw	245
  8733  0900  3403               	retlw	3
  8734  0901  34F4               	retlw	244
  8735  0902  3403               	retlw	3
  8736  0903  34F2               	retlw	242
  8737  0904  3403               	retlw	3
  8738  0905  34F0               	retlw	240
  8739  0906  3403               	retlw	3
  8740  0907  34EE               	retlw	238
  8741  0908  3403               	retlw	3
  8742  0909  34EC               	retlw	236
  8743  090A  3403               	retlw	3
  8744  090B  34EA               	retlw	234
  8745  090C  3403               	retlw	3
  8746  090D  34E7               	retlw	231
  8747  090E  3403               	retlw	3
  8748  090F  34E5               	retlw	229
  8749  0910  3403               	retlw	3
  8750  0911  34E2               	retlw	226
  8751  0912  3403               	retlw	3
  8752  0913  34DF               	retlw	223
  8753  0914  3403               	retlw	3
  8754  0915  34DC               	retlw	220
  8755  0916  3403               	retlw	3
  8756  0917  34D8               	retlw	216
  8757  0918  3403               	retlw	3
  8758  0919  34D5               	retlw	213
  8759  091A  3403               	retlw	3
  8760  091B  34D1               	retlw	209
  8761  091C  3403               	retlw	3
  8762  091D  34CD               	retlw	205
  8763  091E  3403               	retlw	3
  8764  091F  34C9               	retlw	201
  8765  0920  3403               	retlw	3
  8766  0921  34C4               	retlw	196
  8767  0922  3403               	retlw	3
  8768  0923  34C0               	retlw	192
  8769  0924  3403               	retlw	3
  8770  0925  34BB               	retlw	187
  8771  0926  3403               	retlw	3
  8772  0927  34B6               	retlw	182
  8773  0928  3403               	retlw	3
  8774  0929  34B0               	retlw	176
  8775  092A  3403               	retlw	3
  8776  092B  34AB               	retlw	171
  8777  092C  3403               	retlw	3
  8778  092D  34A5               	retlw	165
  8779  092E  3403               	retlw	3
  8780  092F  349F               	retlw	159
  8781  0930  3403               	retlw	3
  8782  0931  3498               	retlw	152
  8783  0932  3403               	retlw	3
  8784  0933  3492               	retlw	146
  8785  0934  3403               	retlw	3
  8786  0935  348B               	retlw	139
  8787  0936  3403               	retlw	3
  8788  0937  3483               	retlw	131
  8789  0938  3403               	retlw	3
  8790  0939  347C               	retlw	124
  8791  093A  3403               	retlw	3
  8792  093B  3474               	retlw	116
  8793  093C  3403               	retlw	3
  8794  093D  346C               	retlw	108
  8795  093E  3403               	retlw	3
  8796  093F  3464               	retlw	100
  8797  0940  3403               	retlw	3
  8798  0941  345B               	retlw	91
  8799  0942  3403               	retlw	3
  8800  0943  3452               	retlw	82
  8801  0944  3403               	retlw	3
  8802  0945  3449               	retlw	73
  8803  0946  3403               	retlw	3
  8804  0947  343F               	retlw	63
  8805  0948  3403               	retlw	3
  8806  0949  3435               	retlw	53
  8807  094A  3403               	retlw	3
  8808  094B  342B               	retlw	43
  8809  094C  3403               	retlw	3
  8810  094D  3420               	retlw	32
  8811  094E  3403               	retlw	3
  8812  094F  3416               	retlw	22
  8813  0950  3403               	retlw	3
  8814  0951  340A               	retlw	10
  8815  0952  3403               	retlw	3
  8816  0953  34FF               	retlw	255
  8817  0954  3402               	retlw	2
  8818  0955  34F3               	retlw	243
  8819  0956  3402               	retlw	2
  8820  0957  34E6               	retlw	230
  8821  0958  3402               	retlw	2
  8822  0959  34DA               	retlw	218
  8823  095A  3402               	retlw	2
  8824  095B  34CD               	retlw	205
  8825  095C  3402               	retlw	2
  8826  095D  34BF               	retlw	191
  8827  095E  3402               	retlw	2
  8828  095F  34B2               	retlw	178
  8829  0960  3402               	retlw	2
  8830  0961  34A4               	retlw	164
  8831  0962  3402               	retlw	2
  8832  0963  3495               	retlw	149
  8833  0964  3402               	retlw	2
  8834  0965  3486               	retlw	134
  8835  0966  3402               	retlw	2
  8836  0967  3477               	retlw	119
  8837  0968  3402               	retlw	2
  8838  0969  3467               	retlw	103
  8839  096A  3402               	retlw	2
  8840  096B  3457               	retlw	87
  8841  096C  3402               	retlw	2
  8842  096D  3447               	retlw	71
  8843  096E  3402               	retlw	2
  8844  096F  3436               	retlw	54
  8845  0970  3402               	retlw	2
  8846  0971  3425               	retlw	37
  8847  0972  3402               	retlw	2
  8848  0973  3413               	retlw	19
  8849  0974  3402               	retlw	2
  8850  0975  3401               	retlw	1
  8851  0976  3402               	retlw	2
  8852  0977  34EE               	retlw	238
  8853  0978  3401               	retlw	1
  8854  0979  34DB               	retlw	219
  8855  097A  3401               	retlw	1
  8856  097B  34C8               	retlw	200
  8857  097C  3401               	retlw	1
  8858  097D  34B4               	retlw	180
  8859  097E  3401               	retlw	1
  8860  097F  34A0               	retlw	160
  8861  0980  3401               	retlw	1
  8862  0981  348B               	retlw	139
  8863  0982  3401               	retlw	1
  8864  0983  3476               	retlw	118
  8865  0984  3401               	retlw	1
  8866  0985  3460               	retlw	96
  8867  0986  3401               	retlw	1
  8868  0987  344A               	retlw	74
  8869  0988  3401               	retlw	1
  8870  0989  3434               	retlw	52
  8871  098A  3401               	retlw	1
  8872  098B  341D               	retlw	29
  8873  098C  3401               	retlw	1
  8874  098D  3405               	retlw	5
  8875  098E  3401               	retlw	1
  8876  098F  34ED               	retlw	237
  8877  0990  3400               	retlw	0
  8878  0991  34D5               	retlw	213
  8879  0992  3400               	retlw	0
  8880  0993  34BC               	retlw	188
  8881  0994  3400               	retlw	0
  8882  0995  34A3               	retlw	163
  8883  0996  3400               	retlw	0
  8884  0997  3489               	retlw	137
  8885  0998  3400               	retlw	0
  8886  0999  346E               	retlw	110
  8887  099A  3400               	retlw	0
  8888  099B  3454               	retlw	84
  8889  099C  3400               	retlw	0
  8890  099D  3438               	retlw	56
  8891  099E  3400               	retlw	0
  8892  099F  341C               	retlw	28
  8893  09A0  3400               	retlw	0
  8894  09A1  3400               	retlw	0
  8895  09A2  3400               	retlw	0
  8896  09A3                     __end_of_gamma_table:	
  8897                           
  8898                           	psect	nvBANK0
  8899  005E                     __pnvBANK0:	
  8900  005E                     _i2c_address:	
  8901  005E                     	ds	1
  8902  0003                     _STATUSbits	set	3
  8903  000D                     _PORTBbits	set	13
  8904  000C                     _PORTAbits	set	12
  8905  001F                     _T2CON	set	31
  8906  001D                     _TMR2	set	29
  8907  001E                     _PR2	set	30
  8908  000E                     _PORTCbits	set	14
  8909  0011                     _PIR1bits	set	17
  8910  0013                     _PIR3bits	set	19
  8911  000B                     _INTCONbits	set	11
  8912  008C                     _TRISAbits	set	140
  8913  008E                     _TRISCbits	set	142
  8914  009D                     _ADCON0bits	set	157
  8915  009C                     _ADRESH	set	156
  8916  009B                     _ADRESL	set	155
  8917  009F                     _ADACT	set	159
  8918  009E                     _ADCON1	set	158
  8919  009D                     _ADCON0	set	157
  8920  008E                     _TRISC	set	142
  8921  008D                     _TRISB	set	141
  8922  008C                     _TRISA	set	140
  8923  0091                     _PIE1bits	set	145
  8924  0093                     _PIE3bits	set	147
  8925  0097                     _WDTCON	set	151
  8926  010E                     _LATCbits	set	270
  8927  010D                     _LATBbits	set	269
  8928  010E                     _LATC	set	270
  8929  010D                     _LATB	set	269
  8930  010C                     _LATA	set	268
  8931  018E                     _ANSELCbits	set	398
  8932  018C                     _ANSELA	set	396
  8933  018D                     _ANSELB	set	397
  8934  018E                     _ANSELC	set	398
  8935  020E                     _WPUCbits	set	526
  8936  020D                     _WPUBbits	set	525
  8937  020C                     _WPUAbits	set	524
  8938  020E                     _WPUC	set	526
  8939  020C                     _WPUA	set	524
  8940  020D                     _WPUB	set	525
  8941  0215                     _SSP1CON1bits	set	533
  8942  0216                     _SSP1CON2bits	set	534
  8943  0214                     _SSP1STATbits	set	532
  8944  0211                     _SSP1BUF	set	529
  8945  0212                     _SSP1ADD	set	530
  8946  0213                     _SSP1MSK	set	531
  8947  0217                     _SSP1CON3	set	535
  8948  0214                     _SSP1STAT	set	532
  8949  0216                     _SSP1CON2	set	534
  8950  0215                     _SSP1CON1	set	533
  8951  028E                     _ODCONCbits	set	654
  8952  0295                     _CCPR2L	set	661
  8953  0296                     _CCPR2H	set	662
  8954  0297                     _CCP2CON	set	663
  8955  0291                     _CCPR1L	set	657
  8956  0292                     _CCPR1H	set	658
  8957  0293                     _CCP1CON	set	659
  8958  029F                     _CCPTMRSbits	set	671
  8959  028E                     _ODCONC	set	654
  8960  028D                     _ODCONB	set	653
  8961  028C                     _ODCONA	set	652
  8962  0311                     _CCPR3L	set	785
  8963  0312                     _CCPR3H	set	786
  8964  0313                     _CCP3CON	set	787
  8965  0413                     _T3CONbits	set	1043
  8966  0413                     _T3CON	set	1043
  8967  0411                     _TMR3L	set	1041
  8968  0412                     _TMR3H	set	1042
  8969  0414                     _T3GCON	set	1044
  8970  0896                     _NVMCON2	set	2198
  8971  0894                     _NVMDATH	set	2196
  8972  0893                     _NVMDATL	set	2195
  8973  0892                     _NVMADRH	set	2194
  8974  0891                     _NVMADRL	set	2193
  8975  0895                     _NVMCON1bits	set	2197
  8976  0916                     _PMD5	set	2326
  8977  0915                     _PMD4	set	2325
  8978  0914                     _PMD3	set	2324
  8979  0913                     _PMD2	set	2323
  8980  0912                     _PMD1	set	2322
  8981  0911                     _PMD0	set	2321
  8982  091E                     _OSCTUNE	set	2334
  8983  091F                     _OSCFRQ	set	2335
  8984  091D                     _OSCEN	set	2333
  8985  091B                     _OSCCON3	set	2331
  8986  0919                     _OSCCON1	set	2329
  8987  0E0F                     _PPSLOCKbits	set	3599
  8988  0E0F                     _PPSLOCK	set	3599
  8989  0E28                     _CLCIN0PPSbits	set	3624
  8990  0E29                     _CLCIN1PPSbits	set	3625
  8991  0E21                     _SSP1DATPPSbits	set	3617
  8992  0E20                     _SSP1CLKPPSbits	set	3616
  8993  0EA0                     _RC0PPSbits	set	3744
  8994  0EA1                     _RC1PPSbits	set	3745
  8995  0EA2                     _RC2PPSbits	set	3746
  8996  0E9E                     _RB6PPSbits	set	3742
  8997  0E9F                     _RB7PPSbits	set	3743
  8998  0F10                     _CLC1CON	set	3856
  8999  0F19                     _CLC1GLS3	set	3865
  9000  0F18                     _CLC1GLS2	set	3864
  9001  0F17                     _CLC1GLS1	set	3863
  9002  0F16                     _CLC1GLS0	set	3862
  9003  0F15                     _CLC1SEL3	set	3861
  9004  0F14                     _CLC1SEL2	set	3860
  9005  0F13                     _CLC1SEL1	set	3859
  9006  0F12                     _CLC1SEL0	set	3858
  9007  0F11                     _CLC1POL	set	3857
  9008  0F1A                     _CLC2CON	set	3866
  9009  0F23                     _CLC2GLS3	set	3875
  9010  0F22                     _CLC2GLS2	set	3874
  9011  0F21                     _CLC2GLS1	set	3873
  9012  0F20                     _CLC2GLS0	set	3872
  9013  0F1F                     _CLC2SEL3	set	3871
  9014  0F1E                     _CLC2SEL2	set	3870
  9015  0F1D                     _CLC2SEL1	set	3869
  9016  0F1C                     _CLC2SEL0	set	3868
  9017  0F1B                     _CLC2POL	set	3867
  9018                           
  9019                           ; #config settings
  9020  0000                     
  9021                           	psect	cinit
  9022  0032                     start_initialization:	
  9023  0032                     __initialization:	
  9024                           
  9025                           ;initializer for _I2C1_slaveWriteData
  9026  0032  3055               	movlw	85
  9027  0033  00DF               	movwf	__pdataBANK0& (0+127)
  9028                           
  9029                           ; Clear objects allocated to BANK0
  9030  0034  3020               	movlw	low __pbssBANK0
  9031  0035  0084               	movwf	4
  9032  0036  3000               	movlw	high __pbssBANK0
  9033  0037  0085               	movwf	5
  9034  0038  302A               	movlw	42
  9035  0039  3189  21A4  3180   	fcall	clear_ram0
  9036                           
  9037                           ; Clear objects allocated to BANK1
  9038  003C  30A0               	movlw	low __pbssBANK1
  9039  003D  0084               	movwf	4
  9040  003E  3000               	movlw	high __pbssBANK1
  9041  003F  0085               	movwf	5
  9042  0040  302B               	movlw	43
  9043  0041  3189  21A4  3180   	fcall	clear_ram0
  9044  0044                     end_of_initialization:	
  9045                           ;End of C runtime variable initialization code
  9046                           
  9047  0044                     __end_of__initialization:	
  9048  0044  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  9049  0045  0020               	movlb	0
  9050  0046  2847               	ljmp	l7484	;jump to C main() function
  9051  0047                     __pmaintext:	
  9052 ;;
  9053 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  9054 ;;
  9055 ;; *************** function _main *****************
  9056 ;; Defined at:
  9057 ;;		line 80 in file "main.c"
  9058 ;; Parameters:    Size  Location     Type
  9059 ;;		None
  9060 ;; Auto vars:     Size  Location     Type
  9061 ;;		None
  9062 ;; Return value:  Size  Location     Type
  9063 ;;                  1    wreg      void 
  9064 ;; Registers used:
  9065 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9066 ;; Tracked objects:
  9067 ;;		On entry : B1F/0
  9068 ;;		On exit  : 1E/0
  9069 ;;		Unchanged: 0/0
  9070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9075 ;;Total ram usage:        0 bytes
  9076 ;; Hardware stack levels required when called:   12
  9077 ;; This function calls:
  9078 ;;		_ClearInterrupt
  9079 ;;		_DataInitSet
  9080 ;;		_GP_Ports_FSM
  9081 ;;		_NavKey_FSM
  9082 ;;		_SYSTEM_Initialize
  9083 ;;		_TMR3_SetInterruptHandler
  9084 ;;		_TMR3_StartTimer
  9085 ;; This function is called by:
  9086 ;;		Startup code after reset
  9087 ;; This function uses a non-reentrant model
  9088 ;;
  9089                           
  9090                           
  9091                           ;psect for function _main
  9092  0047                     _main:	
  9093  0047                     l7484:	
  9094                           ;incstack = 0
  9095                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9096                           
  9097                           
  9098                           ;main.c: 82: SYSTEM_Initialize();
  9099  0047  318B  2318  3180   	fcall	_SYSTEM_Initialize
  9100                           
  9101                           ;main.c: 88: (INTCONbits.GIE = 1);
  9102  004A  178B               	bsf	11,7	;volatile
  9103                           
  9104                           ;main.c: 91: (INTCONbits.PEIE = 1);
  9105  004B  170B               	bsf	11,6	;volatile
  9106                           
  9107                           ;main.c: 99: TMR3_SetInterruptHandler(TimerInt);
  9108  004C  30DC               	movlw	low _TimerInt
  9109  004D  0021               	movlb	1	; select bank1
  9110  004E  00CB               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
  9111  004F  3011               	movlw	high _TimerInt
  9112  0050  00CC               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  9113  0051  2423  3180         	fcall	_TMR3_SetInterruptHandler
  9114                           
  9115                           ;main.c: 100: DataInitSet();
  9116  0053  2068  3180         	fcall	_DataInitSet
  9117  0055  150E               	bsf	14,2	;volatile
  9118  0056  148E               	bsf	14,1	;volatile
  9119  0057  140E               	bsf	14,0	;volatile
  9120                           
  9121                           ;main.c: 105: TMR3_StartTimer();
  9122  0058  2428  3180         	fcall	_TMR3_StartTimer
  9123                           
  9124                           ;main.c: 106: ClearInterrupt();
  9125  005A  2065  3180         	fcall	_ClearInterrupt
  9126  005C                     l7500:	
  9127                           
  9128                           ;main.c: 109: if (fsm_tmr == 1) {
  9129  005C  0021               	movlb	1	; select bank1
  9130  005D  0B4A               	decfsz	_fsm_tmr^(0+128),w
  9131  005E  285C               	goto	l7500
  9132                           
  9133                           ;main.c: 111: fsm_tmr = 0;
  9134  005F  01CA               	clrf	_fsm_tmr^(0+128)
  9135                           
  9136                           ;main.c: 112: NavKey_FSM();
  9137  0060  2409  3180         	fcall	_NavKey_FSM
  9138                           
  9139                           ;main.c: 113: GP_Ports_FSM();
  9140  0062  20C1  3180         	fcall	_GP_Ports_FSM
  9141  0064  285C               	goto	l7500
  9142  0065                     __end_of_main:	
  9143  0065                     __ptext40:	
  9144 ;; *************** function _ClearInterrupt *****************
  9145 ;; Defined at:
  9146 ;;		line 66 in file "main.c"
  9147 ;; Parameters:    Size  Location     Type
  9148 ;;		None
  9149 ;; Auto vars:     Size  Location     Type
  9150 ;;		None
  9151 ;; Return value:  Size  Location     Type
  9152 ;;                  1    wreg      void 
  9153 ;; Registers used:
  9154 ;;		None
  9155 ;; Tracked objects:
  9156 ;;		On entry : 1F/8
  9157 ;;		On exit  : 1F/2
  9158 ;;		Unchanged: 0/0
  9159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9164 ;;Total ram usage:        0 bytes
  9165 ;; Hardware stack levels used:    1
  9166 ;; Hardware stack levels required when called:    7
  9167 ;; This function calls:
  9168 ;;		Nothing
  9169 ;; This function is called by:
  9170 ;;		_main
  9171 ;; This function uses a non-reentrant model
  9172 ;;
  9173                           
  9174                           
  9175                           ;psect for function _ClearInterrupt
  9176  0065                     _ClearInterrupt:	
  9177                           
  9178                           ;incstack = 0
  9179                           ; Regs used in _ClearInterrupt: []
  9180                           ;main.c: 67: do { LATBbits.LATB5 = 1; } while(0);
  9181  0065  0022               	movlb	2	; select bank2
  9182  0066  168D               	bsf	13,5	;volatile
  9183  0067  0008               	return
  9184  0068                     __end_of_ClearInterrupt:	
  9185  0068                     __ptext39:	
  9186 ;; *************** function _DataInitSet *****************
  9187 ;; Defined at:
  9188 ;;		line 54 in file "DataVariable.c"
  9189 ;; Parameters:    Size  Location     Type
  9190 ;;		None
  9191 ;; Auto vars:     Size  Location     Type
  9192 ;;		None
  9193 ;; Return value:  Size  Location     Type
  9194 ;;                  1    wreg      void 
  9195 ;; Registers used:
  9196 ;;		wreg, status,2
  9197 ;; Tracked objects:
  9198 ;;		On entry : 1F/1
  9199 ;;		On exit  : 1F/1
  9200 ;;		Unchanged: 0/0
  9201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9206 ;;Total ram usage:        0 bytes
  9207 ;; Hardware stack levels used:    1
  9208 ;; Hardware stack levels required when called:    7
  9209 ;; This function calls:
  9210 ;;		Nothing
  9211 ;; This function is called by:
  9212 ;;		_main
  9213 ;; This function uses a non-reentrant model
  9214 ;;
  9215                           
  9216                           
  9217                           ;psect for function _DataInitSet
  9218  0068                     _DataInitSet:	
  9219                           
  9220                           ;DataVariable.c: 55: GCONF = 0;
  9221                           
  9222                           ;incstack = 0
  9223                           ; Regs used in _DataInitSet: [wreg+status,2]
  9224  0068  0020               	movlb	0	; select bank0
  9225  0069  01C9               	clrf	_GCONF	;volatile
  9226                           
  9227                           ;DataVariable.c: 56: GP1CONF = 0;
  9228  006A  01C8               	clrf	_GP1CONF	;volatile
  9229                           
  9230                           ;DataVariable.c: 57: GP3CONF = 0;
  9231  006B  01C6               	clrf	_GP3CONF	;volatile
  9232                           
  9233                           ;DataVariable.c: 58: INTCONF.val = 0;
  9234  006C  01B0               	clrf	_INTCONF	;volatile
  9235  006D  01B1               	clrf	_INTCONF+1	;volatile
  9236                           
  9237                           ;DataVariable.c: 59: NSTATUS.val = 0;
  9238  006E  01B2               	clrf	_NSTATUS	;volatile
  9239  006F  01B3               	clrf	_NSTATUS+1	;volatile
  9240                           
  9241                           ;DataVariable.c: 60: CVAL.val = 0;
  9242  0070  01AC               	clrf	_CVAL	;volatile
  9243  0071  01AD               	clrf	_CVAL+1	;volatile
  9244  0072  01AE               	clrf	_CVAL+2	;volatile
  9245  0073  01AF               	clrf	_CVAL+3	;volatile
  9246                           
  9247                           ;DataVariable.c: 61: CMAX.val = 0;
  9248  0074  01A8               	clrf	_CMAX	;volatile
  9249  0075  01A9               	clrf	_CMAX+1	;volatile
  9250  0076  01AA               	clrf	_CMAX+2	;volatile
  9251  0077  01AB               	clrf	_CMAX+3	;volatile
  9252                           
  9253                           ;DataVariable.c: 62: CMIN.val = 0;
  9254  0078  01A4               	clrf	_CMIN	;volatile
  9255  0079  01A5               	clrf	_CMIN+1	;volatile
  9256  007A  01A6               	clrf	_CMIN+2	;volatile
  9257  007B  01A7               	clrf	_CMIN+3	;volatile
  9258                           
  9259                           ;DataVariable.c: 63: ISTEP.val = 1;
  9260  007C  3001               	movlw	1
  9261  007D  00A0               	movwf	_ISTEP	;volatile
  9262  007E  01A1               	clrf	_ISTEP+1	;volatile
  9263  007F  01A2               	clrf	_ISTEP+2	;volatile
  9264  0080  01A3               	clrf	_ISTEP+3	;volatile
  9265                           
  9266                           ;DataVariable.c: 64: GP1REG = 0;
  9267  0081  01C3               	clrf	_GP1REG	;volatile
  9268                           
  9269                           ;DataVariable.c: 65: GP2REG = 0;
  9270  0082  01C2               	clrf	_GP2REG	;volatile
  9271                           
  9272                           ;DataVariable.c: 66: GP3REG = 0;
  9273  0083  01C1               	clrf	_GP3REG	;volatile
  9274                           
  9275                           ;DataVariable.c: 67: C_RESET = 0;
  9276  0084  0021               	movlb	1	; select bank1
  9277  0085  01C9               	clrf	_C_RESET^(0+128)	;volatile
  9278                           
  9279                           ;DataVariable.c: 68: C_MBANK = 0;
  9280  0086  0020               	movlb	0	; select bank0
  9281  0087  01BB               	clrf	_C_MBANK	;volatile
  9282                           
  9283                           ;DataVariable.c: 69: C_CKSRC = 0;
  9284  0088  0021               	movlb	1	; select bank1
  9285  0089  01C8               	clrf	_C_CKSRC^(0+128)	;volatile
  9286                           
  9287                           ;DataVariable.c: 70: C_IPUD = 0;
  9288  008A  01C7               	clrf	_C_IPUD^(0+128)	;volatile
  9289                           
  9290                           ;DataVariable.c: 71: C_DIRE = 0;
  9291  008B  01C6               	clrf	_C_DIRE^(0+128)	;volatile
  9292                           
  9293                           ;DataVariable.c: 72: C_WRAPE = 0;
  9294  008C  0020               	movlb	0	; select bank0
  9295  008D  01BA               	clrf	_C_WRAPE	;volatile
  9296                           
  9297                           ;DataVariable.c: 73: C_DTYPE = 0;
  9298  008E  01B9               	clrf	_C_DTYPE	;volatile
  9299                           
  9300                           ;DataVariable.c: 75: DPPERIOD = 0;
  9301  008F  01C0               	clrf	_DPPERIOD	;volatile
  9302                           
  9303                           ;DataVariable.c: 76: FADEGP = 0;
  9304  0090  01BF               	clrf	_FADEGP	;volatile
  9305                           
  9306                           ;DataVariable.c: 77: GAMMAGP1=0;
  9307  0091  01BE               	clrf	_GAMMAGP1	;volatile
  9308                           
  9309                           ;DataVariable.c: 78: GAMMAGP2=0;
  9310  0092  01BD               	clrf	_GAMMAGP2	;volatile
  9311                           
  9312                           ;DataVariable.c: 79: GAMMAGP3=0;
  9313  0093  01BC               	clrf	_GAMMAGP3	;volatile
  9314                           
  9315                           ;DataVariable.c: 80: DoublePush = 0;
  9316  0094  0021               	movlb	1	; select bank1
  9317  0095  01B3               	clrf	_DoublePush^(0+128)	;volatile
  9318  0096  01B4               	clrf	(_DoublePush+1)^(0+128)	;volatile
  9319  0097  0008               	return
  9320  0098                     __end_of_DataInitSet:	
  9321  0098                     __ptext31:	
  9322 ;; *************** function _FADE_GP1 *****************
  9323 ;; Defined at:
  9324 ;;		line 26 in file "GPports.c"
  9325 ;; Parameters:    Size  Location     Type
  9326 ;;		None
  9327 ;; Auto vars:     Size  Location     Type
  9328 ;;		None
  9329 ;; Return value:  Size  Location     Type
  9330 ;;                  1    wreg      void 
  9331 ;; Registers used:
  9332 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9333 ;; Tracked objects:
  9334 ;;		On entry : 1F/0
  9335 ;;		On exit  : 18/0
  9336 ;;		Unchanged: 0/0
  9337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9342 ;;Total ram usage:        0 bytes
  9343 ;; Hardware stack levels used:    1
  9344 ;; Hardware stack levels required when called:   10
  9345 ;; This function calls:
  9346 ;;		_FadeProcessClear
  9347 ;;		_FadeProcessSet
  9348 ;;		_PWM_GP1
  9349 ;; This function is called by:
  9350 ;;		_GP_Ports_FSM
  9351 ;; This function uses a non-reentrant model
  9352 ;;
  9353                           
  9354                           
  9355                           ;psect for function _FADE_GP1
  9356  0098                     _FADE_GP1:	
  9357                           
  9358                           ;GPports.c: 28: if ((GP1CONF & 0x03) != 0x00)
  9359                           
  9360                           ;incstack = 0
  9361                           ; Regs used in _FADE_GP1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9362  0098  0848               	movf	_GP1CONF,w	;volatile
  9363  0099  3903               	andlw	3
  9364  009A  1D03               	btfss	3,2
  9365  009B  0008               	return
  9366                           
  9367                           ;GPports.c: 31: if (FADEGP == 0) {
  9368  009C  083F               	movf	_FADEGP,w	;volatile
  9369  009D  1D03               	btfss	3,2
  9370  009E  28A6               	goto	l7010
  9371                           
  9372                           ;GPports.c: 32: if (temp_gp1 != GP1REG) {
  9373  009F  0837               	movf	_temp_gp1,w
  9374  00A0  0643               	xorwf	_GP1REG,w	;volatile
  9375  00A1  1903               	skipnz
  9376  00A2  0008               	return
  9377                           
  9378                           ;GPports.c: 33: temp_gp1 = GP1REG;
  9379  00A3  0843               	movf	_GP1REG,w	;volatile
  9380  00A4  00B7               	movwf	_temp_gp1
  9381                           
  9382                           ;GPports.c: 34: PWM_GP1(temp_gp1);
  9383  00A5  2B63               	ljmp	_PWM_GP1
  9384  00A6                     l7010:	
  9385                           
  9386                           ;GPports.c: 37: };GPports.c: 39: if (gp_fade_cnt >= FADEGP) {
  9387  00A6  083F               	movf	_FADEGP,w	;volatile
  9388  00A7  0234               	subwf	_gp_fade_cnt,w
  9389  00A8  1C03               	skipc
  9390  00A9  0008               	return
  9391                           
  9392                           ;GPports.c: 40: if (temp_gp1 != GP1REG) {
  9393  00AA  0837               	movf	_temp_gp1,w
  9394  00AB  0643               	xorwf	_GP1REG,w	;volatile
  9395  00AC  1903               	skipnz
  9396  00AD  0008               	return
  9397                           
  9398                           ;GPports.c: 42: if (temp_gp1 < GP1REG) {
  9399  00AE  0843               	movf	_GP1REG,w	;volatile
  9400  00AF  0237               	subwf	_temp_gp1,w
  9401  00B0  1C03               	btfss	3,0
  9402                           
  9403                           ;GPports.c: 43: temp_gp1++;
  9404  00B1  0AB7               	incf	_temp_gp1,f
  9405                           
  9406                           ;GPports.c: 44: };GPports.c: 45: if (temp_gp1 > GP1REG) {
  9407  00B2  0837               	movf	_temp_gp1,w
  9408  00B3  0243               	subwf	_GP1REG,w	;volatile
  9409  00B4  1C03               	btfss	3,0
  9410                           
  9411                           ;GPports.c: 46: temp_gp1--;
  9412  00B5  03B7               	decf	_temp_gp1,f
  9413                           
  9414                           ;GPports.c: 47: };GPports.c: 49: PWM_GP1(temp_gp1);
  9415  00B6  0837               	movf	_temp_gp1,w
  9416  00B7  2363  3180         	fcall	_PWM_GP1
  9417                           
  9418                           ;GPports.c: 50: if (temp_gp1 == GP1REG) {
  9419  00B9  0020               	movlb	0	; select bank0
  9420  00BA  0837               	movf	_temp_gp1,w
  9421  00BB  0643               	xorwf	_GP1REG,w	;volatile
  9422                           
  9423                           ;GPports.c: 51: FadeProcessClear(F_FGP1);
  9424  00BC  3001               	movlw	1
  9425  00BD  1D03               	skipz
  9426  00BE  28C0               	goto	L5
  9427  00BF  2BFB               	ljmp	_FadeProcessClear
  9428  00C0                     L5:	
  9429                           ;GPports.c: 53: FadeProcessSet(F_FGP1);
  9430                           
  9431                           ;GPports.c: 52: } else {
  9432                           
  9433  00C0  2C04               	ljmp	_FadeProcessSet
  9434  00C1                     __end_of_FADE_GP1:	
  9435  00C1                     __ptext21:	
  9436 ;; *************** function _GP_Ports_FSM *****************
  9437 ;; Defined at:
  9438 ;;		line 489 in file "GPports.c"
  9439 ;; Parameters:    Size  Location     Type
  9440 ;;		None
  9441 ;; Auto vars:     Size  Location     Type
  9442 ;;		None
  9443 ;; Return value:  Size  Location     Type
  9444 ;;                  1    wreg      void 
  9445 ;; Registers used:
  9446 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9447 ;; Tracked objects:
  9448 ;;		On entry : 1C/1
  9449 ;;		On exit  : 1E/0
  9450 ;;		Unchanged: 0/0
  9451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9454 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9455 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9456 ;;Total ram usage:        1 bytes
  9457 ;; Hardware stack levels used:    1
  9458 ;; Hardware stack levels required when called:   11
  9459 ;; This function calls:
  9460 ;;		_FADE_GP1
  9461 ;;		_FADE_GP2
  9462 ;;		_FADE_GP3
  9463 ;;		_GP1_FSM
  9464 ;;		_GP2_FSM
  9465 ;;		_GP3_FSM
  9466 ;; This function is called by:
  9467 ;;		_main
  9468 ;; This function uses a non-reentrant model
  9469 ;;
  9470                           
  9471                           
  9472                           ;psect for function _GP_Ports_FSM
  9473  00C1                     _GP_Ports_FSM:	
  9474                           
  9475                           ;GPports.c: 491: if (FADEGP > 0) {
  9476                           
  9477                           ;incstack = 0
  9478                           ; Regs used in _GP_Ports_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9479  00C1  0020               	movlb	0	; select bank0
  9480  00C2  083F               	movf	_FADEGP,w	;volatile
  9481  00C3  1903               	btfsc	3,2
  9482  00C4  28D8               	goto	l7474
  9483                           
  9484                           ;GPports.c: 492: FADE_GP1();
  9485  00C5  2098  3180         	fcall	_FADE_GP1
  9486                           
  9487                           ;GPports.c: 493: FADE_GP2();
  9488  00C7  2233  3180         	fcall	_FADE_GP2
  9489                           
  9490                           ;GPports.c: 494: FADE_GP3();
  9491  00C9  2209  3180         	fcall	_FADE_GP3
  9492                           
  9493                           ;GPports.c: 496: if (gp_fade_cnt++ >= FADEGP) {
  9494  00CB  0020               	movlb	0	; select bank0
  9495  00CC  0834               	movf	_gp_fade_cnt,w
  9496  00CD  0AB4               	incf	_gp_fade_cnt,f
  9497  00CE  0021               	movlb	1	; select bank1
  9498  00CF  00DA               	movwf	??_GP_Ports_FSM^(0+128)
  9499  00D0  0020               	movlb	0	; select bank0
  9500  00D1  083F               	movf	_FADEGP,w	;volatile
  9501  00D2  0021               	movlb	1	; select bank1
  9502  00D3  025A               	subwf	??_GP_Ports_FSM^(0+128),w
  9503  00D4  1C03               	skipc
  9504  00D5  28D8               	goto	l7474
  9505                           
  9506                           ;GPports.c: 497: gp_fade_cnt = 0;
  9507  00D6  0020               	movlb	0	; select bank0
  9508  00D7  01B4               	clrf	_gp_fade_cnt
  9509  00D8                     l7474:	
  9510                           
  9511                           ;GPports.c: 498: };GPports.c: 499: };GPports.c: 503: if (gp_timer++ > 10) {
  9512  00D8  0021               	movlb	1	; select bank1
  9513  00D9  0842               	movf	_gp_timer^(0+128),w
  9514  00DA  0AC2               	incf	_gp_timer^(0+128),f
  9515  00DB  00DA               	movwf	??_GP_Ports_FSM^(0+128)
  9516  00DC  300B               	movlw	11
  9517  00DD  025A               	subwf	??_GP_Ports_FSM^(0+128),w
  9518  00DE  1C03               	skipc
  9519  00DF  0008               	return
  9520                           
  9521                           ;GPports.c: 504: gp_timer = 0;
  9522  00E0  01C2               	clrf	_gp_timer^(0+128)
  9523                           
  9524                           ;GPports.c: 505: GP1_FSM();
  9525  00E1  20E6  3180         	fcall	_GP1_FSM
  9526                           
  9527                           ;GPports.c: 506: GP2_FSM();
  9528  00E3  217E  3180         	fcall	_GP2_FSM
  9529                           
  9530                           ;GPports.c: 507: GP3_FSM();
  9531  00E5  2931               	ljmp	l7190
  9532  00E6                     __end_of_GP_Ports_FSM:	
  9533  00E6                     __ptext24:	
  9534 ;; *************** function _GP1_FSM *****************
  9535 ;; Defined at:
  9536 ;;		line 350 in file "GPports.c"
  9537 ;; Parameters:    Size  Location     Type
  9538 ;;		None
  9539 ;; Auto vars:     Size  Location     Type
  9540 ;;		None
  9541 ;; Return value:  Size  Location     Type
  9542 ;;                  1    wreg      void 
  9543 ;; Registers used:
  9544 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9545 ;; Tracked objects:
  9546 ;;		On entry : 1F/1
  9547 ;;		On exit  : 1E/0
  9548 ;;		Unchanged: 0/0
  9549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9552 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9553 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9554 ;;Total ram usage:        2 bytes
  9555 ;; Hardware stack levels used:    1
  9556 ;; Hardware stack levels required when called:    9
  9557 ;; This function calls:
  9558 ;;		_ADC_GetConversion
  9559 ;;		_ADC_Initialize
  9560 ;;		_Int2StatusUpdate
  9561 ;;		_SetInterrupt
  9562 ;; This function is called by:
  9563 ;;		_GP_Ports_FSM
  9564 ;; This function uses a non-reentrant model
  9565 ;;
  9566                           
  9567                           
  9568                           ;psect for function _GP1_FSM
  9569  00E6                     _GP1_FSM:	
  9570                           
  9571                           ;GPports.c: 351: switch (gp1_fsm) {
  9572                           
  9573                           ;incstack = 0
  9574                           ; Regs used in _GP1_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9575  00E6  2926               	goto	l7138
  9576  00E7                     l7100:	
  9577                           
  9578                           ;GPports.c: 353: if ((GP1CONF & 0x03) == 0x02) {
  9579  00E7  3003               	movlw	3
  9580  00E8  0020               	movlb	0	; select bank0
  9581  00E9  0548               	andwf	_GP1CONF,w	;volatile
  9582  00EA  0021               	movlb	1	; select bank1
  9583  00EB  00CF               	movwf	??_GP1_FSM^(0+128)
  9584  00EC  3A02               	xorlw	2
  9585  00ED  1D03               	btfss	3,2
  9586  00EE  28F2               	goto	l7108
  9587                           
  9588                           ;GPports.c: 354: gp1_fsm = GP_ADC_MODE;
  9589  00EF  01C1               	clrf	_gp1_fsm^(0+128)
  9590  00F0  0AC1               	incf	_gp1_fsm^(0+128),f
  9591                           
  9592                           ;GPports.c: 355: ADC_Initialize();
  9593  00F1  2A01               	ljmp	l6676
  9594  00F2                     l7108:	
  9595                           
  9596                           ;GPports.c: 357: };GPports.c: 358: if ((GP1CONF & 0x03) == 0x03) {
  9597  00F2  3003               	movlw	3
  9598  00F3  0020               	movlb	0	; select bank0
  9599  00F4  0548               	andwf	_GP1CONF,w	;volatile
  9600  00F5  0021               	movlb	1	; select bank1
  9601  00F6  00CF               	movwf	??_GP1_FSM^(0+128)
  9602  00F7  3A03               	xorlw	3
  9603  00F8  1D03               	btfss	3,2
  9604  00F9  0008               	return
  9605  00FA                     l7110:	
  9606                           
  9607                           ;GPports.c: 359: gp1_fsm = GP_WAITRISE;
  9608  00FA  3002               	movlw	2
  9609  00FB  0021               	movlb	1	; select bank1
  9610  00FC  00C1               	movwf	_gp1_fsm^(0+128)
  9611  00FD  0008               	return
  9612  00FE                     l7114:	
  9613                           
  9614                           ;GPports.c: 365: GP1REG = (ADC_GetConversion(A_GP1) >> 2);
  9615  00FE  3012               	movlw	18
  9616  00FF  21E6               	fcall	_ADC_GetConversion
  9617  0100  084B               	movf	?_ADC_GetConversion^(0+128),w
  9618  0101  00CF               	movwf	??_GP1_FSM^(0+128)
  9619  0102  084C               	movf	(?_ADC_GetConversion+1)^(0+128),w
  9620  0103  00D0               	movwf	(??_GP1_FSM^(0+128)+1)
  9621  0104  36D0               	lsrf	(??_GP1_FSM^(0+128)+1),f
  9622  0105  0CCF               	rrf	??_GP1_FSM^(0+128),f
  9623  0106  36D0               	lsrf	(??_GP1_FSM^(0+128)+1),f
  9624  0107  0CCF               	rrf	??_GP1_FSM^(0+128),f
  9625  0108  084F               	movf	??_GP1_FSM^(0+128),w
  9626  0109  0020               	movlb	0	; select bank0
  9627  010A  00C3               	movwf	_GP1REG	;volatile
  9628                           
  9629                           ;GPports.c: 366: break;
  9630  010B  0008               	return
  9631  010C                     l1150:	
  9632                           ;GPports.c: 368: case GP_WAITRISE:
  9633                           
  9634                           
  9635                           ;GPports.c: 369: if (PORTCbits.RC2 == 1) {
  9636  010C  0020               	movlb	0	; select bank0
  9637  010D  1D0E               	btfss	14,2	;volatile
  9638  010E  0008               	return
  9639                           
  9640                           ;GPports.c: 370: GP1REG = 1;
  9641  010F  3001               	movlw	1
  9642  0110  00C3               	movwf	_GP1REG	;volatile
  9643                           
  9644                           ;GPports.c: 371: Int2StatusUpdate(E_GP1POS);
  9645  0111  21CB  3180         	fcall	_Int2StatusUpdate
  9646                           
  9647                           ;GPports.c: 372: if ((GP1CONF & 0x08) != 0) {
  9648  0113  1DC8               	btfss	_GP1CONF,3	;volatile
  9649  0114  2916               	goto	l7124
  9650                           
  9651                           ;GPports.c: 373: SetInterrupt();
  9652  0115  21D5               	fcall	_SetInterrupt
  9653  0116                     l7124:	
  9654                           
  9655                           ;GPports.c: 374: };GPports.c: 375: gp1_fsm = GP_WAITFALL;
  9656  0116  3003               	movlw	3
  9657  0117  0021               	movlb	1	; select bank1
  9658  0118  00C1               	movwf	_gp1_fsm^(0+128)
  9659  0119  0008               	return
  9660  011A                     l1153:	
  9661                           ;GPports.c: 379: case GP_WAITFALL:
  9662                           
  9663                           
  9664                           ;GPports.c: 380: if (PORTCbits.RC2 == 0) {
  9665  011A  0020               	movlb	0	; select bank0
  9666  011B  190E               	btfsc	14,2	;volatile
  9667  011C  0008               	return
  9668                           
  9669                           ;GPports.c: 381: GP1REG = 0;
  9670  011D  01C3               	clrf	_GP1REG	;volatile
  9671                           
  9672                           ;GPports.c: 382: Int2StatusUpdate(E_GP1NEG);
  9673  011E  3002               	movlw	2
  9674  011F  21CB  3180         	fcall	_Int2StatusUpdate
  9675                           
  9676                           ;GPports.c: 383: if ((GP1CONF & 0x10) != 0) {
  9677  0121  1E48               	btfss	_GP1CONF,4	;volatile
  9678  0122  28FA               	goto	l7110
  9679                           
  9680                           ;GPports.c: 384: SetInterrupt();
  9681  0123  21D5  3180         	fcall	_SetInterrupt
  9682  0125  28FA               	goto	l7110
  9683  0126                     l7138:	
  9684  0126  0841               	movf	_gp1_fsm^(0+128),w
  9685                           
  9686                           ; Switch size 1, requested type "speed"
  9687                           ; Number of cases is 4, Range of values is 0 to 3
  9688                           ; switch strategies available:
  9689                           ; Name         Instructions Cycles
  9690                           ; direct_byte           14     6 (fixed)
  9691                           ; simple_byte           13     7 (average)
  9692                           ; jumptable            260     6 (fixed)
  9693                           ;	Chosen strategy is direct_byte
  9694  0127  0084               	movwf	4
  9695  0128  3004               	movlw	4
  9696  0129  0204               	subwf	4,w
  9697  012A  1803               	skipnc
  9698  012B  0008               	return
  9699  012C  3191               	movlp	high S7844
  9700  012D  3504               	lslf	4,w
  9701  012E  3EB4               	addlw	low S7844
  9702  012F  0082               	movwf	2
  9703  0130  0008               	return
  9704  0131                     __end_of_GP1_FSM:	
  9705  0131                     __ptext22:	
  9706 ;; *************** function _GP3_FSM *****************
  9707 ;; Defined at:
  9708 ;;		line 444 in file "GPports.c"
  9709 ;; Parameters:    Size  Location     Type
  9710 ;;		None
  9711 ;; Auto vars:     Size  Location     Type
  9712 ;;		None
  9713 ;; Return value:  Size  Location     Type
  9714 ;;                  1    wreg      void 
  9715 ;; Registers used:
  9716 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9717 ;; Tracked objects:
  9718 ;;		On entry : 1E/1
  9719 ;;		On exit  : 1E/0
  9720 ;;		Unchanged: 0/0
  9721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9724 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9725 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9726 ;;Total ram usage:        2 bytes
  9727 ;; Hardware stack levels used:    1
  9728 ;; Hardware stack levels required when called:    9
  9729 ;; This function calls:
  9730 ;;		_ADC_GetConversion
  9731 ;;		_ADC_Initialize
  9732 ;;		_Int2StatusUpdate
  9733 ;;		_SetInterrupt
  9734 ;; This function is called by:
  9735 ;;		_GP_Ports_FSM
  9736 ;; This function uses a non-reentrant model
  9737 ;;
  9738                           
  9739                           
  9740                           ;psect for function _GP3_FSM
  9741  0131                     _GP3_FSM:	
  9742  0131                     l7190:	
  9743                           ;incstack = 0
  9744                           ; Regs used in _GP3_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9745                           
  9746                           
  9747                           ;GPports.c: 446: switch (gp3_fsm) {
  9748  0131  2972               	goto	l7230
  9749  0132                     l7192:	
  9750                           
  9751                           ;GPports.c: 448: if ((GP3CONF & 0x03) == 0x02) {
  9752  0132  3003               	movlw	3
  9753  0133  0020               	movlb	0	; select bank0
  9754  0134  0546               	andwf	_GP3CONF,w	;volatile
  9755  0135  0021               	movlb	1	; select bank1
  9756  0136  00CF               	movwf	??_GP3_FSM^(0+128)
  9757  0137  3A02               	xorlw	2
  9758  0138  1D03               	btfss	3,2
  9759  0139  293D               	goto	l7200
  9760                           
  9761                           ;GPports.c: 449: gp3_fsm = GP_ADC_MODE;
  9762  013A  01BF               	clrf	_gp3_fsm^(0+128)
  9763  013B  0ABF               	incf	_gp3_fsm^(0+128),f
  9764                           
  9765                           ;GPports.c: 450: ADC_Initialize();
  9766  013C  2A01               	ljmp	l6676
  9767  013D                     l7200:	
  9768                           
  9769                           ;GPports.c: 452: };GPports.c: 454: if ((GP3CONF & 0x03) == 0x03) {
  9770  013D  3003               	movlw	3
  9771  013E  0020               	movlb	0	; select bank0
  9772  013F  0546               	andwf	_GP3CONF,w	;volatile
  9773  0140  0021               	movlb	1	; select bank1
  9774  0141  00CF               	movwf	??_GP3_FSM^(0+128)
  9775  0142  3A03               	xorlw	3
  9776  0143  1D03               	btfss	3,2
  9777  0144  0008               	return
  9778  0145                     l7202:	
  9779                           
  9780                           ;GPports.c: 455: gp3_fsm = GP_WAITRISE;
  9781  0145  3002               	movlw	2
  9782  0146  0021               	movlb	1	; select bank1
  9783  0147  00BF               	movwf	_gp3_fsm^(0+128)
  9784  0148  0008               	return
  9785  0149                     l7206:	
  9786                           
  9787                           ;GPports.c: 461: GP3REG = (ADC_GetConversion(A_GP3) >> 2);
  9788  0149  3010               	movlw	16
  9789  014A  21E6               	fcall	_ADC_GetConversion
  9790  014B  084B               	movf	?_ADC_GetConversion^(0+128),w
  9791  014C  00CF               	movwf	??_GP3_FSM^(0+128)
  9792  014D  084C               	movf	(?_ADC_GetConversion+1)^(0+128),w
  9793  014E  00D0               	movwf	(??_GP3_FSM^(0+128)+1)
  9794  014F  36D0               	lsrf	(??_GP3_FSM^(0+128)+1),f
  9795  0150  0CCF               	rrf	??_GP3_FSM^(0+128),f
  9796  0151  36D0               	lsrf	(??_GP3_FSM^(0+128)+1),f
  9797  0152  0CCF               	rrf	??_GP3_FSM^(0+128),f
  9798  0153  084F               	movf	??_GP3_FSM^(0+128),w
  9799  0154  0020               	movlb	0	; select bank0
  9800  0155  00C1               	movwf	_GP3REG	;volatile
  9801                           
  9802                           ;GPports.c: 462: break;
  9803  0156  0008               	return
  9804  0157                     l1180:	
  9805                           ;GPports.c: 464: case GP_WAITRISE:
  9806                           
  9807                           
  9808                           ;GPports.c: 465: if (PORTCbits.RC0 == 1) {
  9809  0157  0020               	movlb	0	; select bank0
  9810  0158  1C0E               	btfss	14,0	;volatile
  9811  0159  0008               	return
  9812                           
  9813                           ;GPports.c: 466: GP3REG = 1;
  9814  015A  3001               	movlw	1
  9815  015B  00C1               	movwf	_GP3REG	;volatile
  9816                           
  9817                           ;GPports.c: 467: Int2StatusUpdate(E_GP3POS);
  9818  015C  3010               	movlw	16
  9819  015D  21CB  3180         	fcall	_Int2StatusUpdate
  9820                           
  9821                           ;GPports.c: 468: if ((GP3CONF & 0x08) != 0) {
  9822  015F  1DC6               	btfss	_GP3CONF,3	;volatile
  9823  0160  2962               	goto	l7216
  9824                           
  9825                           ;GPports.c: 469: SetInterrupt();
  9826  0161  21D5               	fcall	_SetInterrupt
  9827  0162                     l7216:	
  9828                           
  9829                           ;GPports.c: 470: };GPports.c: 471: gp3_fsm = GP_WAITFALL;
  9830  0162  3003               	movlw	3
  9831  0163  0021               	movlb	1	; select bank1
  9832  0164  00BF               	movwf	_gp3_fsm^(0+128)
  9833  0165  0008               	return
  9834  0166                     l1183:	
  9835                           ;GPports.c: 475: case GP_WAITFALL:
  9836                           
  9837                           
  9838                           ;GPports.c: 476: if (PORTCbits.RC0 == 0) {
  9839  0166  0020               	movlb	0	; select bank0
  9840  0167  180E               	btfsc	14,0	;volatile
  9841  0168  0008               	return
  9842                           
  9843                           ;GPports.c: 478: GP3REG = 0;
  9844  0169  01C1               	clrf	_GP3REG	;volatile
  9845                           
  9846                           ;GPports.c: 479: Int2StatusUpdate(E_GP3NEG);
  9847  016A  3020               	movlw	32
  9848  016B  21CB  3180         	fcall	_Int2StatusUpdate
  9849                           
  9850                           ;GPports.c: 480: if ((GP3CONF & 0x10) != 0) {
  9851  016D  1E46               	btfss	_GP3CONF,4	;volatile
  9852  016E  2945               	goto	l7202
  9853                           
  9854                           ;GPports.c: 481: SetInterrupt();
  9855  016F  21D5  3180         	fcall	_SetInterrupt
  9856  0171  2945               	goto	l7202
  9857  0172                     l7230:	
  9858  0172  0021               	movlb	1	; select bank1
  9859  0173  083F               	movf	_gp3_fsm^(0+128),w
  9860                           
  9861                           ; Switch size 1, requested type "speed"
  9862                           ; Number of cases is 4, Range of values is 0 to 3
  9863                           ; switch strategies available:
  9864                           ; Name         Instructions Cycles
  9865                           ; direct_byte           14     6 (fixed)
  9866                           ; simple_byte           13     7 (average)
  9867                           ; jumptable            260     6 (fixed)
  9868                           ;	Chosen strategy is direct_byte
  9869  0174  0084               	movwf	4
  9870  0175  3004               	movlw	4
  9871  0176  0204               	subwf	4,w
  9872  0177  1803               	skipnc
  9873  0178  0008               	return
  9874  0179  3190               	movlp	high S7840
  9875  017A  3504               	lslf	4,w
  9876  017B  3EF0               	addlw	low S7840
  9877  017C  0082               	movwf	2
  9878  017D  0008               	return
  9879  017E                     __end_of_GP3_FSM:	
  9880  017E                     __ptext23:	
  9881 ;; *************** function _GP2_FSM *****************
  9882 ;; Defined at:
  9883 ;;		line 395 in file "GPports.c"
  9884 ;; Parameters:    Size  Location     Type
  9885 ;;		None
  9886 ;; Auto vars:     Size  Location     Type
  9887 ;;		None
  9888 ;; Return value:  Size  Location     Type
  9889 ;;                  1    wreg      void 
  9890 ;; Registers used:
  9891 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9892 ;; Tracked objects:
  9893 ;;		On entry : 1E/1
  9894 ;;		On exit  : 1E/0
  9895 ;;		Unchanged: 0/0
  9896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9899 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9900 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9901 ;;Total ram usage:        2 bytes
  9902 ;; Hardware stack levels used:    1
  9903 ;; Hardware stack levels required when called:    9
  9904 ;; This function calls:
  9905 ;;		_ADC_GetConversion
  9906 ;;		_ADC_Initialize
  9907 ;;		_Int2StatusUpdate
  9908 ;;		_SetInterrupt
  9909 ;; This function is called by:
  9910 ;;		_GP_Ports_FSM
  9911 ;; This function uses a non-reentrant model
  9912 ;;
  9913                           
  9914                           
  9915                           ;psect for function _GP2_FSM
  9916  017E                     _GP2_FSM:	
  9917                           
  9918                           ;GPports.c: 397: switch (gp2_fsm) {
  9919                           
  9920                           ;incstack = 0
  9921                           ; Regs used in _GP2_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9922  017E  29BF               	goto	l7184
  9923  017F                     l7146:	
  9924                           
  9925                           ;GPports.c: 399: if ((GP2CONF & 0x03) == 0x02) {
  9926  017F  3003               	movlw	3
  9927  0180  0020               	movlb	0	; select bank0
  9928  0181  0547               	andwf	_GP2CONF,w	;volatile
  9929  0182  0021               	movlb	1	; select bank1
  9930  0183  00CF               	movwf	??_GP2_FSM^(0+128)
  9931  0184  3A02               	xorlw	2
  9932  0185  1D03               	btfss	3,2
  9933  0186  298A               	goto	l7154
  9934                           
  9935                           ;GPports.c: 400: gp2_fsm = GP_ADC_MODE;
  9936  0187  01C0               	clrf	_gp2_fsm^(0+128)
  9937  0188  0AC0               	incf	_gp2_fsm^(0+128),f
  9938                           
  9939                           ;GPports.c: 401: ADC_Initialize();
  9940  0189  2A01               	ljmp	l6676
  9941  018A                     l7154:	
  9942                           
  9943                           ;GPports.c: 403: };GPports.c: 405: if ((GP2CONF & 0x03) == 0x03) {
  9944  018A  3003               	movlw	3
  9945  018B  0020               	movlb	0	; select bank0
  9946  018C  0547               	andwf	_GP2CONF,w	;volatile
  9947  018D  0021               	movlb	1	; select bank1
  9948  018E  00CF               	movwf	??_GP2_FSM^(0+128)
  9949  018F  3A03               	xorlw	3
  9950  0190  1D03               	btfss	3,2
  9951  0191  0008               	return
  9952  0192                     l7156:	
  9953                           
  9954                           ;GPports.c: 406: gp2_fsm = GP_WAITRISE;
  9955  0192  3002               	movlw	2
  9956  0193  0021               	movlb	1	; select bank1
  9957  0194  00C0               	movwf	_gp2_fsm^(0+128)
  9958  0195  0008               	return
  9959  0196                     l7160:	
  9960                           
  9961                           ;GPports.c: 412: GP2REG = (ADC_GetConversion(A_GP2) >> 2);
  9962  0196  3011               	movlw	17
  9963  0197  21E6               	fcall	_ADC_GetConversion
  9964  0198  084B               	movf	?_ADC_GetConversion^(0+128),w
  9965  0199  00CF               	movwf	??_GP2_FSM^(0+128)
  9966  019A  084C               	movf	(?_ADC_GetConversion+1)^(0+128),w
  9967  019B  00D0               	movwf	(??_GP2_FSM^(0+128)+1)
  9968  019C  36D0               	lsrf	(??_GP2_FSM^(0+128)+1),f
  9969  019D  0CCF               	rrf	??_GP2_FSM^(0+128),f
  9970  019E  36D0               	lsrf	(??_GP2_FSM^(0+128)+1),f
  9971  019F  0CCF               	rrf	??_GP2_FSM^(0+128),f
  9972  01A0  084F               	movf	??_GP2_FSM^(0+128),w
  9973  01A1  0020               	movlb	0	; select bank0
  9974  01A2  00C2               	movwf	_GP2REG	;volatile
  9975                           
  9976                           ;GPports.c: 413: break;
  9977  01A3  0008               	return
  9978  01A4                     l1165:	
  9979                           ;GPports.c: 415: case GP_WAITRISE:
  9980                           
  9981                           
  9982                           ;GPports.c: 416: if (PORTCbits.RC1 == 1) {
  9983  01A4  0020               	movlb	0	; select bank0
  9984  01A5  1C8E               	btfss	14,1	;volatile
  9985  01A6  0008               	return
  9986                           
  9987                           ;GPports.c: 417: GP2REG = 1;
  9988  01A7  3001               	movlw	1
  9989  01A8  00C2               	movwf	_GP2REG	;volatile
  9990                           
  9991                           ;GPports.c: 418: Int2StatusUpdate(E_GP2POS);
  9992  01A9  3004               	movlw	4
  9993  01AA  21CB  3180         	fcall	_Int2StatusUpdate
  9994                           
  9995                           ;GPports.c: 419: if ((GP2CONF & 0x08) != 0) {
  9996  01AC  1DC7               	btfss	_GP2CONF,3	;volatile
  9997  01AD  29AF               	goto	l7170
  9998                           
  9999                           ;GPports.c: 420: SetInterrupt();
 10000  01AE  21D5               	fcall	_SetInterrupt
 10001  01AF                     l7170:	
 10002                           
 10003                           ;GPports.c: 421: };GPports.c: 422: gp2_fsm = GP_WAITFALL;
 10004  01AF  3003               	movlw	3
 10005  01B0  0021               	movlb	1	; select bank1
 10006  01B1  00C0               	movwf	_gp2_fsm^(0+128)
 10007  01B2  0008               	return
 10008  01B3                     l1168:	
 10009                           ;GPports.c: 426: case GP_WAITFALL:
 10010                           
 10011                           
 10012                           ;GPports.c: 427: if (PORTCbits.RC1 == 0) {
 10013  01B3  0020               	movlb	0	; select bank0
 10014  01B4  188E               	btfsc	14,1	;volatile
 10015  01B5  0008               	return
 10016                           
 10017                           ;GPports.c: 429: GP2REG = 0;
 10018  01B6  01C2               	clrf	_GP2REG	;volatile
 10019                           
 10020                           ;GPports.c: 430: Int2StatusUpdate(E_GP2NEG);
 10021  01B7  3008               	movlw	8
 10022  01B8  21CB  3180         	fcall	_Int2StatusUpdate
 10023                           
 10024                           ;GPports.c: 431: if ((GP2CONF & 0x10) != 0) {
 10025  01BA  1E47               	btfss	_GP2CONF,4	;volatile
 10026  01BB  2992               	goto	l7156
 10027                           
 10028                           ;GPports.c: 432: SetInterrupt();
 10029  01BC  21D5  3180         	fcall	_SetInterrupt
 10030  01BE  2992               	goto	l7156
 10031  01BF                     l7184:	
 10032  01BF  0021               	movlb	1	; select bank1
 10033  01C0  0840               	movf	_gp2_fsm^(0+128),w
 10034                           
 10035                           ; Switch size 1, requested type "speed"
 10036                           ; Number of cases is 4, Range of values is 0 to 3
 10037                           ; switch strategies available:
 10038                           ; Name         Instructions Cycles
 10039                           ; direct_byte           14     6 (fixed)
 10040                           ; simple_byte           13     7 (average)
 10041                           ; jumptable            260     6 (fixed)
 10042                           ;	Chosen strategy is direct_byte
 10043  01C1  0084               	movwf	4
 10044  01C2  3004               	movlw	4
 10045  01C3  0204               	subwf	4,w
 10046  01C4  1803               	skipnc
 10047  01C5  0008               	return
 10048  01C6  3190               	movlp	high S7842
 10049  01C7  3504               	lslf	4,w
 10050  01C8  3EF8               	addlw	low S7842
 10051  01C9  0082               	movwf	2
 10052  01CA  0008               	return
 10053  01CB                     __end_of_GP2_FSM:	
 10054  01CB                     __ptext37:	
 10055 ;; *************** function _Int2StatusUpdate *****************
 10056 ;; Defined at:
 10057 ;;		line 110 in file "DataVariable.c"
 10058 ;; Parameters:    Size  Location     Type
 10059 ;;  stat            1    wreg     enum E86
 10060 ;; Auto vars:     Size  Location     Type
 10061 ;;  stat            1    2[BANK1 ] enum E86
 10062 ;; Return value:  Size  Location     Type
 10063 ;;                  1    wreg      void 
 10064 ;; Registers used:
 10065 ;;		wreg, status,2, status,0, pclath, cstack
 10066 ;; Tracked objects:
 10067 ;;		On entry : 1F/0
 10068 ;;		On exit  : 1F/0
 10069 ;;		Unchanged: 0/0
 10070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10072 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10074 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10075 ;;Total ram usage:        1 bytes
 10076 ;; Hardware stack levels used:    1
 10077 ;; Hardware stack levels required when called:    8
 10078 ;; This function calls:
 10079 ;;		_NavKeyStatusUpdate
 10080 ;; This function is called by:
 10081 ;;		_FadeProcessClear
 10082 ;;		_GP1_FSM
 10083 ;;		_GP2_FSM
 10084 ;;		_GP3_FSM
 10085 ;; This function uses a non-reentrant model
 10086 ;;
 10087                           
 10088                           
 10089                           ;psect for function _Int2StatusUpdate
 10090  01CB                     _Int2StatusUpdate:	
 10091                           
 10092                           ;incstack = 0
 10093                           ; Regs used in _Int2StatusUpdate: [wreg+status,2+status,0+pclath+cstack]
 10094                           ;Int2StatusUpdate@stat stored from wreg
 10095  01CB  0021               	movlb	1	; select bank1
 10096  01CC  00CD               	movwf	Int2StatusUpdate@stat^(0+128)
 10097                           
 10098                           ;DataVariable.c: 111: SSTATUS |= (uint8_t) stat;
 10099  01CD  0020               	movlb	0	; select bank0
 10100  01CE  04C5               	iorwf	_SSTATUS,f	;volatile
 10101                           
 10102                           ;DataVariable.c: 112: NavKeyStatusUpdate(S_INT2);
 10103  01CF  0021               	movlb	1	; select bank1
 10104  01D0  3080               	movlw	128
 10105  01D1  01CB               	clrf	NavKeyStatusUpdate@stat^(0+128)
 10106  01D2  00CC               	movwf	(NavKeyStatusUpdate@stat^(0+128)+1)
 10107  01D3  3194  2CF2         	ljmp	l6652
 10108  01D5                     __end_of_Int2StatusUpdate:	
 10109  01D5                     __ptext36:	
 10110 ;; *************** function _SetInterrupt *****************
 10111 ;; Defined at:
 10112 ;;		line 56 in file "main.c"
 10113 ;; Parameters:    Size  Location     Type
 10114 ;;		None
 10115 ;; Auto vars:     Size  Location     Type
 10116 ;;		None
 10117 ;; Return value:  Size  Location     Type
 10118 ;;                  1    wreg      void 
 10119 ;; Registers used:
 10120 ;;		wreg, status,2, status,0
 10121 ;; Tracked objects:
 10122 ;;		On entry : 1E/0
 10123 ;;		On exit  : 1C/0
 10124 ;;		Unchanged: 0/0
 10125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10128 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10129 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10130 ;;Total ram usage:        2 bytes
 10131 ;; Hardware stack levels used:    1
 10132 ;; Hardware stack levels required when called:    7
 10133 ;; This function calls:
 10134 ;;		Nothing
 10135 ;; This function is called by:
 10136 ;;		_FadeProcessClear
 10137 ;;		_GP1_FSM
 10138 ;;		_GP2_FSM
 10139 ;;		_GP3_FSM
 10140 ;;		_NavKey_CentralButton_FSM
 10141 ;;		_NavKey_UPButton_FSM
 10142 ;;		_NavKey_DWButton_FSM
 10143 ;;		_NavKey_RTButton_FSM
 10144 ;;		_NavKey_LTButton_FSM
 10145 ;; This function uses a non-reentrant model
 10146 ;;
 10147                           
 10148                           
 10149                           ;psect for function _SetInterrupt
 10150  01D5                     _SetInterrupt:	
 10151  01D5                     l6654:	
 10152                           ;incstack = 0
 10153                           ; Regs used in _SetInterrupt: [wreg+status,2+status,0]
 10154                           
 10155                           
 10156                           ;main.c: 58: if ((NSTATUS.val & INTCONF.val) != 0) {
 10157  01D5  0020               	movlb	0	; select bank0
 10158  01D6  0830               	movf	_INTCONF,w	;volatile
 10159  01D7  0532               	andwf	_NSTATUS,w	;volatile
 10160  01D8  0021               	movlb	1	; select bank1
 10161  01D9  00CB               	movwf	??_SetInterrupt^(0+128)
 10162  01DA  0020               	movlb	0	; select bank0
 10163  01DB  0831               	movf	_INTCONF+1,w	;volatile
 10164  01DC  0533               	andwf	_NSTATUS+1,w	;volatile
 10165  01DD  0021               	movlb	1	; select bank1
 10166  01DE  00CC               	movwf	(??_SetInterrupt+1)^(0+128)
 10167  01DF  084B               	movf	??_SetInterrupt^(0+128),w
 10168  01E0  044C               	iorwf	(??_SetInterrupt^(0+128)+1),w
 10169  01E1  1903               	btfsc	3,2
 10170  01E2  0008               	return
 10171                           
 10172                           ;main.c: 59: do { LATBbits.LATB5 = 0; } while(0);
 10173  01E3  0022               	movlb	2	; select bank2
 10174  01E4  128D               	bcf	13,5	;volatile
 10175  01E5  0008               	return
 10176  01E6                     __end_of_SetInterrupt:	
 10177  01E6                     __ptext26:	
 10178 ;; *************** function _ADC_GetConversion *****************
 10179 ;; Defined at:
 10180 ;;		line 113 in file "mcc_generated_files/adc.c"
 10181 ;; Parameters:    Size  Location     Type
 10182 ;;  channel         1    wreg     enum E6505
 10183 ;; Auto vars:     Size  Location     Type
 10184 ;;  channel         1    3[BANK1 ] enum E6505
 10185 ;; Return value:  Size  Location     Type
 10186 ;;                  2    0[BANK1 ] unsigned int 
 10187 ;; Registers used:
 10188 ;;		wreg, status,2, status,0
 10189 ;; Tracked objects:
 10190 ;;		On entry : 1E/1
 10191 ;;		On exit  : 1F/1
 10192 ;;		Unchanged: 0/0
 10193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10194 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10195 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10196 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10197 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10198 ;;Total ram usage:        4 bytes
 10199 ;; Hardware stack levels used:    1
 10200 ;; Hardware stack levels required when called:    7
 10201 ;; This function calls:
 10202 ;;		Nothing
 10203 ;; This function is called by:
 10204 ;;		_GP1_FSM
 10205 ;;		_GP2_FSM
 10206 ;;		_GP3_FSM
 10207 ;; This function uses a non-reentrant model
 10208 ;;
 10209                           
 10210                           
 10211                           ;psect for function _ADC_GetConversion
 10212  01E6                     _ADC_GetConversion:	
 10213                           
 10214                           ;incstack = 0
 10215                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
 10216                           ;ADC_GetConversion@channel stored from wreg
 10217  01E6  0021               	movlb	1	; select bank1
 10218  01E7  00CE               	movwf	ADC_GetConversion@channel^(0+128)
 10219                           
 10220                           ;adc.c: 116: ADCON0bits.CHS = channel;
 10221  01E8  00CD               	movwf	??_ADC_GetConversion^(0+128)
 10222  01E9  0DCD               	rlf	??_ADC_GetConversion^(0+128),f
 10223  01EA  0DCD               	rlf	??_ADC_GetConversion^(0+128),f
 10224  01EB  081D               	movf	29,w	;volatile
 10225  01EC  064D               	xorwf	??_ADC_GetConversion^(0+128),w
 10226  01ED  3903               	andlw	-253
 10227  01EE  064D               	xorwf	??_ADC_GetConversion^(0+128),w
 10228  01EF  009D               	movwf	29	;volatile
 10229                           
 10230                           ;adc.c: 119: ADCON0bits.ADON = 1;
 10231  01F0  141D               	bsf	29,0	;volatile
 10232                           
 10233                           ;adc.c: 122: _delay((unsigned long)((5)*(32000000/4000000.0)));
 10234  01F1  300D               	movlw	13
 10235  01F2                     u4987:	
 10236  01F2  0B89               	decfsz	9,f
 10237  01F3  29F2               	goto	u4987
 10238  01F4  0000               	nop
 10239                           
 10240                           ;adc.c: 125: ADCON0bits.ADGO = 1;
 10241  01F5  0021               	movlb	1	; select bank1
 10242  01F6  149D               	bsf	29,1	;volatile
 10243  01F7                     l353:	
 10244                           ;adc.c: 129: {
 10245                           
 10246  01F7  189D               	btfsc	29,1	;volatile
 10247  01F8  29F7               	goto	l353
 10248                           
 10249                           ;adc.c: 130: };adc.c: 133: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 10250  01F9  081C               	movf	28,w	;volatile
 10251  01FA  00CC               	movwf	(?_ADC_GetConversion+1)^(0+128)
 10252  01FB  01CB               	clrf	?_ADC_GetConversion^(0+128)
 10253  01FC  081B               	movf	27,w	;volatile
 10254  01FD  07CB               	addwf	?_ADC_GetConversion^(0+128),f
 10255  01FE  1803               	skipnc
 10256  01FF  0ACC               	incf	(?_ADC_GetConversion+1)^(0+128),f
 10257  0200  0008               	return
 10258  0201                     __end_of_ADC_GetConversion:	
 10259  0201                     __ptext25:	
 10260 ;; *************** function _ADC_Initialize *****************
 10261 ;; Defined at:
 10262 ;;		line 65 in file "mcc_generated_files/adc.c"
 10263 ;; Parameters:    Size  Location     Type
 10264 ;;		None
 10265 ;; Auto vars:     Size  Location     Type
 10266 ;;		None
 10267 ;; Return value:  Size  Location     Type
 10268 ;;                  1    wreg      void 
 10269 ;; Registers used:
 10270 ;;		wreg, status,2
 10271 ;; Tracked objects:
 10272 ;;		On entry : 1F/1
 10273 ;;		On exit  : 1F/1
 10274 ;;		Unchanged: 0/0
 10275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10280 ;;Total ram usage:        0 bytes
 10281 ;; Hardware stack levels used:    1
 10282 ;; Hardware stack levels required when called:    7
 10283 ;; This function calls:
 10284 ;;		Nothing
 10285 ;; This function is called by:
 10286 ;;		_GP1_FSM
 10287 ;;		_GP2_FSM
 10288 ;;		_GP3_FSM
 10289 ;; This function uses a non-reentrant model
 10290 ;;
 10291                           
 10292                           
 10293                           ;psect for function _ADC_Initialize
 10294  0201                     _ADC_Initialize:	
 10295  0201                     l6676:	
 10296                           ;incstack = 0
 10297                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 10298                           
 10299                           
 10300                           ;adc.c: 70: ADCON0 = 0x01;
 10301  0201  3001               	movlw	1
 10302  0202  009D               	movwf	29	;volatile
 10303                           
 10304                           ;adc.c: 73: ADCON1 = 0xE0;
 10305  0203  30E0               	movlw	224
 10306  0204  009E               	movwf	30	;volatile
 10307                           
 10308                           ;adc.c: 76: ADACT = 0x00;
 10309  0205  019F               	clrf	31	;volatile
 10310                           
 10311                           ;adc.c: 79: ADRESL = 0x00;
 10312  0206  019B               	clrf	27	;volatile
 10313                           
 10314                           ;adc.c: 82: ADRESH = 0x00;
 10315  0207  019C               	clrf	28	;volatile
 10316  0208  0008               	return
 10317  0209                     __end_of_ADC_Initialize:	
 10318  0209                     __ptext27:	
 10319 ;; *************** function _FADE_GP3 *****************
 10320 ;; Defined at:
 10321 ;;		line 101 in file "GPports.c"
 10322 ;; Parameters:    Size  Location     Type
 10323 ;;		None
 10324 ;; Auto vars:     Size  Location     Type
 10325 ;;		None
 10326 ;; Return value:  Size  Location     Type
 10327 ;;                  1    wreg      void 
 10328 ;; Registers used:
 10329 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10330 ;; Tracked objects:
 10331 ;;		On entry : 18/0
 10332 ;;		On exit  : 18/0
 10333 ;;		Unchanged: 0/0
 10334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10339 ;;Total ram usage:        0 bytes
 10340 ;; Hardware stack levels used:    1
 10341 ;; Hardware stack levels required when called:   10
 10342 ;; This function calls:
 10343 ;;		_FadeProcessClear
 10344 ;;		_FadeProcessSet
 10345 ;;		_PWM_GP3
 10346 ;; This function is called by:
 10347 ;;		_GP_Ports_FSM
 10348 ;; This function uses a non-reentrant model
 10349 ;;
 10350                           
 10351                           
 10352                           ;psect for function _FADE_GP3
 10353  0209                     _FADE_GP3:	
 10354                           
 10355                           ;GPports.c: 103: if ((GP3CONF & 0x03) != 0x00)
 10356                           
 10357                           ;incstack = 0
 10358                           ; Regs used in _FADE_GP3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10359  0209  0020               	movlb	0	; select bank0
 10360  020A  0846               	movf	_GP3CONF,w	;volatile
 10361  020B  3903               	andlw	3
 10362  020C  1D03               	btfss	3,2
 10363  020D  0008               	return
 10364                           
 10365                           ;GPports.c: 106: if (FADEGP == 0) {
 10366  020E  083F               	movf	_FADEGP,w	;volatile
 10367  020F  1D03               	btfss	3,2
 10368  0210  2A18               	goto	l7078
 10369                           
 10370                           ;GPports.c: 107: if (temp_gp3 != GP3REG) {
 10371  0211  0835               	movf	_temp_gp3,w
 10372  0212  0641               	xorwf	_GP3REG,w	;volatile
 10373  0213  1903               	skipnz
 10374  0214  0008               	return
 10375                           
 10376                           ;GPports.c: 108: temp_gp3 = GP3REG;
 10377  0215  0841               	movf	_GP3REG,w	;volatile
 10378  0216  00B5               	movwf	_temp_gp3
 10379                           
 10380                           ;GPports.c: 109: PWM_GP3(temp_gp3);
 10381  0217  2A5D               	ljmp	_PWM_GP3
 10382  0218                     l7078:	
 10383                           
 10384                           ;GPports.c: 112: };GPports.c: 114: if (gp_fade_cnt >= FADEGP) {
 10385  0218  083F               	movf	_FADEGP,w	;volatile
 10386  0219  0234               	subwf	_gp_fade_cnt,w
 10387  021A  1C03               	skipc
 10388  021B  0008               	return
 10389                           
 10390                           ;GPports.c: 115: if (temp_gp3 != GP3REG) {
 10391  021C  0835               	movf	_temp_gp3,w
 10392  021D  0641               	xorwf	_GP3REG,w	;volatile
 10393  021E  1903               	skipnz
 10394  021F  0008               	return
 10395                           
 10396                           ;GPports.c: 117: if (temp_gp3 < GP3REG) {
 10397  0220  0841               	movf	_GP3REG,w	;volatile
 10398  0221  0235               	subwf	_temp_gp3,w
 10399  0222  1C03               	btfss	3,0
 10400                           
 10401                           ;GPports.c: 118: temp_gp3++;
 10402  0223  0AB5               	incf	_temp_gp3,f
 10403                           
 10404                           ;GPports.c: 119: };GPports.c: 120: if (temp_gp3 > GP3REG) {
 10405  0224  0835               	movf	_temp_gp3,w
 10406  0225  0241               	subwf	_GP3REG,w	;volatile
 10407  0226  1C03               	btfss	3,0
 10408                           
 10409                           ;GPports.c: 121: temp_gp3--;
 10410  0227  03B5               	decf	_temp_gp3,f
 10411                           
 10412                           ;GPports.c: 122: };GPports.c: 124: PWM_GP3(temp_gp3);
 10413  0228  0835               	movf	_temp_gp3,w
 10414  0229  225D  3180         	fcall	_PWM_GP3
 10415                           
 10416                           ;GPports.c: 125: if (temp_gp3 == GP3REG) {
 10417  022B  0020               	movlb	0	; select bank0
 10418  022C  0835               	movf	_temp_gp3,w
 10419  022D  0641               	xorwf	_GP3REG,w	;volatile
 10420                           
 10421                           ;GPports.c: 126: FadeProcessClear(F_FGP3);
 10422  022E  3004               	movlw	4
 10423  022F  1D03               	skipz
 10424  0230  2A32               	goto	L3
 10425  0231  2BFB               	ljmp	_FadeProcessClear
 10426  0232                     L3:	
 10427                           ;GPports.c: 128: FadeProcessSet(F_FGP3);
 10428                           
 10429                           ;GPports.c: 127: } else {
 10430                           
 10431  0232  2C04               	ljmp	_FadeProcessSet
 10432  0233                     __end_of_FADE_GP3:	
 10433  0233                     __ptext29:	
 10434 ;; *************** function _FADE_GP2 *****************
 10435 ;; Defined at:
 10436 ;;		line 63 in file "GPports.c"
 10437 ;; Parameters:    Size  Location     Type
 10438 ;;		None
 10439 ;; Auto vars:     Size  Location     Type
 10440 ;;		None
 10441 ;; Return value:  Size  Location     Type
 10442 ;;                  1    wreg      void 
 10443 ;; Registers used:
 10444 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10445 ;; Tracked objects:
 10446 ;;		On entry : 18/0
 10447 ;;		On exit  : 18/0
 10448 ;;		Unchanged: 0/0
 10449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10454 ;;Total ram usage:        0 bytes
 10455 ;; Hardware stack levels used:    1
 10456 ;; Hardware stack levels required when called:   10
 10457 ;; This function calls:
 10458 ;;		_FadeProcessClear
 10459 ;;		_FadeProcessSet
 10460 ;;		_PWM_GP2
 10461 ;; This function is called by:
 10462 ;;		_GP_Ports_FSM
 10463 ;; This function uses a non-reentrant model
 10464 ;;
 10465                           
 10466                           
 10467                           ;psect for function _FADE_GP2
 10468  0233                     _FADE_GP2:	
 10469                           
 10470                           ;GPports.c: 65: if ((GP2CONF & 0x03) != 0x00)
 10471                           
 10472                           ;incstack = 0
 10473                           ; Regs used in _FADE_GP2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10474  0233  0020               	movlb	0	; select bank0
 10475  0234  0847               	movf	_GP2CONF,w	;volatile
 10476  0235  3903               	andlw	3
 10477  0236  1D03               	btfss	3,2
 10478  0237  0008               	return
 10479                           
 10480                           ;GPports.c: 68: if (FADEGP == 0) {
 10481  0238  083F               	movf	_FADEGP,w	;volatile
 10482  0239  1D03               	btfss	3,2
 10483  023A  2A42               	goto	l7044
 10484                           
 10485                           ;GPports.c: 69: if (temp_gp2 != GP2REG) {
 10486  023B  0836               	movf	_temp_gp2,w
 10487  023C  0642               	xorwf	_GP2REG,w	;volatile
 10488  023D  1903               	skipnz
 10489  023E  0008               	return
 10490                           
 10491                           ;GPports.c: 70: temp_gp2 = GP2REG;
 10492  023F  0842               	movf	_GP2REG,w	;volatile
 10493  0240  00B6               	movwf	_temp_gp2
 10494                           
 10495                           ;GPports.c: 71: PWM_GP2(temp_gp2);
 10496  0241  2AE0               	ljmp	_PWM_GP2
 10497  0242                     l7044:	
 10498                           
 10499                           ;GPports.c: 74: };GPports.c: 76: if (gp_fade_cnt >= FADEGP) {
 10500  0242  083F               	movf	_FADEGP,w	;volatile
 10501  0243  0234               	subwf	_gp_fade_cnt,w
 10502  0244  1C03               	skipc
 10503  0245  0008               	return
 10504                           
 10505                           ;GPports.c: 77: if (temp_gp2 != GP2REG) {
 10506  0246  0836               	movf	_temp_gp2,w
 10507  0247  0642               	xorwf	_GP2REG,w	;volatile
 10508  0248  1903               	skipnz
 10509  0249  0008               	return
 10510                           
 10511                           ;GPports.c: 79: if (temp_gp2 < GP2REG) {
 10512  024A  0842               	movf	_GP2REG,w	;volatile
 10513  024B  0236               	subwf	_temp_gp2,w
 10514  024C  1C03               	btfss	3,0
 10515                           
 10516                           ;GPports.c: 80: temp_gp2++;
 10517  024D  0AB6               	incf	_temp_gp2,f
 10518                           
 10519                           ;GPports.c: 81: };GPports.c: 82: if (temp_gp2 > GP2REG) {
 10520  024E  0836               	movf	_temp_gp2,w
 10521  024F  0242               	subwf	_GP2REG,w	;volatile
 10522  0250  1C03               	btfss	3,0
 10523                           
 10524                           ;GPports.c: 83: temp_gp2--;
 10525  0251  03B6               	decf	_temp_gp2,f
 10526                           
 10527                           ;GPports.c: 84: };GPports.c: 86: PWM_GP2(temp_gp2);
 10528  0252  0836               	movf	_temp_gp2,w
 10529  0253  22E0  3180         	fcall	_PWM_GP2
 10530                           
 10531                           ;GPports.c: 87: if (temp_gp2 == GP2REG) {
 10532  0255  0020               	movlb	0	; select bank0
 10533  0256  0836               	movf	_temp_gp2,w
 10534  0257  0642               	xorwf	_GP2REG,w	;volatile
 10535                           
 10536                           ;GPports.c: 88: FadeProcessClear(F_FGP2);
 10537  0258  3002               	movlw	2
 10538  0259  1D03               	skipz
 10539  025A  2A5C               	goto	L4
 10540  025B  2BFB               	ljmp	_FadeProcessClear
 10541  025C                     L4:	
 10542                           ;GPports.c: 90: FadeProcessSet(F_FGP2);
 10543                           
 10544                           ;GPports.c: 89: } else {
 10545                           
 10546  025C  2C04               	ljmp	_FadeProcessSet
 10547  025D                     __end_of_FADE_GP2:	
 10548  025D                     __ptext28:	
 10549 ;; *************** function _PWM_GP3 *****************
 10550 ;; Defined at:
 10551 ;;		line 90 in file "PWM.c"
 10552 ;; Parameters:    Size  Location     Type
 10553 ;;  duty            1    wreg     unsigned char 
 10554 ;; Auto vars:     Size  Location     Type
 10555 ;;  duty            1   14[BANK1 ] unsigned char 
 10556 ;; Return value:  Size  Location     Type
 10557 ;;                  1    wreg      void 
 10558 ;; Registers used:
 10559 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10560 ;; Tracked objects:
 10561 ;;		On entry : 1F/0
 10562 ;;		On exit  : 1F/6
 10563 ;;		Unchanged: 0/0
 10564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10566 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10567 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 10568 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 10569 ;;Total ram usage:        9 bytes
 10570 ;; Hardware stack levels used:    1
 10571 ;; Hardware stack levels required when called:    8
 10572 ;; This function calls:
 10573 ;;		___wmul
 10574 ;; This function is called by:
 10575 ;;		_FADE_GP3
 10576 ;; This function uses a non-reentrant model
 10577 ;;
 10578                           
 10579                           
 10580                           ;psect for function _PWM_GP3
 10581  025D                     _PWM_GP3:	
 10582                           
 10583                           ;incstack = 0
 10584                           ; Regs used in _PWM_GP3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10585                           ;PWM_GP3@duty stored from wreg
 10586  025D  0021               	movlb	1	; select bank1
 10587  025E  00D9               	movwf	PWM_GP3@duty^(0+128)
 10588                           
 10589                           ;PWM.c: 92: if (duty == 0) {
 10590  025F  0859               	movf	PWM_GP3@duty^(0+128),w
 10591  0260  1D03               	btfss	3,2
 10592  0261  2A76               	goto	l6808
 10593                           
 10594                           ;PWM.c: 94: do { LATCbits.LATC0 = 1; } while(0);
 10595  0262  0022               	movlb	2	; select bank2
 10596  0263  140E               	bsf	14,0	;volatile
 10597                           
 10598                           ;PWM.c: 95: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 10599  0264  3055               	movlw	85
 10600  0265  003C               	movlb	28	; select bank28
 10601  0266  008F               	movwf	15	;volsfr
 10602  0267  30AA               	movlw	170
 10603  0268  008F               	movwf	15	;volsfr
 10604  0269  100F               	bcf	15,0	;volsfr
 10605                           
 10606                           ;PWM.c: 96: RC0PPSbits.RC0PPS = 0x00;
 10607  026A  30E0               	movlw	-32
 10608  026B  003D               	movlb	29	; select bank29
 10609  026C  05A0               	andwf	32,f	;volatile
 10610                           
 10611                           ;PWM.c: 97: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 10612  026D  3055               	movlw	85
 10613  026E  003C               	movlb	28	; select bank28
 10614  026F  008F               	movwf	15	;volsfr
 10615  0270  30AA               	movlw	170
 10616  0271  008F               	movwf	15	;volsfr
 10617  0272  140F               	bsf	15,0	;volsfr
 10618                           
 10619                           ;PWM.c: 98: CCP3CON = 0;
 10620  0273  0026               	movlb	6	; select bank6
 10621  0274  0193               	clrf	19	;volatile
 10622  0275  0008               	return
 10623  0276                     l6808:	
 10624                           
 10625                           ;PWM.c: 100: };PWM.c: 102: if (duty > 100)
 10626  0276  3065               	movlw	101
 10627  0277  0259               	subwf	PWM_GP3@duty^(0+128),w
 10628  0278  1C03               	skipc
 10629  0279  2A7C               	goto	l6812
 10630                           
 10631                           ;PWM.c: 103: duty = 100;
 10632  027A  3064               	movlw	100
 10633  027B  00D9               	movwf	PWM_GP3@duty^(0+128)
 10634  027C                     l6812:	
 10635                           
 10636                           ;PWM.c: 105: if (CCP2CON == 0) {
 10637  027C  0025               	movlb	5	; select bank5
 10638  027D  0817               	movf	23,w	;volatile
 10639  027E  1D03               	btfss	3,2
 10640  027F  2A94               	goto	l6828
 10641                           
 10642                           ;PWM.c: 106: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 10643  0280  3055               	movlw	85
 10644  0281  003C               	movlb	28	; select bank28
 10645  0282  008F               	movwf	15	;volsfr
 10646  0283  30AA               	movlw	170
 10647  0284  008F               	movwf	15	;volsfr
 10648  0285  100F               	bcf	15,0	;volsfr
 10649                           
 10650                           ;PWM.c: 107: RC0PPSbits.RC0PPS = 0x0E;
 10651  0286  003D               	movlb	29	; select bank29
 10652  0287  0820               	movf	32,w	;volatile
 10653  0288  39E0               	andlw	-32
 10654  0289  380E               	iorlw	14
 10655  028A  00A0               	movwf	32	;volatile
 10656                           
 10657                           ;PWM.c: 108: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 10658  028B  3055               	movlw	85
 10659  028C  003C               	movlb	28	; select bank28
 10660  028D  008F               	movwf	15	;volsfr
 10661  028E  30AA               	movlw	170
 10662  028F  008F               	movwf	15	;volsfr
 10663  0290  140F               	bsf	15,0	;volsfr
 10664                           
 10665                           ;PWM.c: 109: CCP3CON = 0x8F;
 10666  0291  308F               	movlw	143
 10667  0292  0026               	movlb	6	; select bank6
 10668  0293  0093               	movwf	19	;volatile
 10669  0294                     l6828:	
 10670                           
 10671                           ;PWM.c: 110: };PWM.c: 112: CCPR3H = gamma_table[GAMMAGP3][(uint8_t) (duty - 1)] >> 8;
 10672  0294  0021               	movlb	1	; select bank1
 10673  0295  0859               	movf	PWM_GP3@duty^(0+128),w
 10674  0296  3EFF               	addlw	255
 10675  0297  00D1               	movwf	??_PWM_GP3^(0+128)
 10676  0298  01D2               	clrf	(??_PWM_GP3^(0+128)+1)
 10677  0299  35D1               	lslf	??_PWM_GP3^(0+128),f
 10678  029A  0DD2               	rlf	(??_PWM_GP3^(0+128)+1),f
 10679  029B  0020               	movlb	0	; select bank0
 10680  029C  083C               	movf	_GAMMAGP3,w	;volatile
 10681  029D  0021               	movlb	1	; select bank1
 10682  029E  00CB               	movwf	___wmul@multiplier^(0+128)
 10683  029F  30C8               	movlw	200
 10684  02A0  01CC               	clrf	(___wmul@multiplier+1)^(0+128)
 10685  02A1  00CD               	movwf	___wmul@multiplicand^(0+128)
 10686  02A2  01CE               	clrf	(___wmul@multiplicand+1)^(0+128)
 10687  02A3  23E6  3180         	fcall	___wmul
 10688  02A5  302B               	movlw	low (_gamma_table| (0+32768))
 10689  02A6  00D3               	movwf	(??_PWM_GP3+2)^(0+128)
 10690  02A7  3084               	movlw	high (_gamma_table| (0+32768))
 10691  02A8  00D4               	movwf	((??_PWM_GP3+2)^(0+128)+1)
 10692  02A9  084B               	movf	?___wmul^(0+128),w
 10693  02AA  0753               	addwf	(??_PWM_GP3+2)^(0+128),w
 10694  02AB  00D5               	movwf	(??_PWM_GP3+4)^(0+128)
 10695  02AC  084C               	movf	(?___wmul+1)^(0+128),w
 10696  02AD  3D54               	addwfc	(??_PWM_GP3+3)^(0+128),w
 10697  02AE  00D6               	movwf	(??_PWM_GP3+5)^(0+128)
 10698  02AF  0855               	movf	(??_PWM_GP3+4)^(0+128),w
 10699  02B0  0751               	addwf	??_PWM_GP3^(0+128),w
 10700  02B1  0084               	movwf	4
 10701  02B2  0856               	movf	(??_PWM_GP3+5)^(0+128),w
 10702  02B3  3D52               	addwfc	(??_PWM_GP3+1)^(0+128),w
 10703  02B4  0085               	movwf	5
 10704  02B5  3F00               	moviw [0]fsr0
 10705  02B6  00D7               	movwf	(??_PWM_GP3+6)^(0+128)
 10706  02B7  3F01               	moviw [1]fsr0
 10707  02B8  00D8               	movwf	((??_PWM_GP3+6)^(0+128)+1)
 10708  02B9  0858               	movf	(??_PWM_GP3+7)^(0+128),w
 10709  02BA  0026               	movlb	6	; select bank6
 10710  02BB  0092               	movwf	18	;volatile
 10711                           
 10712                           ;PWM.c: 113: CCPR3L = gamma_table[GAMMAGP3][(uint8_t) (duty - 1)];
 10713  02BC  0021               	movlb	1	; select bank1
 10714  02BD  0859               	movf	PWM_GP3@duty^(0+128),w
 10715  02BE  3EFF               	addlw	255
 10716  02BF  00D1               	movwf	??_PWM_GP3^(0+128)
 10717  02C0  01D2               	clrf	(??_PWM_GP3^(0+128)+1)
 10718  02C1  35D1               	lslf	??_PWM_GP3^(0+128),f
 10719  02C2  0DD2               	rlf	(??_PWM_GP3^(0+128)+1),f
 10720  02C3  0020               	movlb	0	; select bank0
 10721  02C4  083C               	movf	_GAMMAGP3,w	;volatile
 10722  02C5  0021               	movlb	1	; select bank1
 10723  02C6  00CB               	movwf	___wmul@multiplier^(0+128)
 10724  02C7  30C8               	movlw	200
 10725  02C8  01CC               	clrf	(___wmul@multiplier+1)^(0+128)
 10726  02C9  00CD               	movwf	___wmul@multiplicand^(0+128)
 10727  02CA  01CE               	clrf	(___wmul@multiplicand+1)^(0+128)
 10728  02CB  23E6               	fcall	___wmul
 10729  02CC  302B               	movlw	low (_gamma_table| (0+32768))
 10730  02CD  00D3               	movwf	(??_PWM_GP3+2)^(0+128)
 10731  02CE  3084               	movlw	high (_gamma_table| (0+32768))
 10732  02CF  00D4               	movwf	((??_PWM_GP3+2)^(0+128)+1)
 10733  02D0  084B               	movf	?___wmul^(0+128),w
 10734  02D1  0753               	addwf	(??_PWM_GP3+2)^(0+128),w
 10735  02D2  00D5               	movwf	(??_PWM_GP3+4)^(0+128)
 10736  02D3  084C               	movf	(?___wmul+1)^(0+128),w
 10737  02D4  3D54               	addwfc	(??_PWM_GP3+3)^(0+128),w
 10738  02D5  00D6               	movwf	(??_PWM_GP3+5)^(0+128)
 10739  02D6  0855               	movf	(??_PWM_GP3+4)^(0+128),w
 10740  02D7  0751               	addwf	??_PWM_GP3^(0+128),w
 10741  02D8  0084               	movwf	4
 10742  02D9  0856               	movf	(??_PWM_GP3+5)^(0+128),w
 10743  02DA  3D52               	addwfc	(??_PWM_GP3+1)^(0+128),w
 10744  02DB  0085               	movwf	5
 10745  02DC  0800               	movf	0,w	;code access
 10746  02DD  0026               	movlb	6	; select bank6
 10747  02DE  0091               	movwf	17	;volatile
 10748  02DF  0008               	return
 10749  02E0                     __end_of_PWM_GP3:	
 10750  02E0                     __ptext30:	
 10751 ;; *************** function _PWM_GP2 *****************
 10752 ;; Defined at:
 10753 ;;		line 61 in file "PWM.c"
 10754 ;; Parameters:    Size  Location     Type
 10755 ;;  duty            1    wreg     unsigned char 
 10756 ;; Auto vars:     Size  Location     Type
 10757 ;;  duty            1   14[BANK1 ] unsigned char 
 10758 ;; Return value:  Size  Location     Type
 10759 ;;                  1    wreg      void 
 10760 ;; Registers used:
 10761 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10762 ;; Tracked objects:
 10763 ;;		On entry : 1F/0
 10764 ;;		On exit  : 1F/5
 10765 ;;		Unchanged: 0/0
 10766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10768 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10769 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 10770 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 10771 ;;Total ram usage:        9 bytes
 10772 ;; Hardware stack levels used:    1
 10773 ;; Hardware stack levels required when called:    8
 10774 ;; This function calls:
 10775 ;;		___wmul
 10776 ;; This function is called by:
 10777 ;;		_FADE_GP2
 10778 ;; This function uses a non-reentrant model
 10779 ;;
 10780                           
 10781                           
 10782                           ;psect for function _PWM_GP2
 10783  02E0                     _PWM_GP2:	
 10784                           
 10785                           ;incstack = 0
 10786                           ; Regs used in _PWM_GP2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10787                           ;PWM_GP2@duty stored from wreg
 10788  02E0  0021               	movlb	1	; select bank1
 10789  02E1  00D9               	movwf	PWM_GP2@duty^(0+128)
 10790                           
 10791                           ;PWM.c: 63: if (duty == 0) {
 10792  02E2  0859               	movf	PWM_GP2@duty^(0+128),w
 10793  02E3  1D03               	btfss	3,2
 10794  02E4  2AF9               	goto	l6766
 10795                           
 10796                           ;PWM.c: 65: do { LATCbits.LATC1 = 1; } while(0);
 10797  02E5  0022               	movlb	2	; select bank2
 10798  02E6  148E               	bsf	14,1	;volatile
 10799                           
 10800                           ;PWM.c: 66: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 10801  02E7  3055               	movlw	85
 10802  02E8  003C               	movlb	28	; select bank28
 10803  02E9  008F               	movwf	15	;volsfr
 10804  02EA  30AA               	movlw	170
 10805  02EB  008F               	movwf	15	;volsfr
 10806  02EC  100F               	bcf	15,0	;volsfr
 10807                           
 10808                           ;PWM.c: 67: RC1PPSbits.RC1PPS = 0x00;
 10809  02ED  30E0               	movlw	-32
 10810  02EE  003D               	movlb	29	; select bank29
 10811  02EF  05A1               	andwf	33,f	;volatile
 10812                           
 10813                           ;PWM.c: 68: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 10814  02F0  3055               	movlw	85
 10815  02F1  003C               	movlb	28	; select bank28
 10816  02F2  008F               	movwf	15	;volsfr
 10817  02F3  30AA               	movlw	170
 10818  02F4  008F               	movwf	15	;volsfr
 10819  02F5  140F               	bsf	15,0	;volsfr
 10820                           
 10821                           ;PWM.c: 69: CCP2CON = 0;
 10822  02F6  0025               	movlb	5	; select bank5
 10823  02F7  0197               	clrf	23	;volatile
 10824  02F8  0008               	return
 10825  02F9                     l6766:	
 10826                           
 10827                           ;PWM.c: 71: };PWM.c: 73: if (duty > 100)
 10828  02F9  3065               	movlw	101
 10829  02FA  0259               	subwf	PWM_GP2@duty^(0+128),w
 10830  02FB  1C03               	skipc
 10831  02FC  2AFF               	goto	l6770
 10832                           
 10833                           ;PWM.c: 74: duty = 100;
 10834  02FD  3064               	movlw	100
 10835  02FE  00D9               	movwf	PWM_GP2@duty^(0+128)
 10836  02FF                     l6770:	
 10837                           
 10838                           ;PWM.c: 76: if (CCP2CON == 0) {
 10839  02FF  0025               	movlb	5	; select bank5
 10840  0300  0817               	movf	23,w	;volatile
 10841  0301  1D03               	btfss	3,2
 10842  0302  2B17               	goto	l6786
 10843                           
 10844                           ;PWM.c: 77: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 10845  0303  3055               	movlw	85
 10846  0304  003C               	movlb	28	; select bank28
 10847  0305  008F               	movwf	15	;volsfr
 10848  0306  30AA               	movlw	170
 10849  0307  008F               	movwf	15	;volsfr
 10850  0308  100F               	bcf	15,0	;volsfr
 10851                           
 10852                           ;PWM.c: 78: RC1PPSbits.RC1PPS = 0x0D;
 10853  0309  003D               	movlb	29	; select bank29
 10854  030A  0821               	movf	33,w	;volatile
 10855  030B  39E0               	andlw	-32
 10856  030C  380D               	iorlw	13
 10857  030D  00A1               	movwf	33	;volatile
 10858                           
 10859                           ;PWM.c: 79: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 10860  030E  3055               	movlw	85
 10861  030F  003C               	movlb	28	; select bank28
 10862  0310  008F               	movwf	15	;volsfr
 10863  0311  30AA               	movlw	170
 10864  0312  008F               	movwf	15	;volsfr
 10865  0313  140F               	bsf	15,0	;volsfr
 10866                           
 10867                           ;PWM.c: 80: CCP2CON = 0x8F;
 10868  0314  308F               	movlw	143
 10869  0315  0025               	movlb	5	; select bank5
 10870  0316  0097               	movwf	23	;volatile
 10871  0317                     l6786:	
 10872                           
 10873                           ;PWM.c: 81: };PWM.c: 83: CCPR2H = gamma_table[GAMMAGP2][(uint8_t) (duty - 1)] >> 8;
 10874  0317  0021               	movlb	1	; select bank1
 10875  0318  0859               	movf	PWM_GP2@duty^(0+128),w
 10876  0319  3EFF               	addlw	255
 10877  031A  00D1               	movwf	??_PWM_GP2^(0+128)
 10878  031B  01D2               	clrf	(??_PWM_GP2^(0+128)+1)
 10879  031C  35D1               	lslf	??_PWM_GP2^(0+128),f
 10880  031D  0DD2               	rlf	(??_PWM_GP2^(0+128)+1),f
 10881  031E  0020               	movlb	0	; select bank0
 10882  031F  083D               	movf	_GAMMAGP2,w	;volatile
 10883  0320  0021               	movlb	1	; select bank1
 10884  0321  00CB               	movwf	___wmul@multiplier^(0+128)
 10885  0322  30C8               	movlw	200
 10886  0323  01CC               	clrf	(___wmul@multiplier+1)^(0+128)
 10887  0324  00CD               	movwf	___wmul@multiplicand^(0+128)
 10888  0325  01CE               	clrf	(___wmul@multiplicand+1)^(0+128)
 10889  0326  23E6  3180         	fcall	___wmul
 10890  0328  302B               	movlw	low (_gamma_table| (0+32768))
 10891  0329  00D3               	movwf	(??_PWM_GP2+2)^(0+128)
 10892  032A  3084               	movlw	high (_gamma_table| (0+32768))
 10893  032B  00D4               	movwf	((??_PWM_GP2+2)^(0+128)+1)
 10894  032C  084B               	movf	?___wmul^(0+128),w
 10895  032D  0753               	addwf	(??_PWM_GP2+2)^(0+128),w
 10896  032E  00D5               	movwf	(??_PWM_GP2+4)^(0+128)
 10897  032F  084C               	movf	(?___wmul+1)^(0+128),w
 10898  0330  3D54               	addwfc	(??_PWM_GP2+3)^(0+128),w
 10899  0331  00D6               	movwf	(??_PWM_GP2+5)^(0+128)
 10900  0332  0855               	movf	(??_PWM_GP2+4)^(0+128),w
 10901  0333  0751               	addwf	??_PWM_GP2^(0+128),w
 10902  0334  0084               	movwf	4
 10903  0335  0856               	movf	(??_PWM_GP2+5)^(0+128),w
 10904  0336  3D52               	addwfc	(??_PWM_GP2+1)^(0+128),w
 10905  0337  0085               	movwf	5
 10906  0338  3F00               	moviw [0]fsr0
 10907  0339  00D7               	movwf	(??_PWM_GP2+6)^(0+128)
 10908  033A  3F01               	moviw [1]fsr0
 10909  033B  00D8               	movwf	((??_PWM_GP2+6)^(0+128)+1)
 10910  033C  0858               	movf	(??_PWM_GP2+7)^(0+128),w
 10911  033D  0025               	movlb	5	; select bank5
 10912  033E  0096               	movwf	22	;volatile
 10913                           
 10914                           ;PWM.c: 84: CCPR2L = gamma_table[GAMMAGP2][(uint8_t) (duty - 1)];
 10915  033F  0021               	movlb	1	; select bank1
 10916  0340  0859               	movf	PWM_GP2@duty^(0+128),w
 10917  0341  3EFF               	addlw	255
 10918  0342  00D1               	movwf	??_PWM_GP2^(0+128)
 10919  0343  01D2               	clrf	(??_PWM_GP2^(0+128)+1)
 10920  0344  35D1               	lslf	??_PWM_GP2^(0+128),f
 10921  0345  0DD2               	rlf	(??_PWM_GP2^(0+128)+1),f
 10922  0346  0020               	movlb	0	; select bank0
 10923  0347  083D               	movf	_GAMMAGP2,w	;volatile
 10924  0348  0021               	movlb	1	; select bank1
 10925  0349  00CB               	movwf	___wmul@multiplier^(0+128)
 10926  034A  30C8               	movlw	200
 10927  034B  01CC               	clrf	(___wmul@multiplier+1)^(0+128)
 10928  034C  00CD               	movwf	___wmul@multiplicand^(0+128)
 10929  034D  01CE               	clrf	(___wmul@multiplicand+1)^(0+128)
 10930  034E  23E6               	fcall	___wmul
 10931  034F  302B               	movlw	low (_gamma_table| (0+32768))
 10932  0350  00D3               	movwf	(??_PWM_GP2+2)^(0+128)
 10933  0351  3084               	movlw	high (_gamma_table| (0+32768))
 10934  0352  00D4               	movwf	((??_PWM_GP2+2)^(0+128)+1)
 10935  0353  084B               	movf	?___wmul^(0+128),w
 10936  0354  0753               	addwf	(??_PWM_GP2+2)^(0+128),w
 10937  0355  00D5               	movwf	(??_PWM_GP2+4)^(0+128)
 10938  0356  084C               	movf	(?___wmul+1)^(0+128),w
 10939  0357  3D54               	addwfc	(??_PWM_GP2+3)^(0+128),w
 10940  0358  00D6               	movwf	(??_PWM_GP2+5)^(0+128)
 10941  0359  0855               	movf	(??_PWM_GP2+4)^(0+128),w
 10942  035A  0751               	addwf	??_PWM_GP2^(0+128),w
 10943  035B  0084               	movwf	4
 10944  035C  0856               	movf	(??_PWM_GP2+5)^(0+128),w
 10945  035D  3D52               	addwfc	(??_PWM_GP2+1)^(0+128),w
 10946  035E  0085               	movwf	5
 10947  035F  0800               	movf	0,w	;code access
 10948  0360  0025               	movlb	5	; select bank5
 10949  0361  0095               	movwf	21	;volatile
 10950  0362  0008               	return
 10951  0363                     __end_of_PWM_GP2:	
 10952  0363                     __ptext32:	
 10953 ;; *************** function _PWM_GP1 *****************
 10954 ;; Defined at:
 10955 ;;		line 30 in file "PWM.c"
 10956 ;; Parameters:    Size  Location     Type
 10957 ;;  duty            1    wreg     unsigned char 
 10958 ;; Auto vars:     Size  Location     Type
 10959 ;;  duty            1   14[BANK1 ] unsigned char 
 10960 ;; Return value:  Size  Location     Type
 10961 ;;                  1    wreg      void 
 10962 ;; Registers used:
 10963 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10964 ;; Tracked objects:
 10965 ;;		On entry : 1F/0
 10966 ;;		On exit  : 1F/5
 10967 ;;		Unchanged: 0/0
 10968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10970 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10971 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 10972 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 10973 ;;Total ram usage:        9 bytes
 10974 ;; Hardware stack levels used:    1
 10975 ;; Hardware stack levels required when called:    8
 10976 ;; This function calls:
 10977 ;;		___wmul
 10978 ;; This function is called by:
 10979 ;;		_FADE_GP1
 10980 ;; This function uses a non-reentrant model
 10981 ;;
 10982                           
 10983                           
 10984                           ;psect for function _PWM_GP1
 10985  0363                     _PWM_GP1:	
 10986                           
 10987                           ;incstack = 0
 10988                           ; Regs used in _PWM_GP1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10989                           ;PWM_GP1@duty stored from wreg
 10990  0363  0021               	movlb	1	; select bank1
 10991  0364  00D9               	movwf	PWM_GP1@duty^(0+128)
 10992                           
 10993                           ;PWM.c: 32: if (duty == 0) {
 10994  0365  0859               	movf	PWM_GP1@duty^(0+128),w
 10995  0366  1D03               	btfss	3,2
 10996  0367  2B7C               	goto	l6724
 10997                           
 10998                           ;PWM.c: 34: do { LATCbits.LATC2 = 1; } while(0);
 10999  0368  0022               	movlb	2	; select bank2
 11000  0369  150E               	bsf	14,2	;volatile
 11001                           
 11002                           ;PWM.c: 35: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 11003  036A  3055               	movlw	85
 11004  036B  003C               	movlb	28	; select bank28
 11005  036C  008F               	movwf	15	;volsfr
 11006  036D  30AA               	movlw	170
 11007  036E  008F               	movwf	15	;volsfr
 11008  036F  100F               	bcf	15,0	;volsfr
 11009                           
 11010                           ;PWM.c: 36: RC2PPSbits.RC2PPS = 0x00;
 11011  0370  30E0               	movlw	-32
 11012  0371  003D               	movlb	29	; select bank29
 11013  0372  05A2               	andwf	34,f	;volatile
 11014                           
 11015                           ;PWM.c: 37: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 11016  0373  3055               	movlw	85
 11017  0374  003C               	movlb	28	; select bank28
 11018  0375  008F               	movwf	15	;volsfr
 11019  0376  30AA               	movlw	170
 11020  0377  008F               	movwf	15	;volsfr
 11021  0378  140F               	bsf	15,0	;volsfr
 11022                           
 11023                           ;PWM.c: 38: CCP1CON = 0;
 11024  0379  0025               	movlb	5	; select bank5
 11025  037A  0193               	clrf	19	;volatile
 11026  037B  0008               	return
 11027  037C                     l6724:	
 11028                           
 11029                           ;PWM.c: 40: };PWM.c: 42: if (duty > 100)
 11030  037C  3065               	movlw	101
 11031  037D  0259               	subwf	PWM_GP1@duty^(0+128),w
 11032  037E  1C03               	skipc
 11033  037F  2B82               	goto	l6728
 11034                           
 11035                           ;PWM.c: 43: duty = 100;
 11036  0380  3064               	movlw	100
 11037  0381  00D9               	movwf	PWM_GP1@duty^(0+128)
 11038  0382                     l6728:	
 11039                           
 11040                           ;PWM.c: 45: if (CCP1CON == 0) {
 11041  0382  0025               	movlb	5	; select bank5
 11042  0383  0813               	movf	19,w	;volatile
 11043  0384  1D03               	btfss	3,2
 11044  0385  2B9A               	goto	l6744
 11045                           
 11046                           ;PWM.c: 46: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 11047  0386  3055               	movlw	85
 11048  0387  003C               	movlb	28	; select bank28
 11049  0388  008F               	movwf	15	;volsfr
 11050  0389  30AA               	movlw	170
 11051  038A  008F               	movwf	15	;volsfr
 11052  038B  100F               	bcf	15,0	;volsfr
 11053                           
 11054                           ;PWM.c: 47: RC2PPSbits.RC2PPS = 0x0C;
 11055  038C  003D               	movlb	29	; select bank29
 11056  038D  0822               	movf	34,w	;volatile
 11057  038E  39E0               	andlw	-32
 11058  038F  380C               	iorlw	12
 11059  0390  00A2               	movwf	34	;volatile
 11060                           
 11061                           ;PWM.c: 48: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 11062  0391  3055               	movlw	85
 11063  0392  003C               	movlb	28	; select bank28
 11064  0393  008F               	movwf	15	;volsfr
 11065  0394  30AA               	movlw	170
 11066  0395  008F               	movwf	15	;volsfr
 11067  0396  140F               	bsf	15,0	;volsfr
 11068                           
 11069                           ;PWM.c: 49: CCP1CON = 0x8F;
 11070  0397  308F               	movlw	143
 11071  0398  0025               	movlb	5	; select bank5
 11072  0399  0093               	movwf	19	;volatile
 11073  039A                     l6744:	
 11074                           
 11075                           ;PWM.c: 50: };PWM.c: 52: CCPR1H = gamma_table[GAMMAGP1][(uint8_t) (duty - 1)] >> 8;
 11076  039A  0021               	movlb	1	; select bank1
 11077  039B  0859               	movf	PWM_GP1@duty^(0+128),w
 11078  039C  3EFF               	addlw	255
 11079  039D  00D1               	movwf	??_PWM_GP1^(0+128)
 11080  039E  01D2               	clrf	(??_PWM_GP1^(0+128)+1)
 11081  039F  35D1               	lslf	??_PWM_GP1^(0+128),f
 11082  03A0  0DD2               	rlf	(??_PWM_GP1^(0+128)+1),f
 11083  03A1  0020               	movlb	0	; select bank0
 11084  03A2  083E               	movf	_GAMMAGP1,w	;volatile
 11085  03A3  0021               	movlb	1	; select bank1
 11086  03A4  00CB               	movwf	___wmul@multiplier^(0+128)
 11087  03A5  30C8               	movlw	200
 11088  03A6  01CC               	clrf	(___wmul@multiplier+1)^(0+128)
 11089  03A7  00CD               	movwf	___wmul@multiplicand^(0+128)
 11090  03A8  01CE               	clrf	(___wmul@multiplicand+1)^(0+128)
 11091  03A9  23E6  3180         	fcall	___wmul
 11092  03AB  302B               	movlw	low (_gamma_table| (0+32768))
 11093  03AC  00D3               	movwf	(??_PWM_GP1+2)^(0+128)
 11094  03AD  3084               	movlw	high (_gamma_table| (0+32768))
 11095  03AE  00D4               	movwf	((??_PWM_GP1+2)^(0+128)+1)
 11096  03AF  084B               	movf	?___wmul^(0+128),w
 11097  03B0  0753               	addwf	(??_PWM_GP1+2)^(0+128),w
 11098  03B1  00D5               	movwf	(??_PWM_GP1+4)^(0+128)
 11099  03B2  084C               	movf	(?___wmul+1)^(0+128),w
 11100  03B3  3D54               	addwfc	(??_PWM_GP1+3)^(0+128),w
 11101  03B4  00D6               	movwf	(??_PWM_GP1+5)^(0+128)
 11102  03B5  0855               	movf	(??_PWM_GP1+4)^(0+128),w
 11103  03B6  0751               	addwf	??_PWM_GP1^(0+128),w
 11104  03B7  0084               	movwf	4
 11105  03B8  0856               	movf	(??_PWM_GP1+5)^(0+128),w
 11106  03B9  3D52               	addwfc	(??_PWM_GP1+1)^(0+128),w
 11107  03BA  0085               	movwf	5
 11108  03BB  3F00               	moviw [0]fsr0
 11109  03BC  00D7               	movwf	(??_PWM_GP1+6)^(0+128)
 11110  03BD  3F01               	moviw [1]fsr0
 11111  03BE  00D8               	movwf	((??_PWM_GP1+6)^(0+128)+1)
 11112  03BF  0858               	movf	(??_PWM_GP1+7)^(0+128),w
 11113  03C0  0025               	movlb	5	; select bank5
 11114  03C1  0092               	movwf	18	;volatile
 11115                           
 11116                           ;PWM.c: 53: CCPR1L = gamma_table[GAMMAGP1][(uint8_t) (duty - 1)];
 11117  03C2  0021               	movlb	1	; select bank1
 11118  03C3  0859               	movf	PWM_GP1@duty^(0+128),w
 11119  03C4  3EFF               	addlw	255
 11120  03C5  00D1               	movwf	??_PWM_GP1^(0+128)
 11121  03C6  01D2               	clrf	(??_PWM_GP1^(0+128)+1)
 11122  03C7  35D1               	lslf	??_PWM_GP1^(0+128),f
 11123  03C8  0DD2               	rlf	(??_PWM_GP1^(0+128)+1),f
 11124  03C9  0020               	movlb	0	; select bank0
 11125  03CA  083E               	movf	_GAMMAGP1,w	;volatile
 11126  03CB  0021               	movlb	1	; select bank1
 11127  03CC  00CB               	movwf	___wmul@multiplier^(0+128)
 11128  03CD  30C8               	movlw	200
 11129  03CE  01CC               	clrf	(___wmul@multiplier+1)^(0+128)
 11130  03CF  00CD               	movwf	___wmul@multiplicand^(0+128)
 11131  03D0  01CE               	clrf	(___wmul@multiplicand+1)^(0+128)
 11132  03D1  23E6               	fcall	___wmul
 11133  03D2  302B               	movlw	low (_gamma_table| (0+32768))
 11134  03D3  00D3               	movwf	(??_PWM_GP1+2)^(0+128)
 11135  03D4  3084               	movlw	high (_gamma_table| (0+32768))
 11136  03D5  00D4               	movwf	((??_PWM_GP1+2)^(0+128)+1)
 11137  03D6  084B               	movf	?___wmul^(0+128),w
 11138  03D7  0753               	addwf	(??_PWM_GP1+2)^(0+128),w
 11139  03D8  00D5               	movwf	(??_PWM_GP1+4)^(0+128)
 11140  03D9  084C               	movf	(?___wmul+1)^(0+128),w
 11141  03DA  3D54               	addwfc	(??_PWM_GP1+3)^(0+128),w
 11142  03DB  00D6               	movwf	(??_PWM_GP1+5)^(0+128)
 11143  03DC  0855               	movf	(??_PWM_GP1+4)^(0+128),w
 11144  03DD  0751               	addwf	??_PWM_GP1^(0+128),w
 11145  03DE  0084               	movwf	4
 11146  03DF  0856               	movf	(??_PWM_GP1+5)^(0+128),w
 11147  03E0  3D52               	addwfc	(??_PWM_GP1+1)^(0+128),w
 11148  03E1  0085               	movwf	5
 11149  03E2  0800               	movf	0,w	;code access
 11150  03E3  0025               	movlb	5	; select bank5
 11151  03E4  0091               	movwf	17	;volatile
 11152  03E5  0008               	return
 11153  03E6                     __end_of_PWM_GP1:	
 11154  03E6                     __ptext33:	
 11155 ;; *************** function ___wmul *****************
 11156 ;; Defined at:
 11157 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
 11158 ;; Parameters:    Size  Location     Type
 11159 ;;  multiplier      2    0[BANK1 ] unsigned int 
 11160 ;;  multiplicand    2    2[BANK1 ] unsigned int 
 11161 ;; Auto vars:     Size  Location     Type
 11162 ;;  product         2    4[BANK1 ] unsigned int 
 11163 ;; Return value:  Size  Location     Type
 11164 ;;                  2    0[BANK1 ] unsigned int 
 11165 ;; Registers used:
 11166 ;;		wreg, status,2, status,0
 11167 ;; Tracked objects:
 11168 ;;		On entry : 1F/1
 11169 ;;		On exit  : 1F/1
 11170 ;;		Unchanged: 0/0
 11171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11172 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11173 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11175 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 11176 ;;Total ram usage:        6 bytes
 11177 ;; Hardware stack levels used:    1
 11178 ;; Hardware stack levels required when called:    7
 11179 ;; This function calls:
 11180 ;;		Nothing
 11181 ;; This function is called by:
 11182 ;;		_PWM_GP1
 11183 ;;		_PWM_GP2
 11184 ;;		_PWM_GP3
 11185 ;; This function uses a non-reentrant model
 11186 ;;
 11187                           
 11188                           
 11189                           ;psect for function ___wmul
 11190  03E6                     ___wmul:	
 11191                           
 11192                           ;incstack = 0
 11193                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 11194  03E6  01CF               	clrf	___wmul@product^(0+128)
 11195  03E7  01D0               	clrf	(___wmul@product+1)^(0+128)
 11196  03E8                     l6662:	
 11197  03E8  1C4B               	btfss	___wmul@multiplier^(0+128),0
 11198  03E9  2BEE               	goto	l6666
 11199  03EA  084D               	movf	___wmul@multiplicand^(0+128),w
 11200  03EB  07CF               	addwf	___wmul@product^(0+128),f
 11201  03EC  084E               	movf	(___wmul@multiplicand+1)^(0+128),w
 11202  03ED  3DD0               	addwfc	(___wmul@product+1)^(0+128),f
 11203  03EE                     l6666:	
 11204  03EE  35CD               	lslf	___wmul@multiplicand^(0+128),f
 11205  03EF  0DCE               	rlf	(___wmul@multiplicand+1)^(0+128),f
 11206  03F0  36CC               	lsrf	(___wmul@multiplier+1)^(0+128),f
 11207  03F1  0CCB               	rrf	___wmul@multiplier^(0+128),f
 11208  03F2  084B               	movf	___wmul@multiplier^(0+128),w
 11209  03F3  044C               	iorwf	(___wmul@multiplier+1)^(0+128),w
 11210  03F4  1D03               	btfss	3,2
 11211  03F5  2BE8               	goto	l6662
 11212  03F6  0850               	movf	(___wmul@product+1)^(0+128),w
 11213  03F7  00CC               	movwf	(?___wmul+1)^(0+128)
 11214  03F8  084F               	movf	___wmul@product^(0+128),w
 11215  03F9  00CB               	movwf	?___wmul^(0+128)
 11216  03FA  0008               	return
 11217  03FB                     __end_of___wmul:	
 11218  03FB                     __ptext35:	
 11219 ;; *************** function _FadeProcessClear *****************
 11220 ;; Defined at:
 11221 ;;		line 141 in file "DataVariable.c"
 11222 ;; Parameters:    Size  Location     Type
 11223 ;;  stat            1    wreg     enum E95
 11224 ;; Auto vars:     Size  Location     Type
 11225 ;;  stat            1    3[BANK1 ] enum E95
 11226 ;; Return value:  Size  Location     Type
 11227 ;;                  1    wreg      void 
 11228 ;; Registers used:
 11229 ;;		wreg, status,2, status,0, pclath, cstack
 11230 ;; Tracked objects:
 11231 ;;		On entry : 1F/0
 11232 ;;		On exit  : 1C/0
 11233 ;;		Unchanged: 0/0
 11234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11236 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11238 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11239 ;;Total ram usage:        1 bytes
 11240 ;; Hardware stack levels used:    1
 11241 ;; Hardware stack levels required when called:    9
 11242 ;; This function calls:
 11243 ;;		_Int2StatusUpdate
 11244 ;;		_SetInterrupt
 11245 ;; This function is called by:
 11246 ;;		_FADE_GP1
 11247 ;;		_FADE_GP2
 11248 ;;		_FADE_GP3
 11249 ;; This function uses a non-reentrant model
 11250 ;;
 11251                           
 11252                           
 11253                           ;psect for function _FadeProcessClear
 11254  03FB                     _FadeProcessClear:	
 11255                           
 11256                           ;incstack = 0
 11257                           ; Regs used in _FadeProcessClear: [wreg+status,2+status,0+pclath+cstack]
 11258                           ;FadeProcessClear@stat stored from wreg
 11259  03FB  0021               	movlb	1	; select bank1
 11260  03FC  00CE               	movwf	FadeProcessClear@stat^(0+128)
 11261                           
 11262                           ;DataVariable.c: 142: FSTATUS &= ~(uint8_t) stat;
 11263  03FD  094E               	comf	FadeProcessClear@stat^(0+128),w
 11264  03FE  0020               	movlb	0	; select bank0
 11265  03FF  05C4               	andwf	_FSTATUS,f	;volatile
 11266                           
 11267                           ;DataVariable.c: 143: Int2StatusUpdate(E_GPFADE);
 11268  0400  3040               	movlw	64
 11269  0401  21CB  3180         	fcall	_Int2StatusUpdate
 11270                           
 11271                           ;DataVariable.c: 145: SetInterrupt();
 11272  0403  29D5               	ljmp	l6654
 11273  0404                     __end_of_FadeProcessClear:	
 11274  0404                     __ptext34:	
 11275 ;; *************** function _FadeProcessSet *****************
 11276 ;; Defined at:
 11277 ;;		line 133 in file "DataVariable.c"
 11278 ;; Parameters:    Size  Location     Type
 11279 ;;  stat            1    wreg     enum E95
 11280 ;; Auto vars:     Size  Location     Type
 11281 ;;  stat            1    0[BANK1 ] enum E95
 11282 ;; Return value:  Size  Location     Type
 11283 ;;                  1    wreg      void 
 11284 ;; Registers used:
 11285 ;;		wreg, status,2, status,0
 11286 ;; Tracked objects:
 11287 ;;		On entry : 1F/0
 11288 ;;		On exit  : 1F/0
 11289 ;;		Unchanged: 0/0
 11290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11292 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11294 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11295 ;;Total ram usage:        1 bytes
 11296 ;; Hardware stack levels used:    1
 11297 ;; Hardware stack levels required when called:    7
 11298 ;; This function calls:
 11299 ;;		Nothing
 11300 ;; This function is called by:
 11301 ;;		_FADE_GP1
 11302 ;;		_FADE_GP2
 11303 ;;		_FADE_GP3
 11304 ;; This function uses a non-reentrant model
 11305 ;;
 11306                           
 11307                           
 11308                           ;psect for function _FadeProcessSet
 11309  0404                     _FadeProcessSet:	
 11310                           
 11311                           ;incstack = 0
 11312                           ; Regs used in _FadeProcessSet: [wreg+status,2+status,0]
 11313                           ;FadeProcessSet@stat stored from wreg
 11314  0404  0021               	movlb	1	; select bank1
 11315  0405  00CB               	movwf	FadeProcessSet@stat^(0+128)
 11316                           
 11317                           ;DataVariable.c: 134: FSTATUS |= (uint8_t) stat;
 11318  0406  0020               	movlb	0	; select bank0
 11319  0407  04C4               	iorwf	_FSTATUS,f	;volatile
 11320  0408  0008               	return
 11321  0409                     __end_of_FadeProcessSet:	
 11322  0409                     __ptext14:	
 11323 ;; *************** function _NavKey_FSM *****************
 11324 ;; Defined at:
 11325 ;;		line 324 in file "NavKey.c"
 11326 ;; Parameters:    Size  Location     Type
 11327 ;;		None
 11328 ;; Auto vars:     Size  Location     Type
 11329 ;;		None
 11330 ;; Return value:  Size  Location     Type
 11331 ;;                  1    wreg      void 
 11332 ;; Registers used:
 11333 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11334 ;; Tracked objects:
 11335 ;;		On entry : 1F/1
 11336 ;;		On exit  : 1C/0
 11337 ;;		Unchanged: 0/0
 11338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11343 ;;Total ram usage:        0 bytes
 11344 ;; Hardware stack levels used:    1
 11345 ;; Hardware stack levels required when called:    9
 11346 ;; This function calls:
 11347 ;;		_NavKeySwitch_KeyFilter
 11348 ;;		_NavKey_CentralButton_FSM
 11349 ;;		_NavKey_DWButton_FSM
 11350 ;;		_NavKey_LTButton_FSM
 11351 ;;		_NavKey_RTButton_FSM
 11352 ;;		_NavKey_UPButton_FSM
 11353 ;; This function is called by:
 11354 ;;		_main
 11355 ;; This function uses a non-reentrant model
 11356 ;;
 11357                           
 11358                           
 11359                           ;psect for function _NavKey_FSM
 11360  0409                     _NavKey_FSM:	
 11361                           
 11362                           ;NavKey.c: 327: if (en_deb < 10) {
 11363                           
 11364                           ;incstack = 0
 11365                           ; Regs used in _NavKey_FSM: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11366  0409  3000               	movlw	0
 11367  040A  0230               	subwf	(_en_deb+1)^(0+128),w
 11368  040B  300A               	movlw	10
 11369  040C  1903               	skipnz
 11370  040D  022F               	subwf	_en_deb^(0+128),w
 11371  040E  1803               	skipnc
 11372  040F  2C13               	goto	l7454
 11373                           
 11374                           ;NavKey.c: 328: en_deb++;
 11375  0410  0AAF               	incf	_en_deb^(0+128),f
 11376  0411  1903               	skipnz
 11377  0412  0AB0               	incf	(_en_deb+1)^(0+128),f
 11378  0413                     l7454:	
 11379                           
 11380                           ;NavKey.c: 329: };NavKey.c: 331: NavKeySwitch_KeyFilter();
 11381  0413  3193  23CF  3180   	fcall	_NavKeySwitch_KeyFilter
 11382                           
 11383                           ;NavKey.c: 332: NavKey_CentralButton_FSM();
 11384  0416  3194  24A5  3180   	fcall	_NavKey_CentralButton_FSM
 11385                           
 11386                           ;NavKey.c: 333: NavKey_UPButton_FSM();
 11387  0419  3194  2421  3180   	fcall	_NavKey_UPButton_FSM
 11388                           
 11389                           ;NavKey.c: 334: NavKey_DWButton_FSM();
 11390  041C  3194  2484  3180   	fcall	_NavKey_DWButton_FSM
 11391                           
 11392                           ;NavKey.c: 335: NavKey_RTButton_FSM();
 11393  041F  3194  2442         	fcall	_NavKey_RTButton_FSM
 11394                           
 11395                           ;NavKey.c: 336: NavKey_LTButton_FSM();
 11396  0421  3194  2C63         	ljmp	l7382
 11397  0423                     __end_of_NavKey_FSM:	
 11398  0423                     __ptext5:	
 11399 ;; *************** function _TMR3_SetInterruptHandler *****************
 11400 ;; Defined at:
 11401 ;;		line 178 in file "mcc_generated_files/tmr3.c"
 11402 ;; Parameters:    Size  Location     Type
 11403 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 11404 ;;		 -> TimerInt(1), TMR3_DefaultInterruptHandler(1), 
 11405 ;; Auto vars:     Size  Location     Type
 11406 ;;		None
 11407 ;; Return value:  Size  Location     Type
 11408 ;;                  1    wreg      void 
 11409 ;; Registers used:
 11410 ;;		wreg
 11411 ;; Tracked objects:
 11412 ;;		On entry : 1F/1
 11413 ;;		On exit  : 1F/1
 11414 ;;		Unchanged: 0/0
 11415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11416 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11419 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11420 ;;Total ram usage:        2 bytes
 11421 ;; Hardware stack levels used:    1
 11422 ;; Hardware stack levels required when called:    7
 11423 ;; This function calls:
 11424 ;;		Nothing
 11425 ;; This function is called by:
 11426 ;;		_TMR3_Initialize
 11427 ;;		_main
 11428 ;; This function uses a non-reentrant model
 11429 ;;
 11430                           
 11431                           
 11432                           ;psect for function _TMR3_SetInterruptHandler
 11433  0423                     _TMR3_SetInterruptHandler:	
 11434                           
 11435                           ;tmr3.c: 179: TMR3_InterruptHandler = InterruptHandler;
 11436                           
 11437                           ;incstack = 0
 11438                           ; Regs used in _TMR3_SetInterruptHandler: [wreg]
 11439  0423  084C               	movf	(TMR3_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 11440  0424  00B6               	movwf	(_TMR3_InterruptHandler+1)^(0+128)
 11441  0425  084B               	movf	TMR3_SetInterruptHandler@InterruptHandler^(0+128),w
 11442  0426  00B5               	movwf	_TMR3_InterruptHandler^(0+128)
 11443  0427  0008               	return
 11444  0428                     __end_of_TMR3_SetInterruptHandler:	
 11445  0428                     __ptext1:	
 11446 ;; *************** function _TMR3_StartTimer *****************
 11447 ;; Defined at:
 11448 ;;		line 93 in file "mcc_generated_files/tmr3.c"
 11449 ;; Parameters:    Size  Location     Type
 11450 ;;		None
 11451 ;; Auto vars:     Size  Location     Type
 11452 ;;		None
 11453 ;; Return value:  Size  Location     Type
 11454 ;;                  1    wreg      void 
 11455 ;; Registers used:
 11456 ;;		None
 11457 ;; Tracked objects:
 11458 ;;		On entry : 1F/1
 11459 ;;		On exit  : 1F/8
 11460 ;;		Unchanged: 0/0
 11461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11466 ;;Total ram usage:        0 bytes
 11467 ;; Hardware stack levels used:    1
 11468 ;; Hardware stack levels required when called:    7
 11469 ;; This function calls:
 11470 ;;		Nothing
 11471 ;; This function is called by:
 11472 ;;		_main
 11473 ;; This function uses a non-reentrant model
 11474 ;;
 11475                           
 11476                           
 11477                           ;psect for function _TMR3_StartTimer
 11478  0428                     _TMR3_StartTimer:	
 11479                           
 11480                           ;tmr3.c: 96: T3CONbits.TMR3ON = 1;
 11481                           
 11482                           ;incstack = 0
 11483                           ; Regs used in _TMR3_StartTimer: []
 11484  0428  0028               	movlb	8	; select bank8
 11485  0429  1413               	bsf	19,0	;volatile
 11486  042A  0008               	return
 11487  042B                     __end_of_TMR3_StartTimer:	
 11488                           
 11489                           	psect	bssBANK0
 11490  0020                     __pbssBANK0:	
 11491  0020                     _ISTEP:	
 11492  0020                     	ds	4
 11493  0024                     _CMIN:	
 11494  0024                     	ds	4
 11495  0028                     _CMAX:	
 11496  0028                     	ds	4
 11497  002C                     _CVAL:	
 11498  002C                     	ds	4
 11499  0030                     _INTCONF:	
 11500  0030                     	ds	2
 11501  0032                     _NSTATUS:	
 11502  0032                     	ds	2
 11503  0034                     _gp_fade_cnt:	
 11504  0034                     	ds	1
 11505  0035                     _temp_gp3:	
 11506  0035                     	ds	1
 11507  0036                     _temp_gp2:	
 11508  0036                     	ds	1
 11509  0037                     _temp_gp1:	
 11510  0037                     	ds	1
 11511  0038                     _EncoderReg:	
 11512  0038                     	ds	1
 11513  0039                     _C_DTYPE:	
 11514  0039                     	ds	1
 11515  003A                     _C_WRAPE:	
 11516  003A                     	ds	1
 11517  003B                     _C_MBANK:	
 11518  003B                     	ds	1
 11519  003C                     _GAMMAGP3:	
 11520  003C                     	ds	1
 11521  003D                     _GAMMAGP2:	
 11522  003D                     	ds	1
 11523  003E                     _GAMMAGP1:	
 11524  003E                     	ds	1
 11525  003F                     _FADEGP:	
 11526  003F                     	ds	1
 11527  0040                     _DPPERIOD:	
 11528  0040                     	ds	1
 11529  0041                     _GP3REG:	
 11530  0041                     	ds	1
 11531  0042                     _GP2REG:	
 11532  0042                     	ds	1
 11533  0043                     _GP1REG:	
 11534  0043                     	ds	1
 11535  0044                     _FSTATUS:	
 11536  0044                     	ds	1
 11537  0045                     _SSTATUS:	
 11538  0045                     	ds	1
 11539  0046                     _GP3CONF:	
 11540  0046                     	ds	1
 11541  0047                     _GP2CONF:	
 11542  0047                     	ds	1
 11543  0048                     _GP1CONF:	
 11544  0048                     	ds	1
 11545  0049                     _GCONF:	
 11546  0049                     	ds	1
 11547                           
 11548                           	psect	dataBANK0
 11549  005F                     __pdataBANK0:	
 11550  005F                     _I2C1_slaveWriteData:	
 11551  005F                     	ds	1
 11552                           
 11553                           	psect	bssBANK1
 11554  00A0                     __pbssBANK1:	
 11555  00A0                     _NavKey_PBstatus:	
 11556  00A0                     	ds	5
 11557  00A5                     _NavKey_PBtemp:	
 11558  00A5                     	ds	5
 11559  00AA                     _pb_cnt:	
 11560  00AA                     	ds	5
 11561  00AF                     _en_deb:	
 11562  00AF                     	ds	2
 11563  00B1                     _double_push_cnt:	
 11564  00B1                     	ds	2
 11565  00B3                     _DoublePush:	
 11566  00B3                     	ds	2
 11567  00B5                     _TMR3_InterruptHandler:	
 11568  00B5                     	ds	2
 11569  00B7                     _timer3ReloadVal:	
 11570  00B7                     	ds	2
 11571  00B9                     NavKey_LTButton_FSM@lt_fsm:	
 11572  00B9                     	ds	1
 11573  00BA                     NavKey_RTButton_FSM@rt_fsm:	
 11574  00BA                     	ds	1
 11575  00BB                     NavKey_DWButton_FSM@dn_fsm:	
 11576  00BB                     	ds	1
 11577  00BC                     NavKey_UPButton_FSM@up_fsm:	
 11578  00BC                     	ds	1
 11579  00BD                     _en_prev:	
 11580  00BD                     	ds	1
 11581  00BE                     _pb_fsm:	
 11582  00BE                     	ds	1
 11583  00BF                     _gp3_fsm:	
 11584  00BF                     	ds	1
 11585  00C0                     _gp2_fsm:	
 11586  00C0                     	ds	1
 11587  00C1                     _gp1_fsm:	
 11588  00C1                     	ds	1
 11589  00C2                     _gp_timer:	
 11590  00C2                     	ds	1
 11591  00C3                     I2C1_StatusCallback@slaveWriteType:	
 11592  00C3                     	ds	1
 11593  00C4                     _int2clear:	
 11594  00C4                     	ds	1
 11595  00C5                     _intclear:	
 11596  00C5                     	ds	1
 11597  00C6                     _C_DIRE:	
 11598  00C6                     	ds	1
 11599  00C7                     _C_IPUD:	
 11600  00C7                     	ds	1
 11601  00C8                     _C_CKSRC:	
 11602  00C8                     	ds	1
 11603  00C9                     _C_RESET:	
 11604  00C9                     	ds	1
 11605  00CA                     _fsm_tmr:	
 11606  00CA                     	ds	1
 11607                           
 11608                           	psect	clrtext
 11609  09A4                     clear_ram0:	
 11610                           ;	Called with FSR0 containing the base address, and
 11611                           ;	WREG with the size to clear
 11612                           
 11613  09A4  0064               	clrwdt	;clear the watchdog before getting into this loop
 11614  09A5                     clrloop0:	
 11615  09A5  0180               	clrf	0	;clear RAM location pointed to by FSR
 11616  09A6  3101               	addfsr 0,1
 11617  09A7  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
 11618  09A8  29A5               	goto	clrloop0	;have we reached the end yet?
 11619  09A9  3400               	retlw	0	;all done for this memory range, return
 11620                           
 11621                           	psect	cstackBANK1
 11622  00CB                     __pcstackBANK1:	
 11623  00CB                     ??_PMD_Initialize:	
 11624  00CB                     ??_PIN_MANAGER_Initialize:	
 11625                           ; 1 bytes @ 0x0
 11626                           
 11627  00CB                     ??_OSCILLATOR_Initialize:	
 11628                           ; 1 bytes @ 0x0
 11629                           
 11630  00CB                     ??_WDT_Initialize:	
 11631                           ; 1 bytes @ 0x0
 11632                           
 11633  00CB                     ??_I2C1_AddressSet:	
 11634                           ; 1 bytes @ 0x0
 11635                           
 11636  00CB                     ??_I2C1_Initialize:	
 11637                           ; 1 bytes @ 0x0
 11638                           
 11639  00CB                     ??_CLC2_Initialize:	
 11640                           ; 1 bytes @ 0x0
 11641                           
 11642  00CB                     ??_TMR2_Initialize:	
 11643                           ; 1 bytes @ 0x0
 11644                           
 11645  00CB                     ??_CLC1_Initialize:	
 11646                           ; 1 bytes @ 0x0
 11647                           
 11648  00CB                     ?_TMR3_SetInterruptHandler:	
 11649                           ; 1 bytes @ 0x0
 11650                           
 11651  00CB                     ??_DataInitSet:	
 11652                           ; 1 bytes @ 0x0
 11653                           
 11654  00CB                     ??_ADC_Initialize:	
 11655                           ; 1 bytes @ 0x0
 11656                           
 11657  00CB                     ??_TMR3_StartTimer:	
 11658                           ; 1 bytes @ 0x0
 11659                           
 11660  00CB                     ??_SetInterrupt:	
 11661                           ; 1 bytes @ 0x0
 11662                           
 11663  00CB                     ??_ClearInterrupt:	
 11664                           ; 1 bytes @ 0x0
 11665                           
 11666  00CB                     ?_NavKeyStatusUpdate:	
 11667                           ; 1 bytes @ 0x0
 11668                           
 11669  00CB                     ??_FadeProcessSet:	
 11670                           ; 1 bytes @ 0x0
 11671                           
 11672  00CB                     ??_NavKeySwitch_KeyFilter:	
 11673                           ; 1 bytes @ 0x0
 11674                           
 11675  00CB                     ?_ADC_GetConversion:	
 11676                           ; 1 bytes @ 0x0
 11677                           
 11678  00CB                     ?___wmul:	
 11679                           ; 2 bytes @ 0x0
 11680                           
 11681  00CB                     FadeProcessSet@stat:	
 11682                           ; 2 bytes @ 0x0
 11683                           
 11684  00CB                     NavKeySwitch_KeyFilter@i:	
 11685                           ; 1 bytes @ 0x0
 11686                           
 11687  00CB                     TMR3_SetInterruptHandler@InterruptHandler:	
 11688                           ; 1 bytes @ 0x0
 11689                           
 11690  00CB                     NavKeyStatusUpdate@stat:	
 11691                           ; 2 bytes @ 0x0
 11692                           
 11693  00CB                     ___wmul@multiplier:	
 11694                           ; 2 bytes @ 0x0
 11695                           
 11696                           
 11697                           ; 2 bytes @ 0x0
 11698  00CB                     	ds	2
 11699  00CD                     ??_TMR3_Initialize:	
 11700  00CD                     ??_TMR3_SetInterruptHandler:	
 11701                           ; 1 bytes @ 0x2
 11702                           
 11703  00CD                     ??_NavKey_FSM:	
 11704                           ; 1 bytes @ 0x2
 11705                           
 11706  00CD                     ??_SYSTEM_Initialize:	
 11707                           ; 1 bytes @ 0x2
 11708                           
 11709  00CD                     ??_ADC_GetConversion:	
 11710                           ; 1 bytes @ 0x2
 11711                           
 11712  00CD                     ??_NavKeyStatusUpdate:	
 11713                           ; 1 bytes @ 0x2
 11714                           
 11715  00CD                     ??_Int2StatusUpdate:	
 11716                           ; 1 bytes @ 0x2
 11717                           
 11718  00CD                     ??_NavKey_CentralButton_FSM:	
 11719                           ; 1 bytes @ 0x2
 11720                           
 11721  00CD                     ??_NavKey_UPButton_FSM:	
 11722                           ; 1 bytes @ 0x2
 11723                           
 11724  00CD                     ??_NavKey_DWButton_FSM:	
 11725                           ; 1 bytes @ 0x2
 11726                           
 11727  00CD                     ??_NavKey_RTButton_FSM:	
 11728                           ; 1 bytes @ 0x2
 11729                           
 11730  00CD                     ??_NavKey_LTButton_FSM:	
 11731                           ; 1 bytes @ 0x2
 11732                           
 11733  00CD                     Int2StatusUpdate@stat:	
 11734                           ; 1 bytes @ 0x2
 11735                           
 11736  00CD                     ___wmul@multiplicand:	
 11737                           ; 1 bytes @ 0x2
 11738                           
 11739                           
 11740                           ; 2 bytes @ 0x2
 11741  00CD                     	ds	1
 11742  00CE                     ??_FadeProcessClear:	
 11743  00CE                     ADC_GetConversion@channel:	
 11744                           ; 1 bytes @ 0x3
 11745                           
 11746  00CE                     FadeProcessClear@stat:	
 11747                           ; 1 bytes @ 0x3
 11748                           
 11749                           
 11750                           ; 1 bytes @ 0x3
 11751  00CE                     	ds	1
 11752  00CF                     ??_GP1_FSM:	
 11753  00CF                     ??_GP2_FSM:	
 11754                           ; 1 bytes @ 0x4
 11755                           
 11756  00CF                     ??_GP3_FSM:	
 11757                           ; 1 bytes @ 0x4
 11758                           
 11759  00CF                     ??___wmul:	
 11760                           ; 1 bytes @ 0x4
 11761                           
 11762  00CF                     ___wmul@product:	
 11763                           ; 1 bytes @ 0x4
 11764                           
 11765                           
 11766                           ; 2 bytes @ 0x4
 11767  00CF                     	ds	2
 11768  00D1                     ??_PWM_GP1:	
 11769  00D1                     ??_PWM_GP2:	
 11770                           ; 1 bytes @ 0x6
 11771                           
 11772  00D1                     ??_PWM_GP3:	
 11773                           ; 1 bytes @ 0x6
 11774                           
 11775                           
 11776                           ; 1 bytes @ 0x6
 11777  00D1                     	ds	8
 11778  00D9                     PWM_GP1@duty:	
 11779  00D9                     PWM_GP2@duty:	
 11780                           ; 1 bytes @ 0xE
 11781                           
 11782  00D9                     PWM_GP3@duty:	
 11783                           ; 1 bytes @ 0xE
 11784                           
 11785                           
 11786                           ; 1 bytes @ 0xE
 11787  00D9                     	ds	1
 11788  00DA                     ??_GP_Ports_FSM:	
 11789  00DA                     ??_FADE_GP1:	
 11790                           ; 1 bytes @ 0xF
 11791                           
 11792  00DA                     ??_FADE_GP2:	
 11793                           ; 1 bytes @ 0xF
 11794                           
 11795  00DA                     ??_FADE_GP3:	
 11796                           ; 1 bytes @ 0xF
 11797                           
 11798                           
 11799                           ; 1 bytes @ 0xF
 11800  00DA                     	ds	1
 11801  00DB                     ??_main:	
 11802                           
 11803                           	psect	cstackCOMMON
 11804  0070                     __pcstackCOMMON:	
 11805                           ; 1 bytes @ 0x10
 11806                           
 11807  0070                     ?___flge:	
 11808  0070                     ?_PMD_Initialize:	
 11809                           ; 1 bit 
 11810                           
 11811  0070                     ?_PIN_MANAGER_Initialize:	
 11812                           ; 1 bytes @ 0x0
 11813                           
 11814  0070                     ?_OSCILLATOR_Initialize:	
 11815                           ; 1 bytes @ 0x0
 11816                           
 11817  0070                     ?_WDT_Initialize:	
 11818                           ; 1 bytes @ 0x0
 11819                           
 11820  0070                     ?_I2C1_AddressSet:	
 11821                           ; 1 bytes @ 0x0
 11822                           
 11823  0070                     ?_I2C1_Initialize:	
 11824                           ; 1 bytes @ 0x0
 11825                           
 11826  0070                     ?_CLC2_Initialize:	
 11827                           ; 1 bytes @ 0x0
 11828                           
 11829  0070                     ?_TMR2_Initialize:	
 11830                           ; 1 bytes @ 0x0
 11831                           
 11832  0070                     ?_CLC1_Initialize:	
 11833                           ; 1 bytes @ 0x0
 11834                           
 11835  0070                     ?_TMR3_Initialize:	
 11836                           ; 1 bytes @ 0x0
 11837                           
 11838  0070                     ?_CLC2_ISR:	
 11839                           ; 1 bytes @ 0x0
 11840                           
 11841  0070                     ?_CLC1_ISR:	
 11842                           ; 1 bytes @ 0x0
 11843                           
 11844  0070                     ?_I2C1_ISR:	
 11845                           ; 1 bytes @ 0x0
 11846                           
 11847  0070                     ?_TMR3_ISR:	
 11848                           ; 1 bytes @ 0x0
 11849                           
 11850  0070                     ?_CLC_1_Interrupt:	
 11851                           ; 1 bytes @ 0x0
 11852                           
 11853  0070                     ?_CLC_2_Interrupt:	
 11854                           ; 1 bytes @ 0x0
 11855                           
 11856  0070                     ?_I2C1_StatusCallback:	
 11857                           ; 1 bytes @ 0x0
 11858                           
 11859  0070                     ?_TMR3_DefaultInterruptHandler:	
 11860                           ; 1 bytes @ 0x0
 11861                           
 11862  0070                     ??_TMR3_DefaultInterruptHandler:	
 11863                           ; 1 bytes @ 0x0
 11864                           
 11865  0070                     ?_TMR3_CallBack:	
 11866                           ; 1 bytes @ 0x0
 11867                           
 11868  0070                     ??_TMR3_CallBack:	
 11869                           ; 1 bytes @ 0x0
 11870                           
 11871  0070                     ?_DataInitSet:	
 11872                           ; 1 bytes @ 0x0
 11873                           
 11874  0070                     ?_NavKey_FSM:	
 11875                           ; 1 bytes @ 0x0
 11876                           
 11877  0070                     ?_GP_Ports_FSM:	
 11878                           ; 1 bytes @ 0x0
 11879                           
 11880  0070                     ?_RegisterRead:	
 11881                           ; 1 bytes @ 0x0
 11882                           
 11883  0070                     ?_GeneralDataSet:	
 11884                           ; 1 bytes @ 0x0
 11885                           
 11886  0070                     ??_GeneralDataSet:	
 11887                           ; 1 bytes @ 0x0
 11888                           
 11889  0070                     ?_Config_GP1:	
 11890                           ; 1 bytes @ 0x0
 11891                           
 11892  0070                     ?_Config_GP2:	
 11893                           ; 1 bytes @ 0x0
 11894                           
 11895  0070                     ?_Config_GP3:	
 11896                           ; 1 bytes @ 0x0
 11897                           
 11898  0070                     ?_UpdateOut_GP1:	
 11899                           ; 1 bytes @ 0x0
 11900                           
 11901  0070                     ?_UpdateOut_GP2:	
 11902                           ; 1 bytes @ 0x0
 11903                           
 11904  0070                     ?_UpdateOut_GP3:	
 11905                           ; 1 bytes @ 0x0
 11906                           
 11907  0070                     ?_eeprom_write:	
 11908                           ; 1 bytes @ 0x0
 11909                           
 11910  0070                     ?_eeprom_read:	
 11911                           ; 1 bytes @ 0x0
 11912                           
 11913  0070                     ??_eeprom_read:	
 11914                           ; 1 bytes @ 0x0
 11915                           
 11916  0070                     ?_PWM_GP1:	
 11917                           ; 1 bytes @ 0x0
 11918                           
 11919  0070                     ?_PWM_GP2:	
 11920                           ; 1 bytes @ 0x0
 11921                           
 11922  0070                     ?_PWM_GP3:	
 11923                           ; 1 bytes @ 0x0
 11924                           
 11925  0070                     ?_SYSTEM_Initialize:	
 11926                           ; 1 bytes @ 0x0
 11927                           
 11928  0070                     ?_INTERRUPT_InterruptManager:	
 11929                           ; 1 bytes @ 0x0
 11930                           
 11931  0070                     ?_I2C1_Initialize_ClockStreach:	
 11932                           ; 1 bytes @ 0x0
 11933                           
 11934  0070                     ??_I2C1_Initialize_ClockStreach:	
 11935                           ; 1 bytes @ 0x0
 11936                           
 11937  0070                     ?_PWM3_Initialize:	
 11938                           ; 1 bytes @ 0x0
 11939                           
 11940  0070                     ??_PWM3_Initialize:	
 11941                           ; 1 bytes @ 0x0
 11942                           
 11943  0070                     ?_ADC_Initialize:	
 11944                           ; 1 bytes @ 0x0
 11945                           
 11946  0070                     ?_PWM1_Initialize:	
 11947                           ; 1 bytes @ 0x0
 11948                           
 11949  0070                     ??_PWM1_Initialize:	
 11950                           ; 1 bytes @ 0x0
 11951                           
 11952  0070                     ?_PWM2_Initialize:	
 11953                           ; 1 bytes @ 0x0
 11954                           
 11955  0070                     ??_PWM2_Initialize:	
 11956                           ; 1 bytes @ 0x0
 11957                           
 11958  0070                     ?_TMR3_StartTimer:	
 11959                           ; 1 bytes @ 0x0
 11960                           
 11961  0070                     ?_TMR3_WriteTimer:	
 11962                           ; 1 bytes @ 0x0
 11963                           
 11964  0070                     ?_SetInterrupt:	
 11965                           ; 1 bytes @ 0x0
 11966                           
 11967  0070                     ?_ClearInterrupt:	
 11968                           ; 1 bytes @ 0x0
 11969                           
 11970  0070                     ?_TimerInt:	
 11971                           ; 1 bytes @ 0x0
 11972                           
 11973  0070                     ??_TimerInt:	
 11974                           ; 1 bytes @ 0x0
 11975                           
 11976  0070                     ?_main:	
 11977                           ; 1 bytes @ 0x0
 11978                           
 11979  0070                     ?_GeneralDataSplit:	
 11980                           ; 1 bytes @ 0x0
 11981                           
 11982  0070                     ??_GeneralDataSplit:	
 11983                           ; 1 bytes @ 0x0
 11984                           
 11985  0070                     ?_Int2StatusUpdate:	
 11986                           ; 1 bytes @ 0x0
 11987                           
 11988  0070                     ?_StatusClear:	
 11989                           ; 1 bytes @ 0x0
 11990                           
 11991  0070                     ??_StatusClear:	
 11992                           ; 1 bytes @ 0x0
 11993                           
 11994  0070                     ?_Int2StatusClear:	
 11995                           ; 1 bytes @ 0x0
 11996                           
 11997  0070                     ??_Int2StatusClear:	
 11998                           ; 1 bytes @ 0x0
 11999                           
 12000  0070                     ?_FadeProcessSet:	
 12001                           ; 1 bytes @ 0x0
 12002                           
 12003  0070                     ?_FadeProcessClear:	
 12004                           ; 1 bytes @ 0x0
 12005                           
 12006  0070                     ?_FADE_GP1:	
 12007                           ; 1 bytes @ 0x0
 12008                           
 12009  0070                     ?_FADE_GP2:	
 12010                           ; 1 bytes @ 0x0
 12011                           
 12012  0070                     ?_FADE_GP3:	
 12013                           ; 1 bytes @ 0x0
 12014                           
 12015  0070                     ?_GP1_FSM:	
 12016                           ; 1 bytes @ 0x0
 12017                           
 12018  0070                     ?_GP2_FSM:	
 12019                           ; 1 bytes @ 0x0
 12020                           
 12021  0070                     ?_GP3_FSM:	
 12022                           ; 1 bytes @ 0x0
 12023                           
 12024  0070                     ?_NavKeySwitch_KeyFilter:	
 12025                           ; 1 bytes @ 0x0
 12026                           
 12027  0070                     ?_NavKey_CentralButton_FSM:	
 12028                           ; 1 bytes @ 0x0
 12029                           
 12030  0070                     ?_NavKey_UPButton_FSM:	
 12031                           ; 1 bytes @ 0x0
 12032                           
 12033  0070                     ?_NavKey_DWButton_FSM:	
 12034                           ; 1 bytes @ 0x0
 12035                           
 12036  0070                     ?_NavKey_RTButton_FSM:	
 12037                           ; 1 bytes @ 0x0
 12038                           
 12039  0070                     ?_NavKey_LTButton_FSM:	
 12040                           ; 1 bytes @ 0x0
 12041                           
 12042  0070                     ?i1_I2C1_Initialize:	
 12043                           ; 1 bytes @ 0x0
 12044                           
 12045  0070                     ??i1_I2C1_Initialize:	
 12046                           ; 1 bytes @ 0x0
 12047                           
 12048  0070                     ?i1_SetInterrupt:	
 12049                           ; 1 bytes @ 0x0
 12050                           
 12051  0070                     ??i1_SetInterrupt:	
 12052                           ; 1 bytes @ 0x0
 12053                           
 12054  0070                     ?i1_ClearInterrupt:	
 12055                           ; 1 bytes @ 0x0
 12056                           
 12057  0070                     ??i1_ClearInterrupt:	
 12058                           ; 1 bytes @ 0x0
 12059                           
 12060  0070                     ?i1_NavKeyStatusUpdate:	
 12061                           ; 1 bytes @ 0x0
 12062                           
 12063  0070                     ?i1_PWM_GP1:	
 12064                           ; 1 bytes @ 0x0
 12065                           
 12066  0070                     ?i1_PWM_GP2:	
 12067                           ; 1 bytes @ 0x0
 12068                           
 12069  0070                     ?i1_PWM_GP3:	
 12070                           ; 1 bytes @ 0x0
 12071                           
 12072  0070                     ?i1___wmul:	
 12073                           ; 1 bytes @ 0x0
 12074                           
 12075  0070                     ?___fladd:	
 12076                           ; 2 bytes @ 0x0
 12077                           
 12078  0070                     eeprom_read@addr:	
 12079                           ; 4 bytes @ 0x0
 12080                           
 12081  0070                     eeprom_write@value:	
 12082                           ; 1 bytes @ 0x0
 12083                           
 12084  0070                     TMR3_WriteTimer@timerVal:	
 12085                           ; 1 bytes @ 0x0
 12086                           
 12087  0070                     i1NavKeyStatusUpdate@stat:	
 12088                           ; 2 bytes @ 0x0
 12089                           
 12090  0070                     i1___wmul@multiplier:	
 12091                           ; 2 bytes @ 0x0
 12092                           
 12093  0070                     ___flge@ff1:	
 12094                           ; 2 bytes @ 0x0
 12095                           
 12096  0070                     ___fladd@b:	
 12097                           ; 4 bytes @ 0x0
 12098                           
 12099                           
 12100                           ; 4 bytes @ 0x0
 12101  0070                     	ds	1
 12102  0071                     ??_RegisterRead:	
 12103  0071                     ??_eeprom_write:	
 12104                           ; 1 bytes @ 0x1
 12105                           
 12106  0071                     RegisterRead@add:	
 12107                           ; 1 bytes @ 0x1
 12108                           
 12109  0071                     eeprom_write@addr:	
 12110                           ; 1 bytes @ 0x1
 12111                           
 12112                           
 12113                           ; 1 bytes @ 0x1
 12114  0071                     	ds	1
 12115  0072                     ??_TMR3_ISR:	
 12116  0072                     ??_TMR3_WriteTimer:	
 12117                           ; 1 bytes @ 0x2
 12118                           
 12119  0072                     ??i1_NavKeyStatusUpdate:	
 12120                           ; 1 bytes @ 0x2
 12121                           
 12122  0072                     RegisterRead@return_value:	
 12123                           ; 1 bytes @ 0x2
 12124                           
 12125  0072                     i1___wmul@multiplicand:	
 12126                           ; 1 bytes @ 0x2
 12127                           
 12128                           
 12129                           ; 2 bytes @ 0x2
 12130  0072                     	ds	2
 12131  0074                     ??i1___wmul:	
 12132  0074                     i1___wmul@product:	
 12133                           ; 1 bytes @ 0x4
 12134                           
 12135  0074                     ___flge@ff2:	
 12136                           ; 2 bytes @ 0x4
 12137                           
 12138  0074                     ___fladd@a:	
 12139                           ; 4 bytes @ 0x4
 12140                           
 12141                           
 12142                           ; 4 bytes @ 0x4
 12143  0074                     	ds	2
 12144  0076                     ??i1_PWM_GP1:	
 12145  0076                     ??i1_PWM_GP2:	
 12146                           ; 1 bytes @ 0x6
 12147                           
 12148  0076                     ??i1_PWM_GP3:	
 12149                           ; 1 bytes @ 0x6
 12150                           
 12151                           
 12152                           ; 1 bytes @ 0x6
 12153  0076                     	ds	2
 12154  0078                     ??___flge:	
 12155  0078                     ___fladd@signs:	
 12156                           ; 1 bytes @ 0x8
 12157                           
 12158                           
 12159                           ; 1 bytes @ 0x8
 12160  0078                     	ds	1
 12161  0079                     ___fladd@aexp:	
 12162                           
 12163                           ; 1 bytes @ 0x9
 12164  0079                     	ds	1
 12165  007A                     ___fladd@bexp:	
 12166                           
 12167                           ; 1 bytes @ 0xA
 12168  007A                     	ds	1
 12169  007B                     ___fladd@grs:	
 12170                           
 12171                           ; 1 bytes @ 0xB
 12172  007B                     	ds	1
 12173  007C                     ??_CLC2_ISR:	
 12174  007C                     ??_CLC1_ISR:	
 12175                           ; 1 bytes @ 0xC
 12176                           
 12177  007C                     ??___flsub:	
 12178                           ; 1 bytes @ 0xC
 12179                           
 12180                           
 12181                           ; 1 bytes @ 0xC
 12182  007C                     	ds	2
 12183  007E                     ??_I2C1_ISR:	
 12184  007E                     ??_I2C1_StatusCallback:	
 12185                           ; 1 bytes @ 0xE
 12186                           
 12187  007E                     ??_RegisterWrite:	
 12188                           ; 1 bytes @ 0xE
 12189                           
 12190  007E                     ??_INTERRUPT_InterruptManager:	
 12191                           ; 1 bytes @ 0xE
 12192                           
 12193                           
 12194                           	psect	cstackBANK0
 12195  004A                     __pcstackBANK0:	
 12196                           ; 1 bytes @ 0xE
 12197                           
 12198  004A                     ??___fladd:	
 12199  004A                     i1PWM_GP1@duty:	
 12200                           ; 1 bytes @ 0x0
 12201                           
 12202  004A                     i1PWM_GP2@duty:	
 12203                           ; 1 bytes @ 0x0
 12204                           
 12205  004A                     i1PWM_GP3@duty:	
 12206                           ; 1 bytes @ 0x0
 12207                           
 12208                           
 12209                           ; 1 bytes @ 0x0
 12210  004A                     	ds	1
 12211  004B                     ??_Config_GP1:	
 12212  004B                     ??_Config_GP2:	
 12213                           ; 1 bytes @ 0x1
 12214                           
 12215  004B                     ??_Config_GP3:	
 12216                           ; 1 bytes @ 0x1
 12217                           
 12218  004B                     ??_UpdateOut_GP1:	
 12219                           ; 1 bytes @ 0x1
 12220                           
 12221  004B                     ??_UpdateOut_GP2:	
 12222                           ; 1 bytes @ 0x1
 12223                           
 12224  004B                     ??_UpdateOut_GP3:	
 12225                           ; 1 bytes @ 0x1
 12226                           
 12227                           
 12228                           ; 1 bytes @ 0x1
 12229  004B                     	ds	2
 12230  004D                     ?_RegisterWrite:	
 12231  004D                     RegisterWrite@data:	
 12232                           ; 1 bytes @ 0x3
 12233                           
 12234                           
 12235                           ; 1 bytes @ 0x3
 12236  004D                     	ds	1
 12237  004E                     RegisterWrite@add:	
 12238                           
 12239                           ; 1 bytes @ 0x4
 12240  004E                     	ds	1
 12241  004F                     I2C1_StatusCallback@i2c_bus_state:	
 12242                           
 12243                           ; 1 bytes @ 0x5
 12244  004F                     	ds	1
 12245  0050                     I2C1_ISR@i2c_data:	
 12246                           
 12247                           ; 1 bytes @ 0x6
 12248  0050                     	ds	2
 12249  0052                     ??_CLC_1_Interrupt:	
 12250  0052                     ?___flsub:	
 12251                           ; 1 bytes @ 0x8
 12252                           
 12253  0052                     ___flsub@a:	
 12254                           ; 4 bytes @ 0x8
 12255                           
 12256                           
 12257                           ; 4 bytes @ 0x8
 12258  0052                     	ds	4
 12259  0056                     ___flsub@b:	
 12260                           
 12261                           ; 4 bytes @ 0xC
 12262  0056                     	ds	4
 12263  005A                     ??_CLC_2_Interrupt:	
 12264                           
 12265                           ; 1 bytes @ 0x10
 12266  005A                     	ds	4
 12267                           
 12268                           	psect	text2
 12269  0B18                     __ptext2:	
 12270 ;; *************** function _SYSTEM_Initialize *****************
 12271 ;; Defined at:
 12272 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12273 ;; Parameters:    Size  Location     Type
 12274 ;;		None
 12275 ;; Auto vars:     Size  Location     Type
 12276 ;;		None
 12277 ;; Return value:  Size  Location     Type
 12278 ;;                  1    wreg      void 
 12279 ;; Registers used:
 12280 ;;		wreg, status,2, status,0, pclath, cstack
 12281 ;; Tracked objects:
 12282 ;;		On entry : B1F/0
 12283 ;;		On exit  : 1F/8
 12284 ;;		Unchanged: 0/0
 12285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12290 ;;Total ram usage:        0 bytes
 12291 ;; Hardware stack levels used:    1
 12292 ;; Hardware stack levels required when called:    9
 12293 ;; This function calls:
 12294 ;;		_CLC1_Initialize
 12295 ;;		_CLC2_Initialize
 12296 ;;		_I2C1_AddressSet
 12297 ;;		_I2C1_Initialize
 12298 ;;		_OSCILLATOR_Initialize
 12299 ;;		_PIN_MANAGER_Initialize
 12300 ;;		_PMD_Initialize
 12301 ;;		_TMR2_Initialize
 12302 ;;		_TMR3_Initialize
 12303 ;;		_WDT_Initialize
 12304 ;; This function is called by:
 12305 ;;		_main
 12306 ;; This function uses a non-reentrant model
 12307 ;;
 12308                           
 12309                           
 12310                           ;psect for function _SYSTEM_Initialize
 12311  0B18                     _SYSTEM_Initialize:	
 12312                           
 12313                           ;mcc.c: 53: PMD_Initialize();
 12314                           
 12315                           ;incstack = 0
 12316                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12317  0B18  23BB  318B         	fcall	_PMD_Initialize
 12318                           
 12319                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 12320  0B1A  2384  318B         	fcall	_PIN_MANAGER_Initialize
 12321                           
 12322                           ;mcc.c: 55: OSCILLATOR_Initialize();
 12323  0B1C  237B  318B         	fcall	_OSCILLATOR_Initialize
 12324                           
 12325                           ;mcc.c: 56: WDT_Initialize();
 12326  0B1E  23D1  318B         	fcall	_WDT_Initialize
 12327                           
 12328                           ;mcc.c: 57: I2C1_AddressSet();
 12329  0B20  2340  318B         	fcall	_I2C1_AddressSet
 12330                           
 12331                           ;mcc.c: 58: I2C1_Initialize();
 12332  0B22  2368  318B         	fcall	_I2C1_Initialize
 12333                           
 12334                           ;mcc.c: 59: CLC2_Initialize();
 12335  0B24  232B  318B         	fcall	_CLC2_Initialize
 12336                           
 12337                           ;mcc.c: 60: TMR2_Initialize();
 12338  0B26  23C9  318B         	fcall	_TMR2_Initialize
 12339                           
 12340                           ;mcc.c: 61: CLC1_Initialize();
 12341  0B28  23D5  318B         	fcall	_CLC1_Initialize
 12342                           
 12343                           ;mcc.c: 62: TMR3_Initialize();
 12344  0B2A  2BEA               	ljmp	l6978
 12345  0B2B                     __end_of_SYSTEM_Initialize:	
 12346  0B2B                     __ptext12:	
 12347 ;; *************** function _CLC2_Initialize *****************
 12348 ;; Defined at:
 12349 ;;		line 59 in file "mcc_generated_files/clc2.c"
 12350 ;; Parameters:    Size  Location     Type
 12351 ;;		None
 12352 ;; Auto vars:     Size  Location     Type
 12353 ;;		None
 12354 ;; Return value:  Size  Location     Type
 12355 ;;                  1    wreg      void 
 12356 ;; Registers used:
 12357 ;;		wreg, status,2
 12358 ;; Tracked objects:
 12359 ;;		On entry : B1F/1
 12360 ;;		On exit  : B1F/1
 12361 ;;		Unchanged: B00/0
 12362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12367 ;;Total ram usage:        0 bytes
 12368 ;; Hardware stack levels used:    1
 12369 ;; Hardware stack levels required when called:    7
 12370 ;; This function calls:
 12371 ;;		Nothing
 12372 ;; This function is called by:
 12373 ;;		_SYSTEM_Initialize
 12374 ;; This function uses a non-reentrant model
 12375 ;;
 12376                           
 12377                           
 12378                           ;psect for function _CLC2_Initialize
 12379  0B2B                     _CLC2_Initialize:	
 12380                           
 12381                           ;clc2.c: 63: CLC2POL = 0x04;
 12382                           
 12383                           ;incstack = 0
 12384                           ; Regs used in _CLC2_Initialize: [wreg+status,2]
 12385  0B2B  3004               	movlw	4
 12386  0B2C  003E               	movlb	30	; select bank30
 12387  0B2D  009B               	movwf	27	;volatile
 12388                           
 12389                           ;clc2.c: 65: CLC2SEL0 = 0x01;
 12390  0B2E  3001               	movlw	1
 12391  0B2F  009C               	movwf	28	;volatile
 12392                           
 12393                           ;clc2.c: 67: CLC2SEL1 = 0x00;
 12394  0B30  019D               	clrf	29	;volatile
 12395                           
 12396                           ;clc2.c: 69: CLC2SEL2 = 0x00;
 12397  0B31  019E               	clrf	30	;volatile
 12398                           
 12399                           ;clc2.c: 71: CLC2SEL3 = 0x00;
 12400  0B32  019F               	clrf	31	;volatile
 12401                           
 12402                           ;clc2.c: 73: CLC2GLS0 = 0x02;
 12403  0B33  3002               	movlw	2
 12404  0B34  00A0               	movwf	32	;volatile
 12405                           
 12406                           ;clc2.c: 75: CLC2GLS1 = 0xA8;
 12407  0B35  30A8               	movlw	168
 12408  0B36  00A1               	movwf	33	;volatile
 12409                           
 12410                           ;clc2.c: 77: CLC2GLS2 = 0xA8;
 12411  0B37  00A2               	movwf	34	;volatile
 12412                           
 12413                           ;clc2.c: 79: CLC2GLS3 = 0xA8;
 12414  0B38  00A3               	movwf	35	;volatile
 12415                           
 12416                           ;clc2.c: 81: CLC2CON = 0x9D;
 12417  0B39  309D               	movlw	157
 12418  0B3A  009A               	movwf	26	;volatile
 12419                           
 12420                           ;clc2.c: 84: PIR3bits.CLC2IF = 0;
 12421  0B3B  0020               	movlb	0	; select bank0
 12422  0B3C  1093               	bcf	19,1	;volatile
 12423                           
 12424                           ;clc2.c: 86: PIE3bits.CLC2IE = 1;
 12425  0B3D  0021               	movlb	1	; select bank1
 12426  0B3E  1493               	bsf	19,1	;volatile
 12427  0B3F  0008               	return
 12428  0B40                     __end_of_CLC2_Initialize:	
 12429  0B40                     __ptext11:	
 12430 ;; *************** function _I2C1_AddressSet *****************
 12431 ;; Defined at:
 12432 ;;		line 20 in file "i2c_register.c"
 12433 ;; Parameters:    Size  Location     Type
 12434 ;;		None
 12435 ;; Auto vars:     Size  Location     Type
 12436 ;;		None
 12437 ;; Return value:  Size  Location     Type
 12438 ;;                  1    wreg      void 
 12439 ;; Registers used:
 12440 ;;		wreg, status,2, status,0
 12441 ;; Tracked objects:
 12442 ;;		On entry : B1F/1
 12443 ;;		On exit  : B1F/0
 12444 ;;		Unchanged: B00/0
 12445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12450 ;;Total ram usage:        0 bytes
 12451 ;; Hardware stack levels used:    1
 12452 ;; Hardware stack levels required when called:    7
 12453 ;; This function calls:
 12454 ;;		Nothing
 12455 ;; This function is called by:
 12456 ;;		_SYSTEM_Initialize
 12457 ;; This function uses a non-reentrant model
 12458 ;;
 12459                           
 12460                           
 12461                           ;psect for function _I2C1_AddressSet
 12462  0B40                     _I2C1_AddressSet:	
 12463                           
 12464                           ;i2c_register.c: 26: i2c_address = 0x10;
 12465                           
 12466                           ;incstack = 0
 12467                           ; Regs used in _I2C1_AddressSet: [wreg+status,2+status,0]
 12468  0B40  3010               	movlw	16
 12469  0B41  0020               	movlb	0	; select bank0
 12470  0B42  00DE               	movwf	_i2c_address	;volatile
 12471  0B43  0021               	movlb	1	; select bank1
 12472  0B44  140C               	bsf	12,0	;volatile
 12473  0B45  148C               	bsf	12,1	;volatile
 12474  0B46  150C               	bsf	12,2	;volatile
 12475  0B47  0024               	movlb	4	; select bank4
 12476  0B48  140C               	bsf	12,0	;volatile
 12477  0B49  148C               	bsf	12,1	;volatile
 12478  0B4A  150C               	bsf	12,2	;volatile
 12479  0B4B  158C               	bsf	12,3	;volatile
 12480                           
 12481                           ;i2c_register.c: 37: if (!PORTAbits.RA0) {
 12482  0B4C  0020               	movlb	0	; select bank0
 12483  0B4D  180C               	btfsc	12,0	;volatile
 12484  0B4E  2B52               	goto	l736
 12485                           
 12486                           ;i2c_register.c: 38: i2c_address |= 0x01;
 12487  0B4F  145E               	bsf	_i2c_address,0	;volatile
 12488                           
 12489                           ;i2c_register.c: 39: do { WPUAbits.WPUA0 = 0; } while(0);
 12490  0B50  0024               	movlb	4	; select bank4
 12491  0B51  100C               	bcf	12,0	;volatile
 12492  0B52                     l736:	
 12493                           
 12494                           ;i2c_register.c: 40: };i2c_register.c: 42: if (!PORTAbits.RA1) {
 12495  0B52  0020               	movlb	0	; select bank0
 12496  0B53  188C               	btfsc	12,1	;volatile
 12497  0B54  2B58               	goto	l739
 12498                           
 12499                           ;i2c_register.c: 43: i2c_address |= 0x02;
 12500  0B55  14DE               	bsf	_i2c_address,1	;volatile
 12501                           
 12502                           ;i2c_register.c: 44: do { WPUAbits.WPUA1 = 0; } while(0);
 12503  0B56  0024               	movlb	4	; select bank4
 12504  0B57  108C               	bcf	12,1	;volatile
 12505  0B58                     l739:	
 12506                           
 12507                           ;i2c_register.c: 45: };i2c_register.c: 47: if (!PORTAbits.RA2) {
 12508  0B58  0020               	movlb	0	; select bank0
 12509  0B59  190C               	btfsc	12,2	;volatile
 12510  0B5A  2B5E               	goto	l742
 12511                           
 12512                           ;i2c_register.c: 48: i2c_address |= 0x04;
 12513  0B5B  155E               	bsf	_i2c_address,2	;volatile
 12514                           
 12515                           ;i2c_register.c: 49: do { WPUAbits.WPUA2 = 0; } while(0);
 12516  0B5C  0024               	movlb	4	; select bank4
 12517  0B5D  110C               	bcf	12,2	;volatile
 12518  0B5E                     l742:	
 12519                           
 12520                           ;i2c_register.c: 50: };i2c_register.c: 52: if (!PORTAbits.RA3) {
 12521  0B5E  0020               	movlb	0	; select bank0
 12522  0B5F  198C               	btfsc	12,3	;volatile
 12523  0B60  2B64               	goto	l6906
 12524                           
 12525                           ;i2c_register.c: 53: i2c_address |= 0x08;
 12526  0B61  15DE               	bsf	_i2c_address,3	;volatile
 12527                           
 12528                           ;i2c_register.c: 54: do { WPUAbits.WPUA3 = 0; } while(0);
 12529  0B62  0024               	movlb	4	; select bank4
 12530  0B63  118C               	bcf	12,3	;volatile
 12531  0B64                     l6906:	
 12532                           
 12533                           ;i2c_register.c: 55: };i2c_register.c: 58: i2c_address = (uint8_t) (i2c_address << 1);
 12534  0B64  0020               	movlb	0	; select bank0
 12535  0B65  355E               	lslf	_i2c_address,w	;volatile
 12536  0B66  00DE               	movwf	_i2c_address	;volatile
 12537  0B67  0008               	return
 12538  0B68                     __end_of_I2C1_AddressSet:	
 12539  0B68                     __ptext10:	
 12540 ;; *************** function _I2C1_Initialize *****************
 12541 ;; Defined at:
 12542 ;;		line 75 in file "mcc_generated_files/i2c1.c"
 12543 ;; Parameters:    Size  Location     Type
 12544 ;;		None
 12545 ;; Auto vars:     Size  Location     Type
 12546 ;;		None
 12547 ;; Return value:  Size  Location     Type
 12548 ;;                  1    wreg      void 
 12549 ;; Registers used:
 12550 ;;		wreg, status,2
 12551 ;; Tracked objects:
 12552 ;;		On entry : B1F/0
 12553 ;;		On exit  : B1F/1
 12554 ;;		Unchanged: B00/0
 12555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12560 ;;Total ram usage:        0 bytes
 12561 ;; Hardware stack levels used:    1
 12562 ;; Hardware stack levels required when called:    7
 12563 ;; This function calls:
 12564 ;;		Nothing
 12565 ;; This function is called by:
 12566 ;;		_SYSTEM_Initialize
 12567 ;; This function uses a non-reentrant model
 12568 ;;
 12569                           
 12570                           
 12571                           ;psect for function _I2C1_Initialize
 12572  0B68                     _I2C1_Initialize:	
 12573                           
 12574                           ;i2c1.c: 78: SSP1CON1 = 0x00;
 12575                           
 12576                           ;incstack = 0
 12577                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 12578  0B68  0024               	movlb	4	; select bank4
 12579  0B69  0195               	clrf	21	;volatile
 12580                           
 12581                           ;i2c1.c: 79: SSP1CON2 = 0x00;
 12582  0B6A  0196               	clrf	22	;volatile
 12583                           
 12584                           ;i2c1.c: 81: SSP1STAT = 0x00;
 12585  0B6B  0194               	clrf	20	;volatile
 12586                           
 12587                           ;i2c1.c: 83: SSP1CON1 = 0x26;
 12588  0B6C  3026               	movlw	38
 12589  0B6D  0095               	movwf	21	;volatile
 12590                           
 12591                           ;i2c1.c: 85: SSP1CON2 = 0x00;
 12592  0B6E  0196               	clrf	22	;volatile
 12593                           
 12594                           ;i2c1.c: 87: SSP1CON3 = 0x00;
 12595  0B6F  0197               	clrf	23	;volatile
 12596                           
 12597                           ;i2c1.c: 89: SSP1MSK = (0x7F << 1);
 12598  0B70  30FE               	movlw	254
 12599  0B71  0093               	movwf	19	;volatile
 12600                           
 12601                           ;i2c1.c: 91: SSP1ADD = i2c_address;
 12602  0B72  0020               	movlb	0	; select bank0
 12603  0B73  085E               	movf	_i2c_address,w	;volatile
 12604  0B74  0024               	movlb	4	; select bank4
 12605  0B75  0092               	movwf	18	;volatile
 12606                           
 12607                           ;i2c1.c: 94: PIR1bits.SSP1IF = 0;
 12608  0B76  0020               	movlb	0	; select bank0
 12609  0B77  1191               	bcf	17,3	;volatile
 12610                           
 12611                           ;i2c1.c: 96: PIE1bits.SSP1IE = 1;
 12612  0B78  0021               	movlb	1	; select bank1
 12613  0B79  1591               	bsf	17,3	;volatile
 12614  0B7A  0008               	return
 12615  0B7B                     __end_of_I2C1_Initialize:	
 12616  0B7B                     __ptext9:	
 12617 ;; *************** function _OSCILLATOR_Initialize *****************
 12618 ;; Defined at:
 12619 ;;		line 66 in file "mcc_generated_files/mcc.c"
 12620 ;; Parameters:    Size  Location     Type
 12621 ;;		None
 12622 ;; Auto vars:     Size  Location     Type
 12623 ;;		None
 12624 ;; Return value:  Size  Location     Type
 12625 ;;                  1    wreg      void 
 12626 ;; Registers used:
 12627 ;;		wreg, status,2
 12628 ;; Tracked objects:
 12629 ;;		On entry : B1F/1D
 12630 ;;		On exit  : B1F/12
 12631 ;;		Unchanged: B00/0
 12632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12637 ;;Total ram usage:        0 bytes
 12638 ;; Hardware stack levels used:    1
 12639 ;; Hardware stack levels required when called:    7
 12640 ;; This function calls:
 12641 ;;		Nothing
 12642 ;; This function is called by:
 12643 ;;		_SYSTEM_Initialize
 12644 ;; This function uses a non-reentrant model
 12645 ;;
 12646                           
 12647                           
 12648                           ;psect for function _OSCILLATOR_Initialize
 12649  0B7B                     _OSCILLATOR_Initialize:	
 12650                           
 12651                           ;mcc.c: 69: OSCCON1 = 0x60;
 12652                           
 12653                           ;incstack = 0
 12654                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12655  0B7B  3060               	movlw	96
 12656  0B7C  0032               	movlb	18	; select bank18
 12657  0B7D  0099               	movwf	25	;volatile
 12658                           
 12659                           ;mcc.c: 71: OSCCON3 = 0x00;
 12660  0B7E  019B               	clrf	27	;volatile
 12661                           
 12662                           ;mcc.c: 73: OSCEN = 0x00;
 12663  0B7F  019D               	clrf	29	;volatile
 12664                           
 12665                           ;mcc.c: 75: OSCFRQ = 0x07;
 12666  0B80  3007               	movlw	7
 12667  0B81  009F               	movwf	31	;volatile
 12668                           
 12669                           ;mcc.c: 77: OSCTUNE = 0x00;
 12670  0B82  019E               	clrf	30	;volatile
 12671  0B83  0008               	return
 12672  0B84                     __end_of_OSCILLATOR_Initialize:	
 12673  0B84                     __ptext8:	
 12674 ;; *************** function _PIN_MANAGER_Initialize *****************
 12675 ;; Defined at:
 12676 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 12677 ;; Parameters:    Size  Location     Type
 12678 ;;		None
 12679 ;; Auto vars:     Size  Location     Type
 12680 ;;		None
 12681 ;; Return value:  Size  Location     Type
 12682 ;;                  1    wreg      void 
 12683 ;; Registers used:
 12684 ;;		wreg, status,2, status,0
 12685 ;; Tracked objects:
 12686 ;;		On entry : B1F/12
 12687 ;;		On exit  : B1F/1D
 12688 ;;		Unchanged: B00/0
 12689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12694 ;;Total ram usage:        0 bytes
 12695 ;; Hardware stack levels used:    1
 12696 ;; Hardware stack levels required when called:    7
 12697 ;; This function calls:
 12698 ;;		Nothing
 12699 ;; This function is called by:
 12700 ;;		_SYSTEM_Initialize
 12701 ;; This function uses a non-reentrant model
 12702 ;;
 12703                           
 12704                           
 12705                           ;psect for function _PIN_MANAGER_Initialize
 12706  0B84                     _PIN_MANAGER_Initialize:	
 12707                           
 12708                           ;pin_manager.c: 62: LATA = 0x00;
 12709                           
 12710                           ;incstack = 0
 12711                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
 12712  0B84  0022               	movlb	2	; select bank2
 12713  0B85  018C               	clrf	12	;volatile
 12714                           
 12715                           ;pin_manager.c: 63: LATB = 0x00;
 12716  0B86  018D               	clrf	13	;volatile
 12717                           
 12718                           ;pin_manager.c: 64: LATC = 0x00;
 12719  0B87  018E               	clrf	14	;volatile
 12720                           
 12721                           ;pin_manager.c: 69: TRISA = 0x37;
 12722  0B88  3037               	movlw	55
 12723  0B89  0021               	movlb	1	; select bank1
 12724  0B8A  008C               	movwf	12	;volatile
 12725                           
 12726                           ;pin_manager.c: 70: TRISB = 0xD0;
 12727  0B8B  30D0               	movlw	208
 12728  0B8C  008D               	movwf	13	;volatile
 12729                           
 12730                           ;pin_manager.c: 71: TRISC = 0xFF;
 12731  0B8D  30FF               	movlw	255
 12732  0B8E  008E               	movwf	14	;volatile
 12733                           
 12734                           ;pin_manager.c: 76: ANSELC = 0x00;
 12735  0B8F  0023               	movlb	3	; select bank3
 12736  0B90  018E               	clrf	14	;volatile
 12737                           
 12738                           ;pin_manager.c: 77: ANSELB = 0x00;
 12739  0B91  018D               	clrf	13	;volatile
 12740                           
 12741                           ;pin_manager.c: 78: ANSELA = 0x20;
 12742  0B92  3020               	movlw	32
 12743  0B93  008C               	movwf	12	;volatile
 12744                           
 12745                           ;pin_manager.c: 83: WPUB = 0x10;
 12746  0B94  3010               	movlw	16
 12747  0B95  0024               	movlb	4	; select bank4
 12748  0B96  008D               	movwf	13	;volatile
 12749                           
 12750                           ;pin_manager.c: 84: WPUA = 0x3F;
 12751  0B97  303F               	movlw	63
 12752  0B98  008C               	movwf	12	;volatile
 12753                           
 12754                           ;pin_manager.c: 85: WPUC = 0xCC;
 12755  0B99  30CC               	movlw	204
 12756  0B9A  008E               	movwf	14	;volatile
 12757                           
 12758                           ;pin_manager.c: 90: ODCONA = 0x00;
 12759  0B9B  0025               	movlb	5	; select bank5
 12760  0B9C  018C               	clrf	12	;volatile
 12761                           
 12762                           ;pin_manager.c: 91: ODCONB = 0x20;
 12763  0B9D  3020               	movlw	32
 12764  0B9E  008D               	movwf	13	;volatile
 12765                           
 12766                           ;pin_manager.c: 92: ODCONC = 0x00;
 12767  0B9F  018E               	clrf	14	;volatile
 12768                           
 12769                           ;pin_manager.c: 101: SSP1CLKPPSbits.SSP1CLKPPS = 0x0E;
 12770  0BA0  003C               	movlb	28	; select bank28
 12771  0BA1  0820               	movf	32,w	;volatile
 12772  0BA2  39E0               	andlw	-32
 12773  0BA3  380E               	iorlw	14
 12774  0BA4  00A0               	movwf	32	;volatile
 12775                           
 12776                           ;pin_manager.c: 102: SSP1DATPPSbits.SSP1DATPPS = 0x0F;
 12777  0BA5  0821               	movf	33,w	;volatile
 12778  0BA6  39E0               	andlw	-32
 12779  0BA7  380F               	iorlw	15
 12780  0BA8  00A1               	movwf	33	;volatile
 12781                           
 12782                           ;pin_manager.c: 103: CLCIN1PPSbits.CLCIN1PPS = 0x15;
 12783  0BA9  0829               	movf	41,w	;volatile
 12784  0BAA  39E0               	andlw	-32
 12785  0BAB  3815               	iorlw	21
 12786  0BAC  00A9               	movwf	41	;volatile
 12787                           
 12788                           ;pin_manager.c: 104: CLCIN0PPSbits.CLCIN0PPS = 0x14;
 12789  0BAD  0828               	movf	40,w	;volatile
 12790  0BAE  39E0               	andlw	-32
 12791  0BAF  3814               	iorlw	20
 12792  0BB0  00A8               	movwf	40	;volatile
 12793                           
 12794                           ;pin_manager.c: 105: RB7PPSbits.RB7PPS = 0x19;
 12795  0BB1  003D               	movlb	29	; select bank29
 12796  0BB2  081F               	movf	31,w	;volatile
 12797  0BB3  39E0               	andlw	-32
 12798  0BB4  3819               	iorlw	25
 12799  0BB5  009F               	movwf	31	;volatile
 12800                           
 12801                           ;pin_manager.c: 106: RB6PPSbits.RB6PPS = 0x18;
 12802  0BB6  081E               	movf	30,w	;volatile
 12803  0BB7  39E0               	andlw	-32
 12804  0BB8  3818               	iorlw	24
 12805  0BB9  009E               	movwf	30	;volatile
 12806  0BBA  0008               	return
 12807  0BBB                     __end_of_PIN_MANAGER_Initialize:	
 12808  0BBB                     __ptext7:	
 12809 ;; *************** function _PMD_Initialize *****************
 12810 ;; Defined at:
 12811 ;;		line 86 in file "mcc_generated_files/mcc.c"
 12812 ;; Parameters:    Size  Location     Type
 12813 ;;		None
 12814 ;; Auto vars:     Size  Location     Type
 12815 ;;		None
 12816 ;; Return value:  Size  Location     Type
 12817 ;;                  1    wreg      void 
 12818 ;; Registers used:
 12819 ;;		wreg
 12820 ;; Tracked objects:
 12821 ;;		On entry : B1F/0
 12822 ;;		On exit  : B1F/12
 12823 ;;		Unchanged: B00/0
 12824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12829 ;;Total ram usage:        0 bytes
 12830 ;; Hardware stack levels used:    1
 12831 ;; Hardware stack levels required when called:    7
 12832 ;; This function calls:
 12833 ;;		Nothing
 12834 ;; This function is called by:
 12835 ;;		_SYSTEM_Initialize
 12836 ;; This function uses a non-reentrant model
 12837 ;;
 12838                           
 12839                           
 12840                           ;psect for function _PMD_Initialize
 12841  0BBB                     _PMD_Initialize:	
 12842                           
 12843                           ;mcc.c: 89: PMD0 = 0x40;
 12844                           
 12845                           ;incstack = 0
 12846                           ; Regs used in _PMD_Initialize: [wreg]
 12847  0BBB  3040               	movlw	64
 12848  0BBC  0032               	movlb	18	; select bank18
 12849  0BBD  0091               	movwf	17	;volatile
 12850                           
 12851                           ;mcc.c: 91: PMD1 = 0xF2;
 12852  0BBE  30F2               	movlw	242
 12853  0BBF  0092               	movwf	18	;volatile
 12854                           
 12855                           ;mcc.c: 93: PMD2 = 0x46;
 12856  0BC0  3046               	movlw	70
 12857  0BC1  0093               	movwf	19	;volatile
 12858                           
 12859                           ;mcc.c: 95: PMD3 = 0xF8;
 12860  0BC2  30F8               	movlw	248
 12861  0BC3  0094               	movwf	20	;volatile
 12862                           
 12863                           ;mcc.c: 97: PMD4 = 0x20;
 12864  0BC4  3020               	movlw	32
 12865  0BC5  0095               	movwf	21	;volatile
 12866                           
 12867                           ;mcc.c: 99: PMD5 = 0x19;
 12868  0BC6  3019               	movlw	25
 12869  0BC7  0096               	movwf	22	;volatile
 12870  0BC8  0008               	return
 12871  0BC9                     __end_of_PMD_Initialize:	
 12872  0BC9                     __ptext6:	
 12873 ;; *************** function _TMR2_Initialize *****************
 12874 ;; Defined at:
 12875 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 12876 ;; Parameters:    Size  Location     Type
 12877 ;;		None
 12878 ;; Auto vars:     Size  Location     Type
 12879 ;;		None
 12880 ;; Return value:  Size  Location     Type
 12881 ;;                  1    wreg      void 
 12882 ;; Registers used:
 12883 ;;		wreg, status,2
 12884 ;; Tracked objects:
 12885 ;;		On entry : B1F/1
 12886 ;;		On exit  : B1F/0
 12887 ;;		Unchanged: B00/0
 12888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12893 ;;Total ram usage:        0 bytes
 12894 ;; Hardware stack levels used:    1
 12895 ;; Hardware stack levels required when called:    7
 12896 ;; This function calls:
 12897 ;;		Nothing
 12898 ;; This function is called by:
 12899 ;;		_SYSTEM_Initialize
 12900 ;; This function uses a non-reentrant model
 12901 ;;
 12902                           
 12903                           
 12904                           ;psect for function _TMR2_Initialize
 12905  0BC9                     _TMR2_Initialize:	
 12906                           
 12907                           ;tmr2.c: 67: PR2 = 0xFF;
 12908                           
 12909                           ;incstack = 0
 12910                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 12911  0BC9  30FF               	movlw	255
 12912  0BCA  0020               	movlb	0	; select bank0
 12913  0BCB  009E               	movwf	30	;volatile
 12914                           
 12915                           ;tmr2.c: 70: TMR2 = 0x00;
 12916  0BCC  019D               	clrf	29	;volatile
 12917                           
 12918                           ;tmr2.c: 73: PIR1bits.TMR2IF = 0;
 12919  0BCD  1091               	bcf	17,1	;volatile
 12920                           
 12921                           ;tmr2.c: 76: T2CON = 0x04;
 12922  0BCE  3004               	movlw	4
 12923  0BCF  009F               	movwf	31	;volatile
 12924  0BD0  0008               	return
 12925  0BD1                     __end_of_TMR2_Initialize:	
 12926  0BD1                     __ptext3:	
 12927 ;; *************** function _WDT_Initialize *****************
 12928 ;; Defined at:
 12929 ;;		line 80 in file "mcc_generated_files/mcc.c"
 12930 ;; Parameters:    Size  Location     Type
 12931 ;;		None
 12932 ;; Auto vars:     Size  Location     Type
 12933 ;;		None
 12934 ;; Return value:  Size  Location     Type
 12935 ;;                  1    wreg      void 
 12936 ;; Registers used:
 12937 ;;		wreg
 12938 ;; Tracked objects:
 12939 ;;		On entry : B1F/12
 12940 ;;		On exit  : B1F/1
 12941 ;;		Unchanged: B00/0
 12942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12947 ;;Total ram usage:        0 bytes
 12948 ;; Hardware stack levels used:    1
 12949 ;; Hardware stack levels required when called:    7
 12950 ;; This function calls:
 12951 ;;		Nothing
 12952 ;; This function is called by:
 12953 ;;		_SYSTEM_Initialize
 12954 ;; This function uses a non-reentrant model
 12955 ;;
 12956                           
 12957                           
 12958                           ;psect for function _WDT_Initialize
 12959  0BD1                     _WDT_Initialize:	
 12960                           
 12961                           ;mcc.c: 83: WDTCON = 0x16;
 12962                           
 12963                           ;incstack = 0
 12964                           ; Regs used in _WDT_Initialize: [wreg]
 12965  0BD1  3016               	movlw	22
 12966  0BD2  0021               	movlb	1	; select bank1
 12967  0BD3  0097               	movwf	23	;volatile
 12968  0BD4  0008               	return
 12969  0BD5                     __end_of_WDT_Initialize:	
 12970  0BD5                     __ptext13:	
 12971 ;; *************** function _CLC1_Initialize *****************
 12972 ;; Defined at:
 12973 ;;		line 59 in file "mcc_generated_files/clc1.c"
 12974 ;; Parameters:    Size  Location     Type
 12975 ;;		None
 12976 ;; Auto vars:     Size  Location     Type
 12977 ;;		None
 12978 ;; Return value:  Size  Location     Type
 12979 ;;                  1    wreg      void 
 12980 ;; Registers used:
 12981 ;;		wreg, status,2
 12982 ;; Tracked objects:
 12983 ;;		On entry : B1F/0
 12984 ;;		On exit  : B1F/1
 12985 ;;		Unchanged: B00/0
 12986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12991 ;;Total ram usage:        0 bytes
 12992 ;; Hardware stack levels used:    1
 12993 ;; Hardware stack levels required when called:    7
 12994 ;; This function calls:
 12995 ;;		Nothing
 12996 ;; This function is called by:
 12997 ;;		_SYSTEM_Initialize
 12998 ;; This function uses a non-reentrant model
 12999 ;;
 13000                           
 13001                           
 13002                           ;psect for function _CLC1_Initialize
 13003  0BD5                     _CLC1_Initialize:	
 13004                           
 13005                           ;clc1.c: 63: CLC1POL = 0x04;
 13006                           
 13007                           ;incstack = 0
 13008                           ; Regs used in _CLC1_Initialize: [wreg+status,2]
 13009  0BD5  3004               	movlw	4
 13010  0BD6  003E               	movlb	30	; select bank30
 13011  0BD7  0091               	movwf	17	;volatile
 13012                           
 13013                           ;clc1.c: 65: CLC1SEL0 = 0x00;
 13014  0BD8  0192               	clrf	18	;volatile
 13015                           
 13016                           ;clc1.c: 67: CLC1SEL1 = 0x01;
 13017  0BD9  3001               	movlw	1
 13018  0BDA  0093               	movwf	19	;volatile
 13019                           
 13020                           ;clc1.c: 69: CLC1SEL2 = 0x01;
 13021  0BDB  0094               	movwf	20	;volatile
 13022                           
 13023                           ;clc1.c: 71: CLC1SEL3 = 0x01;
 13024  0BDC  0095               	movwf	21	;volatile
 13025                           
 13026                           ;clc1.c: 73: CLC1GLS0 = 0x02;
 13027  0BDD  3002               	movlw	2
 13028  0BDE  0096               	movwf	22	;volatile
 13029                           
 13030                           ;clc1.c: 75: CLC1GLS1 = 0xA8;
 13031  0BDF  30A8               	movlw	168
 13032  0BE0  0097               	movwf	23	;volatile
 13033                           
 13034                           ;clc1.c: 77: CLC1GLS2 = 0xA8;
 13035  0BE1  0098               	movwf	24	;volatile
 13036                           
 13037                           ;clc1.c: 79: CLC1GLS3 = 0xA8;
 13038  0BE2  0099               	movwf	25	;volatile
 13039                           
 13040                           ;clc1.c: 81: CLC1CON = 0x9D;
 13041  0BE3  309D               	movlw	157
 13042  0BE4  0090               	movwf	16	;volatile
 13043                           
 13044                           ;clc1.c: 84: PIR3bits.CLC1IF = 0;
 13045  0BE5  0020               	movlb	0	; select bank0
 13046  0BE6  1013               	bcf	19,0	;volatile
 13047                           
 13048                           ;clc1.c: 86: PIE3bits.CLC1IE = 1;
 13049  0BE7  0021               	movlb	1	; select bank1
 13050  0BE8  1413               	bsf	19,0	;volatile
 13051  0BE9  0008               	return
 13052  0BEA                     __end_of_CLC1_Initialize:	
 13053  0BEA                     __ptext4:	
 13054 ;; *************** function _TMR3_Initialize *****************
 13055 ;; Defined at:
 13056 ;;		line 64 in file "mcc_generated_files/tmr3.c"
 13057 ;; Parameters:    Size  Location     Type
 13058 ;;		None
 13059 ;; Auto vars:     Size  Location     Type
 13060 ;;		None
 13061 ;; Return value:  Size  Location     Type
 13062 ;;                  1    wreg      void 
 13063 ;; Registers used:
 13064 ;;		wreg, status,2, status,0, pclath, cstack
 13065 ;; Tracked objects:
 13066 ;;		On entry : B1F/1
 13067 ;;		On exit  : 1F/8
 13068 ;;		Unchanged: 0/0
 13069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13074 ;;Total ram usage:        0 bytes
 13075 ;; Hardware stack levels used:    1
 13076 ;; Hardware stack levels required when called:    8
 13077 ;; This function calls:
 13078 ;;		_TMR3_SetInterruptHandler
 13079 ;; This function is called by:
 13080 ;;		_SYSTEM_Initialize
 13081 ;; This function uses a non-reentrant model
 13082 ;;
 13083                           
 13084                           
 13085                           ;psect for function _TMR3_Initialize
 13086  0BEA                     _TMR3_Initialize:	
 13087  0BEA                     l6978:	
 13088                           ;incstack = 0
 13089                           ; Regs used in _TMR3_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13090                           
 13091                           
 13092                           ;tmr3.c: 69: T3GCON = 0x00;
 13093  0BEA  0028               	movlb	8	; select bank8
 13094  0BEB  0194               	clrf	20	;volatile
 13095                           
 13096                           ;tmr3.c: 72: TMR3H = 0xE0;
 13097  0BEC  30E0               	movlw	224
 13098  0BED  0092               	movwf	18	;volatile
 13099                           
 13100                           ;tmr3.c: 75: TMR3L = 0xC0;
 13101  0BEE  30C0               	movlw	192
 13102  0BEF  0091               	movwf	17	;volatile
 13103                           
 13104                           ;tmr3.c: 78: timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 13105  0BF0  0812               	movf	18,w	;volatile
 13106  0BF1  0021               	movlb	1	; select bank1
 13107  0BF2  00B8               	movwf	(_timer3ReloadVal+1)^(0+128)	;volatile
 13108  0BF3  01B7               	clrf	_timer3ReloadVal^(0+128)	;volatile
 13109  0BF4  0028               	movlb	8	; select bank8
 13110  0BF5  0811               	movf	17,w	;volatile
 13111  0BF6  0021               	movlb	1	; select bank1
 13112  0BF7  04B7               	iorwf	_timer3ReloadVal^(0+128),f	;volatile
 13113                           
 13114                           ;tmr3.c: 81: PIR3bits.TMR3IF = 0;
 13115  0BF8  0020               	movlb	0	; select bank0
 13116  0BF9  1213               	bcf	19,4	;volatile
 13117                           
 13118                           ;tmr3.c: 84: PIE3bits.TMR3IE = 1;
 13119  0BFA  0021               	movlb	1	; select bank1
 13120  0BFB  1613               	bsf	19,4	;volatile
 13121                           
 13122                           ;tmr3.c: 87: TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler);
 13123  0BFC  3003               	movlw	low _TMR3_DefaultInterruptHandler
 13124  0BFD  00CB               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
 13125  0BFE  3000               	movlw	high _TMR3_DefaultInterruptHandler
 13126  0BFF  00CC               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
 13127  0C00  3184  2423         	fcall	_TMR3_SetInterruptHandler
 13128                           
 13129                           ;tmr3.c: 90: T3CON = 0x01;
 13130  0C02  3001               	movlw	1
 13131  0C03  0028               	movlb	8	; select bank8
 13132  0C04  0093               	movwf	19	;volatile
 13133  0C05  0008               	return
 13134  0C06                     __end_of_TMR3_Initialize:	
 13135                           
 13136                           	psect	text15
 13137  1421                     __ptext15:	
 13138 ;; *************** function _NavKey_UPButton_FSM *****************
 13139 ;; Defined at:
 13140 ;;		line 201 in file "NavKey.c"
 13141 ;; Parameters:    Size  Location     Type
 13142 ;;		None
 13143 ;; Auto vars:     Size  Location     Type
 13144 ;;		None
 13145 ;; Return value:  Size  Location     Type
 13146 ;;                  1    wreg      void 
 13147 ;; Registers used:
 13148 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13149 ;; Tracked objects:
 13150 ;;		On entry : 1C/1
 13151 ;;		On exit  : 1C/0
 13152 ;;		Unchanged: 0/0
 13153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13158 ;;Total ram usage:        0 bytes
 13159 ;; Hardware stack levels used:    1
 13160 ;; Hardware stack levels required when called:    8
 13161 ;; This function calls:
 13162 ;;		_NavKeyStatusUpdate
 13163 ;;		_SetInterrupt
 13164 ;; This function is called by:
 13165 ;;		_NavKey_FSM
 13166 ;; This function uses a non-reentrant model
 13167 ;;
 13168                           
 13169                           
 13170                           ;psect for function _NavKey_UPButton_FSM
 13171  1421                     _NavKey_UPButton_FSM:	
 13172                           
 13173                           ;NavKey.c: 202: static uint8_t up_fsm;;NavKey.c: 204: switch (up_fsm) {
 13174                           
 13175                           ;incstack = 0
 13176                           ; Regs used in _NavKey_UPButton_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13177  1421  2C38               	goto	l7336
 13178  1422                     l7318:	
 13179                           
 13180                           ;NavKey.c: 207: if (NavKey_PBstatus[3] == 1) {
 13181  1422  0B23               	decfsz	(_NavKey_PBstatus^(0+128)+3),w
 13182  1423  0008               	return
 13183  1424  3002               	movlw	2
 13184                           
 13185                           ;NavKey.c: 208: up_fsm = NavKey_WAITRELEASE;
 13186  1425  01BC               	clrf	NavKey_UPButton_FSM@up_fsm^(0+128)
 13187  1426  0ABC               	incf	NavKey_UPButton_FSM@up_fsm^(0+128),f
 13188                           
 13189                           ;NavKey.c: 209: NavKeyStatusUpdate(S_UPP);
 13190  1427  00CB               	movwf	NavKeyStatusUpdate@stat^(0+128)
 13191  1428  01CC               	clrf	(NavKeyStatusUpdate@stat+1)^(0+128)
 13192  1429  24F2               	fcall	_NavKeyStatusUpdate
 13193                           
 13194                           ;NavKey.c: 210: SetInterrupt();
 13195  142A  3181  29D5         	ljmp	l6654
 13196  142C                     l7324:	
 13197                           
 13198                           ;NavKey.c: 215: if (NavKey_PBstatus[3] == 0) {
 13199  142C  0823               	movf	(_NavKey_PBstatus^(0+128)+3),w
 13200  142D  1D03               	btfss	3,2
 13201  142E  0008               	return
 13202                           
 13203                           ;NavKey.c: 216: up_fsm = NavKey_WAITPUSH;
 13204  142F  01BC               	clrf	NavKey_UPButton_FSM@up_fsm^(0+128)
 13205                           
 13206                           ;NavKey.c: 217: NavKeyStatusUpdate(S_UPR);
 13207  1430  01CB               	clrf	NavKeyStatusUpdate@stat^(0+128)
 13208  1431  0ACB               	incf	NavKeyStatusUpdate@stat^(0+128),f
 13209  1432  01CC               	clrf	(NavKeyStatusUpdate@stat+1)^(0+128)
 13210  1433  24F2               	fcall	_NavKeyStatusUpdate
 13211                           
 13212                           ;NavKey.c: 218: SetInterrupt();
 13213  1434  3181  29D5         	ljmp	l6654
 13214  1436                     l7332:	
 13215                           
 13216                           ;NavKey.c: 223: up_fsm = NavKey_WAITPUSH;
 13217  1436  01BC               	clrf	NavKey_UPButton_FSM@up_fsm^(0+128)
 13218                           
 13219                           ;NavKey.c: 224: break;
 13220  1437  0008               	return
 13221  1438                     l7336:	
 13222  1438  0021               	movlb	1	; select bank1
 13223  1439  083C               	movf	NavKey_UPButton_FSM@up_fsm^(0+128),w
 13224                           
 13225                           ; Switch size 1, requested type "speed"
 13226                           ; Number of cases is 2, Range of values is 0 to 1
 13227                           ; switch strategies available:
 13228                           ; Name         Instructions Cycles
 13229                           ; simple_byte            7     4 (average)
 13230                           ; direct_byte           10     6 (fixed)
 13231                           ; jumptable            260     6 (fixed)
 13232                           ;	Chosen strategy is simple_byte
 13233  143A  3A00               	xorlw	0	; case 0
 13234  143B  1903               	skipnz
 13235  143C  2C22               	goto	l7318
 13236  143D  3A01               	xorlw	1	; case 1
 13237  143E  1903               	skipnz
 13238  143F  2C2C               	goto	l7324
 13239  1440  2C36               	goto	l7332
 13240  1441  0008               	return
 13241  1442                     __end_of_NavKey_UPButton_FSM:	
 13242  1442                     __ptext16:	
 13243 ;; *************** function _NavKey_RTButton_FSM *****************
 13244 ;; Defined at:
 13245 ;;		line 263 in file "NavKey.c"
 13246 ;; Parameters:    Size  Location     Type
 13247 ;;		None
 13248 ;; Auto vars:     Size  Location     Type
 13249 ;;		None
 13250 ;; Return value:  Size  Location     Type
 13251 ;;                  1    wreg      void 
 13252 ;; Registers used:
 13253 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13254 ;; Tracked objects:
 13255 ;;		On entry : 1C/1
 13256 ;;		On exit  : 1C/0
 13257 ;;		Unchanged: 0/0
 13258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13263 ;;Total ram usage:        0 bytes
 13264 ;; Hardware stack levels used:    1
 13265 ;; Hardware stack levels required when called:    8
 13266 ;; This function calls:
 13267 ;;		_NavKeyStatusUpdate
 13268 ;;		_SetInterrupt
 13269 ;; This function is called by:
 13270 ;;		_NavKey_FSM
 13271 ;; This function uses a non-reentrant model
 13272 ;;
 13273                           
 13274                           
 13275                           ;psect for function _NavKey_RTButton_FSM
 13276  1442                     _NavKey_RTButton_FSM:	
 13277                           
 13278                           ;NavKey.c: 264: static uint8_t rt_fsm;;NavKey.c: 266: switch (rt_fsm) {
 13279                           
 13280                           ;incstack = 0
 13281                           ; Regs used in _NavKey_RTButton_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13282  1442  2C59               	goto	l7380
 13283  1443                     l7362:	
 13284                           
 13285                           ;NavKey.c: 269: if (NavKey_PBstatus[2] == 1) {
 13286  1443  0B22               	decfsz	(_NavKey_PBstatus^(0+128)+2),w
 13287  1444  0008               	return
 13288  1445  3020               	movlw	32
 13289                           
 13290                           ;NavKey.c: 270: rt_fsm = NavKey_WAITRELEASE;
 13291  1446  01BA               	clrf	NavKey_RTButton_FSM@rt_fsm^(0+128)
 13292  1447  0ABA               	incf	NavKey_RTButton_FSM@rt_fsm^(0+128),f
 13293                           
 13294                           ;NavKey.c: 271: NavKeyStatusUpdate(S_RTP);
 13295  1448  00CB               	movwf	NavKeyStatusUpdate@stat^(0+128)
 13296  1449  01CC               	clrf	(NavKeyStatusUpdate@stat+1)^(0+128)
 13297  144A  24F2               	fcall	_NavKeyStatusUpdate
 13298                           
 13299                           ;NavKey.c: 272: SetInterrupt();
 13300  144B  3181  29D5         	ljmp	l6654
 13301  144D                     l7368:	
 13302                           
 13303                           ;NavKey.c: 277: if (NavKey_PBstatus[2] == 0) {
 13304  144D  0822               	movf	(_NavKey_PBstatus^(0+128)+2),w
 13305  144E  1D03               	btfss	3,2
 13306  144F  0008               	return
 13307  1450  3010               	movlw	16
 13308                           
 13309                           ;NavKey.c: 278: rt_fsm = NavKey_WAITPUSH;
 13310  1451  01BA               	clrf	NavKey_RTButton_FSM@rt_fsm^(0+128)
 13311                           
 13312                           ;NavKey.c: 279: NavKeyStatusUpdate(S_RTR);
 13313  1452  00CB               	movwf	NavKeyStatusUpdate@stat^(0+128)
 13314  1453  01CC               	clrf	(NavKeyStatusUpdate@stat+1)^(0+128)
 13315  1454  24F2               	fcall	_NavKeyStatusUpdate
 13316                           
 13317                           ;NavKey.c: 280: SetInterrupt();
 13318  1455  3181  29D5         	ljmp	l6654
 13319  1457                     l7376:	
 13320                           
 13321                           ;NavKey.c: 285: rt_fsm = NavKey_WAITPUSH;
 13322  1457  01BA               	clrf	NavKey_RTButton_FSM@rt_fsm^(0+128)
 13323                           
 13324                           ;NavKey.c: 286: break;
 13325  1458  0008               	return
 13326  1459                     l7380:	
 13327  1459  0021               	movlb	1	; select bank1
 13328  145A  083A               	movf	NavKey_RTButton_FSM@rt_fsm^(0+128),w
 13329                           
 13330                           ; Switch size 1, requested type "speed"
 13331                           ; Number of cases is 2, Range of values is 0 to 1
 13332                           ; switch strategies available:
 13333                           ; Name         Instructions Cycles
 13334                           ; simple_byte            7     4 (average)
 13335                           ; direct_byte           10     6 (fixed)
 13336                           ; jumptable            260     6 (fixed)
 13337                           ;	Chosen strategy is simple_byte
 13338  145B  3A00               	xorlw	0	; case 0
 13339  145C  1903               	skipnz
 13340  145D  2C43               	goto	l7362
 13341  145E  3A01               	xorlw	1	; case 1
 13342  145F  1903               	skipnz
 13343  1460  2C4D               	goto	l7368
 13344  1461  2C57               	goto	l7376
 13345  1462  0008               	return
 13346  1463                     __end_of_NavKey_RTButton_FSM:	
 13347  1463                     __ptext17:	
 13348 ;; *************** function _NavKey_LTButton_FSM *****************
 13349 ;; Defined at:
 13350 ;;		line 294 in file "NavKey.c"
 13351 ;; Parameters:    Size  Location     Type
 13352 ;;		None
 13353 ;; Auto vars:     Size  Location     Type
 13354 ;;		None
 13355 ;; Return value:  Size  Location     Type
 13356 ;;                  1    wreg      void 
 13357 ;; Registers used:
 13358 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13359 ;; Tracked objects:
 13360 ;;		On entry : 1C/1
 13361 ;;		On exit  : 1C/0
 13362 ;;		Unchanged: 0/0
 13363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13368 ;;Total ram usage:        0 bytes
 13369 ;; Hardware stack levels used:    1
 13370 ;; Hardware stack levels required when called:    8
 13371 ;; This function calls:
 13372 ;;		_NavKeyStatusUpdate
 13373 ;;		_SetInterrupt
 13374 ;; This function is called by:
 13375 ;;		_NavKey_FSM
 13376 ;; This function uses a non-reentrant model
 13377 ;;
 13378                           
 13379                           
 13380                           ;psect for function _NavKey_LTButton_FSM
 13381  1463                     _NavKey_LTButton_FSM:	
 13382  1463                     l7382:	
 13383                           ;incstack = 0
 13384                           ; Regs used in _NavKey_LTButton_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13385                           
 13386                           
 13387                           ;NavKey.c: 295: static uint8_t lt_fsm;;NavKey.c: 297: switch (lt_fsm) {
 13388  1463  2C7A               	goto	l7402
 13389  1464                     l7384:	
 13390                           
 13391                           ;NavKey.c: 300: if (NavKey_PBstatus[4] == 1) {
 13392  1464  0B24               	decfsz	(_NavKey_PBstatus^(0+128)+4),w
 13393  1465  0008               	return
 13394  1466  3080               	movlw	128
 13395                           
 13396                           ;NavKey.c: 301: lt_fsm = NavKey_WAITRELEASE;
 13397  1467  01B9               	clrf	NavKey_LTButton_FSM@lt_fsm^(0+128)
 13398  1468  0AB9               	incf	NavKey_LTButton_FSM@lt_fsm^(0+128),f
 13399                           
 13400                           ;NavKey.c: 302: NavKeyStatusUpdate(S_LTP);
 13401  1469  00CB               	movwf	NavKeyStatusUpdate@stat^(0+128)
 13402  146A  01CC               	clrf	(NavKeyStatusUpdate@stat+1)^(0+128)
 13403  146B  24F2               	fcall	_NavKeyStatusUpdate
 13404                           
 13405                           ;NavKey.c: 303: SetInterrupt();
 13406  146C  3181  29D5         	ljmp	l6654
 13407  146E                     l7390:	
 13408                           
 13409                           ;NavKey.c: 308: if (NavKey_PBstatus[4] == 0) {
 13410  146E  0824               	movf	(_NavKey_PBstatus^(0+128)+4),w
 13411  146F  1D03               	btfss	3,2
 13412  1470  0008               	return
 13413  1471  3040               	movlw	64
 13414                           
 13415                           ;NavKey.c: 309: lt_fsm = NavKey_WAITPUSH;
 13416  1472  01B9               	clrf	NavKey_LTButton_FSM@lt_fsm^(0+128)
 13417                           
 13418                           ;NavKey.c: 310: NavKeyStatusUpdate(S_LTR);
 13419  1473  00CB               	movwf	NavKeyStatusUpdate@stat^(0+128)
 13420  1474  01CC               	clrf	(NavKeyStatusUpdate@stat+1)^(0+128)
 13421  1475  24F2               	fcall	_NavKeyStatusUpdate
 13422                           
 13423                           ;NavKey.c: 311: SetInterrupt();
 13424  1476  3181  29D5         	ljmp	l6654
 13425  1478                     l7398:	
 13426                           
 13427                           ;NavKey.c: 316: lt_fsm = NavKey_WAITPUSH;
 13428  1478  01B9               	clrf	NavKey_LTButton_FSM@lt_fsm^(0+128)
 13429                           
 13430                           ;NavKey.c: 317: break;
 13431  1479  0008               	return
 13432  147A                     l7402:	
 13433  147A  0021               	movlb	1	; select bank1
 13434  147B  0839               	movf	NavKey_LTButton_FSM@lt_fsm^(0+128),w
 13435                           
 13436                           ; Switch size 1, requested type "speed"
 13437                           ; Number of cases is 2, Range of values is 0 to 1
 13438                           ; switch strategies available:
 13439                           ; Name         Instructions Cycles
 13440                           ; simple_byte            7     4 (average)
 13441                           ; direct_byte           10     6 (fixed)
 13442                           ; jumptable            260     6 (fixed)
 13443                           ;	Chosen strategy is simple_byte
 13444  147C  3A00               	xorlw	0	; case 0
 13445  147D  1903               	skipnz
 13446  147E  2C64               	goto	l7384
 13447  147F  3A01               	xorlw	1	; case 1
 13448  1480  1903               	skipnz
 13449  1481  2C6E               	goto	l7390
 13450  1482  2C78               	goto	l7398
 13451  1483  0008               	return
 13452  1484                     __end_of_NavKey_LTButton_FSM:	
 13453  1484                     __ptext18:	
 13454 ;; *************** function _NavKey_DWButton_FSM *****************
 13455 ;; Defined at:
 13456 ;;		line 232 in file "NavKey.c"
 13457 ;; Parameters:    Size  Location     Type
 13458 ;;		None
 13459 ;; Auto vars:     Size  Location     Type
 13460 ;;		None
 13461 ;; Return value:  Size  Location     Type
 13462 ;;                  1    wreg      void 
 13463 ;; Registers used:
 13464 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13465 ;; Tracked objects:
 13466 ;;		On entry : 1C/1
 13467 ;;		On exit  : 1C/0
 13468 ;;		Unchanged: 0/0
 13469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13474 ;;Total ram usage:        0 bytes
 13475 ;; Hardware stack levels used:    1
 13476 ;; Hardware stack levels required when called:    8
 13477 ;; This function calls:
 13478 ;;		_NavKeyStatusUpdate
 13479 ;;		_SetInterrupt
 13480 ;; This function is called by:
 13481 ;;		_NavKey_FSM
 13482 ;; This function uses a non-reentrant model
 13483 ;;
 13484                           
 13485                           
 13486                           ;psect for function _NavKey_DWButton_FSM
 13487  1484                     _NavKey_DWButton_FSM:	
 13488                           
 13489                           ;NavKey.c: 233: static uint8_t dn_fsm;;NavKey.c: 235: switch (dn_fsm) {
 13490                           
 13491                           ;incstack = 0
 13492                           ; Regs used in _NavKey_DWButton_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13493  1484  2C9B               	goto	l7358
 13494  1485                     l7340:	
 13495                           
 13496                           ;NavKey.c: 238: if (NavKey_PBstatus[1] == 1) {
 13497  1485  0B21               	decfsz	(_NavKey_PBstatus^(0+128)+1),w
 13498  1486  0008               	return
 13499  1487  3008               	movlw	8
 13500                           
 13501                           ;NavKey.c: 239: dn_fsm = NavKey_WAITRELEASE;
 13502  1488  01BB               	clrf	NavKey_DWButton_FSM@dn_fsm^(0+128)
 13503  1489  0ABB               	incf	NavKey_DWButton_FSM@dn_fsm^(0+128),f
 13504                           
 13505                           ;NavKey.c: 240: NavKeyStatusUpdate(S_DNP);
 13506  148A  00CB               	movwf	NavKeyStatusUpdate@stat^(0+128)
 13507  148B  01CC               	clrf	(NavKeyStatusUpdate@stat+1)^(0+128)
 13508  148C  24F2               	fcall	_NavKeyStatusUpdate
 13509                           
 13510                           ;NavKey.c: 241: SetInterrupt();
 13511  148D  3181  29D5         	ljmp	l6654
 13512  148F                     l7346:	
 13513                           
 13514                           ;NavKey.c: 246: if (NavKey_PBstatus[1] == 0) {
 13515  148F  0821               	movf	(_NavKey_PBstatus^(0+128)+1),w
 13516  1490  1D03               	btfss	3,2
 13517  1491  0008               	return
 13518  1492  3004               	movlw	4
 13519                           
 13520                           ;NavKey.c: 247: dn_fsm = NavKey_WAITPUSH;
 13521  1493  01BB               	clrf	NavKey_DWButton_FSM@dn_fsm^(0+128)
 13522                           
 13523                           ;NavKey.c: 248: NavKeyStatusUpdate(S_DNR);
 13524  1494  00CB               	movwf	NavKeyStatusUpdate@stat^(0+128)
 13525  1495  01CC               	clrf	(NavKeyStatusUpdate@stat+1)^(0+128)
 13526  1496  24F2               	fcall	_NavKeyStatusUpdate
 13527                           
 13528                           ;NavKey.c: 249: SetInterrupt();
 13529  1497  3181  29D5         	ljmp	l6654
 13530  1499                     l7354:	
 13531                           
 13532                           ;NavKey.c: 254: dn_fsm = NavKey_WAITPUSH;
 13533  1499  01BB               	clrf	NavKey_DWButton_FSM@dn_fsm^(0+128)
 13534                           
 13535                           ;NavKey.c: 255: break;
 13536  149A  0008               	return
 13537  149B                     l7358:	
 13538  149B  0021               	movlb	1	; select bank1
 13539  149C  083B               	movf	NavKey_DWButton_FSM@dn_fsm^(0+128),w
 13540                           
 13541                           ; Switch size 1, requested type "speed"
 13542                           ; Number of cases is 2, Range of values is 0 to 1
 13543                           ; switch strategies available:
 13544                           ; Name         Instructions Cycles
 13545                           ; simple_byte            7     4 (average)
 13546                           ; direct_byte           10     6 (fixed)
 13547                           ; jumptable            260     6 (fixed)
 13548                           ;	Chosen strategy is simple_byte
 13549  149D  3A00               	xorlw	0	; case 0
 13550  149E  1903               	skipnz
 13551  149F  2C85               	goto	l7340
 13552  14A0  3A01               	xorlw	1	; case 1
 13553  14A1  1903               	skipnz
 13554  14A2  2C8F               	goto	l7346
 13555  14A3  2C99               	goto	l7354
 13556  14A4  0008               	return
 13557  14A5                     __end_of_NavKey_DWButton_FSM:	
 13558  14A5                     __ptext19:	
 13559 ;; *************** function _NavKey_CentralButton_FSM *****************
 13560 ;; Defined at:
 13561 ;;		line 135 in file "NavKey.c"
 13562 ;; Parameters:    Size  Location     Type
 13563 ;;		None
 13564 ;; Auto vars:     Size  Location     Type
 13565 ;;		None
 13566 ;; Return value:  Size  Location     Type
 13567 ;;                  1    wreg      void 
 13568 ;; Registers used:
 13569 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13570 ;; Tracked objects:
 13571 ;;		On entry : 1F/1
 13572 ;;		On exit  : 1C/0
 13573 ;;		Unchanged: 0/0
 13574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13579 ;;Total ram usage:        0 bytes
 13580 ;; Hardware stack levels used:    1
 13581 ;; Hardware stack levels required when called:    8
 13582 ;; This function calls:
 13583 ;;		_NavKeyStatusUpdate
 13584 ;;		_SetInterrupt
 13585 ;; This function is called by:
 13586 ;;		_NavKey_FSM
 13587 ;; This function uses a non-reentrant model
 13588 ;;
 13589                           
 13590                           
 13591                           ;psect for function _NavKey_CentralButton_FSM
 13592  14A5                     _NavKey_CentralButton_FSM:	
 13593                           
 13594                           ;NavKey.c: 137: if (double_push_cnt > DoublePush) {
 13595                           
 13596                           ;incstack = 0
 13597                           ; Regs used in _NavKey_CentralButton_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13598  14A5  0832               	movf	(_double_push_cnt+1)^(0+128),w
 13599  14A6  0234               	subwf	(_DoublePush+1)^(0+128),w	;volatile
 13600  14A7  1D03               	skipz
 13601  14A8  2CAB               	goto	u4785
 13602  14A9  0831               	movf	_double_push_cnt^(0+128),w
 13603  14AA  0233               	subwf	_DoublePush^(0+128),w	;volatile
 13604  14AB                     u4785:	
 13605  14AB  1803               	skipnc
 13606  14AC  2CB0               	goto	l7260
 13607                           
 13608                           ;NavKey.c: 138: pb_fsm = NavKey_TIMEOUT;
 13609  14AD  3004               	movlw	4
 13610  14AE  00BE               	movwf	_pb_fsm^(0+128)
 13611                           
 13612                           ;NavKey.c: 139: } else {
 13613  14AF  2CE7               	goto	l7310
 13614  14B0                     l7260:	
 13615                           
 13616                           ;NavKey.c: 140: double_push_cnt++;
 13617  14B0  0AB1               	incf	_double_push_cnt^(0+128),f
 13618  14B1  1903               	skipnz
 13619  14B2  0AB2               	incf	(_double_push_cnt+1)^(0+128),f
 13620  14B3  2CE7               	goto	l7310
 13621  14B4                     l7262:	
 13622                           
 13623                           ;NavKey.c: 145: double_push_cnt = 0;
 13624  14B4  01B1               	clrf	_double_push_cnt^(0+128)
 13625  14B5  01B2               	clrf	(_double_push_cnt+1)^(0+128)
 13626                           
 13627                           ;NavKey.c: 146: if (NavKey_PBstatus[0] == 1) {
 13628  14B6  0B20               	decfsz	_NavKey_PBstatus^(0+128),w
 13629  14B7  0008               	return
 13630                           
 13631                           ;NavKey.c: 147: pb_fsm = NavKey_WAITRELEASE;
 13632  14B8  01BE               	clrf	_pb_fsm^(0+128)
 13633  14B9  0ABE               	incf	_pb_fsm^(0+128),f
 13634  14BA  0008               	return
 13635  14BB                     l7268:	
 13636                           
 13637                           ;NavKey.c: 153: if (NavKey_PBstatus[0] == 0) {
 13638  14BB  0820               	movf	_NavKey_PBstatus^(0+128),w
 13639  14BC  1D03               	btfss	3,2
 13640  14BD  0008               	return
 13641                           
 13642                           ;NavKey.c: 154: pb_fsm = NavKey_WAITDOUBLEPUSH;
 13643  14BE  3002               	movlw	2
 13644  14BF  00BE               	movwf	_pb_fsm^(0+128)
 13645  14C0  0008               	return
 13646  14C1                     l7272:	
 13647                           
 13648                           ;NavKey.c: 159: if (NavKey_PBstatus[0] == 1) {
 13649  14C1  0B20               	decfsz	_NavKey_PBstatus^(0+128),w
 13650  14C2  0008               	return
 13651                           
 13652                           ;NavKey.c: 160: pb_fsm = NavKey_WAITDOUBLERELEASED;
 13653  14C3  3003               	movlw	3
 13654  14C4  00BE               	movwf	_pb_fsm^(0+128)
 13655  14C5  0008               	return
 13656  14C6                     l7276:	
 13657                           
 13658                           ;NavKey.c: 165: if (NavKey_PBstatus[0] == 0) {
 13659  14C6  0820               	movf	_NavKey_PBstatus^(0+128),w
 13660  14C7  1D03               	btfss	3,2
 13661  14C8  0008               	return
 13662  14C9  3004               	movlw	4
 13663                           
 13664                           ;NavKey.c: 166: double_push_cnt = 0;
 13665  14CA  01B1               	clrf	_double_push_cnt^(0+128)
 13666  14CB  01B2               	clrf	(_double_push_cnt+1)^(0+128)
 13667  14CC                     L2:	
 13668                           
 13669                           ;NavKey.c: 167: pb_fsm = NavKey_WAITPUSH;
 13670  14CC  01BE               	clrf	_pb_fsm^(0+128)
 13671                           
 13672                           ;NavKey.c: 168: NavKeyStatusUpdate(S_CTRDP);
 13673  14CD  01CB               	clrf	NavKeyStatusUpdate@stat^(0+128)
 13674  14CE  00CC               	movwf	(NavKeyStatusUpdate@stat^(0+128)+1)
 13675  14CF  24F2               	fcall	_NavKeyStatusUpdate
 13676  14D0                     l7282:	
 13677                           
 13678                           ;NavKey.c: 169: SetInterrupt();
 13679  14D0  3181  29D5         	ljmp	l6654
 13680  14D2                     l7284:	
 13681  14D2  3002               	movlw	2
 13682                           
 13683                           ;NavKey.c: 174: double_push_cnt = 0;
 13684  14D3  01B1               	clrf	_double_push_cnt^(0+128)
 13685  14D4  01B2               	clrf	(_double_push_cnt+1)^(0+128)
 13686                           
 13687                           ;NavKey.c: 175: NavKeyStatusUpdate(S_CTRP);
 13688  14D5  01CB               	clrf	NavKeyStatusUpdate@stat^(0+128)
 13689  14D6  00CC               	movwf	(NavKeyStatusUpdate@stat^(0+128)+1)
 13690  14D7  24F2  3194         	fcall	_NavKeyStatusUpdate
 13691                           
 13692                           ;NavKey.c: 176: if (NavKey_PBstatus[0] == 1) {
 13693  14D9  0021               	movlb	1	; select bank1
 13694  14DA  0B20               	decfsz	_NavKey_PBstatus^(0+128),w
 13695  14DB  2CDF               	goto	l7292
 13696                           
 13697                           ;NavKey.c: 177: pb_fsm = NavKey_PUSHRESET;
 13698  14DC  3005               	movlw	5
 13699  14DD  00BE               	movwf	_pb_fsm^(0+128)
 13700                           
 13701                           ;NavKey.c: 178: } else {
 13702  14DE  2CD0               	goto	l7282
 13703  14DF                     l7292:	
 13704  14DF  3001               	movlw	1
 13705  14E0  2CCC               	goto	L2
 13706  14E1                     l7298:	
 13707                           ;NavKey.c: 180: NavKeyStatusUpdate(S_CTRR);
 13708                           
 13709                           ;NavKey.c: 179: pb_fsm = NavKey_WAITPUSH;
 13710                           
 13711                           
 13712                           ;NavKey.c: 186: double_push_cnt = 0;
 13713  14E1  01B1               	clrf	_double_push_cnt^(0+128)
 13714  14E2  01B2               	clrf	(_double_push_cnt+1)^(0+128)
 13715                           
 13716                           ;NavKey.c: 187: if (NavKey_PBstatus[0] == 0) {
 13717  14E3  0820               	movf	_NavKey_PBstatus^(0+128),w
 13718  14E4  1D03               	btfss	3,2
 13719  14E5  0008               	return
 13720  14E6  2CDF               	goto	l7292
 13721  14E7                     l7310:	
 13722  14E7  083E               	movf	_pb_fsm^(0+128),w
 13723                           
 13724                           ; Switch size 1, requested type "speed"
 13725                           ; Number of cases is 6, Range of values is 0 to 5
 13726                           ; switch strategies available:
 13727                           ; Name         Instructions Cycles
 13728                           ; direct_byte           18     6 (fixed)
 13729                           ; simple_byte           19    10 (average)
 13730                           ; jumptable            260     6 (fixed)
 13731                           ;	Chosen strategy is direct_byte
 13732  14E8  0084               	movwf	4
 13733  14E9  3006               	movlw	6
 13734  14EA  0204               	subwf	4,w
 13735  14EB  1803               	skipnc
 13736  14EC  0008               	return
 13737  14ED  3190               	movlp	high S7838
 13738  14EE  3504               	lslf	4,w
 13739  14EF  3EE4               	addlw	low S7838
 13740  14F0  0082               	movwf	2
 13741  14F1  0008               	return
 13742  14F2                     __end_of_NavKey_CentralButton_FSM:	
 13743  14F2                     __ptext38:	
 13744 ;; *************** function _NavKeyStatusUpdate *****************
 13745 ;; Defined at:
 13746 ;;		line 102 in file "DataVariable.c"
 13747 ;; Parameters:    Size  Location     Type
 13748 ;;  stat            2    0[BANK1 ] enum E68
 13749 ;; Auto vars:     Size  Location     Type
 13750 ;;		None
 13751 ;; Return value:  Size  Location     Type
 13752 ;;                  1    wreg      void 
 13753 ;; Registers used:
 13754 ;;		wreg
 13755 ;; Tracked objects:
 13756 ;;		On entry : 1F/1
 13757 ;;		On exit  : 1F/0
 13758 ;;		Unchanged: 0/0
 13759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13760 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13763 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13764 ;;Total ram usage:        2 bytes
 13765 ;; Hardware stack levels used:    1
 13766 ;; Hardware stack levels required when called:    7
 13767 ;; This function calls:
 13768 ;;		Nothing
 13769 ;; This function is called by:
 13770 ;;		_Int2StatusUpdate
 13771 ;;		_NavKey_CentralButton_FSM
 13772 ;;		_NavKey_UPButton_FSM
 13773 ;;		_NavKey_DWButton_FSM
 13774 ;;		_NavKey_RTButton_FSM
 13775 ;;		_NavKey_LTButton_FSM
 13776 ;; This function uses a non-reentrant model
 13777 ;;
 13778                           
 13779                           
 13780                           ;psect for function _NavKeyStatusUpdate
 13781  14F2                     _NavKeyStatusUpdate:	
 13782  14F2                     l6652:	
 13783                           ;incstack = 0
 13784                           ; Regs used in _NavKeyStatusUpdate: [wreg]
 13785                           
 13786                           
 13787                           ;DataVariable.c: 103: NSTATUS.val |= (uint16_t) stat;
 13788  14F2  084B               	movf	NavKeyStatusUpdate@stat^(0+128),w
 13789  14F3  0020               	movlb	0	; select bank0
 13790  14F4  04B2               	iorwf	_NSTATUS,f	;volatile
 13791  14F5  0021               	movlb	1	; select bank1
 13792  14F6  084C               	movf	(NavKeyStatusUpdate@stat+1)^(0+128),w
 13793  14F7  0020               	movlb	0	; select bank0
 13794  14F8  04B3               	iorwf	_NSTATUS+1,f	;volatile
 13795  14F9  0008               	return
 13796  14FA                     __end_of_NavKeyStatusUpdate:	
 13797                           
 13798                           	psect	swtext1
 13799  10E4                     __pswtext1:	
 13800  10E4                     S7838:	
 13801  10E4  3194  2CB4         	ljmp	l7262
 13802  10E6  3194  2CBB         	ljmp	l7268
 13803  10E8  3194  2CC1         	ljmp	l7272
 13804  10EA  3194  2CC6         	ljmp	l7276
 13805  10EC  3194  2CD2         	ljmp	l7284
 13806  10EE  3194  2CE1         	ljmp	l7298
 13807                           
 13808                           	psect	text20
 13809  13CF                     __ptext20:	
 13810 ;; *************** function _NavKeySwitch_KeyFilter *****************
 13811 ;; Defined at:
 13812 ;;		line 107 in file "NavKey.c"
 13813 ;; Parameters:    Size  Location     Type
 13814 ;;		None
 13815 ;; Auto vars:     Size  Location     Type
 13816 ;;  i               1    0[BANK1 ] unsigned char 
 13817 ;; Return value:  Size  Location     Type
 13818 ;;                  1    wreg      void 
 13819 ;; Registers used:
 13820 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13821 ;; Tracked objects:
 13822 ;;		On entry : 1F/1
 13823 ;;		On exit  : 1F/1
 13824 ;;		Unchanged: 0/0
 13825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13827 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13829 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13830 ;;Total ram usage:        1 bytes
 13831 ;; Hardware stack levels used:    1
 13832 ;; Hardware stack levels required when called:    7
 13833 ;; This function calls:
 13834 ;;		Nothing
 13835 ;; This function is called by:
 13836 ;;		_NavKey_FSM
 13837 ;; This function uses a non-reentrant model
 13838 ;;
 13839                           
 13840                           
 13841                           ;psect for function _NavKeySwitch_KeyFilter
 13842  13CF                     _NavKeySwitch_KeyFilter:	
 13843                           
 13844                           ;NavKey.c: 108: uint8_t i;;NavKey.c: 110: NavKey_PBtemp[0] = PORTBbits.RB4;
 13845                           
 13846                           ;incstack = 0
 13847                           ; Regs used in _NavKeySwitch_KeyFilter: [wreg+fsr1l+fsr1h+status,2+status,0]
 13848  13CF  3000               	movlw	0
 13849  13D0  0020               	movlb	0	; select bank0
 13850  13D1  1A0D               	btfsc	13,4	;volatile
 13851  13D2  3001               	movlw	1
 13852  13D3  0021               	movlb	1	; select bank1
 13853  13D4  00A5               	movwf	_NavKey_PBtemp^(0+128)
 13854                           
 13855                           ;NavKey.c: 111: NavKey_PBtemp[1] = PORTCbits.RC7;
 13856  13D5  3000               	movlw	0
 13857  13D6  0020               	movlb	0	; select bank0
 13858  13D7  1B8E               	btfsc	14,7	;volatile
 13859  13D8  3001               	movlw	1
 13860  13D9  0021               	movlb	1	; select bank1
 13861  13DA  00A6               	movwf	(_NavKey_PBtemp^(0+128)+1)
 13862                           
 13863                           ;NavKey.c: 112: NavKey_PBtemp[2] = PORTAbits.RA4;
 13864  13DB  3000               	movlw	0
 13865  13DC  0020               	movlb	0	; select bank0
 13866  13DD  1A0C               	btfsc	12,4	;volatile
 13867  13DE  3001               	movlw	1
 13868  13DF  0021               	movlb	1	; select bank1
 13869  13E0  00A7               	movwf	(_NavKey_PBtemp^(0+128)+2)
 13870                           
 13871                           ;NavKey.c: 113: NavKey_PBtemp[3] = PORTCbits.RC6;
 13872  13E1  3000               	movlw	0
 13873  13E2  0020               	movlb	0	; select bank0
 13874  13E3  1B0E               	btfsc	14,6	;volatile
 13875  13E4  3001               	movlw	1
 13876  13E5  0021               	movlb	1	; select bank1
 13877  13E6  00A8               	movwf	(_NavKey_PBtemp^(0+128)+3)
 13878                           
 13879                           ;NavKey.c: 114: NavKey_PBtemp[4] = PORTCbits.RC3;
 13880  13E7  3000               	movlw	0
 13881  13E8  0020               	movlb	0	; select bank0
 13882  13E9  198E               	btfsc	14,3	;volatile
 13883  13EA  3001               	movlw	1
 13884  13EB  0021               	movlb	1	; select bank1
 13885  13EC  00A9               	movwf	(_NavKey_PBtemp^(0+128)+4)
 13886                           
 13887                           ;NavKey.c: 116: for (i = 0; i < 5; i++) {
 13888  13ED  01CB               	clrf	NavKeySwitch_KeyFilter@i^(0+128)
 13889  13EE                     l7242:	
 13890                           
 13891                           ;NavKey.c: 117: if (NavKey_PBtemp[i] == 0) {
 13892  13EE  084B               	movf	NavKeySwitch_KeyFilter@i^(0+128),w
 13893  13EF  3EA5               	addlw	(low (_NavKey_PBtemp| 0))& (0+255)
 13894  13F0  0086               	movwf	6
 13895  13F1  0187               	clrf	7
 13896  13F2  0801               	movf	1,w
 13897  13F3  1D03               	btfss	3,2
 13898  13F4  2C09               	goto	l7248
 13899                           
 13900                           ;NavKey.c: 118: if (pb_cnt[i]++ >= 5) {
 13901  13F5  084B               	movf	NavKeySwitch_KeyFilter@i^(0+128),w
 13902  13F6  3EAA               	addlw	(low (_pb_cnt| 0))& (0+255)
 13903  13F7  0086               	movwf	6
 13904  13F8  0801               	movf	1,w
 13905  13F9  0A81               	incf	1,f
 13906  13FA  3A80               	xorlw	128
 13907  13FB  3E7B               	addlw	-133
 13908  13FC  1C03               	skipc
 13909  13FD  2C1B               	goto	l7252
 13910                           
 13911                           ;NavKey.c: 119: pb_cnt[i] = 5;
 13912  13FE  084B               	movf	NavKeySwitch_KeyFilter@i^(0+128),w
 13913  13FF  3EAA               	addlw	(low (_pb_cnt| 0))& (0+255)
 13914  1400  0086               	movwf	6
 13915  1401  3005               	movlw	5
 13916  1402  0081               	movwf	1
 13917                           
 13918                           ;NavKey.c: 120: NavKey_PBstatus[i] = 1;
 13919  1403  084B               	movf	NavKeySwitch_KeyFilter@i^(0+128),w
 13920  1404  3EA0               	addlw	(low (_NavKey_PBstatus| 0))& (0+255)
 13921  1405  0086               	movwf	6
 13922  1406  0181               	clrf	1
 13923  1407  0A81               	incf	1,f
 13924  1408  2C1B               	goto	l7252
 13925  1409                     l7248:	
 13926                           
 13927                           ;NavKey.c: 123: if (pb_cnt[i]-- <= 0) {
 13928  1409  084B               	movf	NavKeySwitch_KeyFilter@i^(0+128),w
 13929  140A  3EAA               	addlw	(low (_pb_cnt| 0))& (0+255)
 13930  140B  0086               	movwf	6
 13931  140C  0187               	clrf	7
 13932  140D  0801               	movf	1,w
 13933  140E  0381               	decf	1,f
 13934  140F  3A80               	xorlw	128
 13935  1410  3E7F               	addlw	-129
 13936  1411  1803               	skipnc
 13937  1412  2C1B               	goto	l7252
 13938                           
 13939                           ;NavKey.c: 124: pb_cnt[i] = 0;
 13940  1413  084B               	movf	NavKeySwitch_KeyFilter@i^(0+128),w
 13941  1414  3EAA               	addlw	(low (_pb_cnt| 0))& (0+255)
 13942  1415  0086               	movwf	6
 13943  1416  0181               	clrf	1
 13944                           
 13945                           ;NavKey.c: 125: NavKey_PBstatus[i] = 0;
 13946  1417  084B               	movf	NavKeySwitch_KeyFilter@i^(0+128),w
 13947  1418  3EA0               	addlw	(low (_NavKey_PBstatus| 0))& (0+255)
 13948  1419  0086               	movwf	6
 13949  141A  0181               	clrf	1
 13950  141B                     l7252:	
 13951  141B  3005               	movlw	5
 13952  141C  0ACB               	incf	NavKeySwitch_KeyFilter@i^(0+128),f
 13953  141D  024B               	subwf	NavKeySwitch_KeyFilter@i^(0+128),w
 13954  141E  1803               	btfsc	3,0
 13955  141F  0008               	return
 13956  1420  2BEE               	goto	l7242
 13957  1421                     __end_of_NavKeySwitch_KeyFilter:	
 13958                           
 13959                           	psect	swtext2
 13960  10F0                     __pswtext2:	
 13961  10F0                     S7840:	
 13962  10F0  3181  2932         	ljmp	l7192
 13963  10F2  3181  2949         	ljmp	l7206
 13964  10F4  3181  2957         	ljmp	l1180
 13965  10F6  3181  2966         	ljmp	l1183
 13966                           
 13967                           	psect	swtext3
 13968  10F8                     __pswtext3:	
 13969  10F8                     S7842:	
 13970  10F8  3181  297F         	ljmp	l7146
 13971  10FA  3181  2996         	ljmp	l7160
 13972  10FC  3181  29A4         	ljmp	l1165
 13973  10FE  3181  29B3         	ljmp	l1168
 13974                           
 13975                           	psect	swtext4
 13976  11B4                     __pswtext4:	
 13977  11B4                     S7844:	
 13978  11B4  3180  28E7         	ljmp	l7100
 13979  11B6  3180  28FE         	ljmp	l7114
 13980  11B8  3181  290C         	ljmp	l1150
 13981  11BA  3181  291A         	ljmp	l1153
 13982                           
 13983                           	psect	intentry
 13984  0004                     __pintentry:	
 13985 ;; *************** function _INTERRUPT_InterruptManager *****************
 13986 ;; Defined at:
 13987 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 13988 ;; Parameters:    Size  Location     Type
 13989 ;;		None
 13990 ;; Auto vars:     Size  Location     Type
 13991 ;;		None
 13992 ;; Return value:  Size  Location     Type
 13993 ;;                  1    wreg      void 
 13994 ;; Registers used:
 13995 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13996 ;; Tracked objects:
 13997 ;;		On entry : 0/0
 13998 ;;		On exit  : 0/0
 13999 ;;		Unchanged: 0/0
 14000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14005 ;;Total ram usage:        0 bytes
 14006 ;; Hardware stack levels used:    1
 14007 ;; Hardware stack levels required when called:    6
 14008 ;; This function calls:
 14009 ;;		_CLC1_ISR
 14010 ;;		_CLC2_ISR
 14011 ;;		_I2C1_ISR
 14012 ;;		_TMR3_ISR
 14013 ;; This function is called by:
 14014 ;;		Interrupt level 1
 14015 ;; This function uses a non-reentrant model
 14016 ;;
 14017                           
 14018  0004                     _INTERRUPT_InterruptManager:	
 14019                           
 14020                           ;incstack = 0
 14021  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 14022                           
 14023                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14024  0005  3180               	pagesel	$
 14025                           
 14026                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
 14027  0006  1F0B               	btfss	11,6	;volatile
 14028  0007  282E               	goto	i1l89
 14029                           
 14030                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: if(PIE3bits.CLC2IE == 1 && PIR3bits
      +                          .CLC2IF == 1)
 14031  0008  0021               	movlb	1	; select bank1
 14032  0009  1C93               	btfss	19,1	;volatile
 14033  000A  2812               	goto	i1l80
 14034  000B  0020               	movlb	0	; select bank0
 14035  000C  1C93               	btfss	19,1	;volatile
 14036  000D  2812               	goto	i1l80
 14037                           
 14038                           ;interrupt_manager.c: 58: {;interrupt_manager.c: 59: CLC2_ISR();
 14039  000E  3194  24FA  3180   	fcall	_CLC2_ISR
 14040                           
 14041                           ;interrupt_manager.c: 60: }
 14042  0011  282E               	goto	i1l89
 14043  0012                     i1l80:	
 14044                           
 14045                           ;interrupt_manager.c: 61: else if(PIE3bits.CLC1IE == 1 && PIR3bits.CLC1IF == 1)
 14046  0012  0021               	movlb	1	; select bank1
 14047  0013  1C13               	btfss	19,0	;volatile
 14048  0014  281C               	goto	i1l82
 14049  0015  0020               	movlb	0	; select bank0
 14050  0016  1C13               	btfss	19,0	;volatile
 14051  0017  281C               	goto	i1l82
 14052                           
 14053                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: CLC1_ISR();
 14054  0018  3195  2504  3180   	fcall	_CLC1_ISR
 14055                           
 14056                           ;interrupt_manager.c: 64: }
 14057  001B  282E               	goto	i1l89
 14058  001C                     i1l82:	
 14059                           
 14060                           ;interrupt_manager.c: 65: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
 14061  001C  0021               	movlb	1	; select bank1
 14062  001D  1D91               	btfss	17,3	;volatile
 14063  001E  2826               	goto	i1l84
 14064  001F  0020               	movlb	0	; select bank0
 14065  0020  1D91               	btfss	17,3	;volatile
 14066  0021  2826               	goto	i1l84
 14067                           
 14068                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: I2C1_ISR();
 14069  0022  318A  2233  3180   	fcall	_I2C1_ISR
 14070                           
 14071                           ;interrupt_manager.c: 68: }
 14072  0025  282E               	goto	i1l89
 14073  0026                     i1l84:	
 14074                           
 14075                           ;interrupt_manager.c: 69: else if(PIE3bits.TMR3IE == 1 && PIR3bits.TMR3IF == 1)
 14076  0026  0021               	movlb	1	; select bank1
 14077  0027  1E13               	btfss	19,4	;volatile
 14078  0028  282E               	goto	i1l89
 14079  0029  0020               	movlb	0	; select bank0
 14080  002A  1E13               	btfss	19,4	;volatile
 14081  002B  282E               	goto	i1l89
 14082                           
 14083                           ;interrupt_manager.c: 70: {;interrupt_manager.c: 71: TMR3_ISR();
 14084  002C  3189  21AA         	fcall	_TMR3_ISR
 14085  002E                     i1l89:	
 14086                           ;interrupt_manager.c: 72: }
 14087                           
 14088  002E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 14089  002F  0009               	retfie
 14090  0030                     __end_of_INTERRUPT_InterruptManager:	
 14091                           
 14092                           	psect	text42
 14093  09AA                     __ptext42:	
 14094 ;; *************** function _TMR3_ISR *****************
 14095 ;; Defined at:
 14096 ;;		line 157 in file "mcc_generated_files/tmr3.c"
 14097 ;; Parameters:    Size  Location     Type
 14098 ;;		None
 14099 ;; Auto vars:     Size  Location     Type
 14100 ;;		None
 14101 ;; Return value:  Size  Location     Type
 14102 ;;                  1    wreg      void 
 14103 ;; Registers used:
 14104 ;;		wreg, status,2, status,0, pclath, cstack
 14105 ;; Tracked objects:
 14106 ;;		On entry : 1F/0
 14107 ;;		On exit  : 0/0
 14108 ;;		Unchanged: 0/0
 14109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14114 ;;Total ram usage:        0 bytes
 14115 ;; Hardware stack levels used:    1
 14116 ;; Hardware stack levels required when called:    2
 14117 ;; This function calls:
 14118 ;;		_TMR3_CallBack
 14119 ;;		_TMR3_WriteTimer
 14120 ;; This function is called by:
 14121 ;;		_INTERRUPT_InterruptManager
 14122 ;; This function uses a non-reentrant model
 14123 ;;
 14124                           
 14125                           
 14126                           ;psect for function _TMR3_ISR
 14127  09AA                     _TMR3_ISR:	
 14128                           
 14129                           ;tmr3.c: 161: PIR3bits.TMR3IF = 0;
 14130                           
 14131                           ;incstack = 0
 14132                           ; Regs used in _TMR3_ISR: [wreg+status,2+status,0+pclath+cstack]
 14133  09AA  1213               	bcf	19,4	;volatile
 14134                           
 14135                           ;tmr3.c: 162: TMR3_WriteTimer(timer3ReloadVal);
 14136  09AB  0021               	movlb	1	; select bank1
 14137  09AC  0838               	movf	(_timer3ReloadVal+1)^(0+128),w	;volatile
 14138  09AD  00F1               	movwf	TMR3_WriteTimer@timerVal+1
 14139  09AE  0837               	movf	_timer3ReloadVal^(0+128),w	;volatile
 14140  09AF  00F0               	movwf	TMR3_WriteTimer@timerVal
 14141  09B0  21BE  3189         	fcall	_TMR3_WriteTimer
 14142                           
 14143                           ;tmr3.c: 166: TMR3_CallBack();
 14144  09B2  29B3               	ljmp	i1l5740
 14145  09B3                     __end_of_TMR3_ISR:	
 14146  09B3                     __ptext44:	
 14147 ;; *************** function _TMR3_CallBack *****************
 14148 ;; Defined at:
 14149 ;;		line 169 in file "mcc_generated_files/tmr3.c"
 14150 ;; Parameters:    Size  Location     Type
 14151 ;;		None
 14152 ;; Auto vars:     Size  Location     Type
 14153 ;;		None
 14154 ;; Return value:  Size  Location     Type
 14155 ;;                  1    wreg      void 
 14156 ;; Registers used:
 14157 ;;		wreg, status,2, status,0, pclath, cstack
 14158 ;; Tracked objects:
 14159 ;;		On entry : 1F/8
 14160 ;;		On exit  : 0/0
 14161 ;;		Unchanged: 0/0
 14162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14167 ;;Total ram usage:        0 bytes
 14168 ;; Hardware stack levels used:    1
 14169 ;; Hardware stack levels required when called:    1
 14170 ;; This function calls:
 14171 ;;		Absolute function
 14172 ;;		_TMR3_DefaultInterruptHandler
 14173 ;;		_TimerInt
 14174 ;; This function is called by:
 14175 ;;		_TMR3_ISR
 14176 ;; This function uses a non-reentrant model
 14177 ;;
 14178                           
 14179                           
 14180                           ;psect for function _TMR3_CallBack
 14181  09B3                     _TMR3_CallBack:	
 14182  09B3                     i1l5740:	
 14183                           ;incstack = 0
 14184                           ; Regs used in _TMR3_CallBack: [wreg+status,2+status,0+pclath+cstack]
 14185                           
 14186                           
 14187                           ;tmr3.c: 172: if(TMR3_InterruptHandler)
 14188  09B3  0021               	movlb	1	; select bank1
 14189  09B4  0835               	movf	_TMR3_InterruptHandler^(0+128),w
 14190  09B5  0436               	iorwf	(_TMR3_InterruptHandler+1)^(0+128),w
 14191  09B6  1903               	btfsc	3,2
 14192  09B7  0008               	return
 14193                           
 14194                           ;tmr3.c: 173: {;tmr3.c: 174: TMR3_InterruptHandler();
 14195  09B8  0836               	movf	(_TMR3_InterruptHandler+1)^(0+128),w
 14196  09B9  008A               	movwf	10
 14197  09BA  0835               	movf	_TMR3_InterruptHandler^(0+128),w
 14198  09BB  000A               	callw
 14199  09BC  3189               	pagesel	$
 14200  09BD  0008               	return
 14201  09BE                     __end_of_TMR3_CallBack:	
 14202  09BE                     __ptext43:	
 14203 ;; *************** function _TMR3_WriteTimer *****************
 14204 ;; Defined at:
 14205 ;;		line 120 in file "mcc_generated_files/tmr3.c"
 14206 ;; Parameters:    Size  Location     Type
 14207 ;;  timerVal        2    0[COMMON] unsigned int 
 14208 ;; Auto vars:     Size  Location     Type
 14209 ;;		None
 14210 ;; Return value:  Size  Location     Type
 14211 ;;                  1    wreg      void 
 14212 ;; Registers used:
 14213 ;;		wreg
 14214 ;; Tracked objects:
 14215 ;;		On entry : 1F/1
 14216 ;;		On exit  : 1F/8
 14217 ;;		Unchanged: 0/0
 14218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14219 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14222 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14223 ;;Total ram usage:        2 bytes
 14224 ;; Hardware stack levels used:    1
 14225 ;; This function calls:
 14226 ;;		Nothing
 14227 ;; This function is called by:
 14228 ;;		_TMR3_ISR
 14229 ;; This function uses a non-reentrant model
 14230 ;;
 14231                           
 14232                           
 14233                           ;psect for function _TMR3_WriteTimer
 14234  09BE                     _TMR3_WriteTimer:	
 14235                           
 14236                           ;tmr3.c: 122: if (T3CONbits.T3SYNC == 1)
 14237                           
 14238                           ;incstack = 0
 14239                           ; Regs used in _TMR3_WriteTimer: [wreg]
 14240  09BE  0028               	movlb	8	; select bank8
 14241  09BF  1D13               	btfss	19,2	;volatile
 14242  09C0  29C8               	goto	i1l5738
 14243                           
 14244                           ;tmr3.c: 123: {;tmr3.c: 125: T3CONbits.TMR3ON = 0;
 14245  09C1  1013               	bcf	19,0	;volatile
 14246                           
 14247                           ;tmr3.c: 128: TMR3H = (timerVal >> 8);
 14248  09C2  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 14249  09C3  0092               	movwf	18	;volatile
 14250                           
 14251                           ;tmr3.c: 129: TMR3L = timerVal;
 14252  09C4  0870               	movf	TMR3_WriteTimer@timerVal,w
 14253  09C5  0091               	movwf	17	;volatile
 14254                           
 14255                           ;tmr3.c: 132: T3CONbits.TMR3ON =1;
 14256  09C6  1413               	bsf	19,0	;volatile
 14257                           
 14258                           ;tmr3.c: 133: }
 14259  09C7  0008               	return
 14260  09C8                     i1l5738:	
 14261                           
 14262                           ;tmr3.c: 134: else;tmr3.c: 135: {;tmr3.c: 137: TMR3H = (timerVal >> 8);
 14263  09C8  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 14264  09C9  0092               	movwf	18	;volatile
 14265                           
 14266                           ;tmr3.c: 138: TMR3L = timerVal;
 14267  09CA  0870               	movf	TMR3_WriteTimer@timerVal,w
 14268  09CB  0091               	movwf	17	;volatile
 14269  09CC  0008               	return
 14270  09CD                     __end_of_TMR3_WriteTimer:	
 14271                           
 14272                           	psect	text45
 14273  0003                     __ptext45:	
 14274 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 14275 ;; Defined at:
 14276 ;;		line 182 in file "mcc_generated_files/tmr3.c"
 14277 ;; Parameters:    Size  Location     Type
 14278 ;;		None
 14279 ;; Auto vars:     Size  Location     Type
 14280 ;;		None
 14281 ;; Return value:  Size  Location     Type
 14282 ;;                  1    wreg      void 
 14283 ;; Registers used:
 14284 ;;		None
 14285 ;; Tracked objects:
 14286 ;;		On entry : 1F/1
 14287 ;;		On exit  : 1F/1
 14288 ;;		Unchanged: 1F/0
 14289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14294 ;;Total ram usage:        0 bytes
 14295 ;; Hardware stack levels used:    1
 14296 ;; This function calls:
 14297 ;;		Nothing
 14298 ;; This function is called by:
 14299 ;;		_TMR3_Initialize
 14300 ;;		_TMR3_CallBack
 14301 ;; This function uses a non-reentrant model
 14302 ;;
 14303                           
 14304                           
 14305                           ;psect for function _TMR3_DefaultInterruptHandler
 14306  0003                     _TMR3_DefaultInterruptHandler:	
 14307                           
 14308                           ;incstack = 0
 14309                           ; Regs used in _TMR3_DefaultInterruptHandler: []
 14310  0003  0008               	return
 14311  0004                     __end_of_TMR3_DefaultInterruptHandler:	
 14312                           
 14313                           	psect	text46
 14314  11DC                     __ptext46:	
 14315 ;; *************** function _TimerInt *****************
 14316 ;; Defined at:
 14317 ;;		line 73 in file "main.c"
 14318 ;; Parameters:    Size  Location     Type
 14319 ;;		None
 14320 ;; Auto vars:     Size  Location     Type
 14321 ;;		None
 14322 ;; Return value:  Size  Location     Type
 14323 ;;                  1    wreg      void 
 14324 ;; Registers used:
 14325 ;;		None
 14326 ;; Tracked objects:
 14327 ;;		On entry : 1F/1
 14328 ;;		On exit  : 1F/1
 14329 ;;		Unchanged: 0/0
 14330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14335 ;;Total ram usage:        0 bytes
 14336 ;; Hardware stack levels used:    1
 14337 ;; This function calls:
 14338 ;;		Nothing
 14339 ;; This function is called by:
 14340 ;;		_main
 14341 ;;		_TMR3_CallBack
 14342 ;; This function uses a non-reentrant model
 14343 ;;
 14344                           
 14345                           
 14346                           ;psect for function _TimerInt
 14347  11DC                     _TimerInt:	
 14348                           
 14349                           ;main.c: 74: fsm_tmr = 1;
 14350                           
 14351                           ;incstack = 0
 14352                           ; Regs used in _TimerInt: []
 14353  11DC  01CA               	clrf	_fsm_tmr^(0+128)
 14354  11DD  0ACA               	incf	_fsm_tmr^(0+128),f
 14355  11DE  0008               	return
 14356  11DF                     __end_of_TimerInt:	
 14357                           
 14358                           	psect	text47
 14359  0A33                     __ptext47:	
 14360 ;; *************** function _I2C1_ISR *****************
 14361 ;; Defined at:
 14362 ;;		line 125 in file "mcc_generated_files/i2c1.c"
 14363 ;; Parameters:    Size  Location     Type
 14364 ;;		None
 14365 ;; Auto vars:     Size  Location     Type
 14366 ;;  i2c_data        1    6[BANK0 ] unsigned char 
 14367 ;; Return value:  Size  Location     Type
 14368 ;;                  1    wreg      void 
 14369 ;; Registers used:
 14370 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14371 ;; Tracked objects:
 14372 ;;		On entry : 1F/0
 14373 ;;		On exit  : 1F/4
 14374 ;;		Unchanged: 0/0
 14375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14377 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14379 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14380 ;;Total ram usage:        1 bytes
 14381 ;; Hardware stack levels used:    1
 14382 ;; Hardware stack levels required when called:    5
 14383 ;; This function calls:
 14384 ;;		_I2C1_StatusCallback
 14385 ;; This function is called by:
 14386 ;;		_INTERRUPT_InterruptManager
 14387 ;; This function uses a non-reentrant model
 14388 ;;
 14389                           
 14390                           
 14391                           ;psect for function _I2C1_ISR
 14392  0A33                     _I2C1_ISR:	
 14393                           
 14394                           ;i2c1.c: 132: PIR1bits.SSP1IF = 0;
 14395                           
 14396                           ;incstack = 0
 14397                           ; Regs used in _I2C1_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14398  0A33  1191               	bcf	17,3	;volatile
 14399                           
 14400                           ;i2c1.c: 133: i2c_data = SSP1BUF;
 14401  0A34  0024               	movlb	4	; select bank4
 14402  0A35  0811               	movf	17,w	;volatile
 14403  0A36  0020               	movlb	0	; select bank0
 14404  0A37  00D0               	movwf	I2C1_ISR@i2c_data
 14405                           
 14406                           ;i2c1.c: 134: if (1 == SSP1STATbits.R_nW) {
 14407  0A38  0024               	movlb	4	; select bank4
 14408  0A39  1D14               	btfss	20,2	;volatile
 14409  0A3A  2A42               	goto	i1l171
 14410                           
 14411                           ;i2c1.c: 135: if ((1 == SSP1STATbits.D_nA) && (1 == SSP1CON2bits.ACKSTAT)) {
 14412  0A3B  1A94               	btfsc	20,5	;volatile
 14413  0A3C  1F16               	btfss	22,6	;volatile
 14414  0A3D  2A40               	goto	i1l6186
 14415                           
 14416                           ;i2c1.c: 137: I2C1_StatusCallback(I2C1_SLAVE_READ_COMPLETED);
 14417  0A3E  3003               	movlw	3
 14418  0A3F  2A4A               	goto	L6
 14419  0A40                     i1l6186:	
 14420                           ;i2c1.c: 138: } else {
 14421                           
 14422                           
 14423                           ;i2c1.c: 140: I2C1_StatusCallback(I2C1_SLAVE_READ_REQUEST);
 14424  0A40  3001               	movlw	1
 14425  0A41  2A4A               	goto	L6
 14426  0A42                     i1l171:	
 14427  0A42  1A94               	btfsc	20,5	;volatile
 14428  0A43  2A46               	goto	i1l6190
 14429                           
 14430                           ;i2c1.c: 146: I2C1_StatusCallback(I2C1_SLAVE_WRITE_REQUEST);
 14431  0A44  3000               	movlw	0
 14432  0A45  2A4A               	goto	L6
 14433  0A46                     i1l6190:	
 14434                           ;i2c1.c: 147: } else {
 14435                           
 14436                           
 14437                           ;i2c1.c: 148: I2C1_slaveWriteData = i2c_data;
 14438  0A46  0020               	movlb	0	; select bank0
 14439  0A47  0850               	movf	I2C1_ISR@i2c_data,w
 14440  0A48  00DF               	movwf	_I2C1_slaveWriteData	;volatile
 14441                           
 14442                           ;i2c1.c: 151: I2C1_StatusCallback(I2C1_SLAVE_WRITE_COMPLETED);
 14443  0A49  3002               	movlw	2
 14444  0A4A                     L6:	
 14445  0A4A  224E               	fcall	_I2C1_StatusCallback
 14446                           
 14447                           ;i2c1.c: 152: };i2c1.c: 154: SSP1CON1bits.CKP = 1;
 14448  0A4B  0024               	movlb	4	; select bank4
 14449  0A4C  1615               	bsf	21,4	;volatile
 14450  0A4D  0008               	return
 14451  0A4E                     __end_of_I2C1_ISR:	
 14452  0A4E                     __ptext48:	
 14453 ;; *************** function _I2C1_StatusCallback *****************
 14454 ;; Defined at:
 14455 ;;		line 67 in file "i2c_register.c"
 14456 ;; Parameters:    Size  Location     Type
 14457 ;;  i2c_bus_stat    1    wreg     enum E68
 14458 ;; Auto vars:     Size  Location     Type
 14459 ;;  i2c_bus_stat    1    5[BANK0 ] enum E68
 14460 ;; Return value:  Size  Location     Type
 14461 ;;                  1    wreg      void 
 14462 ;; Registers used:
 14463 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14464 ;; Tracked objects:
 14465 ;;		On entry : 1B/4
 14466 ;;		On exit  : 1E/0
 14467 ;;		Unchanged: 0/0
 14468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14470 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14472 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14473 ;;Total ram usage:        1 bytes
 14474 ;; Hardware stack levels used:    1
 14475 ;; Hardware stack levels required when called:    4
 14476 ;; This function calls:
 14477 ;;		_Int2StatusClear
 14478 ;;		_RegisterRead
 14479 ;;		_RegisterWrite
 14480 ;;		_StatusClear
 14481 ;;		i1_ClearInterrupt
 14482 ;; This function is called by:
 14483 ;;		_I2C1_ISR
 14484 ;; This function uses a non-reentrant model
 14485 ;;
 14486                           
 14487                           
 14488                           ;psect for function _I2C1_StatusCallback
 14489  0A4E                     _I2C1_StatusCallback:	
 14490                           
 14491                           ;incstack = 0
 14492                           ; Regs used in _I2C1_StatusCallback: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14493                           ;I2C1_StatusCallback@i2c_bus_state stored from wreg
 14494  0A4E  0020               	movlb	0	; select bank0
 14495  0A4F  00CF               	movwf	I2C1_StatusCallback@i2c_bus_state
 14496                           
 14497                           ;i2c_register.c: 68: static uint8_t slaveWriteType = SLAVE_NORMAL_DATA;;i2c_register.c: 
      +                          70: switch (i2c_bus_state) {
 14498  0A50  2A85               	goto	i1l5722
 14499  0A51                     i1l754:	
 14500                           ;i2c_register.c: 71: case I2C1_SLAVE_WRITE_REQUEST:
 14501                           
 14502                           
 14503                           ;i2c_register.c: 73: slaveWriteType = SLAVE_DATA_ADDRESS;
 14504  0A51  0021               	movlb	1	; select bank1
 14505  0A52  01C3               	clrf	I2C1_StatusCallback@slaveWriteType^(0+128)
 14506  0A53  0AC3               	incf	I2C1_StatusCallback@slaveWriteType^(0+128),f
 14507                           
 14508                           ;i2c_register.c: 74: break;
 14509  0A54  0008               	return
 14510  0A55                     i1l5692:	
 14511                           
 14512                           ;i2c_register.c: 81: EncoderReg = I2C1_slaveWriteData;
 14513  0A55  0020               	movlb	0	; select bank0
 14514  0A56  085F               	movf	_I2C1_slaveWriteData,w	;volatile
 14515  0A57  00B8               	movwf	_EncoderReg	;volatile
 14516                           
 14517                           ;i2c_register.c: 82: break;
 14518  0A58  2A6C               	goto	i1l5702
 14519  0A59                     i1l5694:	
 14520                           
 14521                           ;i2c_register.c: 86: RegisterWrite(EncoderReg, I2C1_slaveWriteData);
 14522  0A59  0020               	movlb	0	; select bank0
 14523  0A5A  085F               	movf	_I2C1_slaveWriteData,w	;volatile
 14524  0A5B  00CD               	movwf	RegisterWrite@data
 14525  0A5C  0838               	movf	_EncoderReg,w	;volatile
 14526  0A5D  318C  2406  318A   	fcall	_RegisterWrite
 14527                           
 14528                           ;i2c_register.c: 87: EncoderReg++;
 14529  0A60  0020               	movlb	0	; select bank0
 14530  0A61  0AB8               	incf	_EncoderReg,f	;volatile
 14531                           
 14532                           ;i2c_register.c: 88: break;
 14533  0A62  2A6C               	goto	i1l5702
 14534  0A63                     i1l5700:	
 14535  0A63  0021               	movlb	1	; select bank1
 14536  0A64  0843               	movf	I2C1_StatusCallback@slaveWriteType^(0+128),w
 14537                           
 14538                           ; Switch size 1, requested type "speed"
 14539                           ; Number of cases is 2, Range of values is 0 to 1
 14540                           ; switch strategies available:
 14541                           ; Name         Instructions Cycles
 14542                           ; simple_byte            7     4 (average)
 14543                           ; direct_byte           10     6 (fixed)
 14544                           ; jumptable            260     6 (fixed)
 14545                           ;	Chosen strategy is simple_byte
 14546  0A65  3A00               	xorlw	0	; case 0
 14547  0A66  1903               	skipnz
 14548  0A67  2A59               	goto	i1l5694
 14549  0A68  3A01               	xorlw	1	; case 1
 14550  0A69  1903               	skipnz
 14551  0A6A  2A55               	goto	i1l5692
 14552  0A6B  2A59               	goto	i1l5694
 14553  0A6C                     i1l5702:	
 14554                           
 14555                           ;i2c_register.c: 92: slaveWriteType = SLAVE_NORMAL_DATA;
 14556  0A6C  0021               	movlb	1	; select bank1
 14557  0A6D  01C3               	clrf	I2C1_StatusCallback@slaveWriteType^(0+128)
 14558                           
 14559                           ;i2c_register.c: 93: break;
 14560  0A6E  0008               	return
 14561  0A6F                     i1l5704:	
 14562                           
 14563                           ;i2c_register.c: 96: SSP1BUF = RegisterRead(EncoderReg);
 14564  0A6F  0838               	movf	_EncoderReg,w	;volatile
 14565  0A70  229A               	fcall	_RegisterRead
 14566  0A71  0024               	movlb	4	; select bank4
 14567  0A72  0091               	movwf	17	;volatile
 14568                           
 14569                           ;i2c_register.c: 97: EncoderReg++;
 14570  0A73  0020               	movlb	0	; select bank0
 14571  0A74  0AB8               	incf	_EncoderReg,f	;volatile
 14572                           
 14573                           ;i2c_register.c: 98: break;
 14574  0A75  0008               	return
 14575  0A76                     i1l5708:	
 14576                           
 14577                           ;i2c_register.c: 101: if (intclear == 1) {
 14578  0A76  0021               	movlb	1	; select bank1
 14579  0A77  0B45               	decfsz	_intclear^(0+128),w	;volatile
 14580  0A78  2A7F               	goto	i1l5714
 14581                           
 14582                           ;i2c_register.c: 102: StatusClear();
 14583  0A79  2290  318A         	fcall	_StatusClear
 14584                           
 14585                           ;i2c_register.c: 103: ClearInterrupt();
 14586  0A7B  2294  318A         	fcall	i1_ClearInterrupt
 14587                           
 14588                           ;i2c_register.c: 104: intclear = 0;
 14589  0A7D  0021               	movlb	1	; select bank1
 14590  0A7E  01C5               	clrf	_intclear^(0+128)	;volatile
 14591  0A7F                     i1l5714:	
 14592                           
 14593                           ;i2c_register.c: 105: };i2c_register.c: 107: if (int2clear == 1) {
 14594  0A7F  0B44               	decfsz	_int2clear^(0+128),w	;volatile
 14595  0A80  0008               	return
 14596                           
 14597                           ;i2c_register.c: 108: Int2StatusClear();
 14598  0A81  2297               	fcall	_Int2StatusClear
 14599                           
 14600                           ;i2c_register.c: 109: int2clear = 0;
 14601  0A82  0021               	movlb	1	; select bank1
 14602  0A83  01C4               	clrf	_int2clear^(0+128)	;volatile
 14603  0A84  0008               	return
 14604  0A85                     i1l5722:	
 14605  0A85  084F               	movf	I2C1_StatusCallback@i2c_bus_state,w
 14606                           
 14607                           ; Switch size 1, requested type "speed"
 14608                           ; Number of cases is 4, Range of values is 0 to 3
 14609                           ; switch strategies available:
 14610                           ; Name         Instructions Cycles
 14611                           ; direct_byte           14     6 (fixed)
 14612                           ; simple_byte           13     7 (average)
 14613                           ; jumptable            260     6 (fixed)
 14614                           ;	Chosen strategy is direct_byte
 14615  0A86  0084               	movwf	4
 14616  0A87  3004               	movlw	4
 14617  0A88  0204               	subwf	4,w
 14618  0A89  1803               	skipnc
 14619  0A8A  0008               	return
 14620  0A8B  3191               	movlp	high i1S7846
 14621  0A8C  3504               	lslf	4,w
 14622  0A8D  3EBC               	addlw	low i1S7846
 14623  0A8E  0082               	movwf	2
 14624  0A8F  0008               	return
 14625  0A90                     __end_of_I2C1_StatusCallback:	
 14626  0A90                     __ptext50:	
 14627 ;; *************** function _StatusClear *****************
 14628 ;; Defined at:
 14629 ;;		line 118 in file "DataVariable.c"
 14630 ;; Parameters:    Size  Location     Type
 14631 ;;		None
 14632 ;; Auto vars:     Size  Location     Type
 14633 ;;		None
 14634 ;; Return value:  Size  Location     Type
 14635 ;;                  1    wreg      void 
 14636 ;; Registers used:
 14637 ;;		status,2
 14638 ;; Tracked objects:
 14639 ;;		On entry : 1F/1
 14640 ;;		On exit  : 1F/0
 14641 ;;		Unchanged: 0/0
 14642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14647 ;;Total ram usage:        0 bytes
 14648 ;; Hardware stack levels used:    1
 14649 ;; This function calls:
 14650 ;;		Nothing
 14651 ;; This function is called by:
 14652 ;;		_I2C1_StatusCallback
 14653 ;; This function uses a non-reentrant model
 14654 ;;
 14655                           
 14656                           
 14657                           ;psect for function _StatusClear
 14658  0A90                     _StatusClear:	
 14659                           
 14660                           ;DataVariable.c: 119: NSTATUS.val = 0;
 14661                           
 14662                           ;incstack = 0
 14663                           ; Regs used in _StatusClear: [status,2]
 14664  0A90  0020               	movlb	0	; select bank0
 14665  0A91  01B2               	clrf	_NSTATUS	;volatile
 14666  0A92  01B3               	clrf	_NSTATUS+1	;volatile
 14667  0A93  0008               	return
 14668  0A94                     __end_of_StatusClear:	
 14669  0A94                     __ptext49:	
 14670 ;; *************** function i1_ClearInterrupt *****************
 14671 ;; Defined at:
 14672 ;;		line 66 in file "main.c"
 14673 ;; Parameters:    Size  Location     Type
 14674 ;;		None
 14675 ;; Auto vars:     Size  Location     Type
 14676 ;;		None
 14677 ;; Return value:  Size  Location     Type
 14678 ;;                  1    wreg      void 
 14679 ;; Registers used:
 14680 ;;		None
 14681 ;; Tracked objects:
 14682 ;;		On entry : 1F/0
 14683 ;;		On exit  : 1F/2
 14684 ;;		Unchanged: 0/0
 14685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14690 ;;Total ram usage:        0 bytes
 14691 ;; Hardware stack levels used:    1
 14692 ;; This function calls:
 14693 ;;		Nothing
 14694 ;; This function is called by:
 14695 ;;		_I2C1_StatusCallback
 14696 ;; This function uses a non-reentrant model
 14697 ;;
 14698                           
 14699                           
 14700                           ;psect for function i1_ClearInterrupt
 14701  0A94                     i1_ClearInterrupt:	
 14702                           
 14703                           ;incstack = 0
 14704                           ; Regs used in i1_ClearInterrupt: []
 14705                           ;main.c: 67: do { LATBbits.LATB5 = 1; } while(0);
 14706  0A94  0022               	movlb	2	; select bank2
 14707  0A95  168D               	bsf	13,5	;volatile
 14708  0A96  0008               	return
 14709  0A97                     __end_ofi1_ClearInterrupt:	
 14710  0A97                     __ptext72:	
 14711 ;; *************** function _Int2StatusClear *****************
 14712 ;; Defined at:
 14713 ;;		line 125 in file "DataVariable.c"
 14714 ;; Parameters:    Size  Location     Type
 14715 ;;		None
 14716 ;; Auto vars:     Size  Location     Type
 14717 ;;		None
 14718 ;; Return value:  Size  Location     Type
 14719 ;;                  1    wreg      void 
 14720 ;; Registers used:
 14721 ;;		status,2
 14722 ;; Tracked objects:
 14723 ;;		On entry : 1F/1
 14724 ;;		On exit  : 1F/0
 14725 ;;		Unchanged: 0/0
 14726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14731 ;;Total ram usage:        0 bytes
 14732 ;; Hardware stack levels used:    1
 14733 ;; This function calls:
 14734 ;;		Nothing
 14735 ;; This function is called by:
 14736 ;;		_I2C1_StatusCallback
 14737 ;; This function uses a non-reentrant model
 14738 ;;
 14739                           
 14740                           
 14741                           ;psect for function _Int2StatusClear
 14742  0A97                     _Int2StatusClear:	
 14743                           
 14744                           ;DataVariable.c: 126: SSTATUS = 0;
 14745                           
 14746                           ;incstack = 0
 14747                           ; Regs used in _Int2StatusClear: [status,2]
 14748  0A97  0020               	movlb	0	; select bank0
 14749  0A98  01C5               	clrf	_SSTATUS	;volatile
 14750  0A99  0008               	return
 14751  0A9A                     __end_of_Int2StatusClear:	
 14752  0A9A                     __ptext70:	
 14753 ;; *************** function _RegisterRead *****************
 14754 ;; Defined at:
 14755 ;;		line 288 in file "i2c_register.c"
 14756 ;; Parameters:    Size  Location     Type
 14757 ;;  add             1    wreg     unsigned char 
 14758 ;; Auto vars:     Size  Location     Type
 14759 ;;  add             1    1[COMMON] unsigned char 
 14760 ;;  return_value    1    2[COMMON] unsigned char 
 14761 ;; Return value:  Size  Location     Type
 14762 ;;                  1    wreg      unsigned char 
 14763 ;; Registers used:
 14764 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14765 ;; Tracked objects:
 14766 ;;		On entry : 1F/0
 14767 ;;		On exit  : E/0
 14768 ;;		Unchanged: 0/0
 14769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14771 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14773 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14774 ;;Total ram usage:        2 bytes
 14775 ;; Hardware stack levels used:    1
 14776 ;; Hardware stack levels required when called:    1
 14777 ;; This function calls:
 14778 ;;		_eeprom_read
 14779 ;; This function is called by:
 14780 ;;		_I2C1_StatusCallback
 14781 ;; This function uses a non-reentrant model
 14782 ;;
 14783                           
 14784                           
 14785                           ;psect for function _RegisterRead
 14786  0A9A                     _RegisterRead:	
 14787                           
 14788                           ;incstack = 0
 14789                           ; Regs used in _RegisterRead: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14790                           ;RegisterRead@add stored from wreg
 14791  0A9A  00F1               	movwf	RegisterRead@add
 14792                           
 14793                           ;i2c_register.c: 291: switch (add) {
 14794  0A9B  2AEF               	goto	i1l5278
 14795  0A9C                     i1l5202:	
 14796                           
 14797                           ;i2c_register.c: 293: return_value = GCONF;
 14798  0A9C  0849               	movf	_GCONF,w	;volatile
 14799  0A9D  2AEB               	goto	L43
 14800  0A9E                     i1l5204:	
 14801                           ;i2c_register.c: 294: break;
 14802                           
 14803                           
 14804                           ;i2c_register.c: 297: return_value = GP1CONF;
 14805  0A9E  0848               	movf	_GP1CONF,w	;volatile
 14806  0A9F  2AEB               	goto	L43
 14807  0AA0                     i1l5206:	
 14808                           ;i2c_register.c: 298: break;
 14809                           
 14810                           
 14811                           ;i2c_register.c: 301: return_value = GP2CONF;
 14812  0AA0  0847               	movf	_GP2CONF,w	;volatile
 14813  0AA1  2AEB               	goto	L43
 14814  0AA2                     i1l5208:	
 14815                           ;i2c_register.c: 302: break;
 14816                           
 14817                           
 14818                           ;i2c_register.c: 305: return_value = GP3CONF;
 14819  0AA2  0846               	movf	_GP3CONF,w	;volatile
 14820  0AA3  2AEB               	goto	L43
 14821  0AA4                     i1l5210:	
 14822                           ;i2c_register.c: 306: break;
 14823                           
 14824                           
 14825                           ;i2c_register.c: 309: return_value = INTCONF.bval[1];
 14826  0AA4  0831               	movf	_INTCONF+1,w	;volatile
 14827  0AA5  2AEB               	goto	L43
 14828  0AA6                     i1l5212:	
 14829                           ;i2c_register.c: 310: break;
 14830                           
 14831                           
 14832                           ;i2c_register.c: 313: return_value = INTCONF.bval[0];
 14833  0AA6  0830               	movf	_INTCONF,w	;volatile
 14834  0AA7  2AEB               	goto	L43
 14835  0AA8                     i1l5214:	
 14836                           ;i2c_register.c: 314: break;
 14837                           
 14838                           
 14839                           ;i2c_register.c: 317: return_value = NSTATUS.bval[1];
 14840  0AA8  0833               	movf	_NSTATUS+1,w	;volatile
 14841  0AA9  2AAB               	goto	L17
 14842  0AAA                     i1l5216:	
 14843                           ;i2c_register.c: 319: break;
 14844                           
 14845                           ;i2c_register.c: 318: intclear = 1;
 14846                           
 14847                           
 14848                           ;i2c_register.c: 322: return_value = NSTATUS.bval[0];
 14849  0AAA  0832               	movf	_NSTATUS,w	;volatile
 14850  0AAB                     L17:	
 14851  0AAB  00F2               	movwf	RegisterRead@return_value
 14852                           
 14853                           ;i2c_register.c: 323: intclear = 1;
 14854  0AAC  3001               	movlw	1
 14855  0AAD  0021               	movlb	1	; select bank1
 14856  0AAE  00C5               	movwf	_intclear^(0+128)	;volatile
 14857                           
 14858                           ;i2c_register.c: 324: break;
 14859  0AAF  2AF9               	goto	i1l5280
 14860  0AB0                     i1l5218:	
 14861                           
 14862                           ;i2c_register.c: 327: return_value = SSTATUS;
 14863  0AB0  0845               	movf	_SSTATUS,w	;volatile
 14864  0AB1  00F2               	movwf	RegisterRead@return_value
 14865                           
 14866                           ;i2c_register.c: 328: int2clear = 1;
 14867  0AB2  3001               	movlw	1
 14868  0AB3  0021               	movlb	1	; select bank1
 14869  0AB4  00C4               	movwf	_int2clear^(0+128)	;volatile
 14870                           
 14871                           ;i2c_register.c: 329: break;
 14872  0AB5  2AF9               	goto	i1l5280
 14873  0AB6                     i1l5220:	
 14874                           
 14875                           ;i2c_register.c: 332: return_value = FSTATUS;
 14876  0AB6  0844               	movf	_FSTATUS,w	;volatile
 14877  0AB7  2AEB               	goto	L43
 14878  0AB8                     i1l5222:	
 14879                           ;i2c_register.c: 333: break;
 14880                           
 14881                           
 14882                           ;i2c_register.c: 337: return_value = CVAL.bval[3];
 14883  0AB8  082F               	movf	_CVAL+3,w	;volatile
 14884  0AB9  2AEB               	goto	L43
 14885  0ABA                     i1l5224:	
 14886                           ;i2c_register.c: 338: break;
 14887                           
 14888                           
 14889                           ;i2c_register.c: 340: return_value = CVAL.bval[2];
 14890  0ABA  082E               	movf	_CVAL+2,w	;volatile
 14891  0ABB  2AEB               	goto	L43
 14892  0ABC                     i1l5226:	
 14893                           ;i2c_register.c: 341: break;
 14894                           
 14895                           
 14896                           ;i2c_register.c: 343: return_value = CVAL.bval[1];
 14897  0ABC  082D               	movf	_CVAL+1,w	;volatile
 14898  0ABD  2AEB               	goto	L43
 14899  0ABE                     i1l5228:	
 14900                           ;i2c_register.c: 344: break;
 14901                           
 14902                           
 14903                           ;i2c_register.c: 346: return_value = CVAL.bval[0];
 14904  0ABE  082C               	movf	_CVAL,w	;volatile
 14905  0ABF  2AEB               	goto	L43
 14906  0AC0                     i1l5230:	
 14907                           ;i2c_register.c: 347: break;
 14908                           
 14909                           
 14910                           ;i2c_register.c: 351: return_value = CMAX.bval[3];
 14911  0AC0  082B               	movf	_CMAX+3,w	;volatile
 14912  0AC1  2AEB               	goto	L43
 14913  0AC2                     i1l5232:	
 14914                           ;i2c_register.c: 352: break;
 14915                           
 14916                           
 14917                           ;i2c_register.c: 354: return_value = CMAX.bval[2];
 14918  0AC2  082A               	movf	_CMAX+2,w	;volatile
 14919  0AC3  2AEB               	goto	L43
 14920  0AC4                     i1l5234:	
 14921                           ;i2c_register.c: 355: break;
 14922                           
 14923                           
 14924                           ;i2c_register.c: 357: return_value = CMAX.bval[1];
 14925  0AC4  0829               	movf	_CMAX+1,w	;volatile
 14926  0AC5  2AEB               	goto	L43
 14927  0AC6                     i1l5236:	
 14928                           ;i2c_register.c: 358: break;
 14929                           
 14930                           
 14931                           ;i2c_register.c: 360: return_value = CMAX.bval[0];
 14932  0AC6  0828               	movf	_CMAX,w	;volatile
 14933  0AC7  2AEB               	goto	L43
 14934  0AC8                     i1l5238:	
 14935                           ;i2c_register.c: 361: break;
 14936                           
 14937                           
 14938                           ;i2c_register.c: 365: return_value = CMIN.bval[3];
 14939  0AC8  0827               	movf	_CMIN+3,w	;volatile
 14940  0AC9  2AEB               	goto	L43
 14941  0ACA                     i1l5240:	
 14942                           ;i2c_register.c: 366: break;
 14943                           
 14944                           
 14945                           ;i2c_register.c: 368: return_value = CMIN.bval[2];
 14946  0ACA  0826               	movf	_CMIN+2,w	;volatile
 14947  0ACB  2AEB               	goto	L43
 14948  0ACC                     i1l5242:	
 14949                           ;i2c_register.c: 369: break;
 14950                           
 14951                           
 14952                           ;i2c_register.c: 371: return_value = CMIN.bval[1];
 14953  0ACC  0825               	movf	_CMIN+1,w	;volatile
 14954  0ACD  2AEB               	goto	L43
 14955  0ACE                     i1l5244:	
 14956                           ;i2c_register.c: 372: break;
 14957                           
 14958                           
 14959                           ;i2c_register.c: 374: return_value = CMIN.bval[0];
 14960  0ACE  0824               	movf	_CMIN,w	;volatile
 14961  0ACF  2AEB               	goto	L43
 14962  0AD0                     i1l5246:	
 14963                           ;i2c_register.c: 375: break;
 14964                           
 14965                           
 14966                           ;i2c_register.c: 379: return_value = ISTEP.bval[3];
 14967  0AD0  0823               	movf	_ISTEP+3,w	;volatile
 14968  0AD1  2AEB               	goto	L43
 14969  0AD2                     i1l5248:	
 14970                           ;i2c_register.c: 380: break;
 14971                           
 14972                           
 14973                           ;i2c_register.c: 382: return_value = ISTEP.bval[2];
 14974  0AD2  0822               	movf	_ISTEP+2,w	;volatile
 14975  0AD3  2AEB               	goto	L43
 14976  0AD4                     i1l5250:	
 14977                           ;i2c_register.c: 383: break;
 14978                           
 14979                           
 14980                           ;i2c_register.c: 385: return_value = ISTEP.bval[1];
 14981  0AD4  0821               	movf	_ISTEP+1,w	;volatile
 14982  0AD5  2AEB               	goto	L43
 14983  0AD6                     i1l5252:	
 14984                           ;i2c_register.c: 386: break;
 14985                           
 14986                           
 14987                           ;i2c_register.c: 388: return_value = ISTEP.bval[0];
 14988  0AD6  0820               	movf	_ISTEP,w	;volatile
 14989  0AD7  2AEB               	goto	L43
 14990  0AD8                     i1l5254:	
 14991                           ;i2c_register.c: 389: break;
 14992                           
 14993                           
 14994                           ;i2c_register.c: 392: return_value = GP1REG;
 14995  0AD8  0843               	movf	_GP1REG,w	;volatile
 14996  0AD9  2AEB               	goto	L43
 14997  0ADA                     i1l5256:	
 14998                           ;i2c_register.c: 393: break;
 14999                           
 15000                           
 15001                           ;i2c_register.c: 396: return_value = GP2REG;
 15002  0ADA  0842               	movf	_GP2REG,w	;volatile
 15003  0ADB  2AEB               	goto	L43
 15004  0ADC                     i1l5258:	
 15005                           ;i2c_register.c: 397: break;
 15006                           
 15007                           
 15008                           ;i2c_register.c: 400: return_value = GP3REG;
 15009  0ADC  0841               	movf	_GP3REG,w	;volatile
 15010  0ADD  2AEB               	goto	L43
 15011  0ADE                     i1l5260:	
 15012                           ;i2c_register.c: 401: break;
 15013                           
 15014                           
 15015                           ;i2c_register.c: 404: return_value = DPPERIOD;
 15016  0ADE  0840               	movf	_DPPERIOD,w	;volatile
 15017  0ADF  2AEB               	goto	L43
 15018  0AE0                     i1l5262:	
 15019                           ;i2c_register.c: 405: break;
 15020                           
 15021                           
 15022                           ;i2c_register.c: 408: return_value = FADEGP;
 15023  0AE0  083F               	movf	_FADEGP,w	;volatile
 15024  0AE1  2AEB               	goto	L43
 15025  0AE2                     i1l5264:	
 15026                           ;i2c_register.c: 409: break;
 15027                           
 15028                           
 15029                           ;i2c_register.c: 412: return_value = GAMMAGP1;
 15030  0AE2  083E               	movf	_GAMMAGP1,w	;volatile
 15031  0AE3  2AEB               	goto	L43
 15032  0AE4                     i1l5266:	
 15033                           ;i2c_register.c: 413: break;
 15034                           
 15035                           
 15036                           ;i2c_register.c: 416: return_value = GAMMAGP2;
 15037  0AE4  083D               	movf	_GAMMAGP2,w	;volatile
 15038  0AE5  2AEB               	goto	L43
 15039  0AE6                     i1l5268:	
 15040                           ;i2c_register.c: 417: break;
 15041                           
 15042                           
 15043                           ;i2c_register.c: 420: return_value = GAMMAGP3;
 15044  0AE6  083C               	movf	_GAMMAGP3,w	;volatile
 15045  0AE7  2AEB               	goto	L43
 15046  0AE8                     i1l5270:	
 15047                           ;i2c_register.c: 421: break;
 15048                           
 15049                           
 15050                           ;i2c_register.c: 424: return_value = 0x5B;
 15051  0AE8  305B               	movlw	91
 15052  0AE9  2AEB               	goto	L43
 15053  0AEA                     i1l5272:	
 15054                           ;i2c_register.c: 425: break;
 15055                           
 15056                           
 15057                           ;i2c_register.c: 428: return_value = 0x12;
 15058  0AEA  3012               	movlw	18
 15059  0AEB                     L43:	
 15060  0AEB  00F2               	movwf	RegisterRead@return_value
 15061                           
 15062                           ;i2c_register.c: 429: break;
 15063  0AEC  2AF9               	goto	i1l5280
 15064  0AED                     i1l5274:	
 15065                           
 15066                           ;i2c_register.c: 432: return_value = 0;
 15067  0AED  01F2               	clrf	RegisterRead@return_value
 15068                           
 15069                           ;i2c_register.c: 433: break;
 15070  0AEE  2AF9               	goto	i1l5280
 15071  0AEF                     i1l5278:	
 15072  0AEF  0871               	movf	RegisterRead@add,w
 15073                           
 15074                           ; Switch size 1, requested type "speed"
 15075                           ; Number of cases is 36, Range of values is 0 to 113
 15076                           ; switch strategies available:
 15077                           ; Name         Instructions Cycles
 15078                           ; direct_byte          234     6 (fixed)
 15079                           ; simple_byte          109    55 (average)
 15080                           ; jumptable            260     6 (fixed)
 15081                           ;	Chosen strategy is direct_byte
 15082  0AF0  0084               	movwf	4
 15083  0AF1  3072               	movlw	114
 15084  0AF2  0204               	subwf	4,w
 15085  0AF3  1803               	skipnc
 15086  0AF4  2AED               	goto	i1l5274
 15087  0AF5  3190               	movlp	high i1S7868
 15088  0AF6  3504               	lslf	4,w
 15089  0AF7  3E00               	addlw	low i1S7868
 15090  0AF8  0082               	movwf	2
 15091  0AF9                     i1l5280:	
 15092                           
 15093                           ;i2c_register.c: 436: if (add >= REG_EEPROMS) {
 15094  0AF9  3080               	movlw	128
 15095  0AFA  0271               	subwf	RegisterRead@add,w
 15096  0AFB  1C03               	skipc
 15097  0AFC  2B07               	goto	i1l5288
 15098                           
 15099                           ;i2c_register.c: 437: if (C_MBANK == 0) {
 15100  0AFD  0020               	movlb	0	; select bank0
 15101  0AFE  083B               	movf	_C_MBANK,w	;volatile
 15102  0AFF  1D03               	btfss	3,2
 15103  0B00  2B04               	goto	i1l5286
 15104                           
 15105                           ;i2c_register.c: 438: return_value = eeprom_read((uint8_t) (add - REG_EEPROMS));
 15106  0B01  0871               	movf	RegisterRead@add,w
 15107  0B02  3E80               	addlw	128
 15108  0B03  2B05               	goto	L44
 15109  0B04                     i1l5286:	
 15110                           ;i2c_register.c: 439: } else {
 15111                           
 15112                           
 15113                           ;i2c_register.c: 440: return_value = eeprom_read(add);
 15114  0B04  0871               	movf	RegisterRead@add,w
 15115  0B05                     L44:	
 15116  0B05  2309               	fcall	_eeprom_read
 15117  0B06  00F2               	movwf	RegisterRead@return_value
 15118  0B07                     i1l5288:	
 15119                           
 15120                           ;i2c_register.c: 441: };i2c_register.c: 442: };i2c_register.c: 443: return return_value;
 15121  0B07  0872               	movf	RegisterRead@return_value,w
 15122  0B08  0008               	return
 15123  0B09                     __end_of_RegisterRead:	
 15124  0B09                     __ptext71:	
 15125 ;; *************** function _eeprom_read *****************
 15126 ;; Defined at:
 15127 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\pic\__eeread.c"
 15128 ;; Parameters:    Size  Location     Type
 15129 ;;  addr            1    wreg     unsigned char 
 15130 ;; Auto vars:     Size  Location     Type
 15131 ;;  addr            1    0[COMMON] unsigned char 
 15132 ;; Return value:  Size  Location     Type
 15133 ;;                  1    wreg      unsigned char 
 15134 ;; Registers used:
 15135 ;;		wreg
 15136 ;; Tracked objects:
 15137 ;;		On entry : 1F/0
 15138 ;;		On exit  : 1F/11
 15139 ;;		Unchanged: 0/0
 15140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15142 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15144 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15145 ;;Total ram usage:        1 bytes
 15146 ;; Hardware stack levels used:    1
 15147 ;; This function calls:
 15148 ;;		Nothing
 15149 ;; This function is called by:
 15150 ;;		_RegisterRead
 15151 ;; This function uses a non-reentrant model
 15152 ;;
 15153                           
 15154                           
 15155                           ;psect for function _eeprom_read
 15156  0B09                     _eeprom_read:	
 15157                           
 15158                           ;incstack = 0
 15159                           ; Regs used in _eeprom_read: [wreg]
 15160                           ;eeprom_read@addr stored from wreg
 15161  0B09  00F0               	movwf	eeprom_read@addr
 15162  0B0A  2B0C               	goto	i1l1557
 15163  0B0B                     u241_21:	
 15164  0B0B  0020               	movlb	0	; select bank0
 15165  0B0C                     i1l1557:	
 15166                           ;__eeread.c: 8: do
 15167                           
 15168  0B0C  0064               	clrwdt	;# 
 15169                           
 15170                           ;__eeread.c: 14: while (NVMCON1bits.WR);
 15171  0B0D  0031               	movlb	17	; select bank17
 15172  0B0E  1895               	btfsc	21,1	;volsfr
 15173  0B0F  2B0B               	goto	u241_21
 15174                           
 15175                           ;__eeread.c: 18: return ( NVMCON1bits.NVMREGS = 1, NVMADRL = (addr) & 0xFFU, NVMADRH = 0
      +                          x70, NVMCON1bits.RD = 1, NVMDATL);
 15176  0B10  1715               	bsf	21,6	;volsfr
 15177  0B11  0870               	movf	eeprom_read@addr,w
 15178  0B12  0091               	movwf	17	;volatile
 15179  0B13  3070               	movlw	112
 15180  0B14  0092               	movwf	18	;volatile
 15181  0B15  1415               	bsf	21,0	;volsfr
 15182  0B16  0813               	movf	19,w	;volatile
 15183  0B17  0008               	return
 15184  0B18                     __end_of_eeprom_read:	
 15185                           
 15186                           	psect	swtext5
 15187  11BC                     __pswtext5:	
 15188  11BC                     i1S7846:	
 15189  11BC  318A  2A51         	ljmp	i1l754
 15190  11BE  318A  2A6F         	ljmp	i1l5704
 15191  11C0  318A  2A63         	ljmp	i1l5700
 15192  11C2  318A  2A76         	ljmp	i1l5708
 15193                           
 15194                           	psect	text51
 15195  0C06                     __ptext51:	
 15196 ;; *************** function _RegisterWrite *****************
 15197 ;; Defined at:
 15198 ;;		line 126 in file "i2c_register.c"
 15199 ;; Parameters:    Size  Location     Type
 15200 ;;  add             1    wreg     unsigned char 
 15201 ;;  data            1    3[BANK0 ] unsigned char 
 15202 ;; Auto vars:     Size  Location     Type
 15203 ;;  add             1    4[BANK0 ] unsigned char 
 15204 ;; Return value:  Size  Location     Type
 15205 ;;                  1    wreg      void 
 15206 ;; Registers used:
 15207 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15208 ;; Tracked objects:
 15209 ;;		On entry : 1F/0
 15210 ;;		On exit  : E/0
 15211 ;;		Unchanged: 0/0
 15212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15213 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15214 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15216 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15217 ;;Total ram usage:        2 bytes
 15218 ;; Hardware stack levels used:    1
 15219 ;; Hardware stack levels required when called:    3
 15220 ;; This function calls:
 15221 ;;		_Config_GP1
 15222 ;;		_Config_GP2
 15223 ;;		_Config_GP3
 15224 ;;		_GeneralDataSet
 15225 ;;		_GeneralDataSplit
 15226 ;;		_UpdateOut_GP1
 15227 ;;		_UpdateOut_GP2
 15228 ;;		_UpdateOut_GP3
 15229 ;;		_eeprom_write
 15230 ;;		i1___wmul
 15231 ;; This function is called by:
 15232 ;;		_I2C1_StatusCallback
 15233 ;; This function uses a non-reentrant model
 15234 ;;
 15235                           
 15236                           
 15237                           ;psect for function _RegisterWrite
 15238  0C06                     _RegisterWrite:	
 15239                           
 15240                           ;incstack = 0
 15241                           ; Regs used in _RegisterWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15242                           ;RegisterWrite@add stored from wreg
 15243  0C06  00CE               	movwf	RegisterWrite@add
 15244                           
 15245                           ;i2c_register.c: 128: switch (add) {
 15246  0C07  2CB1               	goto	i1l5184
 15247  0C08                     i1l5088:	
 15248                           
 15249                           ;i2c_register.c: 130: GCONF = data;
 15250  0C08  084D               	movf	RegisterWrite@data,w
 15251  0C09  00C9               	movwf	_GCONF	;volatile
 15252                           
 15253                           ;i2c_register.c: 131: GeneralDataSplit();
 15254  0C0A  27C6               	fcall	_GeneralDataSplit
 15255                           
 15256                           ;i2c_register.c: 132: GeneralDataSet();
 15257  0C0B  3189  21CD  318C   	fcall	_GeneralDataSet
 15258                           
 15259                           ;i2c_register.c: 133: break;
 15260  0C0E  2CBB               	goto	i1l5186
 15261  0C0F                     i1l5094:	
 15262                           
 15263                           ;i2c_register.c: 136: GP1CONF = data;
 15264  0C0F  084D               	movf	RegisterWrite@data,w
 15265  0C10  00C8               	movwf	_GP1CONF	;volatile
 15266                           
 15267                           ;i2c_register.c: 137: Config_GP1();
 15268  0C11  24CE  318C         	fcall	_Config_GP1
 15269                           
 15270                           ;i2c_register.c: 138: break;
 15271  0C13  2CBB               	goto	i1l5186
 15272  0C14                     i1l5098:	
 15273                           
 15274                           ;i2c_register.c: 141: GP2CONF = data;
 15275  0C14  084D               	movf	RegisterWrite@data,w
 15276  0C15  00C7               	movwf	_GP2CONF	;volatile
 15277                           
 15278                           ;i2c_register.c: 142: Config_GP2();
 15279  0C16  26D5  318C         	fcall	_Config_GP2
 15280                           
 15281                           ;i2c_register.c: 143: break;
 15282  0C18  2CBB               	goto	i1l5186
 15283  0C19                     i1l5102:	
 15284                           
 15285                           ;i2c_register.c: 146: GP3CONF = data;
 15286  0C19  084D               	movf	RegisterWrite@data,w
 15287  0C1A  00C6               	movwf	_GP3CONF	;volatile
 15288                           
 15289                           ;i2c_register.c: 147: Config_GP3();
 15290  0C1B  274D  318C         	fcall	_Config_GP3
 15291                           
 15292                           ;i2c_register.c: 148: break;
 15293  0C1D  2CBB               	goto	i1l5186
 15294  0C1E                     i1l5106:	
 15295                           
 15296                           ;i2c_register.c: 151: INTCONF.bval[1] = data;
 15297  0C1E  084D               	movf	RegisterWrite@data,w
 15298  0C1F  00B1               	movwf	_INTCONF+1	;volatile
 15299                           
 15300                           ;i2c_register.c: 152: break;
 15301  0C20  2CBB               	goto	i1l5186
 15302  0C21                     i1l5108:	
 15303                           
 15304                           ;i2c_register.c: 155: INTCONF.bval[0] = data;
 15305  0C21  084D               	movf	RegisterWrite@data,w
 15306  0C22  00B0               	movwf	_INTCONF	;volatile
 15307                           
 15308                           ;i2c_register.c: 156: break;
 15309  0C23  2CBB               	goto	i1l5186
 15310  0C24                     i1l5110:	
 15311                           
 15312                           ;i2c_register.c: 160: CVAL.bval[3] = data;
 15313  0C24  084D               	movf	RegisterWrite@data,w
 15314  0C25  00AF               	movwf	_CVAL+3	;volatile
 15315                           
 15316                           ;i2c_register.c: 161: break;
 15317  0C26  2CBB               	goto	i1l5186
 15318  0C27                     i1l5112:	
 15319                           
 15320                           ;i2c_register.c: 163: CVAL.bval[2] = data;
 15321  0C27  084D               	movf	RegisterWrite@data,w
 15322  0C28  00AE               	movwf	_CVAL+2	;volatile
 15323                           
 15324                           ;i2c_register.c: 164: break;
 15325  0C29  2CBB               	goto	i1l5186
 15326  0C2A                     i1l5114:	
 15327                           
 15328                           ;i2c_register.c: 166: CVAL.bval[1] = data;
 15329  0C2A  084D               	movf	RegisterWrite@data,w
 15330  0C2B  00AD               	movwf	_CVAL+1	;volatile
 15331                           
 15332                           ;i2c_register.c: 167: break;
 15333  0C2C  2CBB               	goto	i1l5186
 15334  0C2D                     i1l5116:	
 15335                           
 15336                           ;i2c_register.c: 169: CVAL.bval[0] = data;
 15337  0C2D  084D               	movf	RegisterWrite@data,w
 15338  0C2E  00AC               	movwf	_CVAL	;volatile
 15339                           
 15340                           ;i2c_register.c: 170: break;
 15341  0C2F  2CBB               	goto	i1l5186
 15342  0C30                     i1l5118:	
 15343                           
 15344                           ;i2c_register.c: 174: CMAX.bval[3] = data;
 15345  0C30  084D               	movf	RegisterWrite@data,w
 15346  0C31  00AB               	movwf	_CMAX+3	;volatile
 15347                           
 15348                           ;i2c_register.c: 175: break;
 15349  0C32  2CBB               	goto	i1l5186
 15350  0C33                     i1l5120:	
 15351                           
 15352                           ;i2c_register.c: 177: CMAX.bval[2] = data;
 15353  0C33  084D               	movf	RegisterWrite@data,w
 15354  0C34  00AA               	movwf	_CMAX+2	;volatile
 15355                           
 15356                           ;i2c_register.c: 178: break;
 15357  0C35  2CBB               	goto	i1l5186
 15358  0C36                     i1l5122:	
 15359                           
 15360                           ;i2c_register.c: 180: CMAX.bval[1] = data;
 15361  0C36  084D               	movf	RegisterWrite@data,w
 15362  0C37  00A9               	movwf	_CMAX+1	;volatile
 15363                           
 15364                           ;i2c_register.c: 181: break;
 15365  0C38  2CBB               	goto	i1l5186
 15366  0C39                     i1l5124:	
 15367                           
 15368                           ;i2c_register.c: 183: CMAX.bval[0] = data;
 15369  0C39  084D               	movf	RegisterWrite@data,w
 15370  0C3A  00A8               	movwf	_CMAX	;volatile
 15371                           
 15372                           ;i2c_register.c: 184: break;
 15373  0C3B  2CBB               	goto	i1l5186
 15374  0C3C                     i1l5126:	
 15375                           
 15376                           ;i2c_register.c: 188: CMIN.bval[3] = data;
 15377  0C3C  084D               	movf	RegisterWrite@data,w
 15378  0C3D  00A7               	movwf	_CMIN+3	;volatile
 15379                           
 15380                           ;i2c_register.c: 189: break;
 15381  0C3E  2CBB               	goto	i1l5186
 15382  0C3F                     i1l5128:	
 15383                           
 15384                           ;i2c_register.c: 191: CMIN.bval[2] = data;
 15385  0C3F  084D               	movf	RegisterWrite@data,w
 15386  0C40  00A6               	movwf	_CMIN+2	;volatile
 15387                           
 15388                           ;i2c_register.c: 192: break;
 15389  0C41  2CBB               	goto	i1l5186
 15390  0C42                     i1l5130:	
 15391                           
 15392                           ;i2c_register.c: 194: CMIN.bval[1] = data;
 15393  0C42  084D               	movf	RegisterWrite@data,w
 15394  0C43  00A5               	movwf	_CMIN+1	;volatile
 15395                           
 15396                           ;i2c_register.c: 195: break;
 15397  0C44  2CBB               	goto	i1l5186
 15398  0C45                     i1l5132:	
 15399                           
 15400                           ;i2c_register.c: 197: CMIN.bval[0] = data;
 15401  0C45  084D               	movf	RegisterWrite@data,w
 15402  0C46  00A4               	movwf	_CMIN	;volatile
 15403                           
 15404                           ;i2c_register.c: 198: break;
 15405  0C47  2CBB               	goto	i1l5186
 15406  0C48                     i1l5134:	
 15407                           
 15408                           ;i2c_register.c: 202: ISTEP.bval[3] = data;
 15409  0C48  084D               	movf	RegisterWrite@data,w
 15410  0C49  00A3               	movwf	_ISTEP+3	;volatile
 15411                           
 15412                           ;i2c_register.c: 203: break;
 15413  0C4A  2CBB               	goto	i1l5186
 15414  0C4B                     i1l5136:	
 15415                           
 15416                           ;i2c_register.c: 205: ISTEP.bval[2] = data;
 15417  0C4B  084D               	movf	RegisterWrite@data,w
 15418  0C4C  00A2               	movwf	_ISTEP+2	;volatile
 15419                           
 15420                           ;i2c_register.c: 206: break;
 15421  0C4D  2CBB               	goto	i1l5186
 15422  0C4E                     i1l5138:	
 15423                           
 15424                           ;i2c_register.c: 208: ISTEP.bval[1] = data;
 15425  0C4E  084D               	movf	RegisterWrite@data,w
 15426  0C4F  00A1               	movwf	_ISTEP+1	;volatile
 15427                           
 15428                           ;i2c_register.c: 209: break;
 15429  0C50  2CBB               	goto	i1l5186
 15430  0C51                     i1l5140:	
 15431                           
 15432                           ;i2c_register.c: 211: ISTEP.bval[0] = data;
 15433  0C51  084D               	movf	RegisterWrite@data,w
 15434  0C52  00A0               	movwf	_ISTEP	;volatile
 15435                           
 15436                           ;i2c_register.c: 212: break;
 15437  0C53  2CBB               	goto	i1l5186
 15438  0C54                     i1l5142:	
 15439                           
 15440                           ;i2c_register.c: 216: GP1REG = data;
 15441  0C54  084D               	movf	RegisterWrite@data,w
 15442  0C55  00C3               	movwf	_GP1REG	;volatile
 15443                           
 15444                           ;i2c_register.c: 217: if (GP1REG > 100)
 15445  0C56  3065               	movlw	101
 15446  0C57  0243               	subwf	_GP1REG,w	;volatile
 15447  0C58  1C03               	skipc
 15448  0C59  2C5C               	goto	i1l5146
 15449                           
 15450                           ;i2c_register.c: 218: GP1REG = 100;
 15451  0C5A  3064               	movlw	100
 15452  0C5B  00C3               	movwf	_GP1REG	;volatile
 15453  0C5C                     i1l5146:	
 15454                           
 15455                           ;i2c_register.c: 219: UpdateOut_GP1();
 15456  0C5C  3191  2198  318C   	fcall	_UpdateOut_GP1
 15457                           
 15458                           ;i2c_register.c: 220: break;
 15459  0C5F  2CBB               	goto	i1l5186
 15460  0C60                     i1l5148:	
 15461                           
 15462                           ;i2c_register.c: 223: GP2REG = data;
 15463  0C60  084D               	movf	RegisterWrite@data,w
 15464  0C61  00C2               	movwf	_GP2REG	;volatile
 15465                           
 15466                           ;i2c_register.c: 224: if (GP2REG > 100)
 15467  0C62  3065               	movlw	101
 15468  0C63  0242               	subwf	_GP2REG,w	;volatile
 15469  0C64  1C03               	skipc
 15470  0C65  2C68               	goto	i1l5152
 15471                           
 15472                           ;i2c_register.c: 225: GP2REG = 100;
 15473  0C66  3064               	movlw	100
 15474  0C67  00C2               	movwf	_GP2REG	;volatile
 15475  0C68                     i1l5152:	
 15476                           
 15477                           ;i2c_register.c: 226: UpdateOut_GP2();
 15478  0C68  3191  217C  318C   	fcall	_UpdateOut_GP2
 15479                           
 15480                           ;i2c_register.c: 227: break;
 15481  0C6B  2CBB               	goto	i1l5186
 15482  0C6C                     i1l5154:	
 15483                           
 15484                           ;i2c_register.c: 230: GP3REG = data;
 15485  0C6C  084D               	movf	RegisterWrite@data,w
 15486  0C6D  00C1               	movwf	_GP3REG	;volatile
 15487                           
 15488                           ;i2c_register.c: 231: if (GP3REG > 100)
 15489  0C6E  3065               	movlw	101
 15490  0C6F  0241               	subwf	_GP3REG,w	;volatile
 15491  0C70  1C03               	skipc
 15492  0C71  2C74               	goto	i1l5158
 15493                           
 15494                           ;i2c_register.c: 232: GP3REG = 100;
 15495  0C72  3064               	movlw	100
 15496  0C73  00C1               	movwf	_GP3REG	;volatile
 15497  0C74                     i1l5158:	
 15498                           
 15499                           ;i2c_register.c: 233: UpdateOut_GP3();
 15500  0C74  3191  2160  318C   	fcall	_UpdateOut_GP3
 15501                           
 15502                           ;i2c_register.c: 234: break;
 15503  0C77  2CBB               	goto	i1l5186
 15504  0C78                     i1l5160:	
 15505                           
 15506                           ;i2c_register.c: 239: DPPERIOD = data;
 15507  0C78  084D               	movf	RegisterWrite@data,w
 15508  0C79  00C0               	movwf	_DPPERIOD	;volatile
 15509                           
 15510                           ;i2c_register.c: 240: DoublePush = ((uint16_t) DPPERIOD * 10);
 15511  0C7A  0840               	movf	_DPPERIOD,w	;volatile
 15512  0C7B  00F0               	movwf	i1___wmul@multiplier
 15513  0C7C  300A               	movlw	10
 15514  0C7D  01F1               	clrf	i1___wmul@multiplier+1
 15515  0C7E  00F2               	movwf	i1___wmul@multiplicand
 15516  0C7F  01F3               	clrf	i1___wmul@multiplicand+1
 15517  0C80  26B4  318C         	fcall	i1___wmul
 15518  0C82  0871               	movf	?i1___wmul+1,w
 15519  0C83  0021               	movlb	1	; select bank1
 15520  0C84  00B4               	movwf	(_DoublePush+1)^(0+128)	;volatile
 15521  0C85  0870               	movf	?i1___wmul,w
 15522  0C86  00B3               	movwf	_DoublePush^(0+128)	;volatile
 15523                           
 15524                           ;i2c_register.c: 241: if (DoublePush > 5) {
 15525  0C87  3000               	movlw	0
 15526  0C88  0234               	subwf	(_DoublePush+1)^(0+128),w	;volatile
 15527  0C89  3006               	movlw	6
 15528  0C8A  1903               	skipnz
 15529  0C8B  0233               	subwf	_DoublePush^(0+128),w	;volatile
 15530  0C8C  1C03               	skipc
 15531  0C8D  2CBB               	goto	i1l5186
 15532                           
 15533                           ;i2c_register.c: 242: DoublePush = DoublePush - 5;
 15534  0C8E  30FB               	movlw	251
 15535  0C8F  07B3               	addwf	_DoublePush^(0+128),f	;volatile
 15536  0C90  30FF               	movlw	255
 15537  0C91  3DB4               	addwfc	(_DoublePush+1)^(0+128),f	;volatile
 15538  0C92  2CBB               	goto	i1l5186
 15539  0C93                     i1l5168:	
 15540                           
 15541                           ;i2c_register.c: 247: FADEGP = data;
 15542  0C93  084D               	movf	RegisterWrite@data,w
 15543  0C94  00BF               	movwf	_FADEGP	;volatile
 15544                           
 15545                           ;i2c_register.c: 248: break;
 15546  0C95  2CBB               	goto	i1l5186
 15547  0C96                     i1l5170:	
 15548                           
 15549                           ;i2c_register.c: 251: GAMMAGP1 = data;
 15550  0C96  084D               	movf	RegisterWrite@data,w
 15551  0C97  00BE               	movwf	_GAMMAGP1	;volatile
 15552                           
 15553                           ;i2c_register.c: 252: if (GAMMAGP1 > 7) {
 15554  0C98  3008               	movlw	8
 15555  0C99  023E               	subwf	_GAMMAGP1,w	;volatile
 15556  0C9A  1C03               	skipc
 15557  0C9B  2CBB               	goto	i1l5186
 15558                           
 15559                           ;i2c_register.c: 253: GAMMAGP1 = 7;
 15560  0C9C  3007               	movlw	7
 15561  0C9D  00BE               	movwf	_GAMMAGP1	;volatile
 15562  0C9E  2CBB               	goto	i1l5186
 15563  0C9F                     i1l5174:	
 15564                           
 15565                           ;i2c_register.c: 257: GAMMAGP2 = data;
 15566  0C9F  084D               	movf	RegisterWrite@data,w
 15567  0CA0  00BD               	movwf	_GAMMAGP2	;volatile
 15568                           
 15569                           ;i2c_register.c: 258: if (GAMMAGP2 > 7) {
 15570  0CA1  3008               	movlw	8
 15571  0CA2  023D               	subwf	_GAMMAGP2,w	;volatile
 15572  0CA3  1C03               	skipc
 15573  0CA4  2CBB               	goto	i1l5186
 15574                           
 15575                           ;i2c_register.c: 259: GAMMAGP2 = 7;
 15576  0CA5  3007               	movlw	7
 15577  0CA6  00BD               	movwf	_GAMMAGP2	;volatile
 15578  0CA7  2CBB               	goto	i1l5186
 15579  0CA8                     i1l5178:	
 15580                           
 15581                           ;i2c_register.c: 263: GAMMAGP3 = data;
 15582  0CA8  084D               	movf	RegisterWrite@data,w
 15583  0CA9  00BC               	movwf	_GAMMAGP3	;volatile
 15584                           
 15585                           ;i2c_register.c: 264: if (GAMMAGP3 > 7) {
 15586  0CAA  3008               	movlw	8
 15587  0CAB  023C               	subwf	_GAMMAGP3,w	;volatile
 15588  0CAC  1C03               	skipc
 15589  0CAD  2CBB               	goto	i1l5186
 15590                           
 15591                           ;i2c_register.c: 265: GAMMAGP3 = 7;
 15592  0CAE  3007               	movlw	7
 15593  0CAF  00BC               	movwf	_GAMMAGP3	;volatile
 15594  0CB0  2CBB               	goto	i1l5186
 15595  0CB1                     i1l5184:	
 15596  0CB1  084E               	movf	RegisterWrite@add,w
 15597                           
 15598                           ; Switch size 1, requested type "speed"
 15599                           ; Number of cases is 30, Range of values is 0 to 33
 15600                           ; switch strategies available:
 15601                           ; Name         Instructions Cycles
 15602                           ; direct_byte           74     6 (fixed)
 15603                           ; simple_byte           91    46 (average)
 15604                           ; jumptable            260     6 (fixed)
 15605                           ;	Chosen strategy is direct_byte
 15606  0CB2  0084               	movwf	4
 15607  0CB3  3022               	movlw	34
 15608  0CB4  0204               	subwf	4,w
 15609  0CB5  1803               	skipnc
 15610  0CB6  2CBB               	goto	i1l5186
 15611  0CB7  3191               	movlp	high i1S7848
 15612  0CB8  3504               	lslf	4,w
 15613  0CB9  3E00               	addlw	low i1S7848
 15614  0CBA  0082               	movwf	2
 15615  0CBB                     i1l5186:	
 15616                           
 15617                           ;i2c_register.c: 271: if (add >= REG_EEPROMS) {
 15618  0CBB  3080               	movlw	128
 15619  0CBC  0020               	movlb	0	; select bank0
 15620  0CBD  024E               	subwf	RegisterWrite@add,w
 15621  0CBE  1C03               	skipc
 15622  0CBF  0008               	return
 15623                           
 15624                           ;i2c_register.c: 273: if (C_MBANK == 0) {
 15625  0CC0  083B               	movf	_C_MBANK,w	;volatile
 15626  0CC1  1D03               	btfss	3,2
 15627  0CC2  2CC9               	goto	i1l5192
 15628                           
 15629                           ;i2c_register.c: 274: eeprom_write((uint8_t) (add - REG_EEPROMS), (uint8_t) data);
 15630  0CC3  084D               	movf	RegisterWrite@data,w
 15631  0CC4  00F0               	movwf	eeprom_write@value
 15632  0CC5  084E               	movf	RegisterWrite@add,w
 15633  0CC6  3E80               	addlw	128
 15634  0CC7  3191  2944         	ljmp	_eeprom_write
 15635  0CC9                     i1l5192:	
 15636                           ;i2c_register.c: 276: } else {
 15637                           
 15638                           
 15639                           ;i2c_register.c: 277: eeprom_write((uint8_t) add, (uint8_t) data);
 15640  0CC9  084D               	movf	RegisterWrite@data,w
 15641  0CCA  00F0               	movwf	eeprom_write@value
 15642  0CCB  084E               	movf	RegisterWrite@add,w
 15643  0CCC  3191  2944         	ljmp	_eeprom_write
 15644  0CCE                     __end_of_RegisterWrite:	
 15645  0CCE                     __ptext66:	
 15646 ;; *************** function _Config_GP1 *****************
 15647 ;; Defined at:
 15648 ;;		line 138 in file "GPports.c"
 15649 ;; Parameters:    Size  Location     Type
 15650 ;;		None
 15651 ;; Auto vars:     Size  Location     Type
 15652 ;;		None
 15653 ;; Return value:  Size  Location     Type
 15654 ;;                  1    wreg      void 
 15655 ;; Registers used:
 15656 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15657 ;; Tracked objects:
 15658 ;;		On entry : 1F/0
 15659 ;;		On exit  : 1B/0
 15660 ;;		Unchanged: 0/0
 15661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15664 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15665 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15666 ;;Total ram usage:        2 bytes
 15667 ;; Hardware stack levels used:    1
 15668 ;; Hardware stack levels required when called:    2
 15669 ;; This function calls:
 15670 ;;		_PWM1_Initialize
 15671 ;;		i1_PWM_GP1
 15672 ;; This function is called by:
 15673 ;;		_RegisterWrite
 15674 ;; This function uses a non-reentrant model
 15675 ;;
 15676                           
 15677                           
 15678                           ;psect for function _Config_GP1
 15679  0CCE                     _Config_GP1:	
 15680                           
 15681                           ;GPports.c: 141: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 15682                           
 15683                           ;incstack = 0
 15684                           ; Regs used in _Config_GP1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15685  0CCE  3055               	movlw	85
 15686  0CCF  003C               	movlb	28	; select bank28
 15687  0CD0  008F               	movwf	15	;volsfr
 15688  0CD1  30AA               	movlw	170
 15689  0CD2  008F               	movwf	15	;volsfr
 15690  0CD3  100F               	bcf	15,0	;volsfr
 15691                           
 15692                           ;GPports.c: 142: RC2PPSbits.RC2PPS = 0x00;
 15693  0CD4  30E0               	movlw	-32
 15694  0CD5  003D               	movlb	29	; select bank29
 15695  0CD6  05A2               	andwf	34,f	;volatile
 15696                           
 15697                           ;GPports.c: 143: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 15698  0CD7  3055               	movlw	85
 15699  0CD8  003C               	movlb	28	; select bank28
 15700  0CD9  008F               	movwf	15	;volsfr
 15701  0CDA  30AA               	movlw	170
 15702  0CDB  008F               	movwf	15	;volsfr
 15703  0CDC  140F               	bsf	15,0	;volsfr
 15704                           
 15705                           ;GPports.c: 144: CCP1CON = 0;
 15706  0CDD  0025               	movlb	5	; select bank5
 15707  0CDE  0193               	clrf	19	;volatile
 15708                           
 15709                           ;GPports.c: 146: switch (GP1CONF & 0x03) {
 15710  0CDF  2D0D               	goto	i1l4674
 15711  0CE0                     i1l998:	
 15712                           ;GPports.c: 148: do { ANSELCbits.ANSC2 = 0; } while(0);
 15713                           
 15714  0CE0  0023               	movlb	3	; select bank3
 15715  0CE1  110E               	bcf	14,2	;volatile
 15716                           
 15717                           ;GPports.c: 149: do { LATCbits.LATC2 = 1; } while(0);
 15718  0CE2  0022               	movlb	2	; select bank2
 15719  0CE3  150E               	bsf	14,2	;volatile
 15720                           
 15721                           ;GPports.c: 150: do { TRISCbits.TRISC2 = 0; } while(0);
 15722  0CE4  0021               	movlb	1	; select bank1
 15723  0CE5  110E               	bcf	14,2	;volatile
 15724                           
 15725                           ;GPports.c: 151: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 15726  0CE6  3055               	movlw	85
 15727  0CE7  003C               	movlb	28	; select bank28
 15728  0CE8  008F               	movwf	15	;volsfr
 15729  0CE9  30AA               	movlw	170
 15730  0CEA  008F               	movwf	15	;volsfr
 15731  0CEB  100F               	bcf	15,0	;volsfr
 15732                           
 15733                           ;GPports.c: 152: RC2PPSbits.RC2PPS = 0x0C;
 15734  0CEC  003D               	movlb	29	; select bank29
 15735  0CED  0822               	movf	34,w	;volatile
 15736  0CEE  39E0               	andlw	-32
 15737  0CEF  380C               	iorlw	12
 15738  0CF0  00A2               	movwf	34	;volatile
 15739                           
 15740                           ;GPports.c: 153: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 15741  0CF1  3055               	movlw	85
 15742  0CF2  003C               	movlb	28	; select bank28
 15743  0CF3  008F               	movwf	15	;volsfr
 15744  0CF4  30AA               	movlw	170
 15745  0CF5  008F               	movwf	15	;volsfr
 15746  0CF6  140F               	bsf	15,0	;volsfr
 15747                           
 15748                           ;GPports.c: 154: PWM1_Initialize();
 15749  0CF7  26C9  318C         	fcall	_PWM1_Initialize
 15750                           
 15751                           ;GPports.c: 155: PWM_GP1(0);
 15752  0CF9  3000               	movlw	0
 15753  0CFA  2636  318C         	fcall	i1_PWM_GP1
 15754                           
 15755                           ;GPports.c: 156: break;
 15756  0CFC  2D27               	goto	i1l4678
 15757  0CFD                     i1l1006:	
 15758                           ;GPports.c: 159: do { ANSELCbits.ANSC2 = 0; } while(0);
 15759                           
 15760  0CFD  0023               	movlb	3	; select bank3
 15761  0CFE  110E               	bcf	14,2	;volatile
 15762                           
 15763                           ;GPports.c: 160: do { TRISCbits.TRISC2 = 0; } while(0);
 15764  0CFF  0021               	movlb	1	; select bank1
 15765  0D00  110E               	bcf	14,2	;volatile
 15766                           
 15767                           ;GPports.c: 161: do { ODCONCbits.ODCC2 = 0; } while(0);
 15768  0D01  0025               	movlb	5	; select bank5
 15769  0D02  110E               	bcf	14,2	;volatile
 15770  0D03  2D27               	goto	i1l4678
 15771  0D04                     i1l1013:	
 15772                           ;GPports.c: 165: do { TRISCbits.TRISC2 = 1; } while(0);
 15773                           
 15774  0D04  0021               	movlb	1	; select bank1
 15775  0D05  150E               	bsf	14,2	;volatile
 15776                           
 15777                           ;GPports.c: 166: do { ANSELCbits.ANSC2 = 1; } while(0);
 15778  0D06  0023               	movlb	3	; select bank3
 15779  0D07  2D0B               	goto	L10
 15780  0D08                     i1l1018:	
 15781                           ;GPports.c: 169: do { ANSELCbits.ANSC2 = 0; } while(0);
 15782                           
 15783  0D08  0023               	movlb	3	; select bank3
 15784  0D09  110E               	bcf	14,2	;volatile
 15785                           
 15786                           ;GPports.c: 170: do { TRISCbits.TRISC2 = 1; } while(0);
 15787  0D0A  0021               	movlb	1	; select bank1
 15788  0D0B                     L10:	
 15789  0D0B  150E               	bsf	14,2	;volatile
 15790  0D0C  2D27               	goto	i1l4678
 15791  0D0D                     i1l4674:	
 15792  0D0D  0020               	movlb	0	; select bank0
 15793  0D0E  0848               	movf	_GP1CONF,w	;volatile
 15794  0D0F  3903               	andlw	3
 15795  0D10  00CB               	movwf	??_Config_GP1
 15796  0D11  01CC               	clrf	??_Config_GP1+1
 15797                           
 15798                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15799                           ; Switch size 1, requested type "speed"
 15800                           ; Number of cases is 1, Range of values is 0 to 0
 15801                           ; switch strategies available:
 15802                           ; Name         Instructions Cycles
 15803                           ; simple_byte            4     3 (average)
 15804                           ; direct_byte            8     6 (fixed)
 15805                           ; jumptable            260     6 (fixed)
 15806                           ;	Chosen strategy is simple_byte
 15807  0D12  084C               	movf	??_Config_GP1+1,w
 15808  0D13  3A00               	xorlw	0	; case 0
 15809  0D14  1903               	skipnz
 15810  0D15  2D17               	goto	i1l7862
 15811  0D16  2D27               	goto	i1l4678
 15812  0D17                     i1l7862:	
 15813                           
 15814                           ; Switch size 1, requested type "speed"
 15815                           ; Number of cases is 4, Range of values is 0 to 3
 15816                           ; switch strategies available:
 15817                           ; Name         Instructions Cycles
 15818                           ; direct_byte           14     6 (fixed)
 15819                           ; simple_byte           13     7 (average)
 15820                           ; jumptable            260     6 (fixed)
 15821                           ;	Chosen strategy is direct_byte
 15822  0D17  084B               	movf	??_Config_GP1,w
 15823  0D18  0084               	movwf	4
 15824  0D19  3004               	movlw	4
 15825  0D1A  0204               	subwf	4,w
 15826  0D1B  1803               	skipnc
 15827  0D1C  2D27               	goto	i1l4678
 15828  0D1D  3191               	movlp	high i1S7864
 15829  0D1E  3504               	lslf	4,w
 15830  0D1F  3ED4               	addlw	low i1S7864
 15831  0D20  0082               	movwf	2
 15832  0D21                     i1l1024:	
 15833                           ;GPports.c: 176: do { WPUCbits.WPUC2 = 0; } while(0);
 15834                           
 15835  0D21  0024               	movlb	4	; select bank4
 15836  0D22  110E               	bcf	14,2	;volatile
 15837  0D23  0008               	return
 15838  0D24                     i1l1028:	
 15839                           ;GPports.c: 179: do { WPUCbits.WPUC2 = 1; } while(0);
 15840                           
 15841  0D24  0024               	movlb	4	; select bank4
 15842  0D25  150E               	bsf	14,2	;volatile
 15843  0D26  0008               	return
 15844  0D27                     i1l4678:	
 15845  0D27  0020               	movlb	0	; select bank0
 15846  0D28  0848               	movf	_GP1CONF,w	;volatile
 15847  0D29  3904               	andlw	4
 15848  0D2A  00CB               	movwf	??_Config_GP1
 15849  0D2B  01CC               	clrf	??_Config_GP1+1
 15850                           
 15851                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15852                           ; Switch size 1, requested type "speed"
 15853                           ; Number of cases is 1, Range of values is 0 to 0
 15854                           ; switch strategies available:
 15855                           ; Name         Instructions Cycles
 15856                           ; simple_byte            4     3 (average)
 15857                           ; direct_byte            8     6 (fixed)
 15858                           ; jumptable            260     6 (fixed)
 15859                           ;	Chosen strategy is simple_byte
 15860  0D2C  084C               	movf	??_Config_GP1+1,w
 15861  0D2D  3A00               	xorlw	0	; case 0
 15862  0D2E  1903               	skipnz
 15863  0D2F  2D31               	goto	i1l7866
 15864  0D30  2D39               	goto	i1l1030
 15865  0D31                     i1l7866:	
 15866                           
 15867                           ; Switch size 1, requested type "speed"
 15868                           ; Number of cases is 2, Range of values is 0 to 4
 15869                           ; switch strategies available:
 15870                           ; Name         Instructions Cycles
 15871                           ; simple_byte            7     4 (average)
 15872                           ; direct_byte           16     6 (fixed)
 15873                           ; jumptable            260     6 (fixed)
 15874                           ;	Chosen strategy is simple_byte
 15875  0D31  084B               	movf	??_Config_GP1,w
 15876  0D32  3A00               	xorlw	0	; case 0
 15877  0D33  1903               	skipnz
 15878  0D34  2D21               	goto	i1l1024
 15879  0D35  3A04               	xorlw	4	; case 4
 15880  0D36  1903               	skipnz
 15881  0D37  2D24               	goto	i1l1028
 15882  0D38  2D39               	goto	i1l1030
 15883  0D39                     i1l1030:	
 15884  0D39  0008               	return
 15885  0D3A                     __end_of_Config_GP1:	
 15886  0D3A                     __ptext61:	
 15887 ;; *************** function i1_PWM_GP3 *****************
 15888 ;; Defined at:
 15889 ;;		line 90 in file "PWM.c"
 15890 ;; Parameters:    Size  Location     Type
 15891 ;;  duty            1    wreg     unsigned char 
 15892 ;; Auto vars:     Size  Location     Type
 15893 ;;  duty            1    0[BANK0 ] unsigned char 
 15894 ;; Return value:  Size  Location     Type
 15895 ;;                  1    wreg      void 
 15896 ;; Registers used:
 15897 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15898 ;; Tracked objects:
 15899 ;;		On entry : 1A/0
 15900 ;;		On exit  : 1F/6
 15901 ;;		Unchanged: 0/0
 15902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15904 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15905 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15906 ;;      Totals:         8       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15907 ;;Total ram usage:        9 bytes
 15908 ;; Hardware stack levels used:    1
 15909 ;; Hardware stack levels required when called:    1
 15910 ;; This function calls:
 15911 ;;		i1___wmul
 15912 ;; This function is called by:
 15913 ;;		_Config_GP3
 15914 ;;		_UpdateOut_GP3
 15915 ;; This function uses a non-reentrant model
 15916 ;;
 15917                           
 15918                           
 15919                           ;psect for function i1_PWM_GP3
 15920  0D3A                     i1_PWM_GP3:	
 15921                           
 15922                           ;incstack = 0
 15923                           ; Regs used in i1_PWM_GP3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15924                           ;i1PWM_GP3@duty stored from wreg
 15925  0D3A  0020               	movlb	0	; select bank0
 15926  0D3B  00CA               	movwf	i1PWM_GP3@duty
 15927                           
 15928                           ;PWM.c: 92: if (duty == 0) {
 15929  0D3C  084A               	movf	i1PWM_GP3@duty,w
 15930  0D3D  1D03               	btfss	3,2
 15931  0D3E  2D53               	goto	i1l4550
 15932                           
 15933                           ;PWM.c: 94: do { LATCbits.LATC0 = 1; } while(0);
 15934  0D3F  0022               	movlb	2	; select bank2
 15935  0D40  140E               	bsf	14,0	;volatile
 15936                           
 15937                           ;PWM.c: 95: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 15938  0D41  3055               	movlw	85
 15939  0D42  003C               	movlb	28	; select bank28
 15940  0D43  008F               	movwf	15	;volsfr
 15941  0D44  30AA               	movlw	170
 15942  0D45  008F               	movwf	15	;volsfr
 15943  0D46  100F               	bcf	15,0	;volsfr
 15944                           
 15945                           ;PWM.c: 96: RC0PPSbits.RC0PPS = 0x00;
 15946  0D47  30E0               	movlw	-32
 15947  0D48  003D               	movlb	29	; select bank29
 15948  0D49  05A0               	andwf	32,f	;volatile
 15949                           
 15950                           ;PWM.c: 97: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 15951  0D4A  3055               	movlw	85
 15952  0D4B  003C               	movlb	28	; select bank28
 15953  0D4C  008F               	movwf	15	;volsfr
 15954  0D4D  30AA               	movlw	170
 15955  0D4E  008F               	movwf	15	;volsfr
 15956  0D4F  140F               	bsf	15,0	;volsfr
 15957                           
 15958                           ;PWM.c: 98: CCP3CON = 0;
 15959  0D50  0026               	movlb	6	; select bank6
 15960  0D51  0193               	clrf	19	;volatile
 15961  0D52  0008               	return
 15962  0D53                     i1l4550:	
 15963                           
 15964                           ;PWM.c: 100: };PWM.c: 102: if (duty > 100)
 15965  0D53  3065               	movlw	101
 15966  0D54  024A               	subwf	i1PWM_GP3@duty,w
 15967  0D55  1C03               	skipc
 15968  0D56  2D59               	goto	i1l4554
 15969                           
 15970                           ;PWM.c: 103: duty = 100;
 15971  0D57  3064               	movlw	100
 15972  0D58  00CA               	movwf	i1PWM_GP3@duty
 15973  0D59                     i1l4554:	
 15974                           
 15975                           ;PWM.c: 105: if (CCP2CON == 0) {
 15976  0D59  0025               	movlb	5	; select bank5
 15977  0D5A  0817               	movf	23,w	;volatile
 15978  0D5B  1D03               	btfss	3,2
 15979  0D5C  2D71               	goto	i1l4570
 15980                           
 15981                           ;PWM.c: 106: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 15982  0D5D  3055               	movlw	85
 15983  0D5E  003C               	movlb	28	; select bank28
 15984  0D5F  008F               	movwf	15	;volsfr
 15985  0D60  30AA               	movlw	170
 15986  0D61  008F               	movwf	15	;volsfr
 15987  0D62  100F               	bcf	15,0	;volsfr
 15988                           
 15989                           ;PWM.c: 107: RC0PPSbits.RC0PPS = 0x0E;
 15990  0D63  003D               	movlb	29	; select bank29
 15991  0D64  0820               	movf	32,w	;volatile
 15992  0D65  39E0               	andlw	-32
 15993  0D66  380E               	iorlw	14
 15994  0D67  00A0               	movwf	32	;volatile
 15995                           
 15996                           ;PWM.c: 108: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 15997  0D68  3055               	movlw	85
 15998  0D69  003C               	movlb	28	; select bank28
 15999  0D6A  008F               	movwf	15	;volsfr
 16000  0D6B  30AA               	movlw	170
 16001  0D6C  008F               	movwf	15	;volsfr
 16002  0D6D  140F               	bsf	15,0	;volsfr
 16003                           
 16004                           ;PWM.c: 109: CCP3CON = 0x8F;
 16005  0D6E  308F               	movlw	143
 16006  0D6F  0026               	movlb	6	; select bank6
 16007  0D70  0093               	movwf	19	;volatile
 16008  0D71                     i1l4570:	
 16009                           
 16010                           ;PWM.c: 110: };PWM.c: 112: CCPR3H = gamma_table[GAMMAGP3][(uint8_t) (duty - 1)] >> 8;
 16011  0D71  0020               	movlb	0	; select bank0
 16012  0D72  084A               	movf	i1PWM_GP3@duty,w
 16013  0D73  3EFF               	addlw	255
 16014  0D74  00F6               	movwf	??i1_PWM_GP3
 16015  0D75  01F7               	clrf	??i1_PWM_GP3+1
 16016  0D76  35F6               	lslf	??i1_PWM_GP3,f
 16017  0D77  0DF7               	rlf	??i1_PWM_GP3+1,f
 16018  0D78  083C               	movf	_GAMMAGP3,w	;volatile
 16019  0D79  00F0               	movwf	i1___wmul@multiplier
 16020  0D7A  30C8               	movlw	200
 16021  0D7B  01F1               	clrf	i1___wmul@multiplier+1
 16022  0D7C  00F2               	movwf	i1___wmul@multiplicand
 16023  0D7D  01F3               	clrf	i1___wmul@multiplicand+1
 16024  0D7E  26B4  318C         	fcall	i1___wmul
 16025  0D80  302B               	movlw	low (_gamma_table| (0+32768))
 16026  0D81  00F8               	movwf	??i1_PWM_GP3+2
 16027  0D82  3084               	movlw	high (_gamma_table| (0+32768))
 16028  0D83  00F9               	movwf	??i1_PWM_GP3+3
 16029  0D84  0870               	movf	?i1___wmul,w
 16030  0D85  0778               	addwf	??i1_PWM_GP3+2,w
 16031  0D86  00FA               	movwf	??i1_PWM_GP3+4
 16032  0D87  0871               	movf	?i1___wmul+1,w
 16033  0D88  3D79               	addwfc	??i1_PWM_GP3+3,w
 16034  0D89  00FB               	movwf	??i1_PWM_GP3+5
 16035  0D8A  087A               	movf	??i1_PWM_GP3+4,w
 16036  0D8B  0776               	addwf	??i1_PWM_GP3,w
 16037  0D8C  0084               	movwf	4
 16038  0D8D  087B               	movf	??i1_PWM_GP3+5,w
 16039  0D8E  3D77               	addwfc	??i1_PWM_GP3+1,w
 16040  0D8F  0085               	movwf	5
 16041  0D90  3F00               	moviw [0]fsr0
 16042  0D91  00FC               	movwf	??i1_PWM_GP3+6
 16043  0D92  3F01               	moviw [1]fsr0
 16044  0D93  00FD               	movwf	??i1_PWM_GP3+7
 16045  0D94  0026               	movlb	6	; select bank6
 16046  0D95  0092               	movwf	18	;volatile
 16047                           
 16048                           ;PWM.c: 113: CCPR3L = gamma_table[GAMMAGP3][(uint8_t) (duty - 1)];
 16049  0D96  0020               	movlb	0	; select bank0
 16050  0D97  084A               	movf	i1PWM_GP3@duty,w
 16051  0D98  3EFF               	addlw	255
 16052  0D99  00F6               	movwf	??i1_PWM_GP3
 16053  0D9A  01F7               	clrf	??i1_PWM_GP3+1
 16054  0D9B  35F6               	lslf	??i1_PWM_GP3,f
 16055  0D9C  0DF7               	rlf	??i1_PWM_GP3+1,f
 16056  0D9D  083C               	movf	_GAMMAGP3,w	;volatile
 16057  0D9E  00F0               	movwf	i1___wmul@multiplier
 16058  0D9F  30C8               	movlw	200
 16059  0DA0  01F1               	clrf	i1___wmul@multiplier+1
 16060  0DA1  00F2               	movwf	i1___wmul@multiplicand
 16061  0DA2  01F3               	clrf	i1___wmul@multiplicand+1
 16062  0DA3  26B4               	fcall	i1___wmul
 16063  0DA4  302B               	movlw	low (_gamma_table| (0+32768))
 16064  0DA5  00F8               	movwf	??i1_PWM_GP3+2
 16065  0DA6  3084               	movlw	high (_gamma_table| (0+32768))
 16066  0DA7  00F9               	movwf	??i1_PWM_GP3+3
 16067  0DA8  0870               	movf	?i1___wmul,w
 16068  0DA9  0778               	addwf	??i1_PWM_GP3+2,w
 16069  0DAA  00FA               	movwf	??i1_PWM_GP3+4
 16070  0DAB  0871               	movf	?i1___wmul+1,w
 16071  0DAC  3D79               	addwfc	??i1_PWM_GP3+3,w
 16072  0DAD  00FB               	movwf	??i1_PWM_GP3+5
 16073  0DAE  087A               	movf	??i1_PWM_GP3+4,w
 16074  0DAF  0776               	addwf	??i1_PWM_GP3,w
 16075  0DB0  0084               	movwf	4
 16076  0DB1  087B               	movf	??i1_PWM_GP3+5,w
 16077  0DB2  3D77               	addwfc	??i1_PWM_GP3+1,w
 16078  0DB3  0085               	movwf	5
 16079  0DB4  0800               	movf	0,w	;code access
 16080  0DB5  0026               	movlb	6	; select bank6
 16081  0DB6  0091               	movwf	17	;volatile
 16082  0DB7  0008               	return
 16083  0DB8                     __end_ofi1_PWM_GP3:	
 16084  0DB8                     __ptext64:	
 16085 ;; *************** function i1_PWM_GP2 *****************
 16086 ;; Defined at:
 16087 ;;		line 61 in file "PWM.c"
 16088 ;; Parameters:    Size  Location     Type
 16089 ;;  duty            1    wreg     unsigned char 
 16090 ;; Auto vars:     Size  Location     Type
 16091 ;;  duty            1    0[BANK0 ] unsigned char 
 16092 ;; Return value:  Size  Location     Type
 16093 ;;                  1    wreg      void 
 16094 ;; Registers used:
 16095 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16096 ;; Tracked objects:
 16097 ;;		On entry : 1A/0
 16098 ;;		On exit  : 1F/5
 16099 ;;		Unchanged: 0/0
 16100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16102 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16103 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16104 ;;      Totals:         8       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16105 ;;Total ram usage:        9 bytes
 16106 ;; Hardware stack levels used:    1
 16107 ;; Hardware stack levels required when called:    1
 16108 ;; This function calls:
 16109 ;;		i1___wmul
 16110 ;; This function is called by:
 16111 ;;		_Config_GP2
 16112 ;;		_UpdateOut_GP2
 16113 ;; This function uses a non-reentrant model
 16114 ;;
 16115                           
 16116                           
 16117                           ;psect for function i1_PWM_GP2
 16118  0DB8                     i1_PWM_GP2:	
 16119                           
 16120                           ;incstack = 0
 16121                           ; Regs used in i1_PWM_GP2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 16122                           ;i1PWM_GP2@duty stored from wreg
 16123  0DB8  0020               	movlb	0	; select bank0
 16124  0DB9  00CA               	movwf	i1PWM_GP2@duty
 16125                           
 16126                           ;PWM.c: 63: if (duty == 0) {
 16127  0DBA  084A               	movf	i1PWM_GP2@duty,w
 16128  0DBB  1D03               	btfss	3,2
 16129  0DBC  2DD1               	goto	i1l4508
 16130                           
 16131                           ;PWM.c: 65: do { LATCbits.LATC1 = 1; } while(0);
 16132  0DBD  0022               	movlb	2	; select bank2
 16133  0DBE  148E               	bsf	14,1	;volatile
 16134                           
 16135                           ;PWM.c: 66: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 16136  0DBF  3055               	movlw	85
 16137  0DC0  003C               	movlb	28	; select bank28
 16138  0DC1  008F               	movwf	15	;volsfr
 16139  0DC2  30AA               	movlw	170
 16140  0DC3  008F               	movwf	15	;volsfr
 16141  0DC4  100F               	bcf	15,0	;volsfr
 16142                           
 16143                           ;PWM.c: 67: RC1PPSbits.RC1PPS = 0x00;
 16144  0DC5  30E0               	movlw	-32
 16145  0DC6  003D               	movlb	29	; select bank29
 16146  0DC7  05A1               	andwf	33,f	;volatile
 16147                           
 16148                           ;PWM.c: 68: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 16149  0DC8  3055               	movlw	85
 16150  0DC9  003C               	movlb	28	; select bank28
 16151  0DCA  008F               	movwf	15	;volsfr
 16152  0DCB  30AA               	movlw	170
 16153  0DCC  008F               	movwf	15	;volsfr
 16154  0DCD  140F               	bsf	15,0	;volsfr
 16155                           
 16156                           ;PWM.c: 69: CCP2CON = 0;
 16157  0DCE  0025               	movlb	5	; select bank5
 16158  0DCF  0197               	clrf	23	;volatile
 16159  0DD0  0008               	return
 16160  0DD1                     i1l4508:	
 16161                           
 16162                           ;PWM.c: 71: };PWM.c: 73: if (duty > 100)
 16163  0DD1  3065               	movlw	101
 16164  0DD2  024A               	subwf	i1PWM_GP2@duty,w
 16165  0DD3  1C03               	skipc
 16166  0DD4  2DD7               	goto	i1l4512
 16167                           
 16168                           ;PWM.c: 74: duty = 100;
 16169  0DD5  3064               	movlw	100
 16170  0DD6  00CA               	movwf	i1PWM_GP2@duty
 16171  0DD7                     i1l4512:	
 16172                           
 16173                           ;PWM.c: 76: if (CCP2CON == 0) {
 16174  0DD7  0025               	movlb	5	; select bank5
 16175  0DD8  0817               	movf	23,w	;volatile
 16176  0DD9  1D03               	btfss	3,2
 16177  0DDA  2DEF               	goto	i1l4528
 16178                           
 16179                           ;PWM.c: 77: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 16180  0DDB  3055               	movlw	85
 16181  0DDC  003C               	movlb	28	; select bank28
 16182  0DDD  008F               	movwf	15	;volsfr
 16183  0DDE  30AA               	movlw	170
 16184  0DDF  008F               	movwf	15	;volsfr
 16185  0DE0  100F               	bcf	15,0	;volsfr
 16186                           
 16187                           ;PWM.c: 78: RC1PPSbits.RC1PPS = 0x0D;
 16188  0DE1  003D               	movlb	29	; select bank29
 16189  0DE2  0821               	movf	33,w	;volatile
 16190  0DE3  39E0               	andlw	-32
 16191  0DE4  380D               	iorlw	13
 16192  0DE5  00A1               	movwf	33	;volatile
 16193                           
 16194                           ;PWM.c: 79: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 16195  0DE6  3055               	movlw	85
 16196  0DE7  003C               	movlb	28	; select bank28
 16197  0DE8  008F               	movwf	15	;volsfr
 16198  0DE9  30AA               	movlw	170
 16199  0DEA  008F               	movwf	15	;volsfr
 16200  0DEB  140F               	bsf	15,0	;volsfr
 16201                           
 16202                           ;PWM.c: 80: CCP2CON = 0x8F;
 16203  0DEC  308F               	movlw	143
 16204  0DED  0025               	movlb	5	; select bank5
 16205  0DEE  0097               	movwf	23	;volatile
 16206  0DEF                     i1l4528:	
 16207                           
 16208                           ;PWM.c: 81: };PWM.c: 83: CCPR2H = gamma_table[GAMMAGP2][(uint8_t) (duty - 1)] >> 8;
 16209  0DEF  0020               	movlb	0	; select bank0
 16210  0DF0  084A               	movf	i1PWM_GP2@duty,w
 16211  0DF1  3EFF               	addlw	255
 16212  0DF2  00F6               	movwf	??i1_PWM_GP2
 16213  0DF3  01F7               	clrf	??i1_PWM_GP2+1
 16214  0DF4  35F6               	lslf	??i1_PWM_GP2,f
 16215  0DF5  0DF7               	rlf	??i1_PWM_GP2+1,f
 16216  0DF6  083D               	movf	_GAMMAGP2,w	;volatile
 16217  0DF7  00F0               	movwf	i1___wmul@multiplier
 16218  0DF8  30C8               	movlw	200
 16219  0DF9  01F1               	clrf	i1___wmul@multiplier+1
 16220  0DFA  00F2               	movwf	i1___wmul@multiplicand
 16221  0DFB  01F3               	clrf	i1___wmul@multiplicand+1
 16222  0DFC  26B4  318C         	fcall	i1___wmul
 16223  0DFE  302B               	movlw	low (_gamma_table| (0+32768))
 16224  0DFF  00F8               	movwf	??i1_PWM_GP2+2
 16225  0E00  3084               	movlw	high (_gamma_table| (0+32768))
 16226  0E01  00F9               	movwf	??i1_PWM_GP2+3
 16227  0E02  0870               	movf	?i1___wmul,w
 16228  0E03  0778               	addwf	??i1_PWM_GP2+2,w
 16229  0E04  00FA               	movwf	??i1_PWM_GP2+4
 16230  0E05  0871               	movf	?i1___wmul+1,w
 16231  0E06  3D79               	addwfc	??i1_PWM_GP2+3,w
 16232  0E07  00FB               	movwf	??i1_PWM_GP2+5
 16233  0E08  087A               	movf	??i1_PWM_GP2+4,w
 16234  0E09  0776               	addwf	??i1_PWM_GP2,w
 16235  0E0A  0084               	movwf	4
 16236  0E0B  087B               	movf	??i1_PWM_GP2+5,w
 16237  0E0C  3D77               	addwfc	??i1_PWM_GP2+1,w
 16238  0E0D  0085               	movwf	5
 16239  0E0E  3F00               	moviw [0]fsr0
 16240  0E0F  00FC               	movwf	??i1_PWM_GP2+6
 16241  0E10  3F01               	moviw [1]fsr0
 16242  0E11  00FD               	movwf	??i1_PWM_GP2+7
 16243  0E12  0025               	movlb	5	; select bank5
 16244  0E13  0096               	movwf	22	;volatile
 16245                           
 16246                           ;PWM.c: 84: CCPR2L = gamma_table[GAMMAGP2][(uint8_t) (duty - 1)];
 16247  0E14  0020               	movlb	0	; select bank0
 16248  0E15  084A               	movf	i1PWM_GP2@duty,w
 16249  0E16  3EFF               	addlw	255
 16250  0E17  00F6               	movwf	??i1_PWM_GP2
 16251  0E18  01F7               	clrf	??i1_PWM_GP2+1
 16252  0E19  35F6               	lslf	??i1_PWM_GP2,f
 16253  0E1A  0DF7               	rlf	??i1_PWM_GP2+1,f
 16254  0E1B  083D               	movf	_GAMMAGP2,w	;volatile
 16255  0E1C  00F0               	movwf	i1___wmul@multiplier
 16256  0E1D  30C8               	movlw	200
 16257  0E1E  01F1               	clrf	i1___wmul@multiplier+1
 16258  0E1F  00F2               	movwf	i1___wmul@multiplicand
 16259  0E20  01F3               	clrf	i1___wmul@multiplicand+1
 16260  0E21  26B4               	fcall	i1___wmul
 16261  0E22  302B               	movlw	low (_gamma_table| (0+32768))
 16262  0E23  00F8               	movwf	??i1_PWM_GP2+2
 16263  0E24  3084               	movlw	high (_gamma_table| (0+32768))
 16264  0E25  00F9               	movwf	??i1_PWM_GP2+3
 16265  0E26  0870               	movf	?i1___wmul,w
 16266  0E27  0778               	addwf	??i1_PWM_GP2+2,w
 16267  0E28  00FA               	movwf	??i1_PWM_GP2+4
 16268  0E29  0871               	movf	?i1___wmul+1,w
 16269  0E2A  3D79               	addwfc	??i1_PWM_GP2+3,w
 16270  0E2B  00FB               	movwf	??i1_PWM_GP2+5
 16271  0E2C  087A               	movf	??i1_PWM_GP2+4,w
 16272  0E2D  0776               	addwf	??i1_PWM_GP2,w
 16273  0E2E  0084               	movwf	4
 16274  0E2F  087B               	movf	??i1_PWM_GP2+5,w
 16275  0E30  3D77               	addwfc	??i1_PWM_GP2+1,w
 16276  0E31  0085               	movwf	5
 16277  0E32  0800               	movf	0,w	;code access
 16278  0E33  0025               	movlb	5	; select bank5
 16279  0E34  0095               	movwf	21	;volatile
 16280  0E35  0008               	return
 16281  0E36                     __end_ofi1_PWM_GP2:	
 16282  0E36                     __ptext67:	
 16283 ;; *************** function i1_PWM_GP1 *****************
 16284 ;; Defined at:
 16285 ;;		line 30 in file "PWM.c"
 16286 ;; Parameters:    Size  Location     Type
 16287 ;;  duty            1    wreg     unsigned char 
 16288 ;; Auto vars:     Size  Location     Type
 16289 ;;  duty            1    0[BANK0 ] unsigned char 
 16290 ;; Return value:  Size  Location     Type
 16291 ;;                  1    wreg      void 
 16292 ;; Registers used:
 16293 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16294 ;; Tracked objects:
 16295 ;;		On entry : 1A/0
 16296 ;;		On exit  : 1F/5
 16297 ;;		Unchanged: 0/0
 16298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16300 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16301 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16302 ;;      Totals:         8       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16303 ;;Total ram usage:        9 bytes
 16304 ;; Hardware stack levels used:    1
 16305 ;; Hardware stack levels required when called:    1
 16306 ;; This function calls:
 16307 ;;		i1___wmul
 16308 ;; This function is called by:
 16309 ;;		_Config_GP1
 16310 ;;		_UpdateOut_GP1
 16311 ;; This function uses a non-reentrant model
 16312 ;;
 16313                           
 16314                           
 16315                           ;psect for function i1_PWM_GP1
 16316  0E36                     i1_PWM_GP1:	
 16317                           
 16318                           ;incstack = 0
 16319                           ; Regs used in i1_PWM_GP1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 16320                           ;i1PWM_GP1@duty stored from wreg
 16321  0E36  0020               	movlb	0	; select bank0
 16322  0E37  00CA               	movwf	i1PWM_GP1@duty
 16323                           
 16324                           ;PWM.c: 32: if (duty == 0) {
 16325  0E38  084A               	movf	i1PWM_GP1@duty,w
 16326  0E39  1D03               	btfss	3,2
 16327  0E3A  2E4F               	goto	i1l4466
 16328                           
 16329                           ;PWM.c: 34: do { LATCbits.LATC2 = 1; } while(0);
 16330  0E3B  0022               	movlb	2	; select bank2
 16331  0E3C  150E               	bsf	14,2	;volatile
 16332                           
 16333                           ;PWM.c: 35: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 16334  0E3D  3055               	movlw	85
 16335  0E3E  003C               	movlb	28	; select bank28
 16336  0E3F  008F               	movwf	15	;volsfr
 16337  0E40  30AA               	movlw	170
 16338  0E41  008F               	movwf	15	;volsfr
 16339  0E42  100F               	bcf	15,0	;volsfr
 16340                           
 16341                           ;PWM.c: 36: RC2PPSbits.RC2PPS = 0x00;
 16342  0E43  30E0               	movlw	-32
 16343  0E44  003D               	movlb	29	; select bank29
 16344  0E45  05A2               	andwf	34,f	;volatile
 16345                           
 16346                           ;PWM.c: 37: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 16347  0E46  3055               	movlw	85
 16348  0E47  003C               	movlb	28	; select bank28
 16349  0E48  008F               	movwf	15	;volsfr
 16350  0E49  30AA               	movlw	170
 16351  0E4A  008F               	movwf	15	;volsfr
 16352  0E4B  140F               	bsf	15,0	;volsfr
 16353                           
 16354                           ;PWM.c: 38: CCP1CON = 0;
 16355  0E4C  0025               	movlb	5	; select bank5
 16356  0E4D  0193               	clrf	19	;volatile
 16357  0E4E  0008               	return
 16358  0E4F                     i1l4466:	
 16359                           
 16360                           ;PWM.c: 40: };PWM.c: 42: if (duty > 100)
 16361  0E4F  3065               	movlw	101
 16362  0E50  024A               	subwf	i1PWM_GP1@duty,w
 16363  0E51  1C03               	skipc
 16364  0E52  2E55               	goto	i1l4470
 16365                           
 16366                           ;PWM.c: 43: duty = 100;
 16367  0E53  3064               	movlw	100
 16368  0E54  00CA               	movwf	i1PWM_GP1@duty
 16369  0E55                     i1l4470:	
 16370                           
 16371                           ;PWM.c: 45: if (CCP1CON == 0) {
 16372  0E55  0025               	movlb	5	; select bank5
 16373  0E56  0813               	movf	19,w	;volatile
 16374  0E57  1D03               	btfss	3,2
 16375  0E58  2E6D               	goto	i1l4486
 16376                           
 16377                           ;PWM.c: 46: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 16378  0E59  3055               	movlw	85
 16379  0E5A  003C               	movlb	28	; select bank28
 16380  0E5B  008F               	movwf	15	;volsfr
 16381  0E5C  30AA               	movlw	170
 16382  0E5D  008F               	movwf	15	;volsfr
 16383  0E5E  100F               	bcf	15,0	;volsfr
 16384                           
 16385                           ;PWM.c: 47: RC2PPSbits.RC2PPS = 0x0C;
 16386  0E5F  003D               	movlb	29	; select bank29
 16387  0E60  0822               	movf	34,w	;volatile
 16388  0E61  39E0               	andlw	-32
 16389  0E62  380C               	iorlw	12
 16390  0E63  00A2               	movwf	34	;volatile
 16391                           
 16392                           ;PWM.c: 48: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 16393  0E64  3055               	movlw	85
 16394  0E65  003C               	movlb	28	; select bank28
 16395  0E66  008F               	movwf	15	;volsfr
 16396  0E67  30AA               	movlw	170
 16397  0E68  008F               	movwf	15	;volsfr
 16398  0E69  140F               	bsf	15,0	;volsfr
 16399                           
 16400                           ;PWM.c: 49: CCP1CON = 0x8F;
 16401  0E6A  308F               	movlw	143
 16402  0E6B  0025               	movlb	5	; select bank5
 16403  0E6C  0093               	movwf	19	;volatile
 16404  0E6D                     i1l4486:	
 16405                           
 16406                           ;PWM.c: 50: };PWM.c: 52: CCPR1H = gamma_table[GAMMAGP1][(uint8_t) (duty - 1)] >> 8;
 16407  0E6D  0020               	movlb	0	; select bank0
 16408  0E6E  084A               	movf	i1PWM_GP1@duty,w
 16409  0E6F  3EFF               	addlw	255
 16410  0E70  00F6               	movwf	??i1_PWM_GP1
 16411  0E71  01F7               	clrf	??i1_PWM_GP1+1
 16412  0E72  35F6               	lslf	??i1_PWM_GP1,f
 16413  0E73  0DF7               	rlf	??i1_PWM_GP1+1,f
 16414  0E74  083E               	movf	_GAMMAGP1,w	;volatile
 16415  0E75  00F0               	movwf	i1___wmul@multiplier
 16416  0E76  30C8               	movlw	200
 16417  0E77  01F1               	clrf	i1___wmul@multiplier+1
 16418  0E78  00F2               	movwf	i1___wmul@multiplicand
 16419  0E79  01F3               	clrf	i1___wmul@multiplicand+1
 16420  0E7A  26B4  318C         	fcall	i1___wmul
 16421  0E7C  302B               	movlw	low (_gamma_table| (0+32768))
 16422  0E7D  00F8               	movwf	??i1_PWM_GP1+2
 16423  0E7E  3084               	movlw	high (_gamma_table| (0+32768))
 16424  0E7F  00F9               	movwf	??i1_PWM_GP1+3
 16425  0E80  0870               	movf	?i1___wmul,w
 16426  0E81  0778               	addwf	??i1_PWM_GP1+2,w
 16427  0E82  00FA               	movwf	??i1_PWM_GP1+4
 16428  0E83  0871               	movf	?i1___wmul+1,w
 16429  0E84  3D79               	addwfc	??i1_PWM_GP1+3,w
 16430  0E85  00FB               	movwf	??i1_PWM_GP1+5
 16431  0E86  087A               	movf	??i1_PWM_GP1+4,w
 16432  0E87  0776               	addwf	??i1_PWM_GP1,w
 16433  0E88  0084               	movwf	4
 16434  0E89  087B               	movf	??i1_PWM_GP1+5,w
 16435  0E8A  3D77               	addwfc	??i1_PWM_GP1+1,w
 16436  0E8B  0085               	movwf	5
 16437  0E8C  3F00               	moviw [0]fsr0
 16438  0E8D  00FC               	movwf	??i1_PWM_GP1+6
 16439  0E8E  3F01               	moviw [1]fsr0
 16440  0E8F  00FD               	movwf	??i1_PWM_GP1+7
 16441  0E90  0025               	movlb	5	; select bank5
 16442  0E91  0092               	movwf	18	;volatile
 16443                           
 16444                           ;PWM.c: 53: CCPR1L = gamma_table[GAMMAGP1][(uint8_t) (duty - 1)];
 16445  0E92  0020               	movlb	0	; select bank0
 16446  0E93  084A               	movf	i1PWM_GP1@duty,w
 16447  0E94  3EFF               	addlw	255
 16448  0E95  00F6               	movwf	??i1_PWM_GP1
 16449  0E96  01F7               	clrf	??i1_PWM_GP1+1
 16450  0E97  35F6               	lslf	??i1_PWM_GP1,f
 16451  0E98  0DF7               	rlf	??i1_PWM_GP1+1,f
 16452  0E99  083E               	movf	_GAMMAGP1,w	;volatile
 16453  0E9A  00F0               	movwf	i1___wmul@multiplier
 16454  0E9B  30C8               	movlw	200
 16455  0E9C  01F1               	clrf	i1___wmul@multiplier+1
 16456  0E9D  00F2               	movwf	i1___wmul@multiplicand
 16457  0E9E  01F3               	clrf	i1___wmul@multiplicand+1
 16458  0E9F  26B4               	fcall	i1___wmul
 16459  0EA0  302B               	movlw	low (_gamma_table| (0+32768))
 16460  0EA1  00F8               	movwf	??i1_PWM_GP1+2
 16461  0EA2  3084               	movlw	high (_gamma_table| (0+32768))
 16462  0EA3  00F9               	movwf	??i1_PWM_GP1+3
 16463  0EA4  0870               	movf	?i1___wmul,w
 16464  0EA5  0778               	addwf	??i1_PWM_GP1+2,w
 16465  0EA6  00FA               	movwf	??i1_PWM_GP1+4
 16466  0EA7  0871               	movf	?i1___wmul+1,w
 16467  0EA8  3D79               	addwfc	??i1_PWM_GP1+3,w
 16468  0EA9  00FB               	movwf	??i1_PWM_GP1+5
 16469  0EAA  087A               	movf	??i1_PWM_GP1+4,w
 16470  0EAB  0776               	addwf	??i1_PWM_GP1,w
 16471  0EAC  0084               	movwf	4
 16472  0EAD  087B               	movf	??i1_PWM_GP1+5,w
 16473  0EAE  3D77               	addwfc	??i1_PWM_GP1+1,w
 16474  0EAF  0085               	movwf	5
 16475  0EB0  0800               	movf	0,w	;code access
 16476  0EB1  0025               	movlb	5	; select bank5
 16477  0EB2  0091               	movwf	17	;volatile
 16478  0EB3  0008               	return
 16479  0EB4                     __end_ofi1_PWM_GP1:	
 16480  0EB4                     __ptext68:	
 16481 ;; *************** function i1___wmul *****************
 16482 ;; Defined at:
 16483 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
 16484 ;; Parameters:    Size  Location     Type
 16485 ;;  multiplier      2    0[COMMON] unsigned int 
 16486 ;;  multiplicand    2    2[COMMON] unsigned int 
 16487 ;; Auto vars:     Size  Location     Type
 16488 ;;  __wmul          2    4[COMMON] unsigned int 
 16489 ;; Return value:  Size  Location     Type
 16490 ;;                  2    0[COMMON] unsigned int 
 16491 ;; Registers used:
 16492 ;;		wreg, status,2, status,0
 16493 ;; Tracked objects:
 16494 ;;		On entry : 1F/0
 16495 ;;		On exit  : 1F/0
 16496 ;;		Unchanged: 1F/0
 16497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16498 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16499 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16501 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16502 ;;Total ram usage:        6 bytes
 16503 ;; Hardware stack levels used:    1
 16504 ;; This function calls:
 16505 ;;		Nothing
 16506 ;; This function is called by:
 16507 ;;		_RegisterWrite
 16508 ;;		i1_PWM_GP1
 16509 ;;		i1_PWM_GP2
 16510 ;;		i1_PWM_GP3
 16511 ;; This function uses a non-reentrant model
 16512 ;;
 16513                           
 16514                           
 16515                           ;psect for function i1___wmul
 16516  0EB4                     i1___wmul:	
 16517                           
 16518                           ;incstack = 0
 16519                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
 16520  0EB4  01F4               	clrf	i1___wmul@product
 16521  0EB5  01F5               	clrf	i1___wmul@product+1
 16522  0EB6                     i1l4390:	
 16523  0EB6  1C70               	btfss	i1___wmul@multiplier,0
 16524  0EB7  2EBC               	goto	i1l4394
 16525  0EB8  0872               	movf	i1___wmul@multiplicand,w
 16526  0EB9  07F4               	addwf	i1___wmul@product,f
 16527  0EBA  0873               	movf	i1___wmul@multiplicand+1,w
 16528  0EBB  3DF5               	addwfc	i1___wmul@product+1,f
 16529  0EBC                     i1l4394:	
 16530  0EBC  35F2               	lslf	i1___wmul@multiplicand,f
 16531  0EBD  0DF3               	rlf	i1___wmul@multiplicand+1,f
 16532  0EBE  36F1               	lsrf	i1___wmul@multiplier+1,f
 16533  0EBF  0CF0               	rrf	i1___wmul@multiplier,f
 16534  0EC0  0870               	movf	i1___wmul@multiplier,w
 16535  0EC1  0471               	iorwf	i1___wmul@multiplier+1,w
 16536  0EC2  1D03               	btfss	3,2
 16537  0EC3  2EB6               	goto	i1l4390
 16538  0EC4  0875               	movf	i1___wmul@product+1,w
 16539  0EC5  00F1               	movwf	?i1___wmul+1
 16540  0EC6  0874               	movf	i1___wmul@product,w
 16541  0EC7  00F0               	movwf	?i1___wmul
 16542  0EC8  0008               	return
 16543  0EC9                     __end_ofi1___wmul:	
 16544  0EC9                     __ptext69:	
 16545 ;; *************** function _PWM1_Initialize *****************
 16546 ;; Defined at:
 16547 ;;		line 64 in file "mcc_generated_files/pwm1.c"
 16548 ;; Parameters:    Size  Location     Type
 16549 ;;		None
 16550 ;; Auto vars:     Size  Location     Type
 16551 ;;		None
 16552 ;; Return value:  Size  Location     Type
 16553 ;;                  1    wreg      void 
 16554 ;; Registers used:
 16555 ;;		wreg, status,2, status,0
 16556 ;; Tracked objects:
 16557 ;;		On entry : 1F/1C
 16558 ;;		On exit  : 1F/5
 16559 ;;		Unchanged: 0/0
 16560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16565 ;;Total ram usage:        0 bytes
 16566 ;; Hardware stack levels used:    1
 16567 ;; This function calls:
 16568 ;;		Nothing
 16569 ;; This function is called by:
 16570 ;;		_Config_GP1
 16571 ;; This function uses a non-reentrant model
 16572 ;;
 16573                           
 16574                           
 16575                           ;psect for function _PWM1_Initialize
 16576  0EC9                     _PWM1_Initialize:	
 16577                           
 16578                           ;pwm1.c: 69: CCP1CON = 0x8F;
 16579                           
 16580                           ;incstack = 0
 16581                           ; Regs used in _PWM1_Initialize: [wreg+status,2+status,0]
 16582  0EC9  308F               	movlw	143
 16583  0ECA  0025               	movlb	5	; select bank5
 16584  0ECB  0093               	movwf	19	;volatile
 16585                           
 16586                           ;pwm1.c: 72: CCPR1H = 0x03;
 16587  0ECC  3003               	movlw	3
 16588  0ECD  0092               	movwf	18	;volatile
 16589                           
 16590                           ;pwm1.c: 75: CCPR1L = 0xFF;
 16591  0ECE  30FF               	movlw	255
 16592  0ECF  0091               	movwf	17	;volatile
 16593                           
 16594                           ;pwm1.c: 78: CCPTMRSbits.C1TSEL = 0x1;
 16595  0ED0  081F               	movf	31,w	;volatile
 16596  0ED1  39FC               	andlw	-4
 16597  0ED2  3801               	iorlw	1
 16598  0ED3  009F               	movwf	31	;volatile
 16599  0ED4  0008               	return
 16600  0ED5                     __end_of_PWM1_Initialize:	
 16601  0ED5                     __ptext63:	
 16602 ;; *************** function _Config_GP2 *****************
 16603 ;; Defined at:
 16604 ;;		line 189 in file "GPports.c"
 16605 ;; Parameters:    Size  Location     Type
 16606 ;;		None
 16607 ;; Auto vars:     Size  Location     Type
 16608 ;;		None
 16609 ;; Return value:  Size  Location     Type
 16610 ;;                  1    wreg      void 
 16611 ;; Registers used:
 16612 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16613 ;; Tracked objects:
 16614 ;;		On entry : 1F/0
 16615 ;;		On exit  : 1B/0
 16616 ;;		Unchanged: 0/0
 16617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16620 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16621 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16622 ;;Total ram usage:        2 bytes
 16623 ;; Hardware stack levels used:    1
 16624 ;; Hardware stack levels required when called:    2
 16625 ;; This function calls:
 16626 ;;		_PWM2_Initialize
 16627 ;;		i1_PWM_GP2
 16628 ;; This function is called by:
 16629 ;;		_RegisterWrite
 16630 ;; This function uses a non-reentrant model
 16631 ;;
 16632                           
 16633                           
 16634                           ;psect for function _Config_GP2
 16635  0ED5                     _Config_GP2:	
 16636                           
 16637                           ;GPports.c: 192: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 16638                           
 16639                           ;incstack = 0
 16640                           ; Regs used in _Config_GP2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 16641  0ED5  3055               	movlw	85
 16642  0ED6  003C               	movlb	28	; select bank28
 16643  0ED7  008F               	movwf	15	;volsfr
 16644  0ED8  30AA               	movlw	170
 16645  0ED9  008F               	movwf	15	;volsfr
 16646  0EDA  100F               	bcf	15,0	;volsfr
 16647                           
 16648                           ;GPports.c: 193: RC1PPSbits.RC1PPS = 0x00;
 16649  0EDB  30E0               	movlw	-32
 16650  0EDC  003D               	movlb	29	; select bank29
 16651  0EDD  05A1               	andwf	33,f	;volatile
 16652                           
 16653                           ;GPports.c: 194: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 16654  0EDE  3055               	movlw	85
 16655  0EDF  003C               	movlb	28	; select bank28
 16656  0EE0  008F               	movwf	15	;volsfr
 16657  0EE1  30AA               	movlw	170
 16658  0EE2  008F               	movwf	15	;volsfr
 16659  0EE3  140F               	bsf	15,0	;volsfr
 16660                           
 16661                           ;GPports.c: 195: CCP2CON = 0;
 16662  0EE4  0025               	movlb	5	; select bank5
 16663  0EE5  0197               	clrf	23	;volatile
 16664                           
 16665                           ;GPports.c: 196: switch (GP2CONF & 0x03) {
 16666  0EE6  2F14               	goto	i1l4724
 16667  0EE7                     i1l1035:	
 16668                           ;GPports.c: 198: do { ANSELCbits.ANSC1 = 0; } while(0);
 16669                           
 16670  0EE7  0023               	movlb	3	; select bank3
 16671  0EE8  108E               	bcf	14,1	;volatile
 16672                           
 16673                           ;GPports.c: 199: do { LATCbits.LATC1 = 1; } while(0);
 16674  0EE9  0022               	movlb	2	; select bank2
 16675  0EEA  148E               	bsf	14,1	;volatile
 16676                           
 16677                           ;GPports.c: 200: do { TRISCbits.TRISC1 = 0; } while(0);
 16678  0EEB  0021               	movlb	1	; select bank1
 16679  0EEC  108E               	bcf	14,1	;volatile
 16680                           
 16681                           ;GPports.c: 201: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 16682  0EED  3055               	movlw	85
 16683  0EEE  003C               	movlb	28	; select bank28
 16684  0EEF  008F               	movwf	15	;volsfr
 16685  0EF0  30AA               	movlw	170
 16686  0EF1  008F               	movwf	15	;volsfr
 16687  0EF2  100F               	bcf	15,0	;volsfr
 16688                           
 16689                           ;GPports.c: 202: RC1PPSbits.RC1PPS = 0x0D;
 16690  0EF3  003D               	movlb	29	; select bank29
 16691  0EF4  0821               	movf	33,w	;volatile
 16692  0EF5  39E0               	andlw	-32
 16693  0EF6  380D               	iorlw	13
 16694  0EF7  00A1               	movwf	33	;volatile
 16695                           
 16696                           ;GPports.c: 203: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 16697  0EF8  3055               	movlw	85
 16698  0EF9  003C               	movlb	28	; select bank28
 16699  0EFA  008F               	movwf	15	;volsfr
 16700  0EFB  30AA               	movlw	170
 16701  0EFC  008F               	movwf	15	;volsfr
 16702  0EFD  140F               	bsf	15,0	;volsfr
 16703                           
 16704                           ;GPports.c: 204: PWM2_Initialize();
 16705  0EFE  2741  318C         	fcall	_PWM2_Initialize
 16706                           
 16707                           ;GPports.c: 205: PWM_GP2(0);
 16708  0F00  3000               	movlw	0
 16709  0F01  25B8  318C         	fcall	i1_PWM_GP2
 16710                           
 16711                           ;GPports.c: 206: break;
 16712  0F03  2F2E               	goto	i1l4728
 16713  0F04                     i1l1043:	
 16714                           ;GPports.c: 209: do { ANSELCbits.ANSC1 = 0; } while(0);
 16715                           
 16716  0F04  0023               	movlb	3	; select bank3
 16717  0F05  108E               	bcf	14,1	;volatile
 16718                           
 16719                           ;GPports.c: 210: do { TRISCbits.TRISC1 = 0; } while(0);
 16720  0F06  0021               	movlb	1	; select bank1
 16721  0F07  108E               	bcf	14,1	;volatile
 16722                           
 16723                           ;GPports.c: 211: do { ODCONCbits.ODCC1 = 0; } while(0);
 16724  0F08  0025               	movlb	5	; select bank5
 16725  0F09  108E               	bcf	14,1	;volatile
 16726  0F0A  2F2E               	goto	i1l4728
 16727  0F0B                     i1l1050:	
 16728                           ;GPports.c: 215: do { TRISCbits.TRISC1 = 1; } while(0);
 16729                           
 16730  0F0B  0021               	movlb	1	; select bank1
 16731  0F0C  148E               	bsf	14,1	;volatile
 16732                           
 16733                           ;GPports.c: 216: do { ANSELCbits.ANSC1 = 1; } while(0);
 16734  0F0D  0023               	movlb	3	; select bank3
 16735  0F0E  2F12               	goto	L9
 16736  0F0F                     i1l1055:	
 16737                           ;GPports.c: 220: do { ANSELCbits.ANSC1 = 0; } while(0);
 16738                           
 16739  0F0F  0023               	movlb	3	; select bank3
 16740  0F10  108E               	bcf	14,1	;volatile
 16741                           
 16742                           ;GPports.c: 221: do { TRISCbits.TRISC1 = 1; } while(0);
 16743  0F11  0021               	movlb	1	; select bank1
 16744  0F12                     L9:	
 16745  0F12  148E               	bsf	14,1	;volatile
 16746  0F13  2F2E               	goto	i1l4728
 16747  0F14                     i1l4724:	
 16748  0F14  0020               	movlb	0	; select bank0
 16749  0F15  0847               	movf	_GP2CONF,w	;volatile
 16750  0F16  3903               	andlw	3
 16751  0F17  00CB               	movwf	??_Config_GP2
 16752  0F18  01CC               	clrf	??_Config_GP2+1
 16753                           
 16754                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16755                           ; Switch size 1, requested type "speed"
 16756                           ; Number of cases is 1, Range of values is 0 to 0
 16757                           ; switch strategies available:
 16758                           ; Name         Instructions Cycles
 16759                           ; simple_byte            4     3 (average)
 16760                           ; direct_byte            8     6 (fixed)
 16761                           ; jumptable            260     6 (fixed)
 16762                           ;	Chosen strategy is simple_byte
 16763  0F19  084C               	movf	??_Config_GP2+1,w
 16764  0F1A  3A00               	xorlw	0	; case 0
 16765  0F1B  1903               	skipnz
 16766  0F1C  2F1E               	goto	i1l7856
 16767  0F1D  2F2E               	goto	i1l4728
 16768  0F1E                     i1l7856:	
 16769                           
 16770                           ; Switch size 1, requested type "speed"
 16771                           ; Number of cases is 4, Range of values is 0 to 3
 16772                           ; switch strategies available:
 16773                           ; Name         Instructions Cycles
 16774                           ; direct_byte           14     6 (fixed)
 16775                           ; simple_byte           13     7 (average)
 16776                           ; jumptable            260     6 (fixed)
 16777                           ;	Chosen strategy is direct_byte
 16778  0F1E  084B               	movf	??_Config_GP2,w
 16779  0F1F  0084               	movwf	4
 16780  0F20  3004               	movlw	4
 16781  0F21  0204               	subwf	4,w
 16782  0F22  1803               	skipnc
 16783  0F23  2F2E               	goto	i1l4728
 16784  0F24  3191               	movlp	high i1S7858
 16785  0F25  3504               	lslf	4,w
 16786  0F26  3ECC               	addlw	low i1S7858
 16787  0F27  0082               	movwf	2
 16788  0F28                     i1l1061:	
 16789                           ;GPports.c: 227: do { WPUCbits.WPUC1 = 0; } while(0);
 16790                           
 16791  0F28  0024               	movlb	4	; select bank4
 16792  0F29  108E               	bcf	14,1	;volatile
 16793  0F2A  0008               	return
 16794  0F2B                     i1l1065:	
 16795                           ;GPports.c: 230: do { WPUCbits.WPUC1 = 1; } while(0);
 16796                           
 16797  0F2B  0024               	movlb	4	; select bank4
 16798  0F2C  148E               	bsf	14,1	;volatile
 16799  0F2D  0008               	return
 16800  0F2E                     i1l4728:	
 16801  0F2E  0020               	movlb	0	; select bank0
 16802  0F2F  0847               	movf	_GP2CONF,w	;volatile
 16803  0F30  3904               	andlw	4
 16804  0F31  00CB               	movwf	??_Config_GP2
 16805  0F32  01CC               	clrf	??_Config_GP2+1
 16806                           
 16807                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16808                           ; Switch size 1, requested type "speed"
 16809                           ; Number of cases is 1, Range of values is 0 to 0
 16810                           ; switch strategies available:
 16811                           ; Name         Instructions Cycles
 16812                           ; simple_byte            4     3 (average)
 16813                           ; direct_byte            8     6 (fixed)
 16814                           ; jumptable            260     6 (fixed)
 16815                           ;	Chosen strategy is simple_byte
 16816  0F33  084C               	movf	??_Config_GP2+1,w
 16817  0F34  3A00               	xorlw	0	; case 0
 16818  0F35  1903               	skipnz
 16819  0F36  2F38               	goto	i1l7860
 16820  0F37  2F40               	goto	i1l1067
 16821  0F38                     i1l7860:	
 16822                           
 16823                           ; Switch size 1, requested type "speed"
 16824                           ; Number of cases is 2, Range of values is 0 to 4
 16825                           ; switch strategies available:
 16826                           ; Name         Instructions Cycles
 16827                           ; simple_byte            7     4 (average)
 16828                           ; direct_byte           16     6 (fixed)
 16829                           ; jumptable            260     6 (fixed)
 16830                           ;	Chosen strategy is simple_byte
 16831  0F38  084B               	movf	??_Config_GP2,w
 16832  0F39  3A00               	xorlw	0	; case 0
 16833  0F3A  1903               	skipnz
 16834  0F3B  2F28               	goto	i1l1061
 16835  0F3C  3A04               	xorlw	4	; case 4
 16836  0F3D  1903               	skipnz
 16837  0F3E  2F2B               	goto	i1l1065
 16838  0F3F  2F40               	goto	i1l1067
 16839  0F40                     i1l1067:	
 16840  0F40  0008               	return
 16841  0F41                     __end_of_Config_GP2:	
 16842  0F41                     __ptext65:	
 16843 ;; *************** function _PWM2_Initialize *****************
 16844 ;; Defined at:
 16845 ;;		line 64 in file "mcc_generated_files/pwm2.c"
 16846 ;; Parameters:    Size  Location     Type
 16847 ;;		None
 16848 ;; Auto vars:     Size  Location     Type
 16849 ;;		None
 16850 ;; Return value:  Size  Location     Type
 16851 ;;                  1    wreg      void 
 16852 ;; Registers used:
 16853 ;;		wreg, status,2, status,0
 16854 ;; Tracked objects:
 16855 ;;		On entry : 1F/1C
 16856 ;;		On exit  : 1F/5
 16857 ;;		Unchanged: 0/0
 16858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16863 ;;Total ram usage:        0 bytes
 16864 ;; Hardware stack levels used:    1
 16865 ;; This function calls:
 16866 ;;		Nothing
 16867 ;; This function is called by:
 16868 ;;		_Config_GP2
 16869 ;; This function uses a non-reentrant model
 16870 ;;
 16871                           
 16872                           
 16873                           ;psect for function _PWM2_Initialize
 16874  0F41                     _PWM2_Initialize:	
 16875                           
 16876                           ;pwm2.c: 69: CCP2CON = 0x8F;
 16877                           
 16878                           ;incstack = 0
 16879                           ; Regs used in _PWM2_Initialize: [wreg+status,2+status,0]
 16880  0F41  308F               	movlw	143
 16881  0F42  0025               	movlb	5	; select bank5
 16882  0F43  0097               	movwf	23	;volatile
 16883                           
 16884                           ;pwm2.c: 72: CCPR2H = 0x03;
 16885  0F44  3003               	movlw	3
 16886  0F45  0096               	movwf	22	;volatile
 16887                           
 16888                           ;pwm2.c: 75: CCPR2L = 0xFF;
 16889  0F46  30FF               	movlw	255
 16890  0F47  0095               	movwf	21	;volatile
 16891                           
 16892                           ;pwm2.c: 78: CCPTMRSbits.C2TSEL = 0x1;
 16893  0F48  081F               	movf	31,w	;volatile
 16894  0F49  39F3               	andlw	-13
 16895  0F4A  3804               	iorlw	4
 16896  0F4B  009F               	movwf	31	;volatile
 16897  0F4C  0008               	return
 16898  0F4D                     __end_of_PWM2_Initialize:	
 16899  0F4D                     __ptext60:	
 16900 ;; *************** function _Config_GP3 *****************
 16901 ;; Defined at:
 16902 ;;		line 240 in file "GPports.c"
 16903 ;; Parameters:    Size  Location     Type
 16904 ;;		None
 16905 ;; Auto vars:     Size  Location     Type
 16906 ;;		None
 16907 ;; Return value:  Size  Location     Type
 16908 ;;                  1    wreg      void 
 16909 ;; Registers used:
 16910 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16911 ;; Tracked objects:
 16912 ;;		On entry : 1F/0
 16913 ;;		On exit  : 1B/0
 16914 ;;		Unchanged: 0/0
 16915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16918 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16919 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16920 ;;Total ram usage:        2 bytes
 16921 ;; Hardware stack levels used:    1
 16922 ;; Hardware stack levels required when called:    2
 16923 ;; This function calls:
 16924 ;;		_PWM3_Initialize
 16925 ;;		i1_PWM_GP3
 16926 ;; This function is called by:
 16927 ;;		_RegisterWrite
 16928 ;; This function uses a non-reentrant model
 16929 ;;
 16930                           
 16931                           
 16932                           ;psect for function _Config_GP3
 16933  0F4D                     _Config_GP3:	
 16934                           
 16935                           ;GPports.c: 242: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 16936                           
 16937                           ;incstack = 0
 16938                           ; Regs used in _Config_GP3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 16939  0F4D  3055               	movlw	85
 16940  0F4E  003C               	movlb	28	; select bank28
 16941  0F4F  008F               	movwf	15	;volsfr
 16942  0F50  30AA               	movlw	170
 16943  0F51  008F               	movwf	15	;volsfr
 16944  0F52  100F               	bcf	15,0	;volsfr
 16945                           
 16946                           ;GPports.c: 243: RC0PPSbits.RC0PPS = 0x00;
 16947  0F53  30E0               	movlw	-32
 16948  0F54  003D               	movlb	29	; select bank29
 16949  0F55  05A0               	andwf	32,f	;volatile
 16950                           
 16951                           ;GPports.c: 244: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 16952  0F56  3055               	movlw	85
 16953  0F57  003C               	movlb	28	; select bank28
 16954  0F58  008F               	movwf	15	;volsfr
 16955  0F59  30AA               	movlw	170
 16956  0F5A  008F               	movwf	15	;volsfr
 16957  0F5B  140F               	bsf	15,0	;volsfr
 16958                           
 16959                           ;GPports.c: 245: CCP3CON = 0;
 16960  0F5C  0026               	movlb	6	; select bank6
 16961  0F5D  0193               	clrf	19	;volatile
 16962                           
 16963                           ;GPports.c: 246: switch (GP3CONF & 0x03) {
 16964  0F5E  2F8C               	goto	i1l4774
 16965  0F5F                     i1l1072:	
 16966                           ;GPports.c: 248: do { ANSELCbits.ANSC0 = 0; } while(0);
 16967                           
 16968  0F5F  0023               	movlb	3	; select bank3
 16969  0F60  100E               	bcf	14,0	;volatile
 16970                           
 16971                           ;GPports.c: 249: do { LATCbits.LATC0 = 1; } while(0);
 16972  0F61  0022               	movlb	2	; select bank2
 16973  0F62  140E               	bsf	14,0	;volatile
 16974                           
 16975                           ;GPports.c: 250: do { TRISCbits.TRISC0 = 0; } while(0);
 16976  0F63  0021               	movlb	1	; select bank1
 16977  0F64  100E               	bcf	14,0	;volatile
 16978                           
 16979                           ;GPports.c: 251: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 16980  0F65  3055               	movlw	85
 16981  0F66  003C               	movlb	28	; select bank28
 16982  0F67  008F               	movwf	15	;volsfr
 16983  0F68  30AA               	movlw	170
 16984  0F69  008F               	movwf	15	;volsfr
 16985  0F6A  100F               	bcf	15,0	;volsfr
 16986                           
 16987                           ;GPports.c: 252: RC0PPSbits.RC0PPS = 0x0E;
 16988  0F6B  003D               	movlb	29	; select bank29
 16989  0F6C  0820               	movf	32,w	;volatile
 16990  0F6D  39E0               	andlw	-32
 16991  0F6E  380E               	iorlw	14
 16992  0F6F  00A0               	movwf	32	;volatile
 16993                           
 16994                           ;GPports.c: 253: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 16995  0F70  3055               	movlw	85
 16996  0F71  003C               	movlb	28	; select bank28
 16997  0F72  008F               	movwf	15	;volsfr
 16998  0F73  30AA               	movlw	170
 16999  0F74  008F               	movwf	15	;volsfr
 17000  0F75  140F               	bsf	15,0	;volsfr
 17001                           
 17002                           ;GPports.c: 254: PWM3_Initialize();
 17003  0F76  27B9  318C         	fcall	_PWM3_Initialize
 17004                           
 17005                           ;GPports.c: 255: PWM_GP3(0);
 17006  0F78  3000               	movlw	0
 17007  0F79  253A  318C         	fcall	i1_PWM_GP3
 17008                           
 17009                           ;GPports.c: 256: break;
 17010  0F7B  2FA6               	goto	i1l4778
 17011  0F7C                     i1l1080:	
 17012                           ;GPports.c: 259: do { ANSELCbits.ANSC0 = 0; } while(0);
 17013                           
 17014  0F7C  0023               	movlb	3	; select bank3
 17015  0F7D  100E               	bcf	14,0	;volatile
 17016                           
 17017                           ;GPports.c: 260: do { TRISCbits.TRISC0 = 0; } while(0);
 17018  0F7E  0021               	movlb	1	; select bank1
 17019  0F7F  100E               	bcf	14,0	;volatile
 17020                           
 17021                           ;GPports.c: 261: do { ODCONCbits.ODCC0 = 0; } while(0);
 17022  0F80  0025               	movlb	5	; select bank5
 17023  0F81  100E               	bcf	14,0	;volatile
 17024  0F82  2FA6               	goto	i1l4778
 17025  0F83                     i1l1087:	
 17026                           ;GPports.c: 265: do { TRISCbits.TRISC0 = 1; } while(0);
 17027                           
 17028  0F83  0021               	movlb	1	; select bank1
 17029  0F84  140E               	bsf	14,0	;volatile
 17030                           
 17031                           ;GPports.c: 266: do { ANSELCbits.ANSC0 = 1; } while(0);
 17032  0F85  0023               	movlb	3	; select bank3
 17033  0F86  2F8A               	goto	L8
 17034  0F87                     i1l1092:	
 17035                           ;GPports.c: 270: do { ANSELCbits.ANSC0 = 0; } while(0);
 17036                           
 17037  0F87  0023               	movlb	3	; select bank3
 17038  0F88  100E               	bcf	14,0	;volatile
 17039                           
 17040                           ;GPports.c: 271: do { TRISCbits.TRISC0 = 1; } while(0);
 17041  0F89  0021               	movlb	1	; select bank1
 17042  0F8A                     L8:	
 17043  0F8A  140E               	bsf	14,0	;volatile
 17044  0F8B  2FA6               	goto	i1l4778
 17045  0F8C                     i1l4774:	
 17046  0F8C  0020               	movlb	0	; select bank0
 17047  0F8D  0846               	movf	_GP3CONF,w	;volatile
 17048  0F8E  3903               	andlw	3
 17049  0F8F  00CB               	movwf	??_Config_GP3
 17050  0F90  01CC               	clrf	??_Config_GP3+1
 17051                           
 17052                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17053                           ; Switch size 1, requested type "speed"
 17054                           ; Number of cases is 1, Range of values is 0 to 0
 17055                           ; switch strategies available:
 17056                           ; Name         Instructions Cycles
 17057                           ; simple_byte            4     3 (average)
 17058                           ; direct_byte            8     6 (fixed)
 17059                           ; jumptable            260     6 (fixed)
 17060                           ;	Chosen strategy is simple_byte
 17061  0F91  084C               	movf	??_Config_GP3+1,w
 17062  0F92  3A00               	xorlw	0	; case 0
 17063  0F93  1903               	skipnz
 17064  0F94  2F96               	goto	i1l7850
 17065  0F95  2FA6               	goto	i1l4778
 17066  0F96                     i1l7850:	
 17067                           
 17068                           ; Switch size 1, requested type "speed"
 17069                           ; Number of cases is 4, Range of values is 0 to 3
 17070                           ; switch strategies available:
 17071                           ; Name         Instructions Cycles
 17072                           ; direct_byte           14     6 (fixed)
 17073                           ; simple_byte           13     7 (average)
 17074                           ; jumptable            260     6 (fixed)
 17075                           ;	Chosen strategy is direct_byte
 17076  0F96  084B               	movf	??_Config_GP3,w
 17077  0F97  0084               	movwf	4
 17078  0F98  3004               	movlw	4
 17079  0F99  0204               	subwf	4,w
 17080  0F9A  1803               	skipnc
 17081  0F9B  2FA6               	goto	i1l4778
 17082  0F9C  3191               	movlp	high i1S7852
 17083  0F9D  3504               	lslf	4,w
 17084  0F9E  3EC4               	addlw	low i1S7852
 17085  0F9F  0082               	movwf	2
 17086  0FA0                     i1l1098:	
 17087                           ;GPports.c: 277: do { WPUCbits.WPUC0 = 0; } while(0);
 17088                           
 17089  0FA0  0024               	movlb	4	; select bank4
 17090  0FA1  100E               	bcf	14,0	;volatile
 17091  0FA2  0008               	return
 17092  0FA3                     i1l1102:	
 17093                           ;GPports.c: 280: do { WPUCbits.WPUC0 = 1; } while(0);
 17094                           
 17095  0FA3  0024               	movlb	4	; select bank4
 17096  0FA4  140E               	bsf	14,0	;volatile
 17097  0FA5  0008               	return
 17098  0FA6                     i1l4778:	
 17099  0FA6  0020               	movlb	0	; select bank0
 17100  0FA7  0846               	movf	_GP3CONF,w	;volatile
 17101  0FA8  3904               	andlw	4
 17102  0FA9  00CB               	movwf	??_Config_GP3
 17103  0FAA  01CC               	clrf	??_Config_GP3+1
 17104                           
 17105                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17106                           ; Switch size 1, requested type "speed"
 17107                           ; Number of cases is 1, Range of values is 0 to 0
 17108                           ; switch strategies available:
 17109                           ; Name         Instructions Cycles
 17110                           ; simple_byte            4     3 (average)
 17111                           ; direct_byte            8     6 (fixed)
 17112                           ; jumptable            260     6 (fixed)
 17113                           ;	Chosen strategy is simple_byte
 17114  0FAB  084C               	movf	??_Config_GP3+1,w
 17115  0FAC  3A00               	xorlw	0	; case 0
 17116  0FAD  1903               	skipnz
 17117  0FAE  2FB0               	goto	i1l7854
 17118  0FAF  2FB8               	goto	i1l1104
 17119  0FB0                     i1l7854:	
 17120                           
 17121                           ; Switch size 1, requested type "speed"
 17122                           ; Number of cases is 2, Range of values is 0 to 4
 17123                           ; switch strategies available:
 17124                           ; Name         Instructions Cycles
 17125                           ; simple_byte            7     4 (average)
 17126                           ; direct_byte           16     6 (fixed)
 17127                           ; jumptable            260     6 (fixed)
 17128                           ;	Chosen strategy is simple_byte
 17129  0FB0  084B               	movf	??_Config_GP3,w
 17130  0FB1  3A00               	xorlw	0	; case 0
 17131  0FB2  1903               	skipnz
 17132  0FB3  2FA0               	goto	i1l1098
 17133  0FB4  3A04               	xorlw	4	; case 4
 17134  0FB5  1903               	skipnz
 17135  0FB6  2FA3               	goto	i1l1102
 17136  0FB7  2FB8               	goto	i1l1104
 17137  0FB8                     i1l1104:	
 17138  0FB8  0008               	return
 17139  0FB9                     __end_of_Config_GP3:	
 17140  0FB9                     __ptext62:	
 17141 ;; *************** function _PWM3_Initialize *****************
 17142 ;; Defined at:
 17143 ;;		line 64 in file "mcc_generated_files/pwm3.c"
 17144 ;; Parameters:    Size  Location     Type
 17145 ;;		None
 17146 ;; Auto vars:     Size  Location     Type
 17147 ;;		None
 17148 ;; Return value:  Size  Location     Type
 17149 ;;                  1    wreg      void 
 17150 ;; Registers used:
 17151 ;;		wreg, status,2, status,0
 17152 ;; Tracked objects:
 17153 ;;		On entry : 1F/1C
 17154 ;;		On exit  : 1F/5
 17155 ;;		Unchanged: 0/0
 17156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17161 ;;Total ram usage:        0 bytes
 17162 ;; Hardware stack levels used:    1
 17163 ;; This function calls:
 17164 ;;		Nothing
 17165 ;; This function is called by:
 17166 ;;		_Config_GP3
 17167 ;; This function uses a non-reentrant model
 17168 ;;
 17169                           
 17170                           
 17171                           ;psect for function _PWM3_Initialize
 17172  0FB9                     _PWM3_Initialize:	
 17173                           
 17174                           ;pwm3.c: 69: CCP3CON = 0x8F;
 17175                           
 17176                           ;incstack = 0
 17177                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
 17178  0FB9  308F               	movlw	143
 17179  0FBA  0026               	movlb	6	; select bank6
 17180  0FBB  0093               	movwf	19	;volatile
 17181                           
 17182                           ;pwm3.c: 72: CCPR3H = 0x03;
 17183  0FBC  3003               	movlw	3
 17184  0FBD  0092               	movwf	18	;volatile
 17185                           
 17186                           ;pwm3.c: 75: CCPR3L = 0xFF;
 17187  0FBE  30FF               	movlw	255
 17188  0FBF  0091               	movwf	17	;volatile
 17189                           
 17190                           ;pwm3.c: 78: CCPTMRSbits.C3TSEL = 0x1;
 17191  0FC0  0025               	movlb	5	; select bank5
 17192  0FC1  081F               	movf	31,w	;volatile
 17193  0FC2  39CF               	andlw	-49
 17194  0FC3  3810               	iorlw	16
 17195  0FC4  009F               	movwf	31	;volatile
 17196  0FC5  0008               	return
 17197  0FC6                     __end_of_PWM3_Initialize:	
 17198  0FC6                     __ptext56:	
 17199 ;; *************** function _GeneralDataSplit *****************
 17200 ;; Defined at:
 17201 ;;		line 86 in file "DataVariable.c"
 17202 ;; Parameters:    Size  Location     Type
 17203 ;;		None
 17204 ;; Auto vars:     Size  Location     Type
 17205 ;;		None
 17206 ;; Return value:  Size  Location     Type
 17207 ;;                  1    wreg      void 
 17208 ;; Registers used:
 17209 ;;		wreg, status,2, status,0
 17210 ;; Tracked objects:
 17211 ;;		On entry : 1F/0
 17212 ;;		On exit  : 1F/1
 17213 ;;		Unchanged: 0/0
 17214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17217 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17218 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17219 ;;Total ram usage:        1 bytes
 17220 ;; Hardware stack levels used:    1
 17221 ;; This function calls:
 17222 ;;		Nothing
 17223 ;; This function is called by:
 17224 ;;		_RegisterWrite
 17225 ;; This function uses a non-reentrant model
 17226 ;;
 17227                           
 17228                           
 17229                           ;psect for function _GeneralDataSplit
 17230  0FC6                     _GeneralDataSplit:	
 17231                           
 17232                           ;DataVariable.c: 88: C_DTYPE = GCONF & 0x01U;
 17233                           
 17234                           ;incstack = 0
 17235                           ; Regs used in _GeneralDataSplit: [wreg+status,2+status,0]
 17236  0FC6  0849               	movf	_GCONF,w	;volatile
 17237  0FC7  00B9               	movwf	_C_DTYPE	;volatile
 17238  0FC8  3001               	movlw	1
 17239  0FC9  05B9               	andwf	_C_DTYPE,f	;volatile
 17240                           
 17241                           ;DataVariable.c: 89: C_WRAPE = (bool) (GCONF >> 1) & 0x01U;
 17242  0FCA  3649               	lsrf	_GCONF,w	;volatile
 17243  0FCB  00BA               	movwf	_C_WRAPE	;volatile
 17244  0FCC  3001               	movlw	1
 17245  0FCD  05BA               	andwf	_C_WRAPE,f	;volatile
 17246                           
 17247                           ;DataVariable.c: 90: C_DIRE = (bool) (GCONF >> 2) & 0x01U;
 17248  0FCE  0849               	movf	_GCONF,w	;volatile
 17249  0FCF  00F0               	movwf	??_GeneralDataSplit
 17250  0FD0  36F0               	lsrf	??_GeneralDataSplit,f
 17251  0FD1  36F0               	lsrf	??_GeneralDataSplit,f
 17252  0FD2  0870               	movf	??_GeneralDataSplit,w
 17253  0FD3  0021               	movlb	1	; select bank1
 17254  0FD4  00C6               	movwf	_C_DIRE^(0+128)	;volatile
 17255  0FD5  3001               	movlw	1
 17256  0FD6  05C6               	andwf	_C_DIRE^(0+128),f	;volatile
 17257                           
 17258                           ;DataVariable.c: 91: C_IPUD = (bool) (GCONF >> 3) & 0x01U;
 17259  0FD7  0020               	movlb	0	; select bank0
 17260  0FD8  0849               	movf	_GCONF,w	;volatile
 17261  0FD9  00F0               	movwf	??_GeneralDataSplit
 17262  0FDA  36F0               	lsrf	??_GeneralDataSplit,f
 17263  0FDB  36F0               	lsrf	??_GeneralDataSplit,f
 17264  0FDC  36F0               	lsrf	??_GeneralDataSplit,f
 17265  0FDD  0870               	movf	??_GeneralDataSplit,w
 17266  0FDE  0021               	movlb	1	; select bank1
 17267  0FDF  00C7               	movwf	_C_IPUD^(0+128)	;volatile
 17268  0FE0  3001               	movlw	1
 17269  0FE1  05C7               	andwf	_C_IPUD^(0+128),f	;volatile
 17270                           
 17271                           ;DataVariable.c: 92: C_CKSRC = (bool) (GCONF >> 4) & 0x01U;
 17272  0FE2  0020               	movlb	0	; select bank0
 17273  0FE3  0E49               	swapf	_GCONF,w	;volatile
 17274  0FE4  390F               	andlw	15
 17275  0FE5  0021               	movlb	1	; select bank1
 17276  0FE6  00C8               	movwf	_C_CKSRC^(0+128)	;volatile
 17277  0FE7  3001               	movlw	1
 17278  0FE8  05C8               	andwf	_C_CKSRC^(0+128),f	;volatile
 17279                           
 17280                           ;DataVariable.c: 93: C_MBANK = (bool) (GCONF >> 5) & 0x01U;
 17281  0FE9  0020               	movlb	0	; select bank0
 17282  0FEA  0849               	movf	_GCONF,w	;volatile
 17283  0FEB  00F0               	movwf	??_GeneralDataSplit
 17284  0FEC  3005               	movlw	5
 17285  0FED                     u219_25:	
 17286  0FED  36F0               	lsrf	??_GeneralDataSplit,f
 17287  0FEE  0B89               	decfsz	9,f
 17288  0FEF  2FED               	goto	u219_25
 17289  0FF0  0870               	movf	??_GeneralDataSplit,w
 17290  0FF1  00BB               	movwf	_C_MBANK	;volatile
 17291  0FF2  3001               	movlw	1
 17292  0FF3  05BB               	andwf	_C_MBANK,f	;volatile
 17293                           
 17294                           ;DataVariable.c: 94: C_RESET = (bool) (GCONF >> 7) & 0x01U;
 17295  0FF4  0849               	movf	_GCONF,w	;volatile
 17296  0FF5  00F0               	movwf	??_GeneralDataSplit
 17297  0FF6  3007               	movlw	7
 17298  0FF7                     u220_25:	
 17299  0FF7  36F0               	lsrf	??_GeneralDataSplit,f
 17300  0FF8  0B89               	decfsz	9,f
 17301  0FF9  2FF7               	goto	u220_25
 17302  0FFA  0870               	movf	??_GeneralDataSplit,w
 17303  0FFB  0021               	movlb	1	; select bank1
 17304  0FFC  00C9               	movwf	_C_RESET^(0+128)	;volatile
 17305  0FFD  3001               	movlw	1
 17306  0FFE  05C9               	andwf	_C_RESET^(0+128),f	;volatile
 17307  0FFF  0008               	return
 17308  1000                     __end_of_GeneralDataSplit:	
 17309                           
 17310                           	psect	swtext6
 17311  1100                     __pswtext6:	
 17312  1100                     i1S7848:	
 17313  1100  318C  2C08         	ljmp	i1l5088
 17314  1102  318C  2C0F         	ljmp	i1l5094
 17315  1104  318C  2C14         	ljmp	i1l5098
 17316  1106  318C  2C19         	ljmp	i1l5102
 17317  1108  318C  2C1E         	ljmp	i1l5106
 17318  110A  318C  2C21         	ljmp	i1l5108
 17319  110C  318C  2CBB         	ljmp	i1l5186
 17320  110E  318C  2CBB         	ljmp	i1l5186
 17321  1110  318C  2CBB         	ljmp	i1l5186
 17322  1112  318C  2CBB         	ljmp	i1l5186
 17323  1114  318C  2C24         	ljmp	i1l5110
 17324  1116  318C  2C27         	ljmp	i1l5112
 17325  1118  318C  2C2A         	ljmp	i1l5114
 17326  111A  318C  2C2D         	ljmp	i1l5116
 17327  111C  318C  2C30         	ljmp	i1l5118
 17328  111E  318C  2C33         	ljmp	i1l5120
 17329  1120  318C  2C36         	ljmp	i1l5122
 17330  1122  318C  2C39         	ljmp	i1l5124
 17331  1124  318C  2C3C         	ljmp	i1l5126
 17332  1126  318C  2C3F         	ljmp	i1l5128
 17333  1128  318C  2C42         	ljmp	i1l5130
 17334  112A  318C  2C45         	ljmp	i1l5132
 17335  112C  318C  2C48         	ljmp	i1l5134
 17336  112E  318C  2C4B         	ljmp	i1l5136
 17337  1130  318C  2C4E         	ljmp	i1l5138
 17338  1132  318C  2C51         	ljmp	i1l5140
 17339  1134  318C  2C54         	ljmp	i1l5142
 17340  1136  318C  2C60         	ljmp	i1l5148
 17341  1138  318C  2C6C         	ljmp	i1l5154
 17342  113A  318C  2C78         	ljmp	i1l5160
 17343  113C  318C  2C93         	ljmp	i1l5168
 17344  113E  318C  2C96         	ljmp	i1l5170
 17345  1140  318C  2C9F         	ljmp	i1l5174
 17346  1142  318C  2CA8         	ljmp	i1l5178
 17347                           
 17348                           	psect	text52
 17349  1144                     __ptext52:	
 17350 ;; *************** function _eeprom_write *****************
 17351 ;; Defined at:
 17352 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\pic\__eewrite.c"
 17353 ;; Parameters:    Size  Location     Type
 17354 ;;  addr            1    wreg     unsigned char 
 17355 ;;  value           1    0[COMMON] unsigned char 
 17356 ;; Auto vars:     Size  Location     Type
 17357 ;;  addr            1    1[COMMON] unsigned char 
 17358 ;; Return value:  Size  Location     Type
 17359 ;;                  1    wreg      void 
 17360 ;; Registers used:
 17361 ;;		wreg, status,2
 17362 ;; Tracked objects:
 17363 ;;		On entry : 1F/0
 17364 ;;		On exit  : 1F/11
 17365 ;;		Unchanged: 0/0
 17366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17367 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17368 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17370 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17371 ;;Total ram usage:        2 bytes
 17372 ;; Hardware stack levels used:    1
 17373 ;; This function calls:
 17374 ;;		Nothing
 17375 ;; This function is called by:
 17376 ;;		_RegisterWrite
 17377 ;; This function uses a non-reentrant model
 17378 ;;
 17379                           
 17380                           
 17381                           ;psect for function _eeprom_write
 17382  1144                     _eeprom_write:	
 17383                           
 17384                           ;incstack = 0
 17385                           ; Regs used in _eeprom_write: [wreg+status,2]
 17386                           ;eeprom_write@addr stored from wreg
 17387  1144  00F1               	movwf	eeprom_write@addr
 17388  1145                     i1l1579:	
 17389                           ;__eewrite.c: 8: do { while (NVMCON1bits.WR) { continue; } NVMCON1bits.NVMREGS = 1; NVMA
      +                          DRL = (addr) & 0xFFU; NVMADRH = 0x70; NVMDATH = 0; NVMDATL = (value) & 0xFFU; STATUSbits
      +                          .CARRY = 0; if (INTCONbits.GIE) { STATUSbits.CARRY = 1; } INTCONbits.GIE = 0; NVMCON1bit
      +                          s.W
 17390                           
 17391  1145  0031               	movlb	17	; select bank17
 17392  1146  1895               	btfsc	21,1	;volsfr
 17393  1147  2945               	goto	i1l1579
 17394  1148  1715               	bsf	21,6	;volsfr
 17395  1149  0871               	movf	eeprom_write@addr,w
 17396  114A  0091               	movwf	17	;volatile
 17397  114B  3070               	movlw	112
 17398  114C  0092               	movwf	18	;volatile
 17399  114D  0194               	clrf	20	;volatile
 17400  114E  0870               	movf	eeprom_write@value,w
 17401  114F  0093               	movwf	19	;volatile
 17402  1150  1003               	bcf	3,0	;volatile
 17403  1151  1B8B               	btfsc	11,7	;volatile
 17404  1152  1403               	bsf	3,0	;volatile
 17405  1153  138B               	bcf	11,7	;volatile
 17406  1154  1515               	bsf	21,2	;volsfr
 17407  1155  3055               	movlw	85
 17408  1156  0096               	movwf	22	;volsfr
 17409  1157  30AA               	movlw	170
 17410  1158  0096               	movwf	22	;volsfr
 17411  1159  1495               	bsf	21,1	;volsfr
 17412  115A                     i1l1583:	
 17413  115A  1895               	btfsc	21,1	;volsfr
 17414  115B  295A               	goto	i1l1583
 17415  115C  1115               	bcf	21,2	;volsfr
 17416  115D  1803               	btfsc	3,0	;volatile
 17417  115E  178B               	bsf	11,7	;volatile
 17418  115F  0008               	return
 17419  1160                     __end_of_eeprom_write:	
 17420                           
 17421                           	psect	text53
 17422  1160                     __ptext53:	
 17423 ;; *************** function _UpdateOut_GP3 *****************
 17424 ;; Defined at:
 17425 ;;		line 330 in file "GPports.c"
 17426 ;; Parameters:    Size  Location     Type
 17427 ;;		None
 17428 ;; Auto vars:     Size  Location     Type
 17429 ;;		None
 17430 ;; Return value:  Size  Location     Type
 17431 ;;                  1    wreg      void 
 17432 ;; Registers used:
 17433 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17434 ;; Tracked objects:
 17435 ;;		On entry : 1F/0
 17436 ;;		On exit  : 19/0
 17437 ;;		Unchanged: 0/0
 17438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17441 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17442 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17443 ;;Total ram usage:        1 bytes
 17444 ;; Hardware stack levels used:    1
 17445 ;; Hardware stack levels required when called:    2
 17446 ;; This function calls:
 17447 ;;		i1_PWM_GP3
 17448 ;; This function is called by:
 17449 ;;		_RegisterWrite
 17450 ;; This function uses a non-reentrant model
 17451 ;;
 17452                           
 17453                           
 17454                           ;psect for function _UpdateOut_GP3
 17455  1160                     _UpdateOut_GP3:	
 17456                           
 17457                           ;GPports.c: 331: if ((GP3CONF & 0x03) == 0x01) {
 17458                           
 17459                           ;incstack = 0
 17460                           ; Regs used in _UpdateOut_GP3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17461  1160  3003               	movlw	3
 17462  1161  0546               	andwf	_GP3CONF,w	;volatile
 17463  1162  00CB               	movwf	??_UpdateOut_GP3
 17464  1163  0B4B               	decfsz	??_UpdateOut_GP3,w
 17465  1164  2971               	goto	i1l4828
 17466                           
 17467                           ;GPports.c: 332: if (GP3REG == 0) {
 17468  1165  0841               	movf	_GP3REG,w	;volatile
 17469  1166  1D03               	btfss	3,2
 17470  1167  296B               	goto	i1l1136
 17471                           
 17472                           ;GPports.c: 333: do { LATCbits.LATC0 = 0; } while(0);
 17473  1168  0022               	movlb	2	; select bank2
 17474  1169  100E               	bcf	14,0	;volatile
 17475  116A  0008               	return
 17476  116B                     i1l1136:	
 17477                           ;GPports.c: 335: do { LATCbits.LATC0 = 1; } while(0);
 17478                           
 17479  116B  0022               	movlb	2	; select bank2
 17480  116C  140E               	bsf	14,0	;volatile
 17481                           
 17482                           ;GPports.c: 336: GP3REG = 1;
 17483  116D  3001               	movlw	1
 17484  116E  0020               	movlb	0	; select bank0
 17485  116F  00C1               	movwf	_GP3REG	;volatile
 17486  1170  0008               	return
 17487  1171                     i1l4828:	
 17488                           
 17489                           ;GPports.c: 339: };GPports.c: 340: if ((GP3CONF & 0x03) == 0x00) {
 17490  1171  0846               	movf	_GP3CONF,w	;volatile
 17491  1172  3903               	andlw	3
 17492  1173  1D03               	btfss	3,2
 17493  1174  0008               	return
 17494                           
 17495                           ;GPports.c: 341: if (FADEGP == 0) {
 17496  1175  083F               	movf	_FADEGP,w	;volatile
 17497  1176  1D03               	btfss	3,2
 17498  1177  0008               	return
 17499                           
 17500                           ;GPports.c: 342: PWM_GP3(GP3REG);
 17501  1178  0841               	movf	_GP3REG,w	;volatile
 17502  1179  318D  253A         	fcall	i1_PWM_GP3
 17503  117B  0008               	return
 17504  117C                     __end_of_UpdateOut_GP3:	
 17505                           
 17506                           	psect	text54
 17507  117C                     __ptext54:	
 17508 ;; *************** function _UpdateOut_GP2 *****************
 17509 ;; Defined at:
 17510 ;;		line 309 in file "GPports.c"
 17511 ;; Parameters:    Size  Location     Type
 17512 ;;		None
 17513 ;; Auto vars:     Size  Location     Type
 17514 ;;		None
 17515 ;; Return value:  Size  Location     Type
 17516 ;;                  1    wreg      void 
 17517 ;; Registers used:
 17518 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17519 ;; Tracked objects:
 17520 ;;		On entry : 1F/0
 17521 ;;		On exit  : 18/0
 17522 ;;		Unchanged: 0/0
 17523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17526 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17527 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17528 ;;Total ram usage:        1 bytes
 17529 ;; Hardware stack levels used:    1
 17530 ;; Hardware stack levels required when called:    2
 17531 ;; This function calls:
 17532 ;;		i1_PWM_GP2
 17533 ;; This function is called by:
 17534 ;;		_RegisterWrite
 17535 ;; This function uses a non-reentrant model
 17536 ;;
 17537                           
 17538                           
 17539                           ;psect for function _UpdateOut_GP2
 17540  117C                     _UpdateOut_GP2:	
 17541                           
 17542                           ;GPports.c: 310: if ((GP2CONF & 0x03) == 0x01) {
 17543                           
 17544                           ;incstack = 0
 17545                           ; Regs used in _UpdateOut_GP2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17546  117C  3003               	movlw	3
 17547  117D  0547               	andwf	_GP2CONF,w	;volatile
 17548  117E  00CB               	movwf	??_UpdateOut_GP2
 17549  117F  0B4B               	decfsz	??_UpdateOut_GP2,w
 17550  1180  298D               	goto	i1l4814
 17551                           
 17552                           ;GPports.c: 311: if (GP2REG == 0) {
 17553  1181  0842               	movf	_GP2REG,w	;volatile
 17554  1182  1D03               	btfss	3,2
 17555  1183  2987               	goto	i1l1124
 17556                           
 17557                           ;GPports.c: 312: do { LATCbits.LATC1 = 0; } while(0);
 17558  1184  0022               	movlb	2	; select bank2
 17559  1185  108E               	bcf	14,1	;volatile
 17560  1186  0008               	return
 17561  1187                     i1l1124:	
 17562                           ;GPports.c: 314: do { LATCbits.LATC1 = 1; } while(0);
 17563                           
 17564  1187  0022               	movlb	2	; select bank2
 17565  1188  148E               	bsf	14,1	;volatile
 17566                           
 17567                           ;GPports.c: 315: GP2REG = 1;
 17568  1189  3001               	movlw	1
 17569  118A  0020               	movlb	0	; select bank0
 17570  118B  00C2               	movwf	_GP2REG	;volatile
 17571  118C  0008               	return
 17572  118D                     i1l4814:	
 17573                           
 17574                           ;GPports.c: 318: };GPports.c: 320: if ((GP2CONF & 0x03) == 0x00) {
 17575  118D  0847               	movf	_GP2CONF,w	;volatile
 17576  118E  3903               	andlw	3
 17577  118F  1D03               	btfss	3,2
 17578  1190  0008               	return
 17579                           
 17580                           ;GPports.c: 321: if (FADEGP == 0) {
 17581  1191  083F               	movf	_FADEGP,w	;volatile
 17582  1192  1D03               	btfss	3,2
 17583  1193  0008               	return
 17584                           
 17585                           ;GPports.c: 322: PWM_GP2(GP2REG);
 17586  1194  0842               	movf	_GP2REG,w	;volatile
 17587  1195  318D  25B8         	fcall	i1_PWM_GP2
 17588  1197  0008               	return
 17589  1198                     __end_of_UpdateOut_GP2:	
 17590                           
 17591                           	psect	text55
 17592  1198                     __ptext55:	
 17593 ;; *************** function _UpdateOut_GP1 *****************
 17594 ;; Defined at:
 17595 ;;		line 289 in file "GPports.c"
 17596 ;; Parameters:    Size  Location     Type
 17597 ;;		None
 17598 ;; Auto vars:     Size  Location     Type
 17599 ;;		None
 17600 ;; Return value:  Size  Location     Type
 17601 ;;                  1    wreg      void 
 17602 ;; Registers used:
 17603 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17604 ;; Tracked objects:
 17605 ;;		On entry : 1F/0
 17606 ;;		On exit  : 18/0
 17607 ;;		Unchanged: 0/0
 17608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17611 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17612 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17613 ;;Total ram usage:        1 bytes
 17614 ;; Hardware stack levels used:    1
 17615 ;; Hardware stack levels required when called:    2
 17616 ;; This function calls:
 17617 ;;		i1_PWM_GP1
 17618 ;; This function is called by:
 17619 ;;		_RegisterWrite
 17620 ;; This function uses a non-reentrant model
 17621 ;;
 17622                           
 17623                           
 17624                           ;psect for function _UpdateOut_GP1
 17625  1198                     _UpdateOut_GP1:	
 17626                           
 17627                           ;GPports.c: 290: if ((GP1CONF & 0x03) == 0x01) {
 17628                           
 17629                           ;incstack = 0
 17630                           ; Regs used in _UpdateOut_GP1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17631  1198  3003               	movlw	3
 17632  1199  0548               	andwf	_GP1CONF,w	;volatile
 17633  119A  00CB               	movwf	??_UpdateOut_GP1
 17634  119B  0B4B               	decfsz	??_UpdateOut_GP1,w
 17635  119C  29A9               	goto	i1l4800
 17636                           
 17637                           ;GPports.c: 291: if (GP1REG == 0) {
 17638  119D  0843               	movf	_GP1REG,w	;volatile
 17639  119E  1D03               	btfss	3,2
 17640  119F  29A3               	goto	i1l1112
 17641                           
 17642                           ;GPports.c: 292: do { LATCbits.LATC2 = 0; } while(0);
 17643  11A0  0022               	movlb	2	; select bank2
 17644  11A1  110E               	bcf	14,2	;volatile
 17645  11A2  0008               	return
 17646  11A3                     i1l1112:	
 17647                           ;GPports.c: 294: do { LATCbits.LATC2 = 1; } while(0);
 17648                           
 17649  11A3  0022               	movlb	2	; select bank2
 17650  11A4  150E               	bsf	14,2	;volatile
 17651                           
 17652                           ;GPports.c: 295: GP1REG = 1;
 17653  11A5  3001               	movlw	1
 17654  11A6  0020               	movlb	0	; select bank0
 17655  11A7  00C3               	movwf	_GP1REG	;volatile
 17656  11A8  0008               	return
 17657  11A9                     i1l4800:	
 17658                           
 17659                           ;GPports.c: 298: };GPports.c: 299: if ((GP1CONF & 0x03) == 0x00) {
 17660  11A9  0848               	movf	_GP1CONF,w	;volatile
 17661  11AA  3903               	andlw	3
 17662  11AB  1D03               	btfss	3,2
 17663  11AC  0008               	return
 17664                           
 17665                           ;GPports.c: 300: if (FADEGP == 0) {
 17666  11AD  083F               	movf	_FADEGP,w	;volatile
 17667  11AE  1D03               	btfss	3,2
 17668  11AF  0008               	return
 17669                           
 17670                           ;GPports.c: 301: PWM_GP1(GP1REG);
 17671  11B0  0843               	movf	_GP1REG,w	;volatile
 17672  11B1  318E  2636         	fcall	i1_PWM_GP1
 17673  11B3  0008               	return
 17674  11B4                     __end_of_UpdateOut_GP1:	
 17675                           
 17676                           	psect	text57
 17677  09CD                     __ptext57:	
 17678 ;; *************** function _GeneralDataSet *****************
 17679 ;; Defined at:
 17680 ;;		line 449 in file "i2c_register.c"
 17681 ;; Parameters:    Size  Location     Type
 17682 ;;		None
 17683 ;; Auto vars:     Size  Location     Type
 17684 ;;		None
 17685 ;; Return value:  Size  Location     Type
 17686 ;;                  1    wreg      void 
 17687 ;; Registers used:
 17688 ;;		wreg, status,2, status,0, pclath, cstack
 17689 ;; Tracked objects:
 17690 ;;		On entry : 1F/1
 17691 ;;		On exit  : 0/0
 17692 ;;		Unchanged: 0/0
 17693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17698 ;;Total ram usage:        0 bytes
 17699 ;; Hardware stack levels used:    1
 17700 ;; Hardware stack levels required when called:    1
 17701 ;; This function calls:
 17702 ;;		_I2C1_Initialize_ClockStreach
 17703 ;;		i1_I2C1_Initialize
 17704 ;; This function is called by:
 17705 ;;		_RegisterWrite
 17706 ;; This function uses a non-reentrant model
 17707 ;;
 17708                           
 17709                           
 17710                           ;psect for function _GeneralDataSet
 17711  09CD                     _GeneralDataSet:	
 17712                           
 17713                           ;i2c_register.c: 451: if (C_DIRE == 0) {
 17714                           
 17715                           ;incstack = 0
 17716                           ; Regs used in _GeneralDataSet: [wreg+status,2+status,0+pclath+cstack]
 17717  09CD  0846               	movf	_C_DIRE^(0+128),w	;volatile
 17718                           
 17719                           ;i2c_register.c: 452: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 17720  09CE  3055               	movlw	85
 17721  09CF  1D03               	btfss	3,2
 17722  09D0  29E4               	goto	L7
 17723  09D1  003C               	movlb	28	; select bank28
 17724  09D2  008F               	movwf	15	;volsfr
 17725  09D3  30AA               	movlw	170
 17726  09D4  008F               	movwf	15	;volsfr
 17727  09D5  100F               	bcf	15,0	;volsfr
 17728                           
 17729                           ;i2c_register.c: 453: CLCIN1PPSbits.CLCIN1PPS = 0x14;
 17730  09D6  0829               	movf	41,w	;volatile
 17731  09D7  39E0               	andlw	-32
 17732  09D8  3814               	iorlw	20
 17733  09D9  00A9               	movwf	41	;volatile
 17734                           
 17735                           ;i2c_register.c: 454: CLCIN0PPSbits.CLCIN0PPS = 0x15;
 17736  09DA  0828               	movf	40,w	;volatile
 17737  09DB  39E0               	andlw	-32
 17738  09DC  3815               	iorlw	21
 17739  09DD  00A8               	movwf	40	;volatile
 17740                           
 17741                           ;i2c_register.c: 455: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 17742  09DE  3055               	movlw	85
 17743  09DF  008F               	movwf	15	;volsfr
 17744  09E0  30AA               	movlw	170
 17745  09E1  008F               	movwf	15	;volsfr
 17746  09E2  140F               	bsf	15,0	;volsfr
 17747                           
 17748                           ;i2c_register.c: 456: } else {
 17749  09E3  29F6               	goto	i1l4630
 17750  09E4                     L7:	
 17751                           ;i2c_register.c: 457: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 17752                           
 17753  09E4  003C               	movlb	28	; select bank28
 17754  09E5  008F               	movwf	15	;volsfr
 17755  09E6  30AA               	movlw	170
 17756  09E7  008F               	movwf	15	;volsfr
 17757  09E8  100F               	bcf	15,0	;volsfr
 17758                           
 17759                           ;i2c_register.c: 458: CLCIN1PPSbits.CLCIN1PPS = 0x15;
 17760  09E9  0829               	movf	41,w	;volatile
 17761  09EA  39E0               	andlw	-32
 17762  09EB  3815               	iorlw	21
 17763  09EC  00A9               	movwf	41	;volatile
 17764                           
 17765                           ;i2c_register.c: 459: CLCIN0PPSbits.CLCIN0PPS = 0x14;
 17766  09ED  0828               	movf	40,w	;volatile
 17767  09EE  39E0               	andlw	-32
 17768  09EF  3814               	iorlw	20
 17769  09F0  00A8               	movwf	40	;volatile
 17770                           
 17771                           ;i2c_register.c: 460: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 17772  09F1  3055               	movlw	85
 17773  09F2  008F               	movwf	15	;volsfr
 17774  09F3  30AA               	movlw	170
 17775  09F4  008F               	movwf	15	;volsfr
 17776  09F5  140F               	bsf	15,0	;volsfr
 17777  09F6                     i1l4630:	
 17778                           
 17779                           ;i2c_register.c: 461: };i2c_register.c: 463: if (C_IPUD == 1) {
 17780  09F6  0021               	movlb	1	; select bank1
 17781  09F7  0B47               	decfsz	_C_IPUD^(0+128),w	;volatile
 17782  09F8  29FC               	goto	i1l868
 17783                           
 17784                           ;i2c_register.c: 464: do { WPUBbits.WPUB5 = 0; } while(0);
 17785  09F9  0024               	movlb	4	; select bank4
 17786  09FA  128D               	bcf	13,5	;volatile
 17787  09FB  29FE               	goto	i1l870
 17788  09FC                     i1l868:	
 17789                           ;i2c_register.c: 467: do { WPUBbits.WPUB5 = 1; } while(0);
 17790                           
 17791                           ;i2c_register.c: 465: do { LATBbits.LATB5 = 1; } while(0);
 17792                           
 17793  09FC  0024               	movlb	4	; select bank4
 17794  09FD  168D               	bsf	13,5	;volatile
 17795  09FE                     i1l870:	
 17796                           ;i2c_register.c: 468: do { LATBbits.LATB5 = 1; } while(0);
 17797                           
 17798  09FE  0022               	movlb	2	; select bank2
 17799  09FF  168D               	bsf	13,5	;volatile
 17800                           
 17801                           ;i2c_register.c: 470: };i2c_register.c: 473: if (C_CKSRC == 1) {
 17802  0A00  0021               	movlb	1	; select bank1
 17803  0A01  0B48               	decfsz	_C_CKSRC^(0+128),w	;volatile
 17804  0A02  2A06               	goto	i1l4636
 17805                           
 17806                           ;i2c_register.c: 474: I2C1_Initialize_ClockStreach();
 17807  0A03  220C  3189         	fcall	_I2C1_Initialize_ClockStreach
 17808                           
 17809                           ;i2c_register.c: 475: } else {
 17810  0A05  2A08               	goto	i1l4638
 17811  0A06                     i1l4636:	
 17812                           
 17813                           ;i2c_register.c: 476: I2C1_Initialize();
 17814  0A06  2220  3189         	fcall	i1_I2C1_Initialize
 17815  0A08                     i1l4638:	
 17816                           
 17817                           ;i2c_register.c: 477: };i2c_register.c: 479: if (C_RESET == 1) {
 17818  0A08  0B49               	decfsz	_C_RESET^(0+128),w	;volatile
 17819  0A09  0008               	return
 17820  0A0A  0001               	reset	;# 
 17821  0A0B  0008               	return
 17822  0A0C                     __end_of_GeneralDataSet:	
 17823  0A0C                     __ptext59:	
 17824 ;; *************** function _I2C1_Initialize_ClockStreach *****************
 17825 ;; Defined at:
 17826 ;;		line 100 in file "mcc_generated_files/i2c1.c"
 17827 ;; Parameters:    Size  Location     Type
 17828 ;;		None
 17829 ;; Auto vars:     Size  Location     Type
 17830 ;;		None
 17831 ;; Return value:  Size  Location     Type
 17832 ;;                  1    wreg      void 
 17833 ;; Registers used:
 17834 ;;		wreg, status,2
 17835 ;; Tracked objects:
 17836 ;;		On entry : 1F/1
 17837 ;;		On exit  : 1F/1
 17838 ;;		Unchanged: 0/0
 17839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17844 ;;Total ram usage:        0 bytes
 17845 ;; Hardware stack levels used:    1
 17846 ;; This function calls:
 17847 ;;		Nothing
 17848 ;; This function is called by:
 17849 ;;		_GeneralDataSet
 17850 ;; This function uses a non-reentrant model
 17851 ;;
 17852                           
 17853                           
 17854                           ;psect for function _I2C1_Initialize_ClockStreach
 17855  0A0C                     _I2C1_Initialize_ClockStreach:	
 17856                           
 17857                           ;i2c1.c: 103: SSP1CON1 = 0x00;
 17858                           
 17859                           ;incstack = 0
 17860                           ; Regs used in _I2C1_Initialize_ClockStreach: [wreg+status,2]
 17861  0A0C  0024               	movlb	4	; select bank4
 17862  0A0D  0195               	clrf	21	;volatile
 17863                           
 17864                           ;i2c1.c: 104: SSP1CON2 = 0x00;
 17865  0A0E  0196               	clrf	22	;volatile
 17866                           
 17867                           ;i2c1.c: 106: SSP1STAT = 0x00;
 17868  0A0F  0194               	clrf	20	;volatile
 17869                           
 17870                           ;i2c1.c: 108: SSP1CON1 = 0x26;
 17871  0A10  3026               	movlw	38
 17872  0A11  0095               	movwf	21	;volatile
 17873                           
 17874                           ;i2c1.c: 110: SSP1CON2 = 0x01;
 17875  0A12  3001               	movlw	1
 17876  0A13  0096               	movwf	22	;volatile
 17877                           
 17878                           ;i2c1.c: 112: SSP1CON3 = 0x00;
 17879  0A14  0197               	clrf	23	;volatile
 17880                           
 17881                           ;i2c1.c: 114: SSP1MSK = (0x7F << 1);
 17882  0A15  30FE               	movlw	254
 17883  0A16  0093               	movwf	19	;volatile
 17884                           
 17885                           ;i2c1.c: 116: SSP1ADD = i2c_address;
 17886  0A17  0020               	movlb	0	; select bank0
 17887  0A18  085E               	movf	_i2c_address,w	;volatile
 17888  0A19  0024               	movlb	4	; select bank4
 17889  0A1A  0092               	movwf	18	;volatile
 17890                           
 17891                           ;i2c1.c: 119: PIR1bits.SSP1IF = 0;
 17892  0A1B  0020               	movlb	0	; select bank0
 17893  0A1C  1191               	bcf	17,3	;volatile
 17894                           
 17895                           ;i2c1.c: 121: PIE1bits.SSP1IE = 1;
 17896  0A1D  0021               	movlb	1	; select bank1
 17897  0A1E  1591               	bsf	17,3	;volatile
 17898  0A1F  0008               	return
 17899  0A20                     __end_of_I2C1_Initialize_ClockStreach:	
 17900  0A20                     __ptext58:	
 17901 ;; *************** function i1_I2C1_Initialize *****************
 17902 ;; Defined at:
 17903 ;;		line 75 in file "mcc_generated_files/i2c1.c"
 17904 ;; Parameters:    Size  Location     Type
 17905 ;;		None
 17906 ;; Auto vars:     Size  Location     Type
 17907 ;;		None
 17908 ;; Return value:  Size  Location     Type
 17909 ;;                  1    wreg      void 
 17910 ;; Registers used:
 17911 ;;		wreg, status,2
 17912 ;; Tracked objects:
 17913 ;;		On entry : 1F/1
 17914 ;;		On exit  : 1F/1
 17915 ;;		Unchanged: 0/0
 17916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17921 ;;Total ram usage:        0 bytes
 17922 ;; Hardware stack levels used:    1
 17923 ;; This function calls:
 17924 ;;		Nothing
 17925 ;; This function is called by:
 17926 ;;		_GeneralDataSet
 17927 ;; This function uses a non-reentrant model
 17928 ;;
 17929                           
 17930                           
 17931                           ;psect for function i1_I2C1_Initialize
 17932  0A20                     i1_I2C1_Initialize:	
 17933                           
 17934                           ;i2c1.c: 78: SSP1CON1 = 0x00;
 17935                           
 17936                           ;incstack = 0
 17937                           ; Regs used in i1_I2C1_Initialize: [wreg+status,2]
 17938  0A20  0024               	movlb	4	; select bank4
 17939  0A21  0195               	clrf	21	;volatile
 17940                           
 17941                           ;i2c1.c: 79: SSP1CON2 = 0x00;
 17942  0A22  0196               	clrf	22	;volatile
 17943                           
 17944                           ;i2c1.c: 81: SSP1STAT = 0x00;
 17945  0A23  0194               	clrf	20	;volatile
 17946                           
 17947                           ;i2c1.c: 83: SSP1CON1 = 0x26;
 17948  0A24  3026               	movlw	38
 17949  0A25  0095               	movwf	21	;volatile
 17950                           
 17951                           ;i2c1.c: 85: SSP1CON2 = 0x00;
 17952  0A26  0196               	clrf	22	;volatile
 17953                           
 17954                           ;i2c1.c: 87: SSP1CON3 = 0x00;
 17955  0A27  0197               	clrf	23	;volatile
 17956                           
 17957                           ;i2c1.c: 89: SSP1MSK = (0x7F << 1);
 17958  0A28  30FE               	movlw	254
 17959  0A29  0093               	movwf	19	;volatile
 17960                           
 17961                           ;i2c1.c: 91: SSP1ADD = i2c_address;
 17962  0A2A  0020               	movlb	0	; select bank0
 17963  0A2B  085E               	movf	_i2c_address,w	;volatile
 17964  0A2C  0024               	movlb	4	; select bank4
 17965  0A2D  0092               	movwf	18	;volatile
 17966                           
 17967                           ;i2c1.c: 94: PIR1bits.SSP1IF = 0;
 17968  0A2E  0020               	movlb	0	; select bank0
 17969  0A2F  1191               	bcf	17,3	;volatile
 17970                           
 17971                           ;i2c1.c: 96: PIE1bits.SSP1IE = 1;
 17972  0A30  0021               	movlb	1	; select bank1
 17973  0A31  1591               	bsf	17,3	;volatile
 17974  0A32  0008               	return
 17975  0A33                     __end_ofi1_I2C1_Initialize:	
 17976                           
 17977                           	psect	swtext7
 17978  11C4                     __pswtext7:	
 17979  11C4                     i1S7852:	
 17980  11C4  318F  2F5F         	ljmp	i1l1072
 17981  11C6  318F  2F7C         	ljmp	i1l1080
 17982  11C8  318F  2F83         	ljmp	i1l1087
 17983  11CA  318F  2F87         	ljmp	i1l1092
 17984                           
 17985                           	psect	swtext8
 17986  11CC                     __pswtext8:	
 17987  11CC                     i1S7858:	
 17988  11CC  318E  2EE7         	ljmp	i1l1035
 17989  11CE  318F  2F04         	ljmp	i1l1043
 17990  11D0  318F  2F0B         	ljmp	i1l1050
 17991  11D2  318F  2F0F         	ljmp	i1l1055
 17992                           
 17993                           	psect	swtext9
 17994  11D4                     __pswtext9:	
 17995  11D4                     i1S7864:	
 17996  11D4  318C  2CE0         	ljmp	i1l998
 17997  11D6  318C  2CFD         	ljmp	i1l1006
 17998  11D8  318D  2D04         	ljmp	i1l1013
 17999  11DA  318D  2D08         	ljmp	i1l1018
 18000                           
 18001                           	psect	swtext10
 18002  1000                     __pswtext10:	
 18003  1000                     i1S7868:	
 18004  1000  318A  2A9C         	ljmp	i1l5202
 18005  1002  318A  2A9E         	ljmp	i1l5204
 18006  1004  318A  2AA0         	ljmp	i1l5206
 18007  1006  318A  2AA2         	ljmp	i1l5208
 18008  1008  318A  2AA4         	ljmp	i1l5210
 18009  100A  318A  2AA6         	ljmp	i1l5212
 18010  100C  318A  2AA8         	ljmp	i1l5214
 18011  100E  318A  2AAA         	ljmp	i1l5216
 18012  1010  318A  2AB0         	ljmp	i1l5218
 18013  1012  318A  2AB6         	ljmp	i1l5220
 18014  1014  318A  2AB8         	ljmp	i1l5222
 18015  1016  318A  2ABA         	ljmp	i1l5224
 18016  1018  318A  2ABC         	ljmp	i1l5226
 18017  101A  318A  2ABE         	ljmp	i1l5228
 18018  101C  318A  2AC0         	ljmp	i1l5230
 18019  101E  318A  2AC2         	ljmp	i1l5232
 18020  1020  318A  2AC4         	ljmp	i1l5234
 18021  1022  318A  2AC6         	ljmp	i1l5236
 18022  1024  318A  2AC8         	ljmp	i1l5238
 18023  1026  318A  2ACA         	ljmp	i1l5240
 18024  1028  318A  2ACC         	ljmp	i1l5242
 18025  102A  318A  2ACE         	ljmp	i1l5244
 18026  102C  318A  2AD0         	ljmp	i1l5246
 18027  102E  318A  2AD2         	ljmp	i1l5248
 18028  1030  318A  2AD4         	ljmp	i1l5250
 18029  1032  318A  2AD6         	ljmp	i1l5252
 18030  1034  318A  2AD8         	ljmp	i1l5254
 18031  1036  318A  2ADA         	ljmp	i1l5256
 18032  1038  318A  2ADC         	ljmp	i1l5258
 18033  103A  318A  2ADE         	ljmp	i1l5260
 18034  103C  318A  2AE0         	ljmp	i1l5262
 18035  103E  318A  2AE2         	ljmp	i1l5264
 18036  1040  318A  2AE4         	ljmp	i1l5266
 18037  1042  318A  2AE6         	ljmp	i1l5268
 18038  1044  318A  2AED         	ljmp	i1l5274
 18039  1046  318A  2AED         	ljmp	i1l5274
 18040  1048  318A  2AED         	ljmp	i1l5274
 18041  104A  318A  2AED         	ljmp	i1l5274
 18042  104C  318A  2AED         	ljmp	i1l5274
 18043  104E  318A  2AED         	ljmp	i1l5274
 18044  1050  318A  2AED         	ljmp	i1l5274
 18045  1052  318A  2AED         	ljmp	i1l5274
 18046  1054  318A  2AED         	ljmp	i1l5274
 18047  1056  318A  2AED         	ljmp	i1l5274
 18048  1058  318A  2AED         	ljmp	i1l5274
 18049  105A  318A  2AED         	ljmp	i1l5274
 18050  105C  318A  2AED         	ljmp	i1l5274
 18051  105E  318A  2AED         	ljmp	i1l5274
 18052  1060  318A  2AED         	ljmp	i1l5274
 18053  1062  318A  2AED         	ljmp	i1l5274
 18054  1064  318A  2AED         	ljmp	i1l5274
 18055  1066  318A  2AED         	ljmp	i1l5274
 18056  1068  318A  2AED         	ljmp	i1l5274
 18057  106A  318A  2AED         	ljmp	i1l5274
 18058  106C  318A  2AED         	ljmp	i1l5274
 18059  106E  318A  2AED         	ljmp	i1l5274
 18060  1070  318A  2AED         	ljmp	i1l5274
 18061  1072  318A  2AED         	ljmp	i1l5274
 18062  1074  318A  2AED         	ljmp	i1l5274
 18063  1076  318A  2AED         	ljmp	i1l5274
 18064  1078  318A  2AED         	ljmp	i1l5274
 18065  107A  318A  2AED         	ljmp	i1l5274
 18066  107C  318A  2AED         	ljmp	i1l5274
 18067  107E  318A  2AED         	ljmp	i1l5274
 18068  1080  318A  2AED         	ljmp	i1l5274
 18069  1082  318A  2AED         	ljmp	i1l5274
 18070  1084  318A  2AED         	ljmp	i1l5274
 18071  1086  318A  2AED         	ljmp	i1l5274
 18072  1088  318A  2AED         	ljmp	i1l5274
 18073  108A  318A  2AED         	ljmp	i1l5274
 18074  108C  318A  2AED         	ljmp	i1l5274
 18075  108E  318A  2AED         	ljmp	i1l5274
 18076  1090  318A  2AED         	ljmp	i1l5274
 18077  1092  318A  2AED         	ljmp	i1l5274
 18078  1094  318A  2AED         	ljmp	i1l5274
 18079  1096  318A  2AED         	ljmp	i1l5274
 18080  1098  318A  2AED         	ljmp	i1l5274
 18081  109A  318A  2AED         	ljmp	i1l5274
 18082  109C  318A  2AED         	ljmp	i1l5274
 18083  109E  318A  2AED         	ljmp	i1l5274
 18084  10A0  318A  2AED         	ljmp	i1l5274
 18085  10A2  318A  2AED         	ljmp	i1l5274
 18086  10A4  318A  2AED         	ljmp	i1l5274
 18087  10A6  318A  2AED         	ljmp	i1l5274
 18088  10A8  318A  2AED         	ljmp	i1l5274
 18089  10AA  318A  2AED         	ljmp	i1l5274
 18090  10AC  318A  2AED         	ljmp	i1l5274
 18091  10AE  318A  2AED         	ljmp	i1l5274
 18092  10B0  318A  2AED         	ljmp	i1l5274
 18093  10B2  318A  2AED         	ljmp	i1l5274
 18094  10B4  318A  2AED         	ljmp	i1l5274
 18095  10B6  318A  2AED         	ljmp	i1l5274
 18096  10B8  318A  2AED         	ljmp	i1l5274
 18097  10BA  318A  2AED         	ljmp	i1l5274
 18098  10BC  318A  2AED         	ljmp	i1l5274
 18099  10BE  318A  2AED         	ljmp	i1l5274
 18100  10C0  318A  2AED         	ljmp	i1l5274
 18101  10C2  318A  2AED         	ljmp	i1l5274
 18102  10C4  318A  2AED         	ljmp	i1l5274
 18103  10C6  318A  2AED         	ljmp	i1l5274
 18104  10C8  318A  2AED         	ljmp	i1l5274
 18105  10CA  318A  2AED         	ljmp	i1l5274
 18106  10CC  318A  2AED         	ljmp	i1l5274
 18107  10CE  318A  2AED         	ljmp	i1l5274
 18108  10D0  318A  2AED         	ljmp	i1l5274
 18109  10D2  318A  2AED         	ljmp	i1l5274
 18110  10D4  318A  2AED         	ljmp	i1l5274
 18111  10D6  318A  2AED         	ljmp	i1l5274
 18112  10D8  318A  2AED         	ljmp	i1l5274
 18113  10DA  318A  2AED         	ljmp	i1l5274
 18114  10DC  318A  2AED         	ljmp	i1l5274
 18115  10DE  318A  2AED         	ljmp	i1l5274
 18116  10E0  318A  2AE8         	ljmp	i1l5270
 18117  10E2  318A  2AEA         	ljmp	i1l5272
 18118                           
 18119                           	psect	text73
 18120  14FA                     __ptext73:	
 18121 ;; *************** function _CLC2_ISR *****************
 18122 ;; Defined at:
 18123 ;;		line 89 in file "mcc_generated_files/clc2.c"
 18124 ;; Parameters:    Size  Location     Type
 18125 ;;		None
 18126 ;; Auto vars:     Size  Location     Type
 18127 ;;		None
 18128 ;; Return value:  Size  Location     Type
 18129 ;;                  1    wreg      void 
 18130 ;; Registers used:
 18131 ;;		wreg, status,2, status,0, pclath, cstack
 18132 ;; Tracked objects:
 18133 ;;		On entry : 1F/0
 18134 ;;		On exit  : 1F/0
 18135 ;;		Unchanged: 0/0
 18136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18141 ;;Total ram usage:        0 bytes
 18142 ;; Hardware stack levels used:    1
 18143 ;; Hardware stack levels required when called:    3
 18144 ;; This function calls:
 18145 ;;		_CLC_1_Interrupt
 18146 ;;		_CLC_2_Interrupt
 18147 ;; This function is called by:
 18148 ;;		_INTERRUPT_InterruptManager
 18149 ;; This function uses a non-reentrant model
 18150 ;;
 18151                           
 18152                           
 18153                           ;psect for function _CLC2_ISR
 18154  14FA                     _CLC2_ISR:	
 18155                           
 18156                           ;clc2.c: 90: if (PORTCbits.RC4 == 0 && (PORTCbits.RC5 == 0))
 18157                           
 18158                           ;incstack = 0
 18159                           ; Regs used in _CLC2_ISR: [wreg+status,2+status,0+pclath+cstack]
 18160  14FA  1E0E               	btfss	14,4	;volatile
 18161  14FB  1A8E               	btfsc	14,5	;volatile
 18162  14FC  2D00               	goto	i1l6160
 18163                           
 18164                           ;clc2.c: 91: CLC_1_Interrupt();
 18165  14FD  250E  3194         	fcall	_CLC_1_Interrupt
 18166  14FF  2D01               	goto	i1l6162
 18167  1500                     i1l6160:	
 18168                           
 18169                           ;clc2.c: 92: else;clc2.c: 93: CLC_2_Interrupt();
 18170  1500  2597               	fcall	_CLC_2_Interrupt
 18171  1501                     i1l6162:	
 18172                           
 18173                           ;clc2.c: 95: PIR3bits.CLC2IF = 0;
 18174  1501  0020               	movlb	0	; select bank0
 18175  1502  1093               	bcf	19,1	;volatile
 18176  1503  0008               	return
 18177  1504                     __end_of_CLC2_ISR:	
 18178  1504                     __ptext74:	
 18179 ;; *************** function _CLC1_ISR *****************
 18180 ;; Defined at:
 18181 ;;		line 89 in file "mcc_generated_files/clc1.c"
 18182 ;; Parameters:    Size  Location     Type
 18183 ;;		None
 18184 ;; Auto vars:     Size  Location     Type
 18185 ;;		None
 18186 ;; Return value:  Size  Location     Type
 18187 ;;                  1    wreg      void 
 18188 ;; Registers used:
 18189 ;;		wreg, status,2, status,0, pclath, cstack
 18190 ;; Tracked objects:
 18191 ;;		On entry : 1F/0
 18192 ;;		On exit  : 1F/0
 18193 ;;		Unchanged: 0/0
 18194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18199 ;;Total ram usage:        0 bytes
 18200 ;; Hardware stack levels used:    1
 18201 ;; Hardware stack levels required when called:    3
 18202 ;; This function calls:
 18203 ;;		_CLC_1_Interrupt
 18204 ;;		_CLC_2_Interrupt
 18205 ;; This function is called by:
 18206 ;;		_INTERRUPT_InterruptManager
 18207 ;; This function uses a non-reentrant model
 18208 ;;
 18209                           
 18210                           
 18211                           ;psect for function _CLC1_ISR
 18212  1504                     _CLC1_ISR:	
 18213                           
 18214                           ;clc1.c: 90: if (PORTCbits.RC4 == 0 && (PORTCbits.RC5 == 0))
 18215                           
 18216                           ;incstack = 0
 18217                           ; Regs used in _CLC1_ISR: [wreg+status,2+status,0+pclath+cstack]
 18218  1504  1E0E               	btfss	14,4	;volatile
 18219  1505  1A8E               	btfsc	14,5	;volatile
 18220  1506  2D0A               	goto	i1l6170
 18221                           
 18222                           ;clc1.c: 91: CLC_2_Interrupt();
 18223  1507  2597  3194         	fcall	_CLC_2_Interrupt
 18224  1509  2D0B               	goto	i1l6172
 18225  150A                     i1l6170:	
 18226                           
 18227                           ;clc1.c: 92: else;clc1.c: 93: CLC_1_Interrupt();
 18228  150A  250E               	fcall	_CLC_1_Interrupt
 18229  150B                     i1l6172:	
 18230                           
 18231                           ;clc1.c: 95: PIR3bits.CLC1IF = 0;
 18232  150B  0020               	movlb	0	; select bank0
 18233  150C  1013               	bcf	19,0	;volatile
 18234  150D  0008               	return
 18235  150E                     __end_of_CLC1_ISR:	
 18236  150E                     __ptext77:	
 18237 ;; *************** function _CLC_1_Interrupt *****************
 18238 ;; Defined at:
 18239 ;;		line 24 in file "NavKey.c"
 18240 ;; Parameters:    Size  Location     Type
 18241 ;;		None
 18242 ;; Auto vars:     Size  Location     Type
 18243 ;;		None
 18244 ;; Return value:  Size  Location     Type
 18245 ;;                  1    wreg      void 
 18246 ;; Registers used:
 18247 ;;		wreg, status,2, status,0, pclath, cstack
 18248 ;; Tracked objects:
 18249 ;;		On entry : 1F/0
 18250 ;;		On exit  : 1C/0
 18251 ;;		Unchanged: 0/0
 18252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18255 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18256 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18257 ;;Total ram usage:        4 bytes
 18258 ;; Hardware stack levels used:    1
 18259 ;; Hardware stack levels required when called:    1
 18260 ;; This function calls:
 18261 ;;		___fladd
 18262 ;;		___flge
 18263 ;;		i1_NavKeyStatusUpdate
 18264 ;;		i1_SetInterrupt
 18265 ;; This function is called by:
 18266 ;;		_CLC2_ISR
 18267 ;;		_CLC1_ISR
 18268 ;; This function uses a non-reentrant model
 18269 ;;
 18270                           
 18271                           
 18272                           ;psect for function _CLC_1_Interrupt
 18273  150E                     _CLC_1_Interrupt:	
 18274                           
 18275                           ;NavKey.c: 26: if (en_prev == 1)
 18276                           
 18277                           ;incstack = 0
 18278                           ; Regs used in _CLC_1_Interrupt: [wreg+status,2+status,0+pclath+cstack]
 18279  150E  0021               	movlb	1	; select bank1
 18280  150F  0B3D               	decfsz	_en_prev^(0+128),w
 18281  1510  2D18               	goto	i1l5622
 18282                           
 18283                           ;NavKey.c: 27: if (en_deb < 10)
 18284  1511  3000               	movlw	0
 18285  1512  0230               	subwf	(_en_deb+1)^(0+128),w
 18286  1513  300A               	movlw	10
 18287  1514  1903               	skipnz
 18288  1515  022F               	subwf	_en_deb^(0+128),w
 18289  1516  1C03               	btfss	3,0
 18290  1517  0008               	return
 18291  1518                     i1l5622:	
 18292                           
 18293                           ;NavKey.c: 31: en_deb = 0;
 18294  1518  01AF               	clrf	_en_deb^(0+128)
 18295  1519  01B0               	clrf	(_en_deb+1)^(0+128)
 18296                           
 18297                           ;NavKey.c: 32: en_prev = 0;
 18298  151A  01BD               	clrf	_en_prev^(0+128)
 18299                           
 18300                           ;NavKey.c: 34: if (C_DTYPE == 0) {
 18301  151B  0020               	movlb	0	; select bank0
 18302  151C  0839               	movf	_C_DTYPE,w	;volatile
 18303  151D  1D03               	btfss	3,2
 18304  151E  2D4A               	goto	i1l5640
 18305                           
 18306                           ;NavKey.c: 35: CVAL.val = CVAL.val + ISTEP.val;
 18307  151F  082C               	movf	_CVAL,w	;volatile
 18308  1520  0720               	addwf	_ISTEP,w	;volatile
 18309  1521  00D2               	movwf	??_CLC_1_Interrupt
 18310  1522  082D               	movf	_CVAL+1,w	;volatile
 18311  1523  3D21               	addwfc	_ISTEP+1,w	;volatile
 18312  1524  00D3               	movwf	??_CLC_1_Interrupt+1
 18313  1525  082E               	movf	_CVAL+2,w	;volatile
 18314  1526  3D22               	addwfc	_ISTEP+2,w	;volatile
 18315  1527  00D4               	movwf	??_CLC_1_Interrupt+2
 18316  1528  082F               	movf	_CVAL+3,w	;volatile
 18317  1529  3D23               	addwfc	_ISTEP+3,w	;volatile
 18318  152A  00D5               	movwf	??_CLC_1_Interrupt+3
 18319  152B  00AF               	movwf	_CVAL+3	;volatile
 18320  152C  0854               	movf	??_CLC_1_Interrupt+2,w
 18321  152D  00AE               	movwf	_CVAL+2	;volatile
 18322  152E  0853               	movf	??_CLC_1_Interrupt+1,w
 18323  152F  00AD               	movwf	_CVAL+1	;volatile
 18324  1530  0852               	movf	??_CLC_1_Interrupt,w
 18325  1531  00AC               	movwf	_CVAL	;volatile
 18326                           
 18327                           ;NavKey.c: 36: NavKeyStatusUpdate(S_RINC);
 18328  1532  3008               	movlw	8
 18329  1533  01F0               	clrf	i1NavKeyStatusUpdate@stat
 18330  1534  00F1               	movwf	i1NavKeyStatusUpdate@stat+1
 18331  1535  2621  3194         	fcall	i1_NavKeyStatusUpdate
 18332                           
 18333                           ;NavKey.c: 37: if (CVAL.val > CMAX.val) {
 18334  1537  082B               	movf	_CMAX+3,w	;volatile
 18335  1538  3A80               	xorlw	128
 18336  1539  00D2               	movwf	??_CLC_1_Interrupt
 18337  153A  082F               	movf	_CVAL+3,w	;volatile
 18338  153B  3A80               	xorlw	128
 18339  153C  0252               	subwf	??_CLC_1_Interrupt,w
 18340  153D  1D03               	skipz
 18341  153E  2D7C               	goto	L48
 18342  153F  082E               	movf	_CVAL+2,w	;volatile
 18343  1540  022A               	subwf	_CMAX+2,w	;volatile
 18344  1541  1D03               	skipz
 18345  1542  2D7C               	goto	L48
 18346  1543  082D               	movf	_CVAL+1,w	;volatile
 18347  1544  0229               	subwf	_CMAX+1,w	;volatile
 18348  1545  1D03               	skipz
 18349  1546  2D7C               	goto	L48
 18350  1547  082C               	movf	_CVAL,w	;volatile
 18351  1548  0228               	subwf	_CMAX,w	;volatile
 18352  1549  2D7C               	goto	L48
 18353  154A                     i1l5640:	
 18354                           ;NavKey.c: 42: CVAL.val = CMAX.val;
 18355                           
 18356                           ;NavKey.c: 41: } else {
 18357                           
 18358                           ;NavKey.c: 40: CVAL.val = CMIN.val;
 18359                           
 18360                           ;NavKey.c: 39: if (C_WRAPE == 1) {
 18361                           
 18362                           ;NavKey.c: 38: NavKeyStatusUpdate(S_RMAX);
 18363                           
 18364                           
 18365                           ;NavKey.c: 46: CVAL.fval = CVAL.fval + ISTEP.fval;
 18366  154A  0823               	movf	_ISTEP+3,w	;volatile
 18367  154B  00F3               	movwf	___fladd@b+3
 18368  154C  0822               	movf	_ISTEP+2,w	;volatile
 18369  154D  00F2               	movwf	___fladd@b+2
 18370  154E  0821               	movf	_ISTEP+1,w	;volatile
 18371  154F  00F1               	movwf	___fladd@b+1
 18372  1550  0820               	movf	_ISTEP,w	;volatile
 18373  1551  00F0               	movwf	___fladd@b
 18374  1552  082F               	movf	_CVAL+3,w	;volatile
 18375  1553  00F7               	movwf	___fladd@a+3
 18376  1554  082E               	movf	_CVAL+2,w	;volatile
 18377  1555  00F6               	movwf	___fladd@a+2
 18378  1556  082D               	movf	_CVAL+1,w	;volatile
 18379  1557  00F5               	movwf	___fladd@a+1
 18380  1558  082C               	movf	_CVAL,w	;volatile
 18381  1559  00F4               	movwf	___fladd@a
 18382  155A  2688  3194         	fcall	___fladd
 18383  155C  0873               	movf	?___fladd+3,w
 18384  155D  0020               	movlb	0	; select bank0
 18385  155E  00AF               	movwf	_CVAL+3	;volatile
 18386  155F  0872               	movf	?___fladd+2,w
 18387  1560  00AE               	movwf	_CVAL+2	;volatile
 18388  1561  0871               	movf	?___fladd+1,w
 18389  1562  00AD               	movwf	_CVAL+1	;volatile
 18390  1563  0870               	movf	?___fladd,w
 18391  1564  00AC               	movwf	_CVAL	;volatile
 18392                           
 18393                           ;NavKey.c: 47: NavKeyStatusUpdate(S_RINC);
 18394  1565  3008               	movlw	8
 18395  1566  01F0               	clrf	i1NavKeyStatusUpdate@stat
 18396  1567  00F1               	movwf	i1NavKeyStatusUpdate@stat+1
 18397  1568  2621  3194         	fcall	i1_NavKeyStatusUpdate
 18398                           
 18399                           ;NavKey.c: 48: if (CVAL.fval > CMAX.fval) {
 18400  156A  082B               	movf	_CMAX+3,w	;volatile
 18401  156B  00F3               	movwf	___flge@ff1+3
 18402  156C  082A               	movf	_CMAX+2,w	;volatile
 18403  156D  00F2               	movwf	___flge@ff1+2
 18404  156E  0829               	movf	_CMAX+1,w	;volatile
 18405  156F  00F1               	movwf	___flge@ff1+1
 18406  1570  0828               	movf	_CMAX,w	;volatile
 18407  1571  00F0               	movwf	___flge@ff1
 18408  1572  082F               	movf	_CVAL+3,w	;volatile
 18409  1573  00F7               	movwf	___flge@ff2+3
 18410  1574  082E               	movf	_CVAL+2,w	;volatile
 18411  1575  00F6               	movwf	___flge@ff2+2
 18412  1576  082D               	movf	_CVAL+1,w	;volatile
 18413  1577  00F5               	movwf	___flge@ff2+1
 18414  1578  082C               	movf	_CVAL,w	;volatile
 18415  1579  00F4               	movwf	___flge@ff2
 18416  157A  2626  3194         	fcall	___flge
 18417  157C                     L48:	
 18418  157C  1803               	btfsc	3,0
 18419  157D  2D95               	goto	i1l5650
 18420                           
 18421                           ;NavKey.c: 49: NavKeyStatusUpdate(S_RMAX);
 18422  157E  3020               	movlw	32
 18423  157F  01F0               	clrf	i1NavKeyStatusUpdate@stat
 18424  1580  00F1               	movwf	i1NavKeyStatusUpdate@stat+1
 18425  1581  2621  3194         	fcall	i1_NavKeyStatusUpdate
 18426                           
 18427                           ;NavKey.c: 50: if (C_WRAPE == 1) {
 18428  1583  0B3A               	decfsz	_C_WRAPE,w	;volatile
 18429  1584  2D8D               	goto	i1l5648
 18430                           
 18431                           ;NavKey.c: 51: CVAL.fval = CMIN.fval;
 18432  1585  0827               	movf	_CMIN+3,w	;volatile
 18433  1586  00AF               	movwf	_CVAL+3	;volatile
 18434  1587  0826               	movf	_CMIN+2,w	;volatile
 18435  1588  00AE               	movwf	_CVAL+2	;volatile
 18436  1589  0825               	movf	_CMIN+1,w	;volatile
 18437  158A  00AD               	movwf	_CVAL+1	;volatile
 18438  158B  0824               	movf	_CMIN,w	;volatile
 18439  158C  2D94               	goto	L47
 18440  158D                     i1l5648:	
 18441                           ;NavKey.c: 52: } else {
 18442                           
 18443                           
 18444                           ;NavKey.c: 53: CVAL.fval = CMAX.fval;
 18445  158D  082B               	movf	_CMAX+3,w	;volatile
 18446  158E  00AF               	movwf	_CVAL+3	;volatile
 18447  158F  082A               	movf	_CMAX+2,w	;volatile
 18448  1590  00AE               	movwf	_CVAL+2	;volatile
 18449  1591  0829               	movf	_CMAX+1,w	;volatile
 18450  1592  00AD               	movwf	_CVAL+1	;volatile
 18451  1593  0828               	movf	_CMAX,w	;volatile
 18452  1594                     L47:	
 18453  1594  00AC               	movwf	_CVAL	;volatile
 18454  1595                     i1l5650:	
 18455                           
 18456                           ;NavKey.c: 54: };NavKey.c: 55: };NavKey.c: 56: };NavKey.c: 59: SetInterrupt();
 18457  1595  27D7               	fcall	i1_SetInterrupt
 18458  1596  0008               	return
 18459  1597                     __end_of_CLC_1_Interrupt:	
 18460  1597                     __ptext75:	
 18461 ;; *************** function _CLC_2_Interrupt *****************
 18462 ;; Defined at:
 18463 ;;		line 66 in file "NavKey.c"
 18464 ;; Parameters:    Size  Location     Type
 18465 ;;		None
 18466 ;; Auto vars:     Size  Location     Type
 18467 ;;		None
 18468 ;; Return value:  Size  Location     Type
 18469 ;;                  1    wreg      void 
 18470 ;; Registers used:
 18471 ;;		wreg, status,2, status,0, pclath, cstack
 18472 ;; Tracked objects:
 18473 ;;		On entry : 1F/0
 18474 ;;		On exit  : 1C/0
 18475 ;;		Unchanged: 0/0
 18476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18479 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18480 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18481 ;;Total ram usage:        4 bytes
 18482 ;; Hardware stack levels used:    1
 18483 ;; Hardware stack levels required when called:    2
 18484 ;; This function calls:
 18485 ;;		___flge
 18486 ;;		___flsub
 18487 ;;		i1_NavKeyStatusUpdate
 18488 ;;		i1_SetInterrupt
 18489 ;; This function is called by:
 18490 ;;		_CLC2_ISR
 18491 ;;		_CLC1_ISR
 18492 ;; This function uses a non-reentrant model
 18493 ;;
 18494                           
 18495                           
 18496                           ;psect for function _CLC_2_Interrupt
 18497  1597                     _CLC_2_Interrupt:	
 18498                           
 18499                           ;NavKey.c: 68: if (en_prev == 0)
 18500                           
 18501                           ;incstack = 0
 18502                           ; Regs used in _CLC_2_Interrupt: [wreg+status,2+status,0+pclath+cstack]
 18503  1597  0021               	movlb	1	; select bank1
 18504  1598  083D               	movf	_en_prev^(0+128),w
 18505  1599  1D03               	btfss	3,2
 18506  159A  2DA2               	goto	i1l5658
 18507                           
 18508                           ;NavKey.c: 69: if (en_deb < 10)
 18509  159B  3000               	movlw	0
 18510  159C  0230               	subwf	(_en_deb+1)^(0+128),w
 18511  159D  300A               	movlw	10
 18512  159E  1903               	skipnz
 18513  159F  022F               	subwf	_en_deb^(0+128),w
 18514  15A0  1C03               	btfss	3,0
 18515  15A1  0008               	return
 18516  15A2                     i1l5658:	
 18517                           
 18518                           ;NavKey.c: 72: en_deb = 0;
 18519  15A2  01AF               	clrf	_en_deb^(0+128)
 18520  15A3  01B0               	clrf	(_en_deb+1)^(0+128)
 18521                           
 18522                           ;NavKey.c: 73: en_prev = 1;
 18523  15A4  01BD               	clrf	_en_prev^(0+128)
 18524  15A5  0ABD               	incf	_en_prev^(0+128),f
 18525                           
 18526                           ;NavKey.c: 75: if (C_DTYPE == 0) {
 18527  15A6  0020               	movlb	0	; select bank0
 18528  15A7  0839               	movf	_C_DTYPE,w	;volatile
 18529  15A8  1D03               	btfss	3,2
 18530  15A9  2DD5               	goto	i1l5678
 18531                           
 18532                           ;NavKey.c: 77: CVAL.val = CVAL.val - ISTEP.val;
 18533  15AA  0820               	movf	_ISTEP,w	;volatile
 18534  15AB  022C               	subwf	_CVAL,w	;volatile
 18535  15AC  00DA               	movwf	??_CLC_2_Interrupt
 18536  15AD  0821               	movf	_ISTEP+1,w	;volatile
 18537  15AE  3B2D               	subwfb	_CVAL+1,w	;volatile
 18538  15AF  00DB               	movwf	??_CLC_2_Interrupt+1
 18539  15B0  0822               	movf	_ISTEP+2,w	;volatile
 18540  15B1  3B2E               	subwfb	_CVAL+2,w	;volatile
 18541  15B2  00DC               	movwf	??_CLC_2_Interrupt+2
 18542  15B3  0823               	movf	_ISTEP+3,w	;volatile
 18543  15B4  3B2F               	subwfb	_CVAL+3,w	;volatile
 18544  15B5  00DD               	movwf	??_CLC_2_Interrupt+3
 18545  15B6  00AF               	movwf	_CVAL+3	;volatile
 18546  15B7  085C               	movf	??_CLC_2_Interrupt+2,w
 18547  15B8  00AE               	movwf	_CVAL+2	;volatile
 18548  15B9  085B               	movf	??_CLC_2_Interrupt+1,w
 18549  15BA  00AD               	movwf	_CVAL+1	;volatile
 18550  15BB  085A               	movf	??_CLC_2_Interrupt,w
 18551  15BC  00AC               	movwf	_CVAL	;volatile
 18552                           
 18553                           ;NavKey.c: 78: NavKeyStatusUpdate(S_RDEC);
 18554  15BD  3010               	movlw	16
 18555  15BE  01F0               	clrf	i1NavKeyStatusUpdate@stat
 18556  15BF  00F1               	movwf	i1NavKeyStatusUpdate@stat+1
 18557  15C0  2621  3194         	fcall	i1_NavKeyStatusUpdate
 18558                           
 18559                           ;NavKey.c: 79: if (CVAL.val < CMIN.val) {
 18560  15C2  082F               	movf	_CVAL+3,w	;volatile
 18561  15C3  3A80               	xorlw	128
 18562  15C4  00DA               	movwf	??_CLC_2_Interrupt
 18563  15C5  0827               	movf	_CMIN+3,w	;volatile
 18564  15C6  3A80               	xorlw	128
 18565  15C7  025A               	subwf	??_CLC_2_Interrupt,w
 18566  15C8  1D03               	skipz
 18567  15C9  2E06               	goto	L46
 18568  15CA  0826               	movf	_CMIN+2,w	;volatile
 18569  15CB  022E               	subwf	_CVAL+2,w	;volatile
 18570  15CC  1D03               	skipz
 18571  15CD  2E06               	goto	L46
 18572  15CE  0825               	movf	_CMIN+1,w	;volatile
 18573  15CF  022D               	subwf	_CVAL+1,w	;volatile
 18574  15D0  1D03               	skipz
 18575  15D1  2E06               	goto	L46
 18576  15D2  0824               	movf	_CMIN,w	;volatile
 18577  15D3  022C               	subwf	_CVAL,w	;volatile
 18578  15D4  2E06               	goto	L46
 18579  15D5                     i1l5678:	
 18580                           ;NavKey.c: 84: CVAL.val = CMIN.val;
 18581                           
 18582                           ;NavKey.c: 83: } else {
 18583                           
 18584                           ;NavKey.c: 82: CVAL.val = CMAX.val;
 18585                           
 18586                           ;NavKey.c: 81: if (C_WRAPE == 1) {
 18587                           
 18588                           ;NavKey.c: 80: NavKeyStatusUpdate(S_RMIN);
 18589                           
 18590                           
 18591                           ;NavKey.c: 88: CVAL.fval = CVAL.fval - ISTEP.fval;
 18592  15D5  0823               	movf	_ISTEP+3,w	;volatile
 18593  15D6  00D5               	movwf	___flsub@a+3
 18594  15D7  0822               	movf	_ISTEP+2,w	;volatile
 18595  15D8  00D4               	movwf	___flsub@a+2
 18596  15D9  0821               	movf	_ISTEP+1,w	;volatile
 18597  15DA  00D3               	movwf	___flsub@a+1
 18598  15DB  0820               	movf	_ISTEP,w	;volatile
 18599  15DC  00D2               	movwf	___flsub@a
 18600  15DD  082F               	movf	_CVAL+3,w	;volatile
 18601  15DE  00D9               	movwf	___flsub@b+3
 18602  15DF  082E               	movf	_CVAL+2,w	;volatile
 18603  15E0  00D8               	movwf	___flsub@b+2
 18604  15E1  082D               	movf	_CVAL+1,w	;volatile
 18605  15E2  00D7               	movwf	___flsub@b+1
 18606  15E3  082C               	movf	_CVAL,w	;volatile
 18607  15E4  00D6               	movwf	___flsub@b
 18608  15E5  27E3  3194         	fcall	___flsub
 18609  15E7  0855               	movf	?___flsub+3,w
 18610  15E8  00AF               	movwf	_CVAL+3	;volatile
 18611  15E9  0854               	movf	?___flsub+2,w
 18612  15EA  00AE               	movwf	_CVAL+2	;volatile
 18613  15EB  0853               	movf	?___flsub+1,w
 18614  15EC  00AD               	movwf	_CVAL+1	;volatile
 18615  15ED  0852               	movf	?___flsub,w
 18616  15EE  00AC               	movwf	_CVAL	;volatile
 18617                           
 18618                           ;NavKey.c: 89: NavKeyStatusUpdate(S_RDEC);
 18619  15EF  3010               	movlw	16
 18620  15F0  01F0               	clrf	i1NavKeyStatusUpdate@stat
 18621  15F1  00F1               	movwf	i1NavKeyStatusUpdate@stat+1
 18622  15F2  2621  3194         	fcall	i1_NavKeyStatusUpdate
 18623                           
 18624                           ;NavKey.c: 90: if (CVAL.fval < CMIN.fval) {
 18625  15F4  082F               	movf	_CVAL+3,w	;volatile
 18626  15F5  00F3               	movwf	___flge@ff1+3
 18627  15F6  082E               	movf	_CVAL+2,w	;volatile
 18628  15F7  00F2               	movwf	___flge@ff1+2
 18629  15F8  082D               	movf	_CVAL+1,w	;volatile
 18630  15F9  00F1               	movwf	___flge@ff1+1
 18631  15FA  082C               	movf	_CVAL,w	;volatile
 18632  15FB  00F0               	movwf	___flge@ff1
 18633  15FC  0827               	movf	_CMIN+3,w	;volatile
 18634  15FD  00F7               	movwf	___flge@ff2+3
 18635  15FE  0826               	movf	_CMIN+2,w	;volatile
 18636  15FF  00F6               	movwf	___flge@ff2+2
 18637  1600  0825               	movf	_CMIN+1,w	;volatile
 18638  1601  00F5               	movwf	___flge@ff2+1
 18639  1602  0824               	movf	_CMIN,w	;volatile
 18640  1603  00F4               	movwf	___flge@ff2
 18641  1604  2626  3194         	fcall	___flge
 18642  1606                     L46:	
 18643  1606  1803               	btfsc	3,0
 18644  1607  2E1F               	goto	i1l5688
 18645                           
 18646                           ;NavKey.c: 91: NavKeyStatusUpdate(S_RMIN);
 18647  1608  3040               	movlw	64
 18648  1609  01F0               	clrf	i1NavKeyStatusUpdate@stat
 18649  160A  00F1               	movwf	i1NavKeyStatusUpdate@stat+1
 18650  160B  2621  3194         	fcall	i1_NavKeyStatusUpdate
 18651                           
 18652                           ;NavKey.c: 92: if (C_WRAPE == 1) {
 18653  160D  0B3A               	decfsz	_C_WRAPE,w	;volatile
 18654  160E  2E17               	goto	i1l5686
 18655                           
 18656                           ;NavKey.c: 93: CVAL.fval = CMAX.fval;
 18657  160F  082B               	movf	_CMAX+3,w	;volatile
 18658  1610  00AF               	movwf	_CVAL+3	;volatile
 18659  1611  082A               	movf	_CMAX+2,w	;volatile
 18660  1612  00AE               	movwf	_CVAL+2	;volatile
 18661  1613  0829               	movf	_CMAX+1,w	;volatile
 18662  1614  00AD               	movwf	_CVAL+1	;volatile
 18663  1615  0828               	movf	_CMAX,w	;volatile
 18664  1616  2E1E               	goto	L45
 18665  1617                     i1l5686:	
 18666                           ;NavKey.c: 94: } else {
 18667                           
 18668                           
 18669                           ;NavKey.c: 95: CVAL.fval = CMIN.fval;
 18670  1617  0827               	movf	_CMIN+3,w	;volatile
 18671  1618  00AF               	movwf	_CVAL+3	;volatile
 18672  1619  0826               	movf	_CMIN+2,w	;volatile
 18673  161A  00AE               	movwf	_CVAL+2	;volatile
 18674  161B  0825               	movf	_CMIN+1,w	;volatile
 18675  161C  00AD               	movwf	_CVAL+1	;volatile
 18676  161D  0824               	movf	_CMIN,w	;volatile
 18677  161E                     L45:	
 18678  161E  00AC               	movwf	_CVAL	;volatile
 18679  161F                     i1l5688:	
 18680                           
 18681                           ;NavKey.c: 96: };NavKey.c: 97: };NavKey.c: 98: };NavKey.c: 100: SetInterrupt();
 18682  161F  27D7               	fcall	i1_SetInterrupt
 18683  1620  0008               	return
 18684  1621                     __end_of_CLC_2_Interrupt:	
 18685  1621                     __ptext79:	
 18686 ;; *************** function i1_NavKeyStatusUpdate *****************
 18687 ;; Defined at:
 18688 ;;		line 102 in file "DataVariable.c"
 18689 ;; Parameters:    Size  Location     Type
 18690 ;;  stat            2    0[COMMON] enum E68
 18691 ;; Auto vars:     Size  Location     Type
 18692 ;;		None
 18693 ;; Return value:  Size  Location     Type
 18694 ;;                  1    wreg      void 
 18695 ;; Registers used:
 18696 ;;		wreg
 18697 ;; Tracked objects:
 18698 ;;		On entry : 1F/0
 18699 ;;		On exit  : 1F/0
 18700 ;;		Unchanged: 0/0
 18701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18702 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18705 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18706 ;;Total ram usage:        2 bytes
 18707 ;; Hardware stack levels used:    1
 18708 ;; This function calls:
 18709 ;;		Nothing
 18710 ;; This function is called by:
 18711 ;;		_CLC_1_Interrupt
 18712 ;;		_CLC_2_Interrupt
 18713 ;; This function uses a non-reentrant model
 18714 ;;
 18715                           
 18716                           
 18717                           ;psect for function i1_NavKeyStatusUpdate
 18718  1621                     i1_NavKeyStatusUpdate:	
 18719                           
 18720                           ;DataVariable.c: 103: NSTATUS.val |= (uint16_t) stat;
 18721                           
 18722                           ;incstack = 0
 18723                           ; Regs used in i1_NavKeyStatusUpdate: [wreg]
 18724  1621  0870               	movf	i1NavKeyStatusUpdate@stat,w
 18725  1622  04B2               	iorwf	_NSTATUS,f	;volatile
 18726  1623  0871               	movf	i1NavKeyStatusUpdate@stat+1,w
 18727  1624  04B3               	iorwf	_NSTATUS+1,f	;volatile
 18728  1625  0008               	return
 18729  1626                     __end_ofi1_NavKeyStatusUpdate:	
 18730  1626                     __ptext80:	
 18731 ;; *************** function ___flge *****************
 18732 ;; Defined at:
 18733 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
 18734 ;; Parameters:    Size  Location     Type
 18735 ;;  ff1             4    0[COMMON] void 
 18736 ;;  ff2             4    4[COMMON] void 
 18737 ;; Auto vars:     Size  Location     Type
 18738 ;;		None
 18739 ;; Return value:  Size  Location     Type
 18740 ;;		None               void
 18741 ;; Registers used:
 18742 ;;		wreg, status,2, status,0
 18743 ;; Tracked objects:
 18744 ;;		On entry : 1F/0
 18745 ;;		On exit  : 1F/0
 18746 ;;		Unchanged: 1F/0
 18747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18748 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18750 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18751 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18752 ;;Total ram usage:       12 bytes
 18753 ;; Hardware stack levels used:    1
 18754 ;; This function calls:
 18755 ;;		Nothing
 18756 ;; This function is called by:
 18757 ;;		_CLC_1_Interrupt
 18758 ;;		_CLC_2_Interrupt
 18759 ;; This function uses a non-reentrant model
 18760 ;;
 18761                           
 18762                           
 18763                           ;psect for function ___flge
 18764  1626                     ___flge:	
 18765                           
 18766                           ;incstack = 0
 18767                           ; Regs used in ___flge: [wreg+status,2+status,0]
 18768  1626  3080               	movlw	128
 18769  1627  01F8               	clrf	??___flge
 18770  1628  01F9               	clrf	??___flge+1
 18771  1629  0572               	andwf	___flge@ff1+2,w
 18772  162A  00FA               	movwf	??___flge+2
 18773  162B  307F               	movlw	127
 18774  162C  0573               	andwf	___flge@ff1+3,w
 18775  162D  00FB               	movwf	??___flge+3
 18776  162E  047A               	iorwf	??___flge+2,w
 18777  162F  0479               	iorwf	??___flge+1,w
 18778  1630  0478               	iorwf	??___flge,w
 18779  1631  1D03               	skipz
 18780  1632  2E37               	goto	i1l5426
 18781  1633  01F0               	clrf	___flge@ff1
 18782  1634  01F1               	clrf	___flge@ff1+1
 18783  1635  01F2               	clrf	___flge@ff1+2
 18784  1636  01F3               	clrf	___flge@ff1+3
 18785  1637                     i1l5426:	
 18786  1637  3080               	movlw	128
 18787  1638  01F8               	clrf	??___flge
 18788  1639  01F9               	clrf	??___flge+1
 18789  163A  0576               	andwf	___flge@ff2+2,w
 18790  163B  00FA               	movwf	??___flge+2
 18791  163C  307F               	movlw	127
 18792  163D  0577               	andwf	___flge@ff2+3,w
 18793  163E  00FB               	movwf	??___flge+3
 18794  163F  047A               	iorwf	??___flge+2,w
 18795  1640  0479               	iorwf	??___flge+1,w
 18796  1641  0478               	iorwf	??___flge,w
 18797  1642  1D03               	skipz
 18798  1643  2E48               	goto	i1l1772
 18799  1644  01F4               	clrf	___flge@ff2
 18800  1645  01F5               	clrf	___flge@ff2+1
 18801  1646  01F6               	clrf	___flge@ff2+2
 18802  1647  01F7               	clrf	___flge@ff2+3
 18803  1648                     i1l1772:	
 18804  1648  1FF3               	btfss	___flge@ff1+3,7
 18805  1649  2E5F               	goto	i1l5432
 18806  164A  3080               	movlw	128
 18807  164B  01F8               	clrf	??___flge
 18808  164C  01F9               	clrf	??___flge+1
 18809  164D  01FA               	clrf	??___flge+2
 18810  164E  00FB               	movwf	??___flge+3
 18811  164F  0870               	movf	___flge@ff1,w
 18812  1650  02F8               	subwf	??___flge,f
 18813  1651  0871               	movf	___flge@ff1+1,w
 18814  1652  3BF9               	subwfb	??___flge+1,f
 18815  1653  0872               	movf	___flge@ff1+2,w
 18816  1654  3BFA               	subwfb	??___flge+2,f
 18817  1655  0873               	movf	___flge@ff1+3,w
 18818  1656  3BFB               	subwfb	??___flge+3,f
 18819  1657  087B               	movf	??___flge+3,w
 18820  1658  00F3               	movwf	___flge@ff1+3
 18821  1659  087A               	movf	??___flge+2,w
 18822  165A  00F2               	movwf	___flge@ff1+2
 18823  165B  0879               	movf	??___flge+1,w
 18824  165C  00F1               	movwf	___flge@ff1+1
 18825  165D  0878               	movf	??___flge,w
 18826  165E  00F0               	movwf	___flge@ff1
 18827  165F                     i1l5432:	
 18828  165F  1FF7               	btfss	___flge@ff2+3,7
 18829  1660  2E76               	goto	i1l1774
 18830  1661  3080               	movlw	128
 18831  1662  01F8               	clrf	??___flge
 18832  1663  01F9               	clrf	??___flge+1
 18833  1664  01FA               	clrf	??___flge+2
 18834  1665  00FB               	movwf	??___flge+3
 18835  1666  0874               	movf	___flge@ff2,w
 18836  1667  02F8               	subwf	??___flge,f
 18837  1668  0875               	movf	___flge@ff2+1,w
 18838  1669  3BF9               	subwfb	??___flge+1,f
 18839  166A  0876               	movf	___flge@ff2+2,w
 18840  166B  3BFA               	subwfb	??___flge+2,f
 18841  166C  0877               	movf	___flge@ff2+3,w
 18842  166D  3BFB               	subwfb	??___flge+3,f
 18843  166E  087B               	movf	??___flge+3,w
 18844  166F  00F7               	movwf	___flge@ff2+3
 18845  1670  087A               	movf	??___flge+2,w
 18846  1671  00F6               	movwf	___flge@ff2+2
 18847  1672  0879               	movf	??___flge+1,w
 18848  1673  00F5               	movwf	___flge@ff2+1
 18849  1674  0878               	movf	??___flge,w
 18850  1675  00F4               	movwf	___flge@ff2
 18851  1676                     i1l1774:	
 18852  1676  3080               	movlw	128
 18853  1677  06F3               	xorwf	___flge@ff1+3,f
 18854  1678  06F7               	xorwf	___flge@ff2+3,f
 18855  1679  0877               	movf	___flge@ff2+3,w
 18856  167A  0273               	subwf	___flge@ff1+3,w
 18857  167B  1D03               	skipz
 18858  167C  0008               	return
 18859  167D  0876               	movf	___flge@ff2+2,w
 18860  167E  0272               	subwf	___flge@ff1+2,w
 18861  167F  1D03               	skipz
 18862  1680  0008               	return
 18863  1681  0875               	movf	___flge@ff2+1,w
 18864  1682  0271               	subwf	___flge@ff1+1,w
 18865  1683  1D03               	skipz
 18866  1684  0008               	return
 18867  1685  0874               	movf	___flge@ff2,w
 18868  1686  0270               	subwf	___flge@ff1,w
 18869  1687  0008               	return
 18870  1688                     __end_of___flge:	
 18871  1688                     __ptext81:	
 18872 ;; *************** function ___fladd *****************
 18873 ;; Defined at:
 18874 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
 18875 ;; Parameters:    Size  Location     Type
 18876 ;;  b               4    0[COMMON] void 
 18877 ;;  a               4    4[COMMON] void 
 18878 ;; Auto vars:     Size  Location     Type
 18879 ;;  grs             1   11[COMMON] unsigned char 
 18880 ;;  bexp            1   10[COMMON] unsigned char 
 18881 ;;  aexp            1    9[COMMON] unsigned char 
 18882 ;;  signs           1    8[COMMON] unsigned char 
 18883 ;; Return value:  Size  Location     Type
 18884 ;;                  4    0[COMMON] unsigned char 
 18885 ;; Registers used:
 18886 ;;		wreg, status,2, status,0
 18887 ;; Tracked objects:
 18888 ;;		On entry : 1F/0
 18889 ;;		On exit  : 0/0
 18890 ;;		Unchanged: 0/0
 18891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18892 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18893 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18894 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18895 ;;      Totals:        12       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18896 ;;Total ram usage:       20 bytes
 18897 ;; Hardware stack levels used:    1
 18898 ;; This function calls:
 18899 ;;		Nothing
 18900 ;; This function is called by:
 18901 ;;		_CLC_1_Interrupt
 18902 ;;		___flsub
 18903 ;; This function uses a non-reentrant model
 18904 ;;
 18905                           
 18906                           
 18907                           ;psect for function ___fladd
 18908  1688                     ___fladd:	
 18909                           
 18910                           ;incstack = 0
 18911                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 18912  1688  0873               	movf	___fladd@b+3,w
 18913  1689  00F8               	movwf	___fladd@signs
 18914  168A  3080               	movlw	128
 18915  168B  05F8               	andwf	___fladd@signs,f
 18916  168C  3573               	lslf	___fladd@b+3,w
 18917  168D  00FA               	movwf	___fladd@bexp
 18918  168E  1BF2               	btfsc	___fladd@b+2,7
 18919  168F  147A               	bsf	___fladd@bexp,0
 18920  1690  087A               	movf	___fladd@bexp,w
 18921  1691  1903               	btfsc	3,2
 18922  1692  2E9B               	goto	i1l1883
 18923  1693  0F7A               	incfsz	___fladd@bexp,w
 18924  1694  2E99               	goto	i1l1884
 18925  1695  01F0               	clrf	___fladd@b
 18926  1696  01F1               	clrf	___fladd@b+1
 18927  1697  01F2               	clrf	___fladd@b+2
 18928  1698  01F3               	clrf	___fladd@b+3
 18929  1699                     i1l1884:	
 18930  1699  17F2               	bsf	___fladd@b+2,7
 18931  169A  2E9E               	goto	L50
 18932  169B                     i1l1883:	
 18933  169B  01F0               	clrf	___fladd@b
 18934  169C  01F1               	clrf	___fladd@b+1
 18935  169D  01F2               	clrf	___fladd@b+2
 18936  169E                     L50:	
 18937  169E  01F3               	clrf	___fladd@b+3
 18938  169F  0877               	movf	___fladd@a+3,w
 18939  16A0  00F9               	movwf	___fladd@aexp
 18940  16A1  3080               	movlw	128
 18941  16A2  05F9               	andwf	___fladd@aexp,f
 18942  16A3  0879               	movf	___fladd@aexp,w
 18943  16A4  0678               	xorwf	___fladd@signs,w
 18944  16A5  1D03               	btfss	3,2
 18945  16A6  1778               	bsf	___fladd@signs,6
 18946  16A7  3577               	lslf	___fladd@a+3,w
 18947  16A8  00F9               	movwf	___fladd@aexp
 18948  16A9  1BF6               	btfsc	___fladd@a+2,7
 18949  16AA  1479               	bsf	___fladd@aexp,0
 18950  16AB  0879               	movf	___fladd@aexp,w
 18951  16AC  1903               	btfsc	3,2
 18952  16AD  2EB6               	goto	i1l1888
 18953  16AE  0F79               	incfsz	___fladd@aexp,w
 18954  16AF  2EB4               	goto	i1l1889
 18955  16B0  01F4               	clrf	___fladd@a
 18956  16B1  01F5               	clrf	___fladd@a+1
 18957  16B2  01F6               	clrf	___fladd@a+2
 18958  16B3  01F7               	clrf	___fladd@a+3
 18959  16B4                     i1l1889:	
 18960  16B4  17F6               	bsf	___fladd@a+2,7
 18961  16B5  2EB9               	goto	L51
 18962  16B6                     i1l1888:	
 18963  16B6  01F4               	clrf	___fladd@a
 18964  16B7  01F5               	clrf	___fladd@a+1
 18965  16B8  01F6               	clrf	___fladd@a+2
 18966  16B9                     L51:	
 18967  16B9  01F7               	clrf	___fladd@a+3
 18968  16BA  087A               	movf	___fladd@bexp,w
 18969  16BB  0279               	subwf	___fladd@aexp,w
 18970  16BC  1803               	skipnc
 18971  16BD  2EE0               	goto	i1l4948
 18972  16BE  1F78               	btfss	___fladd@signs,6
 18973  16BF  2EC2               	goto	i1l4918
 18974  16C0  3080               	movlw	128
 18975  16C1  06F8               	xorwf	___fladd@signs,f
 18976  16C2                     i1l4918:	
 18977  16C2  087A               	movf	___fladd@bexp,w
 18978  16C3  00FB               	movwf	___fladd@grs
 18979  16C4  0879               	movf	___fladd@aexp,w
 18980  16C5  00FA               	movwf	___fladd@bexp
 18981  16C6  087B               	movf	___fladd@grs,w
 18982  16C7  00F9               	movwf	___fladd@aexp
 18983  16C8  0870               	movf	___fladd@b,w
 18984  16C9  00FB               	movwf	___fladd@grs
 18985  16CA  0874               	movf	___fladd@a,w
 18986  16CB  00F0               	movwf	___fladd@b
 18987  16CC  087B               	movf	___fladd@grs,w
 18988  16CD  00F4               	movwf	___fladd@a
 18989  16CE  0871               	movf	___fladd@b+1,w
 18990  16CF  00FB               	movwf	___fladd@grs
 18991  16D0  0875               	movf	___fladd@a+1,w
 18992  16D1  00F1               	movwf	___fladd@b+1
 18993  16D2  087B               	movf	___fladd@grs,w
 18994  16D3  00F5               	movwf	___fladd@a+1
 18995  16D4  0872               	movf	___fladd@b+2,w
 18996  16D5  00FB               	movwf	___fladd@grs
 18997  16D6  0876               	movf	___fladd@a+2,w
 18998  16D7  00F2               	movwf	___fladd@b+2
 18999  16D8  087B               	movf	___fladd@grs,w
 19000  16D9  00F6               	movwf	___fladd@a+2
 19001  16DA  0873               	movf	___fladd@b+3,w
 19002  16DB  00FB               	movwf	___fladd@grs
 19003  16DC  0877               	movf	___fladd@a+3,w
 19004  16DD  00F3               	movwf	___fladd@b+3
 19005  16DE  087B               	movf	___fladd@grs,w
 19006  16DF  00F7               	movwf	___fladd@a+3
 19007  16E0                     i1l4948:	
 19008  16E0  01FB               	clrf	___fladd@grs
 19009  16E1  0879               	movf	___fladd@aexp,w
 19010  16E2  00CA               	movwf	??___fladd
 19011  16E3  01CB               	clrf	??___fladd+1
 19012  16E4  084B               	movf	??___fladd+1,w
 19013  16E5  00CD               	movwf	??___fladd+3
 19014  16E6  087A               	movf	___fladd@bexp,w
 19015  16E7  024A               	subwf	??___fladd,w
 19016  16E8  00CC               	movwf	??___fladd+2
 19017  16E9  1C03               	skipc
 19018  16EA  03CD               	decf	??___fladd+3,f
 19019  16EB  084D               	movf	??___fladd+3,w
 19020  16EC  3A80               	xorlw	128
 19021  16ED  00CE               	movwf	??___fladd+4
 19022  16EE  3080               	movlw	128
 19023  16EF  024E               	subwf	??___fladd+4,w
 19024  16F0  1D03               	skipz
 19025  16F1  2EF4               	goto	u253_25
 19026  16F2  301A               	movlw	26
 19027  16F3  024C               	subwf	??___fladd+2,w
 19028  16F4                     u253_25:	
 19029  16F4  1C03               	skipc
 19030  16F5  2F15               	goto	i1l4962
 19031  16F6  0873               	movf	___fladd@b+3,w
 19032  16F7  0472               	iorwf	___fladd@b+2,w
 19033  16F8  0471               	iorwf	___fladd@b+1,w
 19034  16F9  0470               	iorwf	___fladd@b,w
 19035  16FA  1903               	btfsc	3,2
 19036  16FB  2EFE               	goto	u254_20
 19037  16FC  3001               	movlw	1
 19038  16FD  2EFF               	goto	u255_20
 19039  16FE                     u254_20:	
 19040  16FE  3000               	movlw	0
 19041  16FF                     u255_20:	
 19042  16FF  00FB               	movwf	___fladd@grs
 19043  1700  01F0               	clrf	___fladd@b
 19044  1701  01F1               	clrf	___fladd@b+1
 19045  1702  01F2               	clrf	___fladd@b+2
 19046  1703  01F3               	clrf	___fladd@b+3
 19047  1704  0879               	movf	___fladd@aexp,w
 19048  1705  00FA               	movwf	___fladd@bexp
 19049  1706  2F19               	goto	i1l1894
 19050  1707                     i1l1896:	
 19051  1707  1C7B               	btfss	___fladd@grs,0
 19052  1708  2F0D               	goto	i1l1897
 19053  1709  367B               	lsrf	___fladd@grs,w
 19054  170A  3801               	iorlw	1
 19055  170B  00FB               	movwf	___fladd@grs
 19056  170C  2F0E               	goto	i1l1898
 19057  170D                     i1l1897:	
 19058  170D  36FB               	lsrf	___fladd@grs,f
 19059  170E                     i1l1898:	
 19060  170E  1870               	btfsc	___fladd@b,0
 19061  170F  17FB               	bsf	___fladd@grs,7
 19062  1710  37F3               	asrf	___fladd@b+3,f
 19063  1711  0CF2               	rrf	___fladd@b+2,f
 19064  1712  0CF1               	rrf	___fladd@b+1,f
 19065  1713  0CF0               	rrf	___fladd@b,f
 19066  1714  0AFA               	incf	___fladd@bexp,f
 19067  1715                     i1l4962:	
 19068  1715  0879               	movf	___fladd@aexp,w
 19069  1716  027A               	subwf	___fladd@bexp,w
 19070  1717  1C03               	skipc
 19071  1718  2F07               	goto	i1l1896
 19072  1719                     i1l1894:	
 19073  1719  1B78               	btfsc	___fladd@signs,6
 19074  171A  2F3C               	goto	i1l4980
 19075  171B  087A               	movf	___fladd@bexp,w
 19076  171C  1D03               	btfss	3,2
 19077  171D  2F23               	goto	i1l4968
 19078  171E  01F0               	clrf	?___fladd
 19079  171F  01F1               	clrf	?___fladd+1
 19080  1720  01F2               	clrf	?___fladd+2
 19081  1721  01F3               	clrf	?___fladd+3
 19082  1722  0008               	return
 19083  1723                     i1l4968:	
 19084  1723  0874               	movf	___fladd@a,w
 19085  1724  07F0               	addwf	___fladd@b,f
 19086  1725  0875               	movf	___fladd@a+1,w
 19087  1726  3DF1               	addwfc	___fladd@b+1,f
 19088  1727  0876               	movf	___fladd@a+2,w
 19089  1728  3DF2               	addwfc	___fladd@b+2,f
 19090  1729  0877               	movf	___fladd@a+3,w
 19091  172A  3DF3               	addwfc	___fladd@b+3,f
 19092  172B  1C73               	btfss	___fladd@b+3,0
 19093  172C  2FA5               	goto	i1l5010
 19094  172D  1C7B               	btfss	___fladd@grs,0
 19095  172E  2F33               	goto	i1l1905
 19096  172F  367B               	lsrf	___fladd@grs,w
 19097  1730  3801               	iorlw	1
 19098  1731  00FB               	movwf	___fladd@grs
 19099  1732  2F34               	goto	i1l1906
 19100  1733                     i1l1905:	
 19101  1733  36FB               	lsrf	___fladd@grs,f
 19102  1734                     i1l1906:	
 19103  1734  1870               	btfsc	___fladd@b,0
 19104  1735  17FB               	bsf	___fladd@grs,7
 19105  1736  37F3               	asrf	___fladd@b+3,f
 19106  1737  0CF2               	rrf	___fladd@b+2,f
 19107  1738  0CF1               	rrf	___fladd@b+1,f
 19108  1739  0CF0               	rrf	___fladd@b,f
 19109  173A  0AFA               	incf	___fladd@bexp,f
 19110  173B  2FA5               	goto	i1l5010
 19111  173C                     i1l4980:	
 19112  173C  0873               	movf	___fladd@b+3,w
 19113  173D  3A80               	xorlw	128
 19114  173E  0020               	movlb	0	; select bank0
 19115  173F  00CA               	movwf	??___fladd
 19116  1740  0877               	movf	___fladd@a+3,w
 19117  1741  3A80               	xorlw	128
 19118  1742  024A               	subwf	??___fladd,w
 19119  1743  1D03               	skipz
 19120  1744  2F4F               	goto	u264_23
 19121  1745  0876               	movf	___fladd@a+2,w
 19122  1746  0272               	subwf	___fladd@b+2,w
 19123  1747  1D03               	skipz
 19124  1748  2F4F               	goto	u264_23
 19125  1749  0875               	movf	___fladd@a+1,w
 19126  174A  0271               	subwf	___fladd@b+1,w
 19127  174B  1D03               	skipz
 19128  174C  2F4F               	goto	u264_23
 19129  174D  0874               	movf	___fladd@a,w
 19130  174E  0270               	subwf	___fladd@b,w
 19131  174F                     u264_23:	
 19132  174F  1803               	skipnc
 19133  1750  2F7E               	goto	i1l4990
 19134  1751  30FF               	movlw	255
 19135  1752  00CA               	movwf	??___fladd
 19136  1753  00CB               	movwf	??___fladd+1
 19137  1754  00CC               	movwf	??___fladd+2
 19138  1755  00CD               	movwf	??___fladd+3
 19139  1756  0870               	movf	___fladd@b,w
 19140  1757  0274               	subwf	___fladd@a,w
 19141  1758  00CE               	movwf	??___fladd+4
 19142  1759  0871               	movf	___fladd@b+1,w
 19143  175A  3B75               	subwfb	___fladd@a+1,w
 19144  175B  00CF               	movwf	??___fladd+5
 19145  175C  0872               	movf	___fladd@b+2,w
 19146  175D  3B76               	subwfb	___fladd@a+2,w
 19147  175E  00D0               	movwf	??___fladd+6
 19148  175F  0873               	movf	___fladd@b+3,w
 19149  1760  3B77               	subwfb	___fladd@a+3,w
 19150  1761  00D1               	movwf	??___fladd+7
 19151  1762  084E               	movf	??___fladd+4,w
 19152  1763  07CA               	addwf	??___fladd,f
 19153  1764  084F               	movf	??___fladd+5,w
 19154  1765  3DCB               	addwfc	??___fladd+1,f
 19155  1766  0850               	movf	??___fladd+6,w
 19156  1767  3DCC               	addwfc	??___fladd+2,f
 19157  1768  0851               	movf	??___fladd+7,w
 19158  1769  3DCD               	addwfc	??___fladd+3,f
 19159  176A  084D               	movf	??___fladd+3,w
 19160  176B  00F3               	movwf	___fladd@b+3
 19161  176C  084C               	movf	??___fladd+2,w
 19162  176D  00F2               	movwf	___fladd@b+2
 19163  176E  084B               	movf	??___fladd+1,w
 19164  176F  00F1               	movwf	___fladd@b+1
 19165  1770  084A               	movf	??___fladd,w
 19166  1771  00F0               	movwf	___fladd@b
 19167  1772  3080               	movlw	128
 19168  1773  06F8               	xorwf	___fladd@signs,f
 19169  1774  09FB               	comf	___fladd@grs,f
 19170  1775  0FFB               	incfsz	___fladd@grs,f
 19171  1776  2F86               	goto	i1l1911
 19172  1777  3001               	movlw	1
 19173  1778  07F0               	addwf	___fladd@b,f
 19174  1779  3000               	movlw	0
 19175  177A  3DF1               	addwfc	___fladd@b+1,f
 19176  177B  3DF2               	addwfc	___fladd@b+2,f
 19177  177C  3DF3               	addwfc	___fladd@b+3,f
 19178  177D  2F86               	goto	i1l1911
 19179  177E                     i1l4990:	
 19180  177E  0874               	movf	___fladd@a,w
 19181  177F  02F0               	subwf	___fladd@b,f
 19182  1780  0875               	movf	___fladd@a+1,w
 19183  1781  3BF1               	subwfb	___fladd@b+1,f
 19184  1782  0876               	movf	___fladd@a+2,w
 19185  1783  3BF2               	subwfb	___fladd@b+2,f
 19186  1784  0877               	movf	___fladd@a+3,w
 19187  1785  3BF3               	subwfb	___fladd@b+3,f
 19188  1786                     i1l1911:	
 19189  1786  0873               	movf	___fladd@b+3,w
 19190  1787  0472               	iorwf	___fladd@b+2,w
 19191  1788  0471               	iorwf	___fladd@b+1,w
 19192  1789  0470               	iorwf	___fladd@b,w
 19193  178A  1D03               	skipz
 19194  178B  2FA3               	goto	i1l5008
 19195  178C  087B               	movf	___fladd@grs,w
 19196  178D  1D03               	btfss	3,2
 19197  178E  2FA3               	goto	i1l5008
 19198  178F  01F0               	clrf	?___fladd
 19199  1790  01F1               	clrf	?___fladd+1
 19200  1791  01F2               	clrf	?___fladd+2
 19201  1792  01F3               	clrf	?___fladd+3
 19202  1793  0008               	return
 19203  1794                     i1l4996:	
 19204  1794  35F0               	lslf	___fladd@b,f
 19205  1795  0DF1               	rlf	___fladd@b+1,f
 19206  1796  0DF2               	rlf	___fladd@b+2,f
 19207  1797  0DF3               	rlf	___fladd@b+3,f
 19208  1798  1BFB               	btfsc	___fladd@grs,7
 19209  1799  1470               	bsf	___fladd@b,0
 19210  179A  1C7B               	btfss	___fladd@grs,0
 19211  179B  2F9F               	goto	i1l1916
 19212  179C  1403               	setc
 19213  179D  0DFB               	rlf	___fladd@grs,f
 19214  179E  2FA0               	goto	i1l5004
 19215  179F                     i1l1916:	
 19216  179F  35FB               	lslf	___fladd@grs,f
 19217  17A0                     i1l5004:	
 19218  17A0  087A               	movf	___fladd@bexp,w
 19219  17A1  1D03               	btfss	3,2
 19220  17A2  03FA               	decf	___fladd@bexp,f
 19221  17A3                     i1l5008:	
 19222  17A3  1FF2               	btfss	___fladd@b+2,7
 19223  17A4  2F94               	goto	i1l4996
 19224  17A5                     i1l5010:	
 19225  17A5  01F9               	clrf	___fladd@aexp
 19226  17A6  1FFB               	btfss	___fladd@grs,7
 19227  17A7  2FB0               	goto	i1l5020
 19228  17A8  087B               	movf	___fladd@grs,w
 19229  17A9  397F               	andlw	127
 19230  17AA  1903               	btfsc	3,2
 19231  17AB  1870               	btfsc	___fladd@b,0
 19232  17AC  2FAE               	goto	i1l5016
 19233  17AD  2FB0               	goto	i1l5020
 19234  17AE                     i1l5016:	
 19235  17AE  01F9               	clrf	___fladd@aexp
 19236  17AF  0AF9               	incf	___fladd@aexp,f
 19237  17B0                     i1l5020:	
 19238  17B0  0879               	movf	___fladd@aexp,w
 19239  17B1  1903               	btfsc	3,2
 19240  17B2  2FC1               	goto	i1l5032
 19241  17B3  3001               	movlw	1
 19242  17B4  07F0               	addwf	___fladd@b,f
 19243  17B5  3000               	movlw	0
 19244  17B6  3DF1               	addwfc	___fladd@b+1,f
 19245  17B7  3DF2               	addwfc	___fladd@b+2,f
 19246  17B8  3DF3               	addwfc	___fladd@b+3,f
 19247  17B9  1C73               	btfss	___fladd@b+3,0
 19248  17BA  2FC1               	goto	i1l5032
 19249  17BB  37F3               	asrf	___fladd@b+3,f
 19250  17BC  0CF2               	rrf	___fladd@b+2,f
 19251  17BD  0CF1               	rrf	___fladd@b+1,f
 19252  17BE  0CF0               	rrf	___fladd@b,f
 19253  17BF  0F7A               	incfsz	___fladd@bexp,w
 19254  17C0  0AFA               	incf	___fladd@bexp,f
 19255  17C1                     i1l5032:	
 19256  17C1  0A7A               	incf	___fladd@bexp,w
 19257  17C2  1D03               	btfss	3,2
 19258  17C3  087A               	movf	___fladd@bexp,w
 19259  17C4  1D03               	btfss	3,2
 19260  17C5  2FCD               	goto	i1l5040
 19261  17C6  01F0               	clrf	___fladd@b
 19262  17C7  01F1               	clrf	___fladd@b+1
 19263  17C8  01F2               	clrf	___fladd@b+2
 19264  17C9  01F3               	clrf	___fladd@b+3
 19265  17CA  087A               	movf	___fladd@bexp,w
 19266  17CB  1903               	btfsc	3,2
 19267  17CC  01F8               	clrf	___fladd@signs
 19268  17CD                     i1l5040:	
 19269  17CD  1C7A               	btfss	___fladd@bexp,0
 19270  17CE  2FD1               	goto	i1l1931
 19271  17CF  17F2               	bsf	___fladd@b+2,7
 19272  17D0  2FD2               	goto	i1l5044
 19273  17D1                     i1l1931:	
 19274  17D1  13F2               	bcf	___fladd@b+2,7
 19275  17D2                     i1l5044:	
 19276  17D2  367A               	lsrf	___fladd@bexp,w
 19277  17D3  00F3               	movwf	___fladd@b+3
 19278  17D4  1BF8               	btfsc	___fladd@signs,7
 19279  17D5  17F3               	bsf	___fladd@b+3,7
 19280  17D6  0008               	return
 19281  17D7                     __end_of___fladd:	
 19282  007E                     btemp	set	126	;btemp
 19283  007E                     int$flags	set	126
 19284  007E                     wtemp0	set	126
 19285  17D7                     __ptext78:	
 19286 ;; *************** function i1_SetInterrupt *****************
 19287 ;; Defined at:
 19288 ;;		line 56 in file "main.c"
 19289 ;; Parameters:    Size  Location     Type
 19290 ;;		None
 19291 ;; Auto vars:     Size  Location     Type
 19292 ;;		None
 19293 ;; Return value:  Size  Location     Type
 19294 ;;                  1    wreg      void 
 19295 ;; Registers used:
 19296 ;;		wreg, status,2, status,0
 19297 ;; Tracked objects:
 19298 ;;		On entry : 1F/0
 19299 ;;		On exit  : 1D/0
 19300 ;;		Unchanged: 0/0
 19301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19304 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19305 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19306 ;;Total ram usage:        2 bytes
 19307 ;; Hardware stack levels used:    1
 19308 ;; This function calls:
 19309 ;;		Nothing
 19310 ;; This function is called by:
 19311 ;;		_CLC_1_Interrupt
 19312 ;;		_CLC_2_Interrupt
 19313 ;; This function uses a non-reentrant model
 19314 ;;
 19315                           
 19316                           
 19317                           ;psect for function i1_SetInterrupt
 19318  17D7                     i1_SetInterrupt:	
 19319                           
 19320                           ;main.c: 58: if ((NSTATUS.val & INTCONF.val) != 0) {
 19321                           
 19322                           ;incstack = 0
 19323                           ; Regs used in i1_SetInterrupt: [wreg+status,2+status,0]
 19324  17D7  0830               	movf	_INTCONF,w	;volatile
 19325  17D8  0532               	andwf	_NSTATUS,w	;volatile
 19326  17D9  00F0               	movwf	??i1_SetInterrupt
 19327  17DA  0831               	movf	_INTCONF+1,w	;volatile
 19328  17DB  0533               	andwf	_NSTATUS+1,w	;volatile
 19329  17DC  00F1               	movwf	??i1_SetInterrupt+1
 19330  17DD  0470               	iorwf	??i1_SetInterrupt,w
 19331  17DE  1903               	btfsc	3,2
 19332  17DF  0008               	return
 19333                           
 19334                           ;main.c: 59: do { LATBbits.LATB5 = 0; } while(0);
 19335  17E0  0022               	movlb	2	; select bank2
 19336  17E1  128D               	bcf	13,5	;volatile
 19337  17E2  0008               	return
 19338  17E3                     __end_ofi1_SetInterrupt:	
 19339  17E3                     __ptext76:	
 19340 ;; *************** function ___flsub *****************
 19341 ;; Defined at:
 19342 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
 19343 ;; Parameters:    Size  Location     Type
 19344 ;;  a               4    8[BANK0 ] void 
 19345 ;;  b               4   12[BANK0 ] void 
 19346 ;; Auto vars:     Size  Location     Type
 19347 ;;		None
 19348 ;; Return value:  Size  Location     Type
 19349 ;;                  4    8[BANK0 ] void 
 19350 ;; Registers used:
 19351 ;;		wreg, status,2, status,0, pclath, cstack
 19352 ;; Tracked objects:
 19353 ;;		On entry : 1F/0
 19354 ;;		On exit  : 1F/0
 19355 ;;		Unchanged: 0/0
 19356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19357 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19360 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19361 ;;Total ram usage:        8 bytes
 19362 ;; Hardware stack levels used:    1
 19363 ;; Hardware stack levels required when called:    1
 19364 ;; This function calls:
 19365 ;;		___fladd
 19366 ;; This function is called by:
 19367 ;;		_CLC_2_Interrupt
 19368 ;; This function uses a non-reentrant model
 19369 ;;
 19370                           
 19371                           
 19372                           ;psect for function ___flsub
 19373  17E3                     ___flsub:	
 19374                           
 19375                           ;incstack = 0
 19376                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 19377  17E3  3080               	movlw	128
 19378  17E4  06D5               	xorwf	___flsub@a+3,f
 19379  17E5  0859               	movf	___flsub@b+3,w
 19380  17E6  00F3               	movwf	___fladd@b+3
 19381  17E7  0858               	movf	___flsub@b+2,w
 19382  17E8  00F2               	movwf	___fladd@b+2
 19383  17E9  0857               	movf	___flsub@b+1,w
 19384  17EA  00F1               	movwf	___fladd@b+1
 19385  17EB  0856               	movf	___flsub@b,w
 19386  17EC  00F0               	movwf	___fladd@b
 19387  17ED  0855               	movf	___flsub@a+3,w
 19388  17EE  00F7               	movwf	___fladd@a+3
 19389  17EF  0854               	movf	___flsub@a+2,w
 19390  17F0  00F6               	movwf	___fladd@a+2
 19391  17F1  0853               	movf	___flsub@a+1,w
 19392  17F2  00F5               	movwf	___fladd@a+1
 19393  17F3  0852               	movf	___flsub@a,w
 19394  17F4  00F4               	movwf	___fladd@a
 19395  17F5  2688               	fcall	___fladd
 19396  17F6  0873               	movf	?___fladd+3,w
 19397  17F7  0020               	movlb	0	; select bank0
 19398  17F8  00D5               	movwf	?___flsub+3
 19399  17F9  0872               	movf	?___fladd+2,w
 19400  17FA  00D4               	movwf	?___flsub+2
 19401  17FB  0871               	movf	?___fladd+1,w
 19402  17FC  00D3               	movwf	?___flsub+1
 19403  17FD  0870               	movf	?___fladd,w
 19404  17FE  00D2               	movwf	?___flsub
 19405  17FF  0008               	return
 19406  1800                     __end_of___flsub:	


Data Sizes:
    Strings     0
    Constant    1400
    Data        1
    BSS         85
    Persistent  33
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     20      64
    BANK1            80     16      59
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TimerInt(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TimerInt(), Absolute function(), TMR3_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR3_ISR->_TMR3_WriteTimer
    _UpdateOut_GP3->i1_PWM_GP3
    _UpdateOut_GP2->i1_PWM_GP2
    _UpdateOut_GP1->i1_PWM_GP1
    _Config_GP3->i1_PWM_GP3
    i1_PWM_GP3->i1___wmul
    _Config_GP2->i1_PWM_GP2
    i1_PWM_GP2->i1___wmul
    _Config_GP1->i1_PWM_GP1
    i1_PWM_GP1->i1___wmul
    _RegisterRead->_eeprom_read
    _CLC_2_Interrupt->___flge
    ___flsub->___fladd
    _CLC_1_Interrupt->___fladd
    _CLC_1_Interrupt->___flge

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _I2C1_ISR->_I2C1_StatusCallback
    _I2C1_StatusCallback->_RegisterWrite
    _RegisterWrite->_Config_GP1
    _RegisterWrite->_Config_GP2
    _RegisterWrite->_Config_GP3
    _UpdateOut_GP3->i1_PWM_GP3
    _UpdateOut_GP2->i1_PWM_GP2
    _UpdateOut_GP1->i1_PWM_GP1
    _Config_GP3->i1_PWM_GP3
    _Config_GP2->i1_PWM_GP2
    _Config_GP1->i1_PWM_GP1
    _CLC2_ISR->_CLC_2_Interrupt
    _CLC1_ISR->_CLC_2_Interrupt
    _CLC_2_Interrupt->___flsub
    ___flsub->___fladd
    _CLC_1_Interrupt->___fladd

Critical Paths under _main in BANK1

    _main->_GP_Ports_FSM
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _NavKey_UPButton_FSM->_NavKeyStatusUpdate
    _NavKey_UPButton_FSM->_SetInterrupt
    _NavKey_RTButton_FSM->_NavKeyStatusUpdate
    _NavKey_RTButton_FSM->_SetInterrupt
    _NavKey_LTButton_FSM->_NavKeyStatusUpdate
    _NavKey_LTButton_FSM->_SetInterrupt
    _NavKey_DWButton_FSM->_NavKeyStatusUpdate
    _NavKey_DWButton_FSM->_SetInterrupt
    _NavKey_CentralButton_FSM->_NavKeyStatusUpdate
    _NavKey_CentralButton_FSM->_SetInterrupt
    _GP3_FSM->_ADC_GetConversion
    _GP2_FSM->_ADC_GetConversion
    _GP1_FSM->_ADC_GetConversion
    _FADE_GP3->_PWM_GP3
    _PWM_GP3->___wmul
    _FADE_GP2->_PWM_GP2
    _PWM_GP2->___wmul
    _FADE_GP1->_PWM_GP1
    _PWM_GP1->___wmul
    _FadeProcessClear->_Int2StatusUpdate
    _Int2StatusUpdate->_NavKeyStatusUpdate

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   23582
                     _ClearInterrupt
                        _DataInitSet
                       _GP_Ports_FSM
                         _NavKey_FSM
                  _SYSTEM_Initialize
           _TMR3_SetInterruptHandler
                    _TMR3_StartTimer
 ---------------------------------------------------------------------------------
 (1) _TMR3_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     211
                    _CLC1_Initialize
                    _CLC2_Initialize
                    _I2C1_AddressSet
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0     211
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR3_SetInterruptHandler                             2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_AddressSet                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _NavKey_FSM                                           0     0      0    8490
             _NavKeySwitch_KeyFilter
           _NavKey_CentralButton_FSM
                _NavKey_DWButton_FSM
                _NavKey_LTButton_FSM
                _NavKey_RTButton_FSM
                _NavKey_UPButton_FSM
 ---------------------------------------------------------------------------------
 (2) _NavKey_UPButton_FSM                                  0     0      0    1641
                 _NavKeyStatusUpdate
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (2) _NavKey_RTButton_FSM                                  0     0      0    1641
                 _NavKeyStatusUpdate
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (2) _NavKey_LTButton_FSM                                  0     0      0    1641
                 _NavKeyStatusUpdate
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (2) _NavKey_DWButton_FSM                                  0     0      0    1641
                 _NavKeyStatusUpdate
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (2) _NavKey_CentralButton_FSM                             0     0      0    1641
                 _NavKeyStatusUpdate
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (2) _NavKeySwitch_KeyFilter                               1     1      0     285
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _GP_Ports_FSM                                         1     1      0   14670
                                             15 BANK1      1     1      0
                           _FADE_GP1
                           _FADE_GP2
                           _FADE_GP3
                            _GP1_FSM
                            _GP2_FSM
                            _GP3_FSM
 ---------------------------------------------------------------------------------
 (2) _GP3_FSM                                              2     2      0    1703
                                              4 BANK1      2     2      0
                  _ADC_GetConversion
                     _ADC_Initialize
                   _Int2StatusUpdate
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (2) _GP2_FSM                                              2     2      0    1703
                                              4 BANK1      2     2      0
                  _ADC_GetConversion
                     _ADC_Initialize
                   _Int2StatusUpdate
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (2) _GP1_FSM                                              2     2      0    1703
                                              4 BANK1      2     2      0
                  _ADC_GetConversion
                     _ADC_Initialize
                   _Int2StatusUpdate
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (3) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ADC_GetConversion                                    4     2      2      31
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (2) _FADE_GP3                                             0     0      0    3187
                   _FadeProcessClear
                     _FadeProcessSet
                            _PWM_GP3
 ---------------------------------------------------------------------------------
 (3) _PWM_GP3                                              9     9      0    1453
                                              6 BANK1      9     9      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _FADE_GP2                                             0     0      0    3187
                   _FadeProcessClear
                     _FadeProcessSet
                            _PWM_GP2
 ---------------------------------------------------------------------------------
 (3) _PWM_GP2                                              9     9      0    1453
                                              6 BANK1      9     9      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _FADE_GP1                                             0     0      0    3187
                   _FadeProcessClear
                     _FadeProcessSet
                            _PWM_GP1
 ---------------------------------------------------------------------------------
 (3) _PWM_GP1                                              9     9      0    1453
                                              6 BANK1      9     9      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1326
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _FadeProcessSet                                       1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (3) _FadeProcessClear                                     1     1      0    1703
                                              3 BANK1      1     1      0
                   _Int2StatusUpdate
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (3) _SetInterrupt                                         2     2      0       0
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (3) _Int2StatusUpdate                                     1     1      0    1672
                                              2 BANK1      1     1      0
                 _NavKeyStatusUpdate
 ---------------------------------------------------------------------------------
 (3) _NavKeyStatusUpdate                                   2     0      2    1641
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _DataInitSet                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ClearInterrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0   17567
                           _CLC1_ISR
                           _CLC2_ISR
                           _I2C1_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR3_ISR                                             0     0      0     229
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (8) _TMR3_WriteTimer                                      2     0      2     229
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) _TMR3_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                           _TimerInt *
 ---------------------------------------------------------------------------------
 (9) _TimerInt                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _TMR3_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_ISR                                             1     1      0    5008
                                              6 BANK0      1     1      0
                _I2C1_StatusCallback
 ---------------------------------------------------------------------------------
 (8) _I2C1_StatusCallback                                  1     1      0    4984
                                              5 BANK0      1     1      0
                    _Int2StatusClear
                       _RegisterRead
                      _RegisterWrite
                        _StatusClear
                   i1_ClearInterrupt
 ---------------------------------------------------------------------------------
 (9) i1_ClearInterrupt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _StatusClear                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _RegisterWrite                                        2     1      1    4790
                                              3 BANK0      2     1      1
                         _Config_GP1
                         _Config_GP2
                         _Config_GP3
                     _GeneralDataSet
                   _GeneralDataSplit
                      _UpdateOut_GP1
                      _UpdateOut_GP2
                      _UpdateOut_GP3
                       _eeprom_write
                           i1___wmul
 ---------------------------------------------------------------------------------
 (10) _eeprom_write                                        2     1      1     196
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (10) _UpdateOut_GP3                                       1     1      0     545
                                              1 BANK0      1     1      0
                          i1_PWM_GP3
 ---------------------------------------------------------------------------------
 (10) _UpdateOut_GP2                                       1     1      0     545
                                              1 BANK0      1     1      0
                          i1_PWM_GP2
 ---------------------------------------------------------------------------------
 (10) _UpdateOut_GP1                                       1     1      0     545
                                              1 BANK0      1     1      0
                          i1_PWM_GP1
 ---------------------------------------------------------------------------------
 (10) _GeneralDataSplit                                    1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _GeneralDataSet                                      0     0      0       0
       _I2C1_Initialize_ClockStreach
                  i1_I2C1_Initialize
 ---------------------------------------------------------------------------------
 (11) i1_I2C1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_Initialize_ClockStreach                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _Config_GP3                                          2     2      0     545
                                              1 BANK0      2     2      0
                    _PWM3_Initialize
                          i1_PWM_GP3
 ---------------------------------------------------------------------------------
 (11) i1_PWM_GP3                                           9     9      0     545
                                              6 COMMON     8     8      0
                                              0 BANK0      1     1      0
                           i1___wmul
 ---------------------------------------------------------------------------------
 (11) _PWM3_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _Config_GP2                                          2     2      0     545
                                              1 BANK0      2     2      0
                    _PWM2_Initialize
                          i1_PWM_GP2
 ---------------------------------------------------------------------------------
 (11) i1_PWM_GP2                                           9     9      0     545
                                              6 COMMON     8     8      0
                                              0 BANK0      1     1      0
                           i1___wmul
 ---------------------------------------------------------------------------------
 (11) _PWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _Config_GP1                                          2     2      0     545
                                              1 BANK0      2     2      0
                    _PWM1_Initialize
                          i1_PWM_GP1
 ---------------------------------------------------------------------------------
 (11) i1_PWM_GP1                                           9     9      0     545
                                              6 COMMON     8     8      0
                                              0 BANK0      1     1      0
                           i1___wmul
 ---------------------------------------------------------------------------------
 (10) i1___wmul                                            6     2      4     456
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (11) _PWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _RegisterRead                                         2     2      0     172
                                              1 COMMON     2     2      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (10) _eeprom_read                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _Int2StatusClear                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _CLC2_ISR                                             0     0      0    6165
                    _CLC_1_Interrupt
                    _CLC_2_Interrupt
 ---------------------------------------------------------------------------------
 (7) _CLC1_ISR                                             0     0      0    6165
                    _CLC_1_Interrupt
                    _CLC_2_Interrupt
 ---------------------------------------------------------------------------------
 (8) _CLC_2_Interrupt                                      4     4      0    3181
                                             16 BANK0      4     4      0
                             ___flge
                            ___flsub
               i1_NavKeyStatusUpdate
                     i1_SetInterrupt
 ---------------------------------------------------------------------------------
 (9) ___flsub                                              8     0      8    2465
                                              8 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (8) _CLC_1_Interrupt                                      4     4      0    2984
                                              8 BANK0      4     4      0
                            ___fladd
                             ___flge
               i1_NavKeyStatusUpdate
                     i1_SetInterrupt
 ---------------------------------------------------------------------------------
 (9) i1_SetInterrupt                                       2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) i1_NavKeyStatusUpdate                                 2     0      2     230
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (9) ___flge                                              12     4      8     486
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (10) ___fladd                                            20    12      8    2268
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearInterrupt
   _DataInitSet
   _GP_Ports_FSM
     _FADE_GP1
       _FadeProcessClear
         _Int2StatusUpdate
           _NavKeyStatusUpdate
         _SetInterrupt
       _FadeProcessSet
       _PWM_GP1
         ___wmul
     _FADE_GP2
       _FadeProcessClear
         _Int2StatusUpdate
           _NavKeyStatusUpdate
         _SetInterrupt
       _FadeProcessSet
       _PWM_GP2
         ___wmul
     _FADE_GP3
       _FadeProcessClear
         _Int2StatusUpdate
           _NavKeyStatusUpdate
         _SetInterrupt
       _FadeProcessSet
       _PWM_GP3
         ___wmul
     _GP1_FSM
       _ADC_GetConversion
       _ADC_Initialize
       _Int2StatusUpdate
         _NavKeyStatusUpdate
       _SetInterrupt
     _GP2_FSM
       _ADC_GetConversion
       _ADC_Initialize
       _Int2StatusUpdate
         _NavKeyStatusUpdate
       _SetInterrupt
     _GP3_FSM
       _ADC_GetConversion
       _ADC_Initialize
       _Int2StatusUpdate
         _NavKeyStatusUpdate
       _SetInterrupt
   _NavKey_FSM
     _NavKeySwitch_KeyFilter
     _NavKey_CentralButton_FSM
       _NavKeyStatusUpdate
       _SetInterrupt
     _NavKey_DWButton_FSM
       _NavKeyStatusUpdate
       _SetInterrupt
     _NavKey_LTButton_FSM
       _NavKeyStatusUpdate
       _SetInterrupt
     _NavKey_RTButton_FSM
       _NavKeyStatusUpdate
       _SetInterrupt
     _NavKey_UPButton_FSM
       _NavKeyStatusUpdate
       _SetInterrupt
   _SYSTEM_Initialize
     _CLC1_Initialize
     _CLC2_Initialize
     _I2C1_AddressSet
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _WDT_Initialize
   _TMR3_SetInterruptHandler
   _TMR3_StartTimer

 _INTERRUPT_InterruptManager (ROOT)
   _CLC1_ISR
     _CLC_1_Interrupt
       ___fladd
       ___flge
       i1_NavKeyStatusUpdate
       i1_SetInterrupt
     _CLC_2_Interrupt
       ___flge
       ___flsub
         ___fladd
       i1_NavKeyStatusUpdate
       i1_SetInterrupt
   _CLC2_ISR
     _CLC_1_Interrupt
       ___fladd
       ___flge
       i1_NavKeyStatusUpdate
       i1_SetInterrupt
     _CLC_2_Interrupt
       ___flge
       ___flsub
         ___fladd
       i1_NavKeyStatusUpdate
       i1_SetInterrupt
   _I2C1_ISR
     _I2C1_StatusCallback
       _Int2StatusClear
       _RegisterRead
         _eeprom_read
       _RegisterWrite
         _Config_GP1
           _PWM1_Initialize
           i1_PWM_GP1
             i1___wmul
         _Config_GP2
           _PWM2_Initialize
           i1_PWM_GP2
             i1___wmul
         _Config_GP3
           _PWM3_Initialize
           i1_PWM_GP3
             i1___wmul
         _GeneralDataSet
           _I2C1_Initialize_ClockStreach
           i1_I2C1_Initialize
         _GeneralDataSplit
         _UpdateOut_GP1
           i1_PWM_GP1
             i1___wmul
         _UpdateOut_GP2
           i1_PWM_GP2
             i1___wmul
         _UpdateOut_GP3
           i1_PWM_GP3
             i1___wmul
         _eeprom_write
         i1___wmul
       _StatusClear
       i1_ClearInterrupt
   _TMR3_ISR
     _TMR3_CallBack
       Absolute function(Fake) *
       _TMR3_DefaultInterruptHandler *
       _TimerInt *
     _TMR3_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      40       5       80.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     10      3B       7       73.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      89      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      89      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Nov 17 19:24:25 2019

                   ??_NavKey_RTButton_FSM 00CD                                         pc 0002  
                             __CFG_CP$OFF 0000                       ___wmul@multiplicand 00CD  
                        i1___wmul@product 0074                 __size_ofi1_ClearInterrupt 0003  
                         ??_UpdateOut_GP1 004B                           ??_UpdateOut_GP2 004B  
                         ??_UpdateOut_GP3 004B                                       l353 01F7  
                                     l742 0B5E                                       l736 0B52  
                                     l739 0B58                                       _PR2 001E  
                            __CFG_CPD$OFF 0000                   __size_of_PMD_Initialize 000E  
                         _TMR2_Initialize 0BC9                         ??_CLC2_Initialize 00CB  
                                     wreg 0009                           __end_of_GP1_FSM 0131  
                         __end_of_GP2_FSM 01CB                           __end_of_GP3_FSM 017E  
                RegisterRead@return_value 0072                     ??_NavKey_UPButton_FSM 00CD  
                                    S7840 10F0                                      S7842 10F8  
                                    S7844 11B4                                      S7838 10E4  
                            __CFG_LVP$OFF 0000                          __end_of_I2C1_ISR 0A4E  
                                    l1150 010C                                      l1153 011A  
                                    l1180 0157                                      l1165 01A4  
                                    l1183 0166                                      l1168 01B3  
                         _timer3ReloadVal 00B7                                      l7010 00A6  
                                    l7100 00E7                                      l7110 00FA  
                                    l7200 013D                                      l7114 00FE  
                                    l7202 0145                                      l7044 0242  
                                    l7124 0116                                      l7108 00F2  
                                    l7206 0149                                      l7230 0172  
                                    l7310 14E7                                      l7160 0196  
                                    l7216 0162                                      l7138 0126  
                                    l7170 01AF                                      l7154 018A  
                                    l7146 017F                                      l7242 13EE  
                                    l7402 147A                                      l7156 0192  
                                    l7252 141B                                      l7260 14B0  
                                    l7340 1485                                      l7332 1436  
                                    l7324 142C                                      l7500 005C  
                                    l7078 0218                                      l7190 0131  
                                    l7262 14B4                                      l7318 1422  
                                    l7184 01BF                                      l7192 0132  
                                    l7248 1409                                      l7272 14C1  
                                    l7336 1438                                      l7282 14D0  
                                    l7354 1499                                      l7346 148F  
                                    l7362 1443                                      l6652 14F2  
                                    l6724 037C                                      l6812 027C  
                                    l7292 14DF                                      l7284 14D2  
                                    l7276 14C6                                      l7268 14BB  
                                    l7380 1459                                      l6654 01D5  
                                    l6662 03E8                                      l7358 149B  
                                    l7390 146E                                      l7382 1463  
                                    l7454 0413                                      l6744 039A  
                                    l6728 0382                                      l6808 0276  
                                    l7384 1464                                      l7376 1457  
                                    l7368 144D                                      l6666 03EE  
                                    l6770 02FF                                      l7474 00D8  
                                    l7298 14E1                                      l6906 0B64  
                                    l6828 0294                                      l6676 0201  
                                    l7484 0047                                      l6766 02F9  
                                    l7398 1478                                      l6786 0317  
                                    l6978 0BEA                                      _CMAX 0028  
                                    _CMIN 0024                   __end_of_PWM1_Initialize 0ED5  
                                    _CVAL 002C                                      _LATA 010C  
                                    _LATB 010D                                      _LATC 010E  
                                    _PMD0 0911                                      _PMD1 0912  
                                    _PMD2 0913                                      _PMD3 0914  
                                    _PMD4 0915                                      _PMD5 0916  
                                    i1l80 0012                                      i1l82 001C  
                                    i1l84 0026                                      i1l89 002E  
                                    u4785 14AB                                      u4987 01F2  
                         ?_ClearInterrupt 0070                                      _TMR2 001D  
                                    _WPUA 020C                                      _WPUB 020D  
                                    _WPUC 020E                            ??_eeprom_write 0071  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
                                    _main 0047                           __end_of_PWM_GP1 03E6  
                         __end_of_PWM_GP2 0363                           __end_of_PWM_GP3 02E0  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                          __end_of_FADE_GP1 00C1  
                        __end_of_FADE_GP2 025D                          __end_of_FADE_GP3 0233  
                        __end_of_CLC1_ISR 150E                          __end_of_CLC2_ISR 1504  
                           __CFG_BOREN$ON 0000                             __CFG_BORV$LOW 0000  
                                    start 0030                ??_NavKey_CentralButton_FSM 00CD  
                         _CLC_1_Interrupt 150E                           _TMR3_Initialize 0BEA  
                 __end_of_Int2StatusClear 0A9A                             __CFG_CSWEN$ON 0000  
                     _I2C1_StatusCallback 0A4E                               _DataInitSet 0068  
                           i1PWM_GP1@duty 004A                   __end_of_PWM2_Initialize 0F4D  
                           i1PWM_GP2@duty 004A                             i1PWM_GP3@duty 004A  
                         _CLC_2_Interrupt 1597            __size_of_OSCILLATOR_Initialize 0009  
           __end_of_OSCILLATOR_Initialize 0B84                                     _ADACT 009F  
                         __end_of___fladd 17D7                                     ?_main 0070  
                           __CFG_WDTE$OFF 0000                           __end_of___flsub 1800  
                                   _GCONF 0049                                     _T2CON 001F  
                                   _T3CON 0413                        __size_ofi1_PWM_GP1 007E  
                      __size_ofi1_PWM_GP2 007E                        __size_ofi1_PWM_GP3 007E  
                          __CFG_DEBUG$OFF 0000                                     i1l171 0A42  
                                   i1l754 0A51                                     i1l870 09FE  
                              _Config_GP1 0CCE                                _Config_GP2 0ED5  
                              _Config_GP3 0F4D                                     i1l868 09FC  
                                   i1l998 0CE0                                _EncoderReg 0038  
                                   _ISTEP 0020                                     _OSCEN 091D  
                                   _TMR3H 0412                                     _TMR3L 0411  
                                   _TRISA 008C                                     _TRISB 008D  
                                   _TRISC 008E                        FadeProcessSet@stat 00CB  
       __size_of_TMR3_SetInterruptHandler 0005                 ?_TMR3_SetInterruptHandler 00CB  
                       ??_I2C1_Initialize 00CB                      ?_I2C1_StatusCallback 0070  
                        __end_of_TMR3_ISR 09B3            ??_TMR3_DefaultInterruptHandler 0070  
                          _WDT_Initialize 0BD1                   NavKeySwitch_KeyFilter@i 00CB  
                       ?_GeneralDataSplit 0070                   __end_of_PWM3_Initialize 0FC6  
                                   pclath 000A                                _DoublePush 00B3  
                        __end_ofi1___wmul 0EC9                        ??_GeneralDataSplit 0070  
                              _NavKey_FSM 0409               __end_of_NavKey_LTButton_FSM 1484  
                                   status 0003                       i1___wmul@multiplier 0070  
                                   wtemp0 007E                __size_ofi1_I2C1_Initialize 0013  
                          __CFG_MCLRE$OFF 0000                           __initialization 0032  
              __end_of_NavKeyStatusUpdate 14FA                              __end_of_main 0065  
                __end_of_Int2StatusUpdate 01D5                   ?_NavKeySwitch_KeyFilter 0070  
                 __end_of_TMR2_Initialize 0BD1               ?_INTERRUPT_InterruptManager 0070  
                                  ??_main 00DB                                 ??_GP1_FSM 00CF  
                               ??_GP2_FSM 00CF                                 ??_GP3_FSM 00CF  
                         _TMR3_StartTimer 0428                     _TMR3_InterruptHandler 00B5  
                    i1_NavKeyStatusUpdate 1621                  __end_of_FadeProcessClear 0404  
                        __end_of_TimerInt 11DF                          ??i1_SetInterrupt 0070  
                  __end_of_WDT_Initialize 0BD5                     ??_I2C1_StatusCallback 007E  
                                  _ADCON0 009D                                    _ADCON1 009E  
                                  _FADEGP 003F                                    _ADRESH 009C  
                                  _ADRESL 009B                                    _CCPR1H 0292  
                                  i1S7852 11C4                                    _CCPR2H 0296  
                                  i1S7846 11BC                                    _CCPR3H 0312  
                                  _CCPR1L 0291                                    i1S7864 11D4  
                                  i1S7848 1100                                 ??_PWM_GP1 00D1  
                                  _CCPR2L 0295                                 ??_PWM_GP2 00D1  
                                  i1S7858 11CC                                 ??_PWM_GP3 00D1  
                                  _CCPR3L 0311                                    i1S7868 1000  
                                  _GP1REG 0043                                    _ANSELA 018C  
                                  _ANSELB 018D                                    _ANSELC 018E  
                                  _GP2REG 0042                                    _GP3REG 0041  
                                  _T3GCON 0414                                    i1l1013 0D04  
                                  i1l1030 0D39                                    i1l1006 0CFD  
                                  i1l1102 0FA3                                    i1l1024 0D21  
                                  i1l1104 0FB8                                    i1l1112 11A3  
                                  i1l1018 0D08                                    i1l1050 0F0B  
                                  i1l1043 0F04                                    i1l1035 0EE7  
                                  i1l1028 0D24                                    i1l1124 1187  
                                  i1l1061 0F28                          ?_PWM1_Initialize 0070  
                                  i1l1055 0F0F                                    i1l1080 0F7C  
                                  i1l1072 0F5F                                    i1l1136 116B  
                                  i1l1065 0F2B                                    i1l1067 0F40  
                                  i1l1092 0F87                                    i1l1087 0F83  
                 __end_of_CLC_1_Interrupt 1597                                    _ODCONA 028C  
                                  i1l1098 0FA0                                    _ODCONB 028D  
                                  _ODCONC 028E                                    i1l5010 17A5  
                                  i1l5020 17B0                                    i1l5004 17A0  
                                  i1l1557 0B0C                                    i1l5110 0C24  
                                  i1l5102 0C19                                    i1l1911 1786  
                                  i1l1583 115A                                    i1l5040 17CD  
                                  i1l5032 17C1                                    i1l5016 17AE  
                                  i1l5008 17A3                                    i1l5120 0C33  
                                  i1l5112 0C27                                    i1l1905 1733  
                                  i1l1906 1734                                    i1l5210 0AA4  
                                  i1l5202 0A9C                                    i1l5130 0C42  
                                  i1l5122 0C36                                    i1l5114 0C2A  
                                  i1l5106 0C1E                                    i1l1931 17D1  
                                  i1l1579 1145                                    i1l5044 17D2  
                                  i1l1916 179F                                    i1l1772 1648  
                                  i1l5220 0AB6                                    i1l5212 0AA6  
                                  i1l5204 0A9E                                    i1l5140 0C51  
                                  i1l5132 0C45                                    i1l5124 0C39  
                                  i1l5116 0C2D                                    i1l5108 0C21  
                 __end_of_TMR3_Initialize 0C06                                    i1l1774 1676  
                                  i1l5230 0AC0                                    i1l5222 0AB8  
                                  i1l5214 0AA8                                    i1l5206 0AA0  
                                  i1l5142 0C54                                    i1l5134 0C48  
                                  i1l5126 0C3C                                    i1l5118 0C30  
                                  i1l5240 0ACA                                    i1l5232 0AC2  
                                  i1l5224 0ABA                                    i1l5216 0AAA  
                                  i1l5208 0AA2                                    i1l4512 0DD7  
                                  i1l5160 0C78                                    i1l5152 0C68  
                                  i1l5136 0C4B                                    i1l5128 0C3F  
                                  i1l5250 0AD4                                    i1l5242 0ACC  
                                  i1l5234 0AC4                                    i1l5226 0ABC  
                                  i1l5218 0AB0                                    i1l5170 0C96  
                                  i1l5154 0C6C                                    i1l5146 0C5C  
                                  i1l5138 0C4E                                    i1l1883 169B  
                                  i1l1884 1699                                    i1l5260 0ADE  
                                  i1l5252 0AD6                                    i1l5244 0ACE  
                                  i1l5236 0AC6                                    i1l5228 0ABE  
                                  i1l4508 0DD1                                    i1l5148 0C60  
                                  i1l1894 1719                                    i1l5270 0AE8  
                                  i1l5262 0AE0                                    i1l5254 0AD8  
                                  i1l5246 0AD0                                    i1l5238 0AC8  
                                  i1l4390 0EB6                                    i1l4470 0E55  
                                  i1l4550 0D53                                    i1l4630 09F6  
                                  i1l5174 0C9F                                    i1l5158 0C74  
                                  i1l5094 0C0F                                    i1l1896 1707  
                                  i1l1888 16B6                                    i1l5432 165F  
                                  i1l6160 1500                                    i1l5272 0AEA  
                                  i1l5264 0AE2                                    i1l5256 0ADA  
                                  i1l5248 0AD2                                    i1l5280 0AF9  
                                  i1l4528 0DEF                                    i1l4800 11A9  
                                  i1l5192 0CC9                                    i1l5168 0C93  
                                  i1l5088 0C08                                    i1l5184 0CB1  
                                  i1l1897 170D                                    i1l1889 16B4  
                                  i1l1898 170E                                    i1l5426 1637  
                                  i1l6170 150A                                    i1l6162 1501  
                                  i1l5274 0AED                                    i1l5266 0AE4  
                                  i1l5258 0ADC                                    i1l4394 0EBC  
                                  i1l4466 0E4F                                    i1l4570 0D71  
                                  i1l4554 0D59                                    i1l5178 0CA8  
                                  i1l5098 0C14                                    i1l5186 0CBB  
                                  i1l6172 150B                                    i1l5268 0AE6  
                                  i1l4724 0F14                                    i1l4636 0A06  
                                  i1l5700 0A63                                    u220_25 0FF7  
                                  i1l5622 1518                                    i1l5286 0B04  
                                  i1l5278 0AEF                                    i1l4486 0E6D  
                                  i1l4638 0A08                                    i1l4814 118D  
                                  i1l5702 0A6C                                    i1l6190 0A46  
                                  i1l5640 154A                                    i1l5288 0B07  
                                  i1l4728 0F2E                                    i1l5704 0A6F  
                                  i1l5650 1595                                    i1l4674 0D0D  
                                  i1l5714 0A7F                                    i1l5722 0A85  
                                  i1l6186 0A40                                    i1l4828 1171  
                                  i1l5708 0A76                                    i1l5740 09B3  
                                  _C_DIRE 00C6                                    i1l4918 16C2  
                                  i1l4678 0D27                                    i1l4774 0F8C  
                                  i1l5648 158D                                    i1l4962 1715  
                                  i1l5658 15A2                                    i1l4778 0FA6  
                                  i1l5738 09C8                                    i1l4980 173C  
                                  i1l4948 16E0                                    i1l5692 0A55  
                                  i1l4990 177E                                    i1l5686 1617  
                                  i1l5678 15D5                                    i1l5694 0A59  
                                  i1l4968 1723                                    i1l5688 161F  
                                  i1l4996 1794                                    i1l7850 0F96  
                                  i1l7860 0F38                                    i1l7862 0D17  
                                  i1l7854 0FB0                                    i1l7856 0F1E  
                                  u241_21 0B0B                                    i1l7866 0D31  
                                  u219_25 0FED                                    u253_25 16F4  
                                  u254_20 16FE                                    _C_IPUD 00C7  
                                  u255_20 16FF                                    u264_23 174F  
                                  _OSCFRQ 091F                                    _WDTCON 0097  
                       __end_ofi1_PWM_GP1 0EB4                         __end_ofi1_PWM_GP2 0E36  
                       __end_ofi1_PWM_GP3 0DB8                           _TMR3_WriteTimer 09BE  
                          __CFG_PWRTE$OFF 0000                   __end_of_CLC_2_Interrupt 1621  
                        ?_Int2StatusClear 0070                      __size_of_eeprom_read 000F  
          __end_of_NavKeySwitch_KeyFilter 1421                   __size_of_GeneralDataSet 003F  
                                  ___flge 1626                                 ??___fladd 004A  
                                  ___wmul 03E6                            __CFG_STVREN$ON 0000  
                               ??___flsub 007C                                    _en_deb 00AF  
                                  _pb_cnt 00AA                                    _pb_fsm 00BE  
                        ?_PWM2_Initialize 0070                                 ?_I2C1_ISR 0070  
                        i1_ClearInterrupt 0A94                      __end_of_eeprom_write 1160  
                         _I2C1_AddressSet 0B40                               ?_Config_GP1 0070  
                             ?_Config_GP2 0070                               ?_Config_GP3 0070  
                   ?i1_NavKeyStatusUpdate 0070                            _PMD_Initialize 0BBB  
                               ?_FADE_GP1 0070                                 ?_FADE_GP2 0070  
                               ?_FADE_GP3 0070                                 ?_CLC1_ISR 0070  
                               ?_CLC2_ISR 0070                           ?_WDT_Initialize 0070  
                ADC_GetConversion@channel 00CE  TMR3_SetInterruptHandler@InterruptHandler 00CB  
                           ?_RegisterRead 0070                           _CLC1_Initialize 0BD5  
    __end_of_I2C1_Initialize_ClockStreach 0A20     __size_of_I2C1_Initialize_ClockStreach 0014  
            _I2C1_Initialize_ClockStreach 0A0C                             ?_SetInterrupt 0070  
                              ___flge@ff1 0070                                ___flge@ff2 0074  
                        ?_PWM3_Initialize 0070                               _i2c_address 005E  
                       _SYSTEM_Initialize 0B18                               ?_NavKey_FSM 0070  
            __size_of_NavKey_DWButton_FSM 0021                   __end_of__initialization 0044  
                         eeprom_read@addr 0070                        ?_SYSTEM_Initialize 0070  
                   __end_of_TMR3_CallBack 09BE                      FadeProcessClear@stat 00CE  
                          __pcstackCOMMON 0070                              __pidataBANK0 0000  
                     ??_SYSTEM_Initialize 00CD                   __end_of_TMR3_StartTimer 042B  
                         _CLC2_Initialize 0B2B                                 ?_TMR3_ISR 0070  
                              ??_I2C1_ISR 007E                          ?_TMR2_Initialize 0070  
                  __end_of_PMD_Initialize 0BC9                   __size_of_FadeProcessSet 0005  
                           ??_StatusClear 0070                                 ?i1___wmul 0070  
               NavKey_UPButton_FSM@up_fsm 00BC                                ??_FADE_GP1 00DA  
                              ??_FADE_GP2 00DA                                ??_FADE_GP3 00DA  
                              ??_CLC1_ISR 007C                                ??_CLC2_ISR 007C  
                        ??_ClearInterrupt 00CB                         eeprom_write@value 0070  
                          ??_RegisterRead 0071                            ??_SetInterrupt 00CB  
               __end_of_SYSTEM_Initialize 0B2B                   __end_of_TMR3_WriteTimer 09CD  
                              __pbssBANK0 0020                                __pbssBANK1 00A0  
                        ?_CLC_1_Interrupt 0070                          ?_TMR3_Initialize 0070  
                  __size_of_RegisterWrite 00C8               __end_of_NavKey_RTButton_FSM 1463  
                     __size_of_Config_GP1 006C                       __size_of_Config_GP2 006C  
                     __size_of_Config_GP3 006C                          ?_CLC_2_Interrupt 0070  
                          _SSP1DATPPSbits 0E21                                __pmaintext 0047  
                           _CLCIN0PPSbits 0E28                             ?_GP_Ports_FSM 0070  
                               ?_TimerInt 0070                             _CLCIN1PPSbits 0E29  
                                 ?___flge 0070          __end_of_TMR3_SetInterruptHandler 0428  
                                 ?___wmul 00CB                   __end_of_I2C1_AddressSet 0B68  
                              ??_TMR3_ISR 0072                              ?_DataInitSet 0070  
                              __pintentry 0004                           _I2C1_Initialize 0B68  
                                 _CCP1CON 0293                                   _CCP2CON 0297  
                                 _CCP3CON 0313                                   _CLC1CON 0F10  
                                 _CLC2CON 0F1A                                   _CLC1POL 0F11  
                                 _CLC2POL 0F1B                                   _GP1CONF 0048  
                                 _GP2CONF 0047                            _SSP1CLKPPSbits 0E20  
                                 _GP3CONF 0046                           ?_PMD_Initialize 0070  
                  ??i1_NavKeyStatusUpdate 0072                       __CFG_RSTOSC$HFINT32 0000  
                 __size_of_ADC_Initialize 0008                       __size_of_NavKey_FSM 001A  
                              ??i1___wmul 0074                                   _GP1_FSM 00E6  
                                 _GP2_FSM 017E                                   _GP3_FSM 0131  
             __end_of_NavKey_UPButton_FSM 1442                   __end_of_CLC1_Initialize 0BEA  
                   __end_of_UpdateOut_GP1 11B4                     __end_of_UpdateOut_GP2 1198  
                   __end_of_UpdateOut_GP3 117C                                   _C_CKSRC 00C8  
                                 _C_MBANK 003B                                   _FSTATUS 0044  
                                 _INTCONF 0030         I2C1_StatusCallback@slaveWriteType 00C3  
                                 _C_DTYPE 0039                                   _C_RESET 00C9  
                                 _OSCCON1 0919                                   _OSCCON3 091B  
                                 _C_WRAPE 003A                                   _NVMADRH 0892  
                                 _NVMADRL 0891                                   _NVMDATH 0894  
                                 _OSCTUNE 091E                                   _NVMDATL 0893  
                                 _NVMCON2 0896                                   _NSTATUS 0032  
                                 _SSP1ADD 0212                                   _PPSLOCK 0E0F  
                                 _SSP1BUF 0211                                __pswtext10 1000  
                                 _SSP1MSK 0213                       __end_of_StatusClear 0A94  
                                 _PWM_GP1 0363                                   _PWM_GP2 02E0  
                                 _PWM_GP3 025D                                   _SSTATUS 0045  
                         _double_push_cnt 00B1                   __end_of_CLC2_Initialize 0B40  
                          ??_GP_Ports_FSM 00DA                            _GeneralDataSet 09CD  
                              ??_TimerInt 0070                 __size_of_GeneralDataSplit 003A  
                   __size_of_eeprom_write 001C                           RegisterRead@add 0071  
                         __size_of___flge 0062                                   ___fladd 1688  
                        ?_TMR3_StartTimer 0070                                   ___flsub 17E3  
                         __size_of___wmul 0015                                   _gp1_fsm 00C1  
                                 _gp2_fsm 00C0                                   _gp3_fsm 00BF  
                       ?_Int2StatusUpdate 0070                        ??_Int2StatusUpdate 00CD  
                                 __ptext1 0428                                   __ptext2 0B18  
                                 __ptext3 0BD1                                   __ptext4 0BEA  
                                 __ptext5 0423                                   __ptext6 0BC9  
                                 __ptext7 0BBB                                   __ptext8 0B84  
                                 __ptext9 0B7B                             _RegisterWrite 0C06  
                                 _en_prev 00BD                     _OSCILLATOR_Initialize 0B7B  
       __size_of_NavKey_CentralButton_FSM 004D                                   _fsm_tmr 00CA  
               ?_NavKey_CentralButton_FSM 0070                                 _T3CONbits 0413  
                      _NavKeyStatusUpdate 14F2                  ??_PIN_MANAGER_Initialize 00CB  
                       ?_FadeProcessClear 0070                        ??_FadeProcessClear 00CE  
              __size_of_SYSTEM_Initialize 0013                                   clrloop0 09A5  
                    end_of_initialization 0044                          ?_TMR3_WriteTimer 0070  
                     ?_NavKeyStatusUpdate 00CB                  __end_ofi1_ClearInterrupt 0A97  
                            _eeprom_write 1144                    __end_of_GeneralDataSet 0A0C  
                 __end_of_I2C1_Initialize 0B7B                                 i1_PWM_GP1 0E36  
                               i1_PWM_GP2 0DB8                                 i1_PWM_GP3 0D3A  
            __size_of_NavKey_LTButton_FSM 0021                      __end_of_RegisterRead 0B09  
                        ?_I2C1_AddressSet 0070                      ??_NavKeyStatusUpdate 00CD  
                    __end_of_SetInterrupt 01E6                     i1___wmul@multiplicand 0072  
                          _FadeProcessSet 0404                            ?_RegisterWrite 004D  
             __end_of_I2C1_StatusCallback 0A90                          ??_WDT_Initialize 00CB  
                     _NavKey_DWButton_FSM 1484                                 _PORTAbits 000C  
                               _PORTBbits 000D                                 _PORTCbits 000E  
                _TMR3_SetInterruptHandler 0423                               _StatusClear 0A90  
                            ??_Config_GP1 004B                              ??_Config_GP2 004B  
                            ??_Config_GP3 004B                         __size_of_I2C1_ISR 001B  
                        ?_CLC1_Initialize 0070                               ___fladd@grs 007B  
                               _TRISAbits 008C                                 _TRISCbits 008E  
                       __size_of_FADE_GP1 0029                         __size_of_FADE_GP2 002A  
                       __size_of_FADE_GP3 002A                         __size_of_CLC1_ISR 000A  
                       __size_of_CLC2_ISR 000A                          __CFG_FEXTOSC$OFF 0000  
                            ??_NavKey_FSM 00CD                      ?_NavKey_DWButton_FSM 0070  
                           ??_eeprom_read 0070                          ?_CLC2_Initialize 0070  
                         ?_GeneralDataSet 0070                        __end_of_Config_GP1 0D3A  
                      __end_of_Config_GP2 0F41                        __end_of_Config_GP3 0FB9  
                __size_of_PWM1_Initialize 000C                                ?i1_PWM_GP1 0070  
                              ?i1_PWM_GP2 0070                                ?i1_PWM_GP3 0070  
                    Int2StatusUpdate@stat 00CD                               PWM_GP1@duty 00D9  
                             PWM_GP2@duty 00D9                    __end_of_FadeProcessSet 0409  
                             PWM_GP3@duty 00D9                            __end_of___flge 1688  
                          __end_of___wmul 03FB                         __size_of_TMR3_ISR 0009  
                    __size_of_DataInitSet 0030                            _ADC_Initialize 0201  
                __size_of_Int2StatusClear 0003                    ?_OSCILLATOR_Initialize 0070  
                      __end_of_NavKey_FSM 0423                       start_initialization 0032  
                       __size_ofi1___wmul 0015                       __end_of_gamma_table 09A3  
                __size_of_PWM2_Initialize 000C           __size_of_PIN_MANAGER_Initialize 0037  
                    __end_of_GP_Ports_FSM 00E6                     ??_NavKey_DWButton_FSM 00CD  
                 __size_ofi1_SetInterrupt 000C                          ?_I2C1_Initialize 0070  
                        __CFG_LPBOREN$OFF 0000                  __size_of_PWM3_Initialize 000D  
                        _GeneralDataSplit 0FC6                                  ??___flge 0078  
                        ??_PMD_Initialize 00CB                          I2C1_ISR@i2c_data 0050  
                                ??___wmul 00CF                       __end_of_eeprom_read 0B18  
                             _CCPTMRSbits 029F                           ?_FadeProcessSet 0070  
                         ??_RegisterWrite 007E                    __end_of_ADC_Initialize 0209  
                             __pdataBANK0 005F                         __size_of_TimerInt 0003  
                                ?_GP1_FSM 0070                                  ?_GP2_FSM 0070  
                                ?_GP3_FSM 0070                                 ___fladd@a 0074  
                               ___fladd@b 0070                                 ___flsub@a 0052  
                               ___flsub@b 0056                                 ___latbits 0002  
                           __pcstackBANK0 004A                             __pcstackBANK1 00CB  
        I2C1_StatusCallback@i2c_bus_state 004F                  __size_of_TMR2_Initialize 0008  
                  __size_of_TMR3_CallBack 000B                                  ?_PWM_GP1 0070  
                                ?_PWM_GP2 0070                                  ?_PWM_GP3 0070  
                        eeprom_write@addr 0071                  ??_NavKeySwitch_KeyFilter 00CB  
                               __pnvBANK0 005E                     __size_of_RegisterRead 006F  
                   __size_of_SetInterrupt 0011                    _PIN_MANAGER_Initialize 0B84  
        __end_of_NavKey_CentralButton_FSM 14F2                  __size_of_CLC_1_Interrupt 0089  
                __size_of_TMR3_Initialize 001C                               ??i1_PWM_GP1 0076  
                             ??i1_PWM_GP2 0076                               ??i1_PWM_GP3 0076  
                                ?___fladd 0070              __size_of_NavKey_RTButton_FSM 0021  
                                ?___flsub 0052                           ?_ADC_Initialize 0070  
                        __CFG_PPS1WAY$OFF 0000                                  _I2C1_ISR 0A33  
                             _gamma_table 042B                         ??_PWM1_Initialize 0070  
            ??_INTERRUPT_InterruptManager 007E                                 _int2clear 00C4  
                __size_of_CLC_2_Interrupt 008A                                 __pswtext1 10E4  
                               __pswtext2 10F0                                 __pswtext3 10F8  
                               __pswtext4 11B4                                 __pswtext5 11BC  
                               __pswtext6 1100                                 __pswtext7 11C4  
                               __pswtext8 11CC                                 __pswtext9 11D4  
                                _CLC1GLS0 0F16                                  _CLC1GLS1 0F17  
                                _CLC1GLS2 0F18                                  _CLC1GLS3 0F19  
                                _CLC2GLS0 0F20                                  _CLC2GLS1 0F21  
                                _CLC2GLS2 0F22                                  _CLC2GLS3 0F23  
                                _CLC1SEL0 0F12                                  _CLC1SEL1 0F13  
                                _CLC1SEL2 0F14                                  _CLC1SEL3 0F15  
                                _CLC2SEL0 0F1C                                  _CLC2SEL1 0F1D  
                                _CLC2SEL2 0F1E                                  _CLC2SEL3 0F1F  
           __size_ofi1_NavKeyStatusUpdate 0005                  i1NavKeyStatusUpdate@stat 0070  
                                _FADE_GP1 0098                                  _FADE_GP2 0233  
                                _FADE_GP3 0209                                  _CLC1_ISR 1504  
                                _CLC2_ISR 14FA                                  _GAMMAGP1 003E  
                                _GAMMAGP2 003D                                  _GAMMAGP3 003C  
                       ??_Int2StatusClear 0070                       _NavKey_LTButton_FSM 1463  
               __size_of_Int2StatusUpdate 000A              __size_of_NavKey_UPButton_FSM 0021  
                            _RegisterRead 0A9A                              _SetInterrupt 01D5  
                                _DPPERIOD 0040                         ??_PWM2_Initialize 0070  
                       ?i1_ClearInterrupt 0070                            ___wmul@product 00CF  
                                _LATBbits 010D                                  _LATCbits 010E  
                 __size_of_ClearInterrupt 0003                                 clear_ram0 09A4  
                             _eeprom_read 0B09             ?_I2C1_Initialize_ClockStreach 0070  
                                _PIE1bits 0091                                  _PIE3bits 0093  
                      ??i1_ClearInterrupt 0070                 __size_of_FadeProcessClear 0009  
                  __size_of_UpdateOut_GP1 001C                    __size_of_UpdateOut_GP2 001C  
                  __size_of_UpdateOut_GP3 001C       __size_of_INTERRUPT_InterruptManager 002C  
                                _PIR1bits 0011                                  _PIR3bits 0013  
              ??_TMR3_SetInterruptHandler 00CD                             _TMR3_CallBack 09B3  
                             _gp_fade_cnt 0034                      ?_NavKey_LTButton_FSM 0070  
                                _SSP1CON1 0215                                  _SSP1CON2 0216  
                                _SSP1CON3 0217                                  _TMR3_ISR 09AA  
                                _SSP1STAT 0214                           _NavKey_PBstatus 00A0  
                     _I2C1_slaveWriteData 005F                         ??_PWM3_Initialize 0070  
                              _ADCON0bits 009D                     __size_of_GP_Ports_FSM 0025  
                       ___wmul@multiplier 00CB                                  i1___wmul 0EB4  
                            ?_StatusClear 0070                          __size_of_GP1_FSM 004B  
                        __size_of_GP2_FSM 004D                          __size_of_GP3_FSM 004D  
                                _WPUAbits 020C                                  _WPUBbits 020D  
                                _WPUCbits 020E                  __size_of_TMR3_StartTimer 0003  
                       RegisterWrite@data 004D                 NavKey_DWButton_FSM@dn_fsm 00BB  
                        ??_GeneralDataSet 0070                          __size_of_PWM_GP1 0083  
                        __size_of_PWM_GP2 0083                          __size_of_PWM_GP3 0083  
                       ??_TMR2_Initialize 00CB                            i1_SetInterrupt 17D7  
         __size_of_NavKeySwitch_KeyFilter 0052                            ?_TMR3_CallBack 0070  
                __size_of_TMR3_WriteTimer 000F                     ??_NavKey_LTButton_FSM 00CD  
                       _ADC_GetConversion 01E6                                  _TimerInt 11DC  
                            _GP_Ports_FSM 00C1                   ??_OSCILLATOR_Initialize 00CB  
                      ?_ADC_GetConversion 00CB                          __size_of___fladd 014F  
             __size_of_NavKeyStatusUpdate 0008                          __size_of___flsub 001D  
                _NavKey_CentralButton_FSM 14A5                         ??_CLC_1_Interrupt 0052  
                       ??_TMR3_Initialize 00CD                                _ANSELCbits 018E  
                     ??_ADC_GetConversion 00CD                  __size_of_I2C1_AddressSet 0028  
                           _UpdateOut_GP1 1198                             _UpdateOut_GP2 117C  
                           _UpdateOut_GP3 1160                         ??_CLC_2_Interrupt 005A  
            __size_of_I2C1_StatusCallback 0042                  __end_of_GeneralDataSplit 1000  
                                __ptext10 0B68                                  __ptext11 0B40  
                                __ptext20 13CF                                  __ptext12 0B2B  
                                __ptext21 00C1                                  __ptext13 0BD5  
                                __ptext30 02E0                                  __ptext22 0131  
                                __ptext14 0409                                  __ptext31 0098  
                                __ptext23 017E                                  __ptext15 1421  
                                __ptext40 0065                                  __ptext32 0363  
                                __ptext24 00E6                                  __ptext16 1442  
                                __ptext33 03E6                                  __ptext25 0201  
                                __ptext17 1463                                  __ptext50 0A90  
                                __ptext42 09AA                                  __ptext34 0404  
                                __ptext26 01E6                                  __ptext18 1484  
                                __ptext51 0C06                                  __ptext43 09BE  
                                __ptext35 03FB                                  __ptext27 0209  
                                __ptext19 14A5                                  __ptext60 0F4D  
                                __ptext52 1144                                  __ptext44 09B3  
                                __ptext36 01D5                                  __ptext28 025D  
                                __ptext61 0D3A                                  __ptext53 1160  
                                __ptext45 0003                                  __ptext37 01CB  
                                __ptext29 0233                                  __ptext70 0A9A  
                                __ptext62 0FB9                                  __ptext54 117C  
                                __ptext46 11DC                                  __ptext38 14F2  
                                __ptext71 0B09                                  __ptext63 0ED5  
                                __ptext55 1198                                  __ptext47 0A33  
                                __ptext39 0068                                  __ptext80 1626  
                                __ptext72 0A97                                  __ptext64 0DB8  
                                __ptext56 0FC6                                  __ptext48 0A4E  
                                __ptext81 1688                                  __ptext73 14FA  
                                __ptext65 0F41                                  __ptext57 09CD  
                                __ptext49 0A94                                  __ptext74 1504  
                                __ptext66 0CCE                                  __ptext58 0A20  
                                __ptext75 1597                                  __ptext67 0E36  
                                __ptext59 0A0C                                  __ptext76 17E3  
                                __ptext68 0EB4                                  __ptext77 150E  
                                __ptext69 0EC9                                  __ptext78 17D7  
                                __ptext79 1621                              _SSP1CON1bits 0215  
                            _SSP1CON2bits 0216                    __end_ofi1_SetInterrupt 17E3  
                __size_of_CLC1_Initialize 0015                   TMR3_WriteTimer@timerVal 0070  
                                _gp_timer 00C2                             __size_of_main 001E  
                                _intclear 00C5                 __end_of_ADC_GetConversion 0201  
                        ??_FadeProcessSet 00CB                                _RC0PPSbits 0EA0  
                              _RC1PPSbits 0EA1                                  _temp_gp1 0037  
                                _temp_gp2 0036                                  _temp_gp3 0035  
                              _RC2PPSbits 0EA2                                _RB6PPSbits 0E9E  
          ??_I2C1_Initialize_ClockStreach 0070                             ??_DataInitSet 00CB  
                                int$flags 007E                                _RB7PPSbits 0E9F  
                              _ODCONCbits 028E        __end_of_INTERRUPT_InterruptManager 0030  
              _INTERRUPT_InterruptManager 0004                  __size_of_CLC2_Initialize 0015  
                        RegisterWrite@add 004E                              _SSP1STATbits 0214  
    __end_of_TMR3_DefaultInterruptHandler 0004     __size_of_TMR3_DefaultInterruptHandler 0001  
            _TMR3_DefaultInterruptHandler 0003                    _NavKeySwitch_KeyFilter 13CF  
                          ?_UpdateOut_GP1 0070                            ?_UpdateOut_GP2 0070  
                          ?_UpdateOut_GP3 0070                                _INTCONbits 000B  
                             _NVMCON1bits 0895               __end_of_NavKey_DWButton_FSM 14A5  
                        _Int2StatusUpdate 01CB                       _NavKey_RTButton_FSM 1442  
                 __size_of_WDT_Initialize 0004                         ??_TMR3_StartTimer 00CB  
                         ?i1_SetInterrupt 0070                                  intlevel1 0000  
                 ?_PIN_MANAGER_Initialize 0070                            _ClearInterrupt 0065  
                         ??_TMR3_CallBack 0070                         __CFG_CLKOUTEN$OFF 0000  
                             _PPSLOCKbits 0E0F                           _PWM1_Initialize 0EC9  
                        _FadeProcessClear 03FB                          ??_ADC_Initialize 00CB  
                           _NavKey_PBtemp 00A5                         i1_I2C1_Initialize 0A20  
                    ?_NavKey_RTButton_FSM 0070                       _NavKey_UPButton_FSM 1421  
                      ?i1_I2C1_Initialize 0070                           _Int2StatusClear 0A97  
                       ??_TMR3_WriteTimer 0072                  __size_of_I2C1_Initialize 0013  
                   __end_of_RegisterWrite 0CCE                 NavKey_LTButton_FSM@lt_fsm 00B9  
                           __pstringtext1 042B                 NavKey_RTButton_FSM@rt_fsm 00BA  
           ?_TMR3_DefaultInterruptHandler 0070                       __end_of_DataInitSet 0098  
                     ??i1_I2C1_Initialize 0070                           _PWM2_Initialize 0F41  
                    __size_of_StatusClear 0004                      ?_NavKey_UPButton_FSM 0070  
                           ___fladd@signs 0078                    NavKeyStatusUpdate@stat 00CB  
                  __end_of_ClearInterrupt 0068                         ??_I2C1_AddressSet 00CB  
          __end_of_PIN_MANAGER_Initialize 0BBB                             ?_eeprom_write 0070  
                            ___fladd@aexp 0079                              ___fladd@bexp 007A  
                              _STATUSbits 0003              __end_ofi1_NavKeyStatusUpdate 1626  
                            ?_eeprom_read 0070                __size_of_ADC_GetConversion 001B  
               __end_ofi1_I2C1_Initialize 0A33                           _PWM3_Initialize 0FB9  
                       ??_CLC1_Initialize 00CB  
