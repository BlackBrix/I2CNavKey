

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Apr 05 15:30:09 2019

Microchip MPLAB XC8 C Compiler v2.05 (Pro license) build 20181220022703 Og9f 
     1                           	processor	16F18345
     2                           	opt	pw 120
     3                           	opt	plic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text15,local,class=CODE,merge=1,delta=2
    18                           	psect	text16,local,class=CODE,merge=1,delta=2
    19                           	psect	text17,local,class=CODE,merge=1,delta=2
    20                           	psect	swtext1,local,class=CONST,delta=2
    21                           	psect	text20,local,class=CODE,merge=1,delta=2
    22                           	psect	swtext2,local,class=CONST,delta=2
    23                           	psect	swtext3,local,class=CONST,delta=2
    24                           	psect	swtext4,local,class=CONST,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text42,local,class=CODE,merge=1,delta=2
    27                           	psect	text45,local,class=CODE,merge=1,delta=2
    28                           	psect	text46,local,class=CODE,merge=1,delta=2
    29                           	psect	text47,local,class=CODE,merge=1,delta=2
    30                           	psect	swtext5,local,class=CONST,delta=2
    31                           	psect	text51,local,class=CODE,merge=1,delta=2
    32                           	psect	swtext6,local,class=CONST,delta=2
    33                           	psect	text52,local,class=CODE,merge=1,delta=2
    34                           	psect	text53,local,class=CODE,merge=1,delta=2
    35                           	psect	text54,local,class=CODE,merge=1,delta=2
    36                           	psect	text55,local,class=CODE,merge=1,delta=2
    37                           	psect	swtext7,local,class=CONST,delta=2
    38                           	psect	swtext8,local,class=CONST,delta=2
    39                           	psect	swtext9,local,class=CONST,delta=2
    40                           	psect	swtext10,local,class=CONST,delta=2
    41                           	psect	text73,local,class=CODE,merge=1,delta=2
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 2.05
    45                           ; Generated 20/12/2018 GMT
    46                           ; 
    47                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F18345 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000D                     	;# 
    92  000E                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  001D                     	;# 
   110  001E                     	;# 
   111  001F                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  0090                     	;# 
   116  0091                     	;# 
   117  0092                     	;# 
   118  0093                     	;# 
   119  0094                     	;# 
   120  0097                     	;# 
   121  009B                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  0111                     	;# 
   131  0112                     	;# 
   132  0113                     	;# 
   133  0114                     	;# 
   134  0115                     	;# 
   135  0116                     	;# 
   136  0117                     	;# 
   137  0118                     	;# 
   138  0119                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  018E                     	;# 
   142  0197                     	;# 
   143  0199                     	;# 
   144  0199                     	;# 
   145  0199                     	;# 
   146  019A                     	;# 
   147  019A                     	;# 
   148  019A                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019B                     	;# 
   152  019B                     	;# 
   153  019B                     	;# 
   154  019C                     	;# 
   155  019C                     	;# 
   156  019C                     	;# 
   157  019D                     	;# 
   158  019D                     	;# 
   159  019D                     	;# 
   160  019E                     	;# 
   161  019E                     	;# 
   162  019E                     	;# 
   163  019F                     	;# 
   164  019F                     	;# 
   165  019F                     	;# 
   166  019F                     	;# 
   167  019F                     	;# 
   168  020C                     	;# 
   169  020D                     	;# 
   170  020E                     	;# 
   171  0211                     	;# 
   172  0211                     	;# 
   173  0212                     	;# 
   174  0212                     	;# 
   175  0213                     	;# 
   176  0213                     	;# 
   177  0214                     	;# 
   178  0214                     	;# 
   179  0215                     	;# 
   180  0215                     	;# 
   181  0215                     	;# 
   182  0215                     	;# 
   183  0216                     	;# 
   184  0216                     	;# 
   185  0217                     	;# 
   186  0217                     	;# 
   187  0219                     	;# 
   188  021A                     	;# 
   189  021B                     	;# 
   190  021C                     	;# 
   191  021D                     	;# 
   192  021D                     	;# 
   193  021E                     	;# 
   194  021F                     	;# 
   195  028C                     	;# 
   196  028D                     	;# 
   197  028E                     	;# 
   198  0291                     	;# 
   199  0291                     	;# 
   200  0292                     	;# 
   201  0293                     	;# 
   202  0294                     	;# 
   203  0295                     	;# 
   204  0295                     	;# 
   205  0296                     	;# 
   206  0297                     	;# 
   207  0298                     	;# 
   208  029F                     	;# 
   209  030C                     	;# 
   210  030D                     	;# 
   211  030E                     	;# 
   212  0311                     	;# 
   213  0311                     	;# 
   214  0312                     	;# 
   215  0313                     	;# 
   216  0314                     	;# 
   217  0315                     	;# 
   218  0315                     	;# 
   219  0316                     	;# 
   220  0317                     	;# 
   221  0318                     	;# 
   222  038C                     	;# 
   223  038D                     	;# 
   224  038E                     	;# 
   225  0391                     	;# 
   226  0392                     	;# 
   227  0393                     	;# 
   228  0394                     	;# 
   229  0395                     	;# 
   230  0396                     	;# 
   231  0397                     	;# 
   232  0398                     	;# 
   233  0399                     	;# 
   234  039A                     	;# 
   235  039C                     	;# 
   236  039D                     	;# 
   237  039E                     	;# 
   238  039F                     	;# 
   239  0411                     	;# 
   240  0411                     	;# 
   241  0412                     	;# 
   242  0413                     	;# 
   243  0414                     	;# 
   244  0415                     	;# 
   245  0416                     	;# 
   246  0417                     	;# 
   247  0418                     	;# 
   248  0418                     	;# 
   249  0419                     	;# 
   250  041A                     	;# 
   251  041B                     	;# 
   252  041C                     	;# 
   253  041D                     	;# 
   254  041E                     	;# 
   255  041F                     	;# 
   256  0498                     	;# 
   257  0498                     	;# 
   258  0499                     	;# 
   259  049A                     	;# 
   260  049B                     	;# 
   261  049B                     	;# 
   262  049C                     	;# 
   263  049D                     	;# 
   264  049E                     	;# 
   265  049F                     	;# 
   266  0617                     	;# 
   267  0618                     	;# 
   268  0619                     	;# 
   269  0619                     	;# 
   270  061A                     	;# 
   271  061B                     	;# 
   272  061C                     	;# 
   273  061C                     	;# 
   274  061F                     	;# 
   275  0691                     	;# 
   276  0692                     	;# 
   277  0693                     	;# 
   278  0694                     	;# 
   279  0695                     	;# 
   280  0696                     	;# 
   281  0697                     	;# 
   282  0698                     	;# 
   283  0699                     	;# 
   284  0711                     	;# 
   285  0712                     	;# 
   286  0713                     	;# 
   287  0714                     	;# 
   288  0715                     	;# 
   289  0716                     	;# 
   290  0717                     	;# 
   291  0718                     	;# 
   292  0719                     	;# 
   293  0891                     	;# 
   294  0891                     	;# 
   295  0891                     	;# 
   296  0891                     	;# 
   297  0891                     	;# 
   298  0891                     	;# 
   299  0892                     	;# 
   300  0892                     	;# 
   301  0892                     	;# 
   302  0893                     	;# 
   303  0893                     	;# 
   304  0893                     	;# 
   305  0893                     	;# 
   306  0893                     	;# 
   307  0893                     	;# 
   308  0894                     	;# 
   309  0894                     	;# 
   310  0894                     	;# 
   311  0895                     	;# 
   312  0895                     	;# 
   313  0895                     	;# 
   314  0896                     	;# 
   315  0896                     	;# 
   316  0896                     	;# 
   317  089B                     	;# 
   318  0911                     	;# 
   319  0912                     	;# 
   320  0913                     	;# 
   321  0914                     	;# 
   322  0915                     	;# 
   323  0916                     	;# 
   324  0918                     	;# 
   325  0919                     	;# 
   326  091A                     	;# 
   327  091B                     	;# 
   328  091C                     	;# 
   329  091D                     	;# 
   330  091E                     	;# 
   331  091F                     	;# 
   332  0E0F                     	;# 
   333  0E10                     	;# 
   334  0E11                     	;# 
   335  0E12                     	;# 
   336  0E13                     	;# 
   337  0E14                     	;# 
   338  0E15                     	;# 
   339  0E16                     	;# 
   340  0E17                     	;# 
   341  0E18                     	;# 
   342  0E19                     	;# 
   343  0E1A                     	;# 
   344  0E1B                     	;# 
   345  0E1C                     	;# 
   346  0E1D                     	;# 
   347  0E1E                     	;# 
   348  0E1F                     	;# 
   349  0E20                     	;# 
   350  0E21                     	;# 
   351  0E22                     	;# 
   352  0E24                     	;# 
   353  0E25                     	;# 
   354  0E28                     	;# 
   355  0E29                     	;# 
   356  0E2A                     	;# 
   357  0E2B                     	;# 
   358  0E2C                     	;# 
   359  0E2D                     	;# 
   360  0E2E                     	;# 
   361  0E2F                     	;# 
   362  0E90                     	;# 
   363  0E91                     	;# 
   364  0E92                     	;# 
   365  0E94                     	;# 
   366  0E95                     	;# 
   367  0E9C                     	;# 
   368  0E9D                     	;# 
   369  0E9E                     	;# 
   370  0E9F                     	;# 
   371  0EA0                     	;# 
   372  0EA1                     	;# 
   373  0EA2                     	;# 
   374  0EA3                     	;# 
   375  0EA4                     	;# 
   376  0EA5                     	;# 
   377  0EA6                     	;# 
   378  0EA7                     	;# 
   379  0F0F                     	;# 
   380  0F10                     	;# 
   381  0F11                     	;# 
   382  0F12                     	;# 
   383  0F13                     	;# 
   384  0F14                     	;# 
   385  0F15                     	;# 
   386  0F16                     	;# 
   387  0F17                     	;# 
   388  0F18                     	;# 
   389  0F19                     	;# 
   390  0F1A                     	;# 
   391  0F1B                     	;# 
   392  0F1C                     	;# 
   393  0F1D                     	;# 
   394  0F1E                     	;# 
   395  0F1F                     	;# 
   396  0F20                     	;# 
   397  0F21                     	;# 
   398  0F22                     	;# 
   399  0F23                     	;# 
   400  0F24                     	;# 
   401  0F25                     	;# 
   402  0F26                     	;# 
   403  0F27                     	;# 
   404  0F28                     	;# 
   405  0F29                     	;# 
   406  0F2A                     	;# 
   407  0F2B                     	;# 
   408  0F2C                     	;# 
   409  0F2D                     	;# 
   410  0F2E                     	;# 
   411  0F2F                     	;# 
   412  0F30                     	;# 
   413  0F31                     	;# 
   414  0F32                     	;# 
   415  0F33                     	;# 
   416  0F34                     	;# 
   417  0F35                     	;# 
   418  0F36                     	;# 
   419  0F37                     	;# 
   420  0FE4                     	;# 
   421  0FE5                     	;# 
   422  0FE6                     	;# 
   423  0FE7                     	;# 
   424  0FE8                     	;# 
   425  0FE9                     	;# 
   426  0FEA                     	;# 
   427  0FEB                     	;# 
   428  0FED                     	;# 
   429  0FEE                     	;# 
   430  0FEF                     	;# 
   431  0000                     	;# 
   432  0001                     	;# 
   433  0002                     	;# 
   434  0003                     	;# 
   435  0004                     	;# 
   436  0005                     	;# 
   437  0006                     	;# 
   438  0007                     	;# 
   439  0008                     	;# 
   440  0009                     	;# 
   441  000A                     	;# 
   442  000B                     	;# 
   443  000C                     	;# 
   444  000D                     	;# 
   445  000E                     	;# 
   446  0010                     	;# 
   447  0011                     	;# 
   448  0012                     	;# 
   449  0013                     	;# 
   450  0014                     	;# 
   451  0015                     	;# 
   452  0015                     	;# 
   453  0016                     	;# 
   454  0016                     	;# 
   455  0017                     	;# 
   456  0018                     	;# 
   457  0019                     	;# 
   458  0019                     	;# 
   459  001A                     	;# 
   460  001B                     	;# 
   461  001C                     	;# 
   462  001D                     	;# 
   463  001E                     	;# 
   464  001F                     	;# 
   465  008C                     	;# 
   466  008D                     	;# 
   467  008E                     	;# 
   468  0090                     	;# 
   469  0091                     	;# 
   470  0092                     	;# 
   471  0093                     	;# 
   472  0094                     	;# 
   473  0097                     	;# 
   474  009B                     	;# 
   475  009B                     	;# 
   476  009C                     	;# 
   477  009D                     	;# 
   478  009E                     	;# 
   479  009F                     	;# 
   480  010C                     	;# 
   481  010D                     	;# 
   482  010E                     	;# 
   483  0111                     	;# 
   484  0112                     	;# 
   485  0113                     	;# 
   486  0114                     	;# 
   487  0115                     	;# 
   488  0116                     	;# 
   489  0117                     	;# 
   490  0118                     	;# 
   491  0119                     	;# 
   492  018C                     	;# 
   493  018D                     	;# 
   494  018E                     	;# 
   495  0197                     	;# 
   496  0199                     	;# 
   497  0199                     	;# 
   498  0199                     	;# 
   499  019A                     	;# 
   500  019A                     	;# 
   501  019A                     	;# 
   502  019B                     	;# 
   503  019B                     	;# 
   504  019B                     	;# 
   505  019B                     	;# 
   506  019B                     	;# 
   507  019C                     	;# 
   508  019C                     	;# 
   509  019C                     	;# 
   510  019D                     	;# 
   511  019D                     	;# 
   512  019D                     	;# 
   513  019E                     	;# 
   514  019E                     	;# 
   515  019E                     	;# 
   516  019F                     	;# 
   517  019F                     	;# 
   518  019F                     	;# 
   519  019F                     	;# 
   520  019F                     	;# 
   521  020C                     	;# 
   522  020D                     	;# 
   523  020E                     	;# 
   524  0211                     	;# 
   525  0211                     	;# 
   526  0212                     	;# 
   527  0212                     	;# 
   528  0213                     	;# 
   529  0213                     	;# 
   530  0214                     	;# 
   531  0214                     	;# 
   532  0215                     	;# 
   533  0215                     	;# 
   534  0215                     	;# 
   535  0215                     	;# 
   536  0216                     	;# 
   537  0216                     	;# 
   538  0217                     	;# 
   539  0217                     	;# 
   540  0219                     	;# 
   541  021A                     	;# 
   542  021B                     	;# 
   543  021C                     	;# 
   544  021D                     	;# 
   545  021D                     	;# 
   546  021E                     	;# 
   547  021F                     	;# 
   548  028C                     	;# 
   549  028D                     	;# 
   550  028E                     	;# 
   551  0291                     	;# 
   552  0291                     	;# 
   553  0292                     	;# 
   554  0293                     	;# 
   555  0294                     	;# 
   556  0295                     	;# 
   557  0295                     	;# 
   558  0296                     	;# 
   559  0297                     	;# 
   560  0298                     	;# 
   561  029F                     	;# 
   562  030C                     	;# 
   563  030D                     	;# 
   564  030E                     	;# 
   565  0311                     	;# 
   566  0311                     	;# 
   567  0312                     	;# 
   568  0313                     	;# 
   569  0314                     	;# 
   570  0315                     	;# 
   571  0315                     	;# 
   572  0316                     	;# 
   573  0317                     	;# 
   574  0318                     	;# 
   575  038C                     	;# 
   576  038D                     	;# 
   577  038E                     	;# 
   578  0391                     	;# 
   579  0392                     	;# 
   580  0393                     	;# 
   581  0394                     	;# 
   582  0395                     	;# 
   583  0396                     	;# 
   584  0397                     	;# 
   585  0398                     	;# 
   586  0399                     	;# 
   587  039A                     	;# 
   588  039C                     	;# 
   589  039D                     	;# 
   590  039E                     	;# 
   591  039F                     	;# 
   592  0411                     	;# 
   593  0411                     	;# 
   594  0412                     	;# 
   595  0413                     	;# 
   596  0414                     	;# 
   597  0415                     	;# 
   598  0416                     	;# 
   599  0417                     	;# 
   600  0418                     	;# 
   601  0418                     	;# 
   602  0419                     	;# 
   603  041A                     	;# 
   604  041B                     	;# 
   605  041C                     	;# 
   606  041D                     	;# 
   607  041E                     	;# 
   608  041F                     	;# 
   609  0498                     	;# 
   610  0498                     	;# 
   611  0499                     	;# 
   612  049A                     	;# 
   613  049B                     	;# 
   614  049B                     	;# 
   615  049C                     	;# 
   616  049D                     	;# 
   617  049E                     	;# 
   618  049F                     	;# 
   619  0617                     	;# 
   620  0618                     	;# 
   621  0619                     	;# 
   622  0619                     	;# 
   623  061A                     	;# 
   624  061B                     	;# 
   625  061C                     	;# 
   626  061C                     	;# 
   627  061F                     	;# 
   628  0691                     	;# 
   629  0692                     	;# 
   630  0693                     	;# 
   631  0694                     	;# 
   632  0695                     	;# 
   633  0696                     	;# 
   634  0697                     	;# 
   635  0698                     	;# 
   636  0699                     	;# 
   637  0711                     	;# 
   638  0712                     	;# 
   639  0713                     	;# 
   640  0714                     	;# 
   641  0715                     	;# 
   642  0716                     	;# 
   643  0717                     	;# 
   644  0718                     	;# 
   645  0719                     	;# 
   646  0891                     	;# 
   647  0891                     	;# 
   648  0891                     	;# 
   649  0891                     	;# 
   650  0891                     	;# 
   651  0891                     	;# 
   652  0892                     	;# 
   653  0892                     	;# 
   654  0892                     	;# 
   655  0893                     	;# 
   656  0893                     	;# 
   657  0893                     	;# 
   658  0893                     	;# 
   659  0893                     	;# 
   660  0893                     	;# 
   661  0894                     	;# 
   662  0894                     	;# 
   663  0894                     	;# 
   664  0895                     	;# 
   665  0895                     	;# 
   666  0895                     	;# 
   667  0896                     	;# 
   668  0896                     	;# 
   669  0896                     	;# 
   670  089B                     	;# 
   671  0911                     	;# 
   672  0912                     	;# 
   673  0913                     	;# 
   674  0914                     	;# 
   675  0915                     	;# 
   676  0916                     	;# 
   677  0918                     	;# 
   678  0919                     	;# 
   679  091A                     	;# 
   680  091B                     	;# 
   681  091C                     	;# 
   682  091D                     	;# 
   683  091E                     	;# 
   684  091F                     	;# 
   685  0E0F                     	;# 
   686  0E10                     	;# 
   687  0E11                     	;# 
   688  0E12                     	;# 
   689  0E13                     	;# 
   690  0E14                     	;# 
   691  0E15                     	;# 
   692  0E16                     	;# 
   693  0E17                     	;# 
   694  0E18                     	;# 
   695  0E19                     	;# 
   696  0E1A                     	;# 
   697  0E1B                     	;# 
   698  0E1C                     	;# 
   699  0E1D                     	;# 
   700  0E1E                     	;# 
   701  0E1F                     	;# 
   702  0E20                     	;# 
   703  0E21                     	;# 
   704  0E22                     	;# 
   705  0E24                     	;# 
   706  0E25                     	;# 
   707  0E28                     	;# 
   708  0E29                     	;# 
   709  0E2A                     	;# 
   710  0E2B                     	;# 
   711  0E2C                     	;# 
   712  0E2D                     	;# 
   713  0E2E                     	;# 
   714  0E2F                     	;# 
   715  0E90                     	;# 
   716  0E91                     	;# 
   717  0E92                     	;# 
   718  0E94                     	;# 
   719  0E95                     	;# 
   720  0E9C                     	;# 
   721  0E9D                     	;# 
   722  0E9E                     	;# 
   723  0E9F                     	;# 
   724  0EA0                     	;# 
   725  0EA1                     	;# 
   726  0EA2                     	;# 
   727  0EA3                     	;# 
   728  0EA4                     	;# 
   729  0EA5                     	;# 
   730  0EA6                     	;# 
   731  0EA7                     	;# 
   732  0F0F                     	;# 
   733  0F10                     	;# 
   734  0F11                     	;# 
   735  0F12                     	;# 
   736  0F13                     	;# 
   737  0F14                     	;# 
   738  0F15                     	;# 
   739  0F16                     	;# 
   740  0F17                     	;# 
   741  0F18                     	;# 
   742  0F19                     	;# 
   743  0F1A                     	;# 
   744  0F1B                     	;# 
   745  0F1C                     	;# 
   746  0F1D                     	;# 
   747  0F1E                     	;# 
   748  0F1F                     	;# 
   749  0F20                     	;# 
   750  0F21                     	;# 
   751  0F22                     	;# 
   752  0F23                     	;# 
   753  0F24                     	;# 
   754  0F25                     	;# 
   755  0F26                     	;# 
   756  0F27                     	;# 
   757  0F28                     	;# 
   758  0F29                     	;# 
   759  0F2A                     	;# 
   760  0F2B                     	;# 
   761  0F2C                     	;# 
   762  0F2D                     	;# 
   763  0F2E                     	;# 
   764  0F2F                     	;# 
   765  0F30                     	;# 
   766  0F31                     	;# 
   767  0F32                     	;# 
   768  0F33                     	;# 
   769  0F34                     	;# 
   770  0F35                     	;# 
   771  0F36                     	;# 
   772  0F37                     	;# 
   773  0FE4                     	;# 
   774  0FE5                     	;# 
   775  0FE6                     	;# 
   776  0FE7                     	;# 
   777  0FE8                     	;# 
   778  0FE9                     	;# 
   779  0FEA                     	;# 
   780  0FEB                     	;# 
   781  0FED                     	;# 
   782  0FEE                     	;# 
   783  0FEF                     	;# 
   784  0000                     	;# 
   785  0001                     	;# 
   786  0002                     	;# 
   787  0003                     	;# 
   788  0004                     	;# 
   789  0005                     	;# 
   790  0006                     	;# 
   791  0007                     	;# 
   792  0008                     	;# 
   793  0009                     	;# 
   794  000A                     	;# 
   795  000B                     	;# 
   796  000C                     	;# 
   797  000D                     	;# 
   798  000E                     	;# 
   799  0010                     	;# 
   800  0011                     	;# 
   801  0012                     	;# 
   802  0013                     	;# 
   803  0014                     	;# 
   804  0015                     	;# 
   805  0015                     	;# 
   806  0016                     	;# 
   807  0016                     	;# 
   808  0017                     	;# 
   809  0018                     	;# 
   810  0019                     	;# 
   811  0019                     	;# 
   812  001A                     	;# 
   813  001B                     	;# 
   814  001C                     	;# 
   815  001D                     	;# 
   816  001E                     	;# 
   817  001F                     	;# 
   818  008C                     	;# 
   819  008D                     	;# 
   820  008E                     	;# 
   821  0090                     	;# 
   822  0091                     	;# 
   823  0092                     	;# 
   824  0093                     	;# 
   825  0094                     	;# 
   826  0097                     	;# 
   827  009B                     	;# 
   828  009B                     	;# 
   829  009C                     	;# 
   830  009D                     	;# 
   831  009E                     	;# 
   832  009F                     	;# 
   833  010C                     	;# 
   834  010D                     	;# 
   835  010E                     	;# 
   836  0111                     	;# 
   837  0112                     	;# 
   838  0113                     	;# 
   839  0114                     	;# 
   840  0115                     	;# 
   841  0116                     	;# 
   842  0117                     	;# 
   843  0118                     	;# 
   844  0119                     	;# 
   845  018C                     	;# 
   846  018D                     	;# 
   847  018E                     	;# 
   848  0197                     	;# 
   849  0199                     	;# 
   850  0199                     	;# 
   851  0199                     	;# 
   852  019A                     	;# 
   853  019A                     	;# 
   854  019A                     	;# 
   855  019B                     	;# 
   856  019B                     	;# 
   857  019B                     	;# 
   858  019B                     	;# 
   859  019B                     	;# 
   860  019C                     	;# 
   861  019C                     	;# 
   862  019C                     	;# 
   863  019D                     	;# 
   864  019D                     	;# 
   865  019D                     	;# 
   866  019E                     	;# 
   867  019E                     	;# 
   868  019E                     	;# 
   869  019F                     	;# 
   870  019F                     	;# 
   871  019F                     	;# 
   872  019F                     	;# 
   873  019F                     	;# 
   874  020C                     	;# 
   875  020D                     	;# 
   876  020E                     	;# 
   877  0211                     	;# 
   878  0211                     	;# 
   879  0212                     	;# 
   880  0212                     	;# 
   881  0213                     	;# 
   882  0213                     	;# 
   883  0214                     	;# 
   884  0214                     	;# 
   885  0215                     	;# 
   886  0215                     	;# 
   887  0215                     	;# 
   888  0215                     	;# 
   889  0216                     	;# 
   890  0216                     	;# 
   891  0217                     	;# 
   892  0217                     	;# 
   893  0219                     	;# 
   894  021A                     	;# 
   895  021B                     	;# 
   896  021C                     	;# 
   897  021D                     	;# 
   898  021D                     	;# 
   899  021E                     	;# 
   900  021F                     	;# 
   901  028C                     	;# 
   902  028D                     	;# 
   903  028E                     	;# 
   904  0291                     	;# 
   905  0291                     	;# 
   906  0292                     	;# 
   907  0293                     	;# 
   908  0294                     	;# 
   909  0295                     	;# 
   910  0295                     	;# 
   911  0296                     	;# 
   912  0297                     	;# 
   913  0298                     	;# 
   914  029F                     	;# 
   915  030C                     	;# 
   916  030D                     	;# 
   917  030E                     	;# 
   918  0311                     	;# 
   919  0311                     	;# 
   920  0312                     	;# 
   921  0313                     	;# 
   922  0314                     	;# 
   923  0315                     	;# 
   924  0315                     	;# 
   925  0316                     	;# 
   926  0317                     	;# 
   927  0318                     	;# 
   928  038C                     	;# 
   929  038D                     	;# 
   930  038E                     	;# 
   931  0391                     	;# 
   932  0392                     	;# 
   933  0393                     	;# 
   934  0394                     	;# 
   935  0395                     	;# 
   936  0396                     	;# 
   937  0397                     	;# 
   938  0398                     	;# 
   939  0399                     	;# 
   940  039A                     	;# 
   941  039C                     	;# 
   942  039D                     	;# 
   943  039E                     	;# 
   944  039F                     	;# 
   945  0411                     	;# 
   946  0411                     	;# 
   947  0412                     	;# 
   948  0413                     	;# 
   949  0414                     	;# 
   950  0415                     	;# 
   951  0416                     	;# 
   952  0417                     	;# 
   953  0418                     	;# 
   954  0418                     	;# 
   955  0419                     	;# 
   956  041A                     	;# 
   957  041B                     	;# 
   958  041C                     	;# 
   959  041D                     	;# 
   960  041E                     	;# 
   961  041F                     	;# 
   962  0498                     	;# 
   963  0498                     	;# 
   964  0499                     	;# 
   965  049A                     	;# 
   966  049B                     	;# 
   967  049B                     	;# 
   968  049C                     	;# 
   969  049D                     	;# 
   970  049E                     	;# 
   971  049F                     	;# 
   972  0617                     	;# 
   973  0618                     	;# 
   974  0619                     	;# 
   975  0619                     	;# 
   976  061A                     	;# 
   977  061B                     	;# 
   978  061C                     	;# 
   979  061C                     	;# 
   980  061F                     	;# 
   981  0691                     	;# 
   982  0692                     	;# 
   983  0693                     	;# 
   984  0694                     	;# 
   985  0695                     	;# 
   986  0696                     	;# 
   987  0697                     	;# 
   988  0698                     	;# 
   989  0699                     	;# 
   990  0711                     	;# 
   991  0712                     	;# 
   992  0713                     	;# 
   993  0714                     	;# 
   994  0715                     	;# 
   995  0716                     	;# 
   996  0717                     	;# 
   997  0718                     	;# 
   998  0719                     	;# 
   999  0891                     	;# 
  1000  0891                     	;# 
  1001  0891                     	;# 
  1002  0891                     	;# 
  1003  0891                     	;# 
  1004  0891                     	;# 
  1005  0892                     	;# 
  1006  0892                     	;# 
  1007  0892                     	;# 
  1008  0893                     	;# 
  1009  0893                     	;# 
  1010  0893                     	;# 
  1011  0893                     	;# 
  1012  0893                     	;# 
  1013  0893                     	;# 
  1014  0894                     	;# 
  1015  0894                     	;# 
  1016  0894                     	;# 
  1017  0895                     	;# 
  1018  0895                     	;# 
  1019  0895                     	;# 
  1020  0896                     	;# 
  1021  0896                     	;# 
  1022  0896                     	;# 
  1023  089B                     	;# 
  1024  0911                     	;# 
  1025  0912                     	;# 
  1026  0913                     	;# 
  1027  0914                     	;# 
  1028  0915                     	;# 
  1029  0916                     	;# 
  1030  0918                     	;# 
  1031  0919                     	;# 
  1032  091A                     	;# 
  1033  091B                     	;# 
  1034  091C                     	;# 
  1035  091D                     	;# 
  1036  091E                     	;# 
  1037  091F                     	;# 
  1038  0E0F                     	;# 
  1039  0E10                     	;# 
  1040  0E11                     	;# 
  1041  0E12                     	;# 
  1042  0E13                     	;# 
  1043  0E14                     	;# 
  1044  0E15                     	;# 
  1045  0E16                     	;# 
  1046  0E17                     	;# 
  1047  0E18                     	;# 
  1048  0E19                     	;# 
  1049  0E1A                     	;# 
  1050  0E1B                     	;# 
  1051  0E1C                     	;# 
  1052  0E1D                     	;# 
  1053  0E1E                     	;# 
  1054  0E1F                     	;# 
  1055  0E20                     	;# 
  1056  0E21                     	;# 
  1057  0E22                     	;# 
  1058  0E24                     	;# 
  1059  0E25                     	;# 
  1060  0E28                     	;# 
  1061  0E29                     	;# 
  1062  0E2A                     	;# 
  1063  0E2B                     	;# 
  1064  0E2C                     	;# 
  1065  0E2D                     	;# 
  1066  0E2E                     	;# 
  1067  0E2F                     	;# 
  1068  0E90                     	;# 
  1069  0E91                     	;# 
  1070  0E92                     	;# 
  1071  0E94                     	;# 
  1072  0E95                     	;# 
  1073  0E9C                     	;# 
  1074  0E9D                     	;# 
  1075  0E9E                     	;# 
  1076  0E9F                     	;# 
  1077  0EA0                     	;# 
  1078  0EA1                     	;# 
  1079  0EA2                     	;# 
  1080  0EA3                     	;# 
  1081  0EA4                     	;# 
  1082  0EA5                     	;# 
  1083  0EA6                     	;# 
  1084  0EA7                     	;# 
  1085  0F0F                     	;# 
  1086  0F10                     	;# 
  1087  0F11                     	;# 
  1088  0F12                     	;# 
  1089  0F13                     	;# 
  1090  0F14                     	;# 
  1091  0F15                     	;# 
  1092  0F16                     	;# 
  1093  0F17                     	;# 
  1094  0F18                     	;# 
  1095  0F19                     	;# 
  1096  0F1A                     	;# 
  1097  0F1B                     	;# 
  1098  0F1C                     	;# 
  1099  0F1D                     	;# 
  1100  0F1E                     	;# 
  1101  0F1F                     	;# 
  1102  0F20                     	;# 
  1103  0F21                     	;# 
  1104  0F22                     	;# 
  1105  0F23                     	;# 
  1106  0F24                     	;# 
  1107  0F25                     	;# 
  1108  0F26                     	;# 
  1109  0F27                     	;# 
  1110  0F28                     	;# 
  1111  0F29                     	;# 
  1112  0F2A                     	;# 
  1113  0F2B                     	;# 
  1114  0F2C                     	;# 
  1115  0F2D                     	;# 
  1116  0F2E                     	;# 
  1117  0F2F                     	;# 
  1118  0F30                     	;# 
  1119  0F31                     	;# 
  1120  0F32                     	;# 
  1121  0F33                     	;# 
  1122  0F34                     	;# 
  1123  0F35                     	;# 
  1124  0F36                     	;# 
  1125  0F37                     	;# 
  1126  0FE4                     	;# 
  1127  0FE5                     	;# 
  1128  0FE6                     	;# 
  1129  0FE7                     	;# 
  1130  0FE8                     	;# 
  1131  0FE9                     	;# 
  1132  0FEA                     	;# 
  1133  0FEB                     	;# 
  1134  0FED                     	;# 
  1135  0FEE                     	;# 
  1136  0FEF                     	;# 
  1137  0000                     	;# 
  1138  0001                     	;# 
  1139  0002                     	;# 
  1140  0003                     	;# 
  1141  0004                     	;# 
  1142  0005                     	;# 
  1143  0006                     	;# 
  1144  0007                     	;# 
  1145  0008                     	;# 
  1146  0009                     	;# 
  1147  000A                     	;# 
  1148  000B                     	;# 
  1149  000C                     	;# 
  1150  000D                     	;# 
  1151  000E                     	;# 
  1152  0010                     	;# 
  1153  0011                     	;# 
  1154  0012                     	;# 
  1155  0013                     	;# 
  1156  0014                     	;# 
  1157  0015                     	;# 
  1158  0015                     	;# 
  1159  0016                     	;# 
  1160  0016                     	;# 
  1161  0017                     	;# 
  1162  0018                     	;# 
  1163  0019                     	;# 
  1164  0019                     	;# 
  1165  001A                     	;# 
  1166  001B                     	;# 
  1167  001C                     	;# 
  1168  001D                     	;# 
  1169  001E                     	;# 
  1170  001F                     	;# 
  1171  008C                     	;# 
  1172  008D                     	;# 
  1173  008E                     	;# 
  1174  0090                     	;# 
  1175  0091                     	;# 
  1176  0092                     	;# 
  1177  0093                     	;# 
  1178  0094                     	;# 
  1179  0097                     	;# 
  1180  009B                     	;# 
  1181  009B                     	;# 
  1182  009C                     	;# 
  1183  009D                     	;# 
  1184  009E                     	;# 
  1185  009F                     	;# 
  1186  010C                     	;# 
  1187  010D                     	;# 
  1188  010E                     	;# 
  1189  0111                     	;# 
  1190  0112                     	;# 
  1191  0113                     	;# 
  1192  0114                     	;# 
  1193  0115                     	;# 
  1194  0116                     	;# 
  1195  0117                     	;# 
  1196  0118                     	;# 
  1197  0119                     	;# 
  1198  018C                     	;# 
  1199  018D                     	;# 
  1200  018E                     	;# 
  1201  0197                     	;# 
  1202  0199                     	;# 
  1203  0199                     	;# 
  1204  0199                     	;# 
  1205  019A                     	;# 
  1206  019A                     	;# 
  1207  019A                     	;# 
  1208  019B                     	;# 
  1209  019B                     	;# 
  1210  019B                     	;# 
  1211  019B                     	;# 
  1212  019B                     	;# 
  1213  019C                     	;# 
  1214  019C                     	;# 
  1215  019C                     	;# 
  1216  019D                     	;# 
  1217  019D                     	;# 
  1218  019D                     	;# 
  1219  019E                     	;# 
  1220  019E                     	;# 
  1221  019E                     	;# 
  1222  019F                     	;# 
  1223  019F                     	;# 
  1224  019F                     	;# 
  1225  019F                     	;# 
  1226  019F                     	;# 
  1227  020C                     	;# 
  1228  020D                     	;# 
  1229  020E                     	;# 
  1230  0211                     	;# 
  1231  0211                     	;# 
  1232  0212                     	;# 
  1233  0212                     	;# 
  1234  0213                     	;# 
  1235  0213                     	;# 
  1236  0214                     	;# 
  1237  0214                     	;# 
  1238  0215                     	;# 
  1239  0215                     	;# 
  1240  0215                     	;# 
  1241  0215                     	;# 
  1242  0216                     	;# 
  1243  0216                     	;# 
  1244  0217                     	;# 
  1245  0217                     	;# 
  1246  0219                     	;# 
  1247  021A                     	;# 
  1248  021B                     	;# 
  1249  021C                     	;# 
  1250  021D                     	;# 
  1251  021D                     	;# 
  1252  021E                     	;# 
  1253  021F                     	;# 
  1254  028C                     	;# 
  1255  028D                     	;# 
  1256  028E                     	;# 
  1257  0291                     	;# 
  1258  0291                     	;# 
  1259  0292                     	;# 
  1260  0293                     	;# 
  1261  0294                     	;# 
  1262  0295                     	;# 
  1263  0295                     	;# 
  1264  0296                     	;# 
  1265  0297                     	;# 
  1266  0298                     	;# 
  1267  029F                     	;# 
  1268  030C                     	;# 
  1269  030D                     	;# 
  1270  030E                     	;# 
  1271  0311                     	;# 
  1272  0311                     	;# 
  1273  0312                     	;# 
  1274  0313                     	;# 
  1275  0314                     	;# 
  1276  0315                     	;# 
  1277  0315                     	;# 
  1278  0316                     	;# 
  1279  0317                     	;# 
  1280  0318                     	;# 
  1281  038C                     	;# 
  1282  038D                     	;# 
  1283  038E                     	;# 
  1284  0391                     	;# 
  1285  0392                     	;# 
  1286  0393                     	;# 
  1287  0394                     	;# 
  1288  0395                     	;# 
  1289  0396                     	;# 
  1290  0397                     	;# 
  1291  0398                     	;# 
  1292  0399                     	;# 
  1293  039A                     	;# 
  1294  039C                     	;# 
  1295  039D                     	;# 
  1296  039E                     	;# 
  1297  039F                     	;# 
  1298  0411                     	;# 
  1299  0411                     	;# 
  1300  0412                     	;# 
  1301  0413                     	;# 
  1302  0414                     	;# 
  1303  0415                     	;# 
  1304  0416                     	;# 
  1305  0417                     	;# 
  1306  0418                     	;# 
  1307  0418                     	;# 
  1308  0419                     	;# 
  1309  041A                     	;# 
  1310  041B                     	;# 
  1311  041C                     	;# 
  1312  041D                     	;# 
  1313  041E                     	;# 
  1314  041F                     	;# 
  1315  0498                     	;# 
  1316  0498                     	;# 
  1317  0499                     	;# 
  1318  049A                     	;# 
  1319  049B                     	;# 
  1320  049B                     	;# 
  1321  049C                     	;# 
  1322  049D                     	;# 
  1323  049E                     	;# 
  1324  049F                     	;# 
  1325  0617                     	;# 
  1326  0618                     	;# 
  1327  0619                     	;# 
  1328  0619                     	;# 
  1329  061A                     	;# 
  1330  061B                     	;# 
  1331  061C                     	;# 
  1332  061C                     	;# 
  1333  061F                     	;# 
  1334  0691                     	;# 
  1335  0692                     	;# 
  1336  0693                     	;# 
  1337  0694                     	;# 
  1338  0695                     	;# 
  1339  0696                     	;# 
  1340  0697                     	;# 
  1341  0698                     	;# 
  1342  0699                     	;# 
  1343  0711                     	;# 
  1344  0712                     	;# 
  1345  0713                     	;# 
  1346  0714                     	;# 
  1347  0715                     	;# 
  1348  0716                     	;# 
  1349  0717                     	;# 
  1350  0718                     	;# 
  1351  0719                     	;# 
  1352  0891                     	;# 
  1353  0891                     	;# 
  1354  0891                     	;# 
  1355  0891                     	;# 
  1356  0891                     	;# 
  1357  0891                     	;# 
  1358  0892                     	;# 
  1359  0892                     	;# 
  1360  0892                     	;# 
  1361  0893                     	;# 
  1362  0893                     	;# 
  1363  0893                     	;# 
  1364  0893                     	;# 
  1365  0893                     	;# 
  1366  0893                     	;# 
  1367  0894                     	;# 
  1368  0894                     	;# 
  1369  0894                     	;# 
  1370  0895                     	;# 
  1371  0895                     	;# 
  1372  0895                     	;# 
  1373  0896                     	;# 
  1374  0896                     	;# 
  1375  0896                     	;# 
  1376  089B                     	;# 
  1377  0911                     	;# 
  1378  0912                     	;# 
  1379  0913                     	;# 
  1380  0914                     	;# 
  1381  0915                     	;# 
  1382  0916                     	;# 
  1383  0918                     	;# 
  1384  0919                     	;# 
  1385  091A                     	;# 
  1386  091B                     	;# 
  1387  091C                     	;# 
  1388  091D                     	;# 
  1389  091E                     	;# 
  1390  091F                     	;# 
  1391  0E0F                     	;# 
  1392  0E10                     	;# 
  1393  0E11                     	;# 
  1394  0E12                     	;# 
  1395  0E13                     	;# 
  1396  0E14                     	;# 
  1397  0E15                     	;# 
  1398  0E16                     	;# 
  1399  0E17                     	;# 
  1400  0E18                     	;# 
  1401  0E19                     	;# 
  1402  0E1A                     	;# 
  1403  0E1B                     	;# 
  1404  0E1C                     	;# 
  1405  0E1D                     	;# 
  1406  0E1E                     	;# 
  1407  0E1F                     	;# 
  1408  0E20                     	;# 
  1409  0E21                     	;# 
  1410  0E22                     	;# 
  1411  0E24                     	;# 
  1412  0E25                     	;# 
  1413  0E28                     	;# 
  1414  0E29                     	;# 
  1415  0E2A                     	;# 
  1416  0E2B                     	;# 
  1417  0E2C                     	;# 
  1418  0E2D                     	;# 
  1419  0E2E                     	;# 
  1420  0E2F                     	;# 
  1421  0E90                     	;# 
  1422  0E91                     	;# 
  1423  0E92                     	;# 
  1424  0E94                     	;# 
  1425  0E95                     	;# 
  1426  0E9C                     	;# 
  1427  0E9D                     	;# 
  1428  0E9E                     	;# 
  1429  0E9F                     	;# 
  1430  0EA0                     	;# 
  1431  0EA1                     	;# 
  1432  0EA2                     	;# 
  1433  0EA3                     	;# 
  1434  0EA4                     	;# 
  1435  0EA5                     	;# 
  1436  0EA6                     	;# 
  1437  0EA7                     	;# 
  1438  0F0F                     	;# 
  1439  0F10                     	;# 
  1440  0F11                     	;# 
  1441  0F12                     	;# 
  1442  0F13                     	;# 
  1443  0F14                     	;# 
  1444  0F15                     	;# 
  1445  0F16                     	;# 
  1446  0F17                     	;# 
  1447  0F18                     	;# 
  1448  0F19                     	;# 
  1449  0F1A                     	;# 
  1450  0F1B                     	;# 
  1451  0F1C                     	;# 
  1452  0F1D                     	;# 
  1453  0F1E                     	;# 
  1454  0F1F                     	;# 
  1455  0F20                     	;# 
  1456  0F21                     	;# 
  1457  0F22                     	;# 
  1458  0F23                     	;# 
  1459  0F24                     	;# 
  1460  0F25                     	;# 
  1461  0F26                     	;# 
  1462  0F27                     	;# 
  1463  0F28                     	;# 
  1464  0F29                     	;# 
  1465  0F2A                     	;# 
  1466  0F2B                     	;# 
  1467  0F2C                     	;# 
  1468  0F2D                     	;# 
  1469  0F2E                     	;# 
  1470  0F2F                     	;# 
  1471  0F30                     	;# 
  1472  0F31                     	;# 
  1473  0F32                     	;# 
  1474  0F33                     	;# 
  1475  0F34                     	;# 
  1476  0F35                     	;# 
  1477  0F36                     	;# 
  1478  0F37                     	;# 
  1479  0FE4                     	;# 
  1480  0FE5                     	;# 
  1481  0FE6                     	;# 
  1482  0FE7                     	;# 
  1483  0FE8                     	;# 
  1484  0FE9                     	;# 
  1485  0FEA                     	;# 
  1486  0FEB                     	;# 
  1487  0FED                     	;# 
  1488  0FEE                     	;# 
  1489  0FEF                     	;# 
  1490  0000                     	;# 
  1491  0001                     	;# 
  1492  0002                     	;# 
  1493  0003                     	;# 
  1494  0004                     	;# 
  1495  0005                     	;# 
  1496  0006                     	;# 
  1497  0007                     	;# 
  1498  0008                     	;# 
  1499  0009                     	;# 
  1500  000A                     	;# 
  1501  000B                     	;# 
  1502  000C                     	;# 
  1503  000D                     	;# 
  1504  000E                     	;# 
  1505  0010                     	;# 
  1506  0011                     	;# 
  1507  0012                     	;# 
  1508  0013                     	;# 
  1509  0014                     	;# 
  1510  0015                     	;# 
  1511  0015                     	;# 
  1512  0016                     	;# 
  1513  0016                     	;# 
  1514  0017                     	;# 
  1515  0018                     	;# 
  1516  0019                     	;# 
  1517  0019                     	;# 
  1518  001A                     	;# 
  1519  001B                     	;# 
  1520  001C                     	;# 
  1521  001D                     	;# 
  1522  001E                     	;# 
  1523  001F                     	;# 
  1524  008C                     	;# 
  1525  008D                     	;# 
  1526  008E                     	;# 
  1527  0090                     	;# 
  1528  0091                     	;# 
  1529  0092                     	;# 
  1530  0093                     	;# 
  1531  0094                     	;# 
  1532  0097                     	;# 
  1533  009B                     	;# 
  1534  009B                     	;# 
  1535  009C                     	;# 
  1536  009D                     	;# 
  1537  009E                     	;# 
  1538  009F                     	;# 
  1539  010C                     	;# 
  1540  010D                     	;# 
  1541  010E                     	;# 
  1542  0111                     	;# 
  1543  0112                     	;# 
  1544  0113                     	;# 
  1545  0114                     	;# 
  1546  0115                     	;# 
  1547  0116                     	;# 
  1548  0117                     	;# 
  1549  0118                     	;# 
  1550  0119                     	;# 
  1551  018C                     	;# 
  1552  018D                     	;# 
  1553  018E                     	;# 
  1554  0197                     	;# 
  1555  0199                     	;# 
  1556  0199                     	;# 
  1557  0199                     	;# 
  1558  019A                     	;# 
  1559  019A                     	;# 
  1560  019A                     	;# 
  1561  019B                     	;# 
  1562  019B                     	;# 
  1563  019B                     	;# 
  1564  019B                     	;# 
  1565  019B                     	;# 
  1566  019C                     	;# 
  1567  019C                     	;# 
  1568  019C                     	;# 
  1569  019D                     	;# 
  1570  019D                     	;# 
  1571  019D                     	;# 
  1572  019E                     	;# 
  1573  019E                     	;# 
  1574  019E                     	;# 
  1575  019F                     	;# 
  1576  019F                     	;# 
  1577  019F                     	;# 
  1578  019F                     	;# 
  1579  019F                     	;# 
  1580  020C                     	;# 
  1581  020D                     	;# 
  1582  020E                     	;# 
  1583  0211                     	;# 
  1584  0211                     	;# 
  1585  0212                     	;# 
  1586  0212                     	;# 
  1587  0213                     	;# 
  1588  0213                     	;# 
  1589  0214                     	;# 
  1590  0214                     	;# 
  1591  0215                     	;# 
  1592  0215                     	;# 
  1593  0215                     	;# 
  1594  0215                     	;# 
  1595  0216                     	;# 
  1596  0216                     	;# 
  1597  0217                     	;# 
  1598  0217                     	;# 
  1599  0219                     	;# 
  1600  021A                     	;# 
  1601  021B                     	;# 
  1602  021C                     	;# 
  1603  021D                     	;# 
  1604  021D                     	;# 
  1605  021E                     	;# 
  1606  021F                     	;# 
  1607  028C                     	;# 
  1608  028D                     	;# 
  1609  028E                     	;# 
  1610  0291                     	;# 
  1611  0291                     	;# 
  1612  0292                     	;# 
  1613  0293                     	;# 
  1614  0294                     	;# 
  1615  0295                     	;# 
  1616  0295                     	;# 
  1617  0296                     	;# 
  1618  0297                     	;# 
  1619  0298                     	;# 
  1620  029F                     	;# 
  1621  030C                     	;# 
  1622  030D                     	;# 
  1623  030E                     	;# 
  1624  0311                     	;# 
  1625  0311                     	;# 
  1626  0312                     	;# 
  1627  0313                     	;# 
  1628  0314                     	;# 
  1629  0315                     	;# 
  1630  0315                     	;# 
  1631  0316                     	;# 
  1632  0317                     	;# 
  1633  0318                     	;# 
  1634  038C                     	;# 
  1635  038D                     	;# 
  1636  038E                     	;# 
  1637  0391                     	;# 
  1638  0392                     	;# 
  1639  0393                     	;# 
  1640  0394                     	;# 
  1641  0395                     	;# 
  1642  0396                     	;# 
  1643  0397                     	;# 
  1644  0398                     	;# 
  1645  0399                     	;# 
  1646  039A                     	;# 
  1647  039C                     	;# 
  1648  039D                     	;# 
  1649  039E                     	;# 
  1650  039F                     	;# 
  1651  0411                     	;# 
  1652  0411                     	;# 
  1653  0412                     	;# 
  1654  0413                     	;# 
  1655  0414                     	;# 
  1656  0415                     	;# 
  1657  0416                     	;# 
  1658  0417                     	;# 
  1659  0418                     	;# 
  1660  0418                     	;# 
  1661  0419                     	;# 
  1662  041A                     	;# 
  1663  041B                     	;# 
  1664  041C                     	;# 
  1665  041D                     	;# 
  1666  041E                     	;# 
  1667  041F                     	;# 
  1668  0498                     	;# 
  1669  0498                     	;# 
  1670  0499                     	;# 
  1671  049A                     	;# 
  1672  049B                     	;# 
  1673  049B                     	;# 
  1674  049C                     	;# 
  1675  049D                     	;# 
  1676  049E                     	;# 
  1677  049F                     	;# 
  1678  0617                     	;# 
  1679  0618                     	;# 
  1680  0619                     	;# 
  1681  0619                     	;# 
  1682  061A                     	;# 
  1683  061B                     	;# 
  1684  061C                     	;# 
  1685  061C                     	;# 
  1686  061F                     	;# 
  1687  0691                     	;# 
  1688  0692                     	;# 
  1689  0693                     	;# 
  1690  0694                     	;# 
  1691  0695                     	;# 
  1692  0696                     	;# 
  1693  0697                     	;# 
  1694  0698                     	;# 
  1695  0699                     	;# 
  1696  0711                     	;# 
  1697  0712                     	;# 
  1698  0713                     	;# 
  1699  0714                     	;# 
  1700  0715                     	;# 
  1701  0716                     	;# 
  1702  0717                     	;# 
  1703  0718                     	;# 
  1704  0719                     	;# 
  1705  0891                     	;# 
  1706  0891                     	;# 
  1707  0891                     	;# 
  1708  0891                     	;# 
  1709  0891                     	;# 
  1710  0891                     	;# 
  1711  0892                     	;# 
  1712  0892                     	;# 
  1713  0892                     	;# 
  1714  0893                     	;# 
  1715  0893                     	;# 
  1716  0893                     	;# 
  1717  0893                     	;# 
  1718  0893                     	;# 
  1719  0893                     	;# 
  1720  0894                     	;# 
  1721  0894                     	;# 
  1722  0894                     	;# 
  1723  0895                     	;# 
  1724  0895                     	;# 
  1725  0895                     	;# 
  1726  0896                     	;# 
  1727  0896                     	;# 
  1728  0896                     	;# 
  1729  089B                     	;# 
  1730  0911                     	;# 
  1731  0912                     	;# 
  1732  0913                     	;# 
  1733  0914                     	;# 
  1734  0915                     	;# 
  1735  0916                     	;# 
  1736  0918                     	;# 
  1737  0919                     	;# 
  1738  091A                     	;# 
  1739  091B                     	;# 
  1740  091C                     	;# 
  1741  091D                     	;# 
  1742  091E                     	;# 
  1743  091F                     	;# 
  1744  0E0F                     	;# 
  1745  0E10                     	;# 
  1746  0E11                     	;# 
  1747  0E12                     	;# 
  1748  0E13                     	;# 
  1749  0E14                     	;# 
  1750  0E15                     	;# 
  1751  0E16                     	;# 
  1752  0E17                     	;# 
  1753  0E18                     	;# 
  1754  0E19                     	;# 
  1755  0E1A                     	;# 
  1756  0E1B                     	;# 
  1757  0E1C                     	;# 
  1758  0E1D                     	;# 
  1759  0E1E                     	;# 
  1760  0E1F                     	;# 
  1761  0E20                     	;# 
  1762  0E21                     	;# 
  1763  0E22                     	;# 
  1764  0E24                     	;# 
  1765  0E25                     	;# 
  1766  0E28                     	;# 
  1767  0E29                     	;# 
  1768  0E2A                     	;# 
  1769  0E2B                     	;# 
  1770  0E2C                     	;# 
  1771  0E2D                     	;# 
  1772  0E2E                     	;# 
  1773  0E2F                     	;# 
  1774  0E90                     	;# 
  1775  0E91                     	;# 
  1776  0E92                     	;# 
  1777  0E94                     	;# 
  1778  0E95                     	;# 
  1779  0E9C                     	;# 
  1780  0E9D                     	;# 
  1781  0E9E                     	;# 
  1782  0E9F                     	;# 
  1783  0EA0                     	;# 
  1784  0EA1                     	;# 
  1785  0EA2                     	;# 
  1786  0EA3                     	;# 
  1787  0EA4                     	;# 
  1788  0EA5                     	;# 
  1789  0EA6                     	;# 
  1790  0EA7                     	;# 
  1791  0F0F                     	;# 
  1792  0F10                     	;# 
  1793  0F11                     	;# 
  1794  0F12                     	;# 
  1795  0F13                     	;# 
  1796  0F14                     	;# 
  1797  0F15                     	;# 
  1798  0F16                     	;# 
  1799  0F17                     	;# 
  1800  0F18                     	;# 
  1801  0F19                     	;# 
  1802  0F1A                     	;# 
  1803  0F1B                     	;# 
  1804  0F1C                     	;# 
  1805  0F1D                     	;# 
  1806  0F1E                     	;# 
  1807  0F1F                     	;# 
  1808  0F20                     	;# 
  1809  0F21                     	;# 
  1810  0F22                     	;# 
  1811  0F23                     	;# 
  1812  0F24                     	;# 
  1813  0F25                     	;# 
  1814  0F26                     	;# 
  1815  0F27                     	;# 
  1816  0F28                     	;# 
  1817  0F29                     	;# 
  1818  0F2A                     	;# 
  1819  0F2B                     	;# 
  1820  0F2C                     	;# 
  1821  0F2D                     	;# 
  1822  0F2E                     	;# 
  1823  0F2F                     	;# 
  1824  0F30                     	;# 
  1825  0F31                     	;# 
  1826  0F32                     	;# 
  1827  0F33                     	;# 
  1828  0F34                     	;# 
  1829  0F35                     	;# 
  1830  0F36                     	;# 
  1831  0F37                     	;# 
  1832  0FE4                     	;# 
  1833  0FE5                     	;# 
  1834  0FE6                     	;# 
  1835  0FE7                     	;# 
  1836  0FE8                     	;# 
  1837  0FE9                     	;# 
  1838  0FEA                     	;# 
  1839  0FEB                     	;# 
  1840  0FED                     	;# 
  1841  0FEE                     	;# 
  1842  0FEF                     	;# 
  1843  0000                     	;# 
  1844  0001                     	;# 
  1845  0002                     	;# 
  1846  0003                     	;# 
  1847  0004                     	;# 
  1848  0005                     	;# 
  1849  0006                     	;# 
  1850  0007                     	;# 
  1851  0008                     	;# 
  1852  0009                     	;# 
  1853  000A                     	;# 
  1854  000B                     	;# 
  1855  000C                     	;# 
  1856  000D                     	;# 
  1857  000E                     	;# 
  1858  0010                     	;# 
  1859  0011                     	;# 
  1860  0012                     	;# 
  1861  0013                     	;# 
  1862  0014                     	;# 
  1863  0015                     	;# 
  1864  0015                     	;# 
  1865  0016                     	;# 
  1866  0016                     	;# 
  1867  0017                     	;# 
  1868  0018                     	;# 
  1869  0019                     	;# 
  1870  0019                     	;# 
  1871  001A                     	;# 
  1872  001B                     	;# 
  1873  001C                     	;# 
  1874  001D                     	;# 
  1875  001E                     	;# 
  1876  001F                     	;# 
  1877  008C                     	;# 
  1878  008D                     	;# 
  1879  008E                     	;# 
  1880  0090                     	;# 
  1881  0091                     	;# 
  1882  0092                     	;# 
  1883  0093                     	;# 
  1884  0094                     	;# 
  1885  0097                     	;# 
  1886  009B                     	;# 
  1887  009B                     	;# 
  1888  009C                     	;# 
  1889  009D                     	;# 
  1890  009E                     	;# 
  1891  009F                     	;# 
  1892  010C                     	;# 
  1893  010D                     	;# 
  1894  010E                     	;# 
  1895  0111                     	;# 
  1896  0112                     	;# 
  1897  0113                     	;# 
  1898  0114                     	;# 
  1899  0115                     	;# 
  1900  0116                     	;# 
  1901  0117                     	;# 
  1902  0118                     	;# 
  1903  0119                     	;# 
  1904  018C                     	;# 
  1905  018D                     	;# 
  1906  018E                     	;# 
  1907  0197                     	;# 
  1908  0199                     	;# 
  1909  0199                     	;# 
  1910  0199                     	;# 
  1911  019A                     	;# 
  1912  019A                     	;# 
  1913  019A                     	;# 
  1914  019B                     	;# 
  1915  019B                     	;# 
  1916  019B                     	;# 
  1917  019B                     	;# 
  1918  019B                     	;# 
  1919  019C                     	;# 
  1920  019C                     	;# 
  1921  019C                     	;# 
  1922  019D                     	;# 
  1923  019D                     	;# 
  1924  019D                     	;# 
  1925  019E                     	;# 
  1926  019E                     	;# 
  1927  019E                     	;# 
  1928  019F                     	;# 
  1929  019F                     	;# 
  1930  019F                     	;# 
  1931  019F                     	;# 
  1932  019F                     	;# 
  1933  020C                     	;# 
  1934  020D                     	;# 
  1935  020E                     	;# 
  1936  0211                     	;# 
  1937  0211                     	;# 
  1938  0212                     	;# 
  1939  0212                     	;# 
  1940  0213                     	;# 
  1941  0213                     	;# 
  1942  0214                     	;# 
  1943  0214                     	;# 
  1944  0215                     	;# 
  1945  0215                     	;# 
  1946  0215                     	;# 
  1947  0215                     	;# 
  1948  0216                     	;# 
  1949  0216                     	;# 
  1950  0217                     	;# 
  1951  0217                     	;# 
  1952  0219                     	;# 
  1953  021A                     	;# 
  1954  021B                     	;# 
  1955  021C                     	;# 
  1956  021D                     	;# 
  1957  021D                     	;# 
  1958  021E                     	;# 
  1959  021F                     	;# 
  1960  028C                     	;# 
  1961  028D                     	;# 
  1962  028E                     	;# 
  1963  0291                     	;# 
  1964  0291                     	;# 
  1965  0292                     	;# 
  1966  0293                     	;# 
  1967  0294                     	;# 
  1968  0295                     	;# 
  1969  0295                     	;# 
  1970  0296                     	;# 
  1971  0297                     	;# 
  1972  0298                     	;# 
  1973  029F                     	;# 
  1974  030C                     	;# 
  1975  030D                     	;# 
  1976  030E                     	;# 
  1977  0311                     	;# 
  1978  0311                     	;# 
  1979  0312                     	;# 
  1980  0313                     	;# 
  1981  0314                     	;# 
  1982  0315                     	;# 
  1983  0315                     	;# 
  1984  0316                     	;# 
  1985  0317                     	;# 
  1986  0318                     	;# 
  1987  038C                     	;# 
  1988  038D                     	;# 
  1989  038E                     	;# 
  1990  0391                     	;# 
  1991  0392                     	;# 
  1992  0393                     	;# 
  1993  0394                     	;# 
  1994  0395                     	;# 
  1995  0396                     	;# 
  1996  0397                     	;# 
  1997  0398                     	;# 
  1998  0399                     	;# 
  1999  039A                     	;# 
  2000  039C                     	;# 
  2001  039D                     	;# 
  2002  039E                     	;# 
  2003  039F                     	;# 
  2004  0411                     	;# 
  2005  0411                     	;# 
  2006  0412                     	;# 
  2007  0413                     	;# 
  2008  0414                     	;# 
  2009  0415                     	;# 
  2010  0416                     	;# 
  2011  0417                     	;# 
  2012  0418                     	;# 
  2013  0418                     	;# 
  2014  0419                     	;# 
  2015  041A                     	;# 
  2016  041B                     	;# 
  2017  041C                     	;# 
  2018  041D                     	;# 
  2019  041E                     	;# 
  2020  041F                     	;# 
  2021  0498                     	;# 
  2022  0498                     	;# 
  2023  0499                     	;# 
  2024  049A                     	;# 
  2025  049B                     	;# 
  2026  049B                     	;# 
  2027  049C                     	;# 
  2028  049D                     	;# 
  2029  049E                     	;# 
  2030  049F                     	;# 
  2031  0617                     	;# 
  2032  0618                     	;# 
  2033  0619                     	;# 
  2034  0619                     	;# 
  2035  061A                     	;# 
  2036  061B                     	;# 
  2037  061C                     	;# 
  2038  061C                     	;# 
  2039  061F                     	;# 
  2040  0691                     	;# 
  2041  0692                     	;# 
  2042  0693                     	;# 
  2043  0694                     	;# 
  2044  0695                     	;# 
  2045  0696                     	;# 
  2046  0697                     	;# 
  2047  0698                     	;# 
  2048  0699                     	;# 
  2049  0711                     	;# 
  2050  0712                     	;# 
  2051  0713                     	;# 
  2052  0714                     	;# 
  2053  0715                     	;# 
  2054  0716                     	;# 
  2055  0717                     	;# 
  2056  0718                     	;# 
  2057  0719                     	;# 
  2058  0891                     	;# 
  2059  0891                     	;# 
  2060  0891                     	;# 
  2061  0891                     	;# 
  2062  0891                     	;# 
  2063  0891                     	;# 
  2064  0892                     	;# 
  2065  0892                     	;# 
  2066  0892                     	;# 
  2067  0893                     	;# 
  2068  0893                     	;# 
  2069  0893                     	;# 
  2070  0893                     	;# 
  2071  0893                     	;# 
  2072  0893                     	;# 
  2073  0894                     	;# 
  2074  0894                     	;# 
  2075  0894                     	;# 
  2076  0895                     	;# 
  2077  0895                     	;# 
  2078  0895                     	;# 
  2079  0896                     	;# 
  2080  0896                     	;# 
  2081  0896                     	;# 
  2082  089B                     	;# 
  2083  0911                     	;# 
  2084  0912                     	;# 
  2085  0913                     	;# 
  2086  0914                     	;# 
  2087  0915                     	;# 
  2088  0916                     	;# 
  2089  0918                     	;# 
  2090  0919                     	;# 
  2091  091A                     	;# 
  2092  091B                     	;# 
  2093  091C                     	;# 
  2094  091D                     	;# 
  2095  091E                     	;# 
  2096  091F                     	;# 
  2097  0E0F                     	;# 
  2098  0E10                     	;# 
  2099  0E11                     	;# 
  2100  0E12                     	;# 
  2101  0E13                     	;# 
  2102  0E14                     	;# 
  2103  0E15                     	;# 
  2104  0E16                     	;# 
  2105  0E17                     	;# 
  2106  0E18                     	;# 
  2107  0E19                     	;# 
  2108  0E1A                     	;# 
  2109  0E1B                     	;# 
  2110  0E1C                     	;# 
  2111  0E1D                     	;# 
  2112  0E1E                     	;# 
  2113  0E1F                     	;# 
  2114  0E20                     	;# 
  2115  0E21                     	;# 
  2116  0E22                     	;# 
  2117  0E24                     	;# 
  2118  0E25                     	;# 
  2119  0E28                     	;# 
  2120  0E29                     	;# 
  2121  0E2A                     	;# 
  2122  0E2B                     	;# 
  2123  0E2C                     	;# 
  2124  0E2D                     	;# 
  2125  0E2E                     	;# 
  2126  0E2F                     	;# 
  2127  0E90                     	;# 
  2128  0E91                     	;# 
  2129  0E92                     	;# 
  2130  0E94                     	;# 
  2131  0E95                     	;# 
  2132  0E9C                     	;# 
  2133  0E9D                     	;# 
  2134  0E9E                     	;# 
  2135  0E9F                     	;# 
  2136  0EA0                     	;# 
  2137  0EA1                     	;# 
  2138  0EA2                     	;# 
  2139  0EA3                     	;# 
  2140  0EA4                     	;# 
  2141  0EA5                     	;# 
  2142  0EA6                     	;# 
  2143  0EA7                     	;# 
  2144  0F0F                     	;# 
  2145  0F10                     	;# 
  2146  0F11                     	;# 
  2147  0F12                     	;# 
  2148  0F13                     	;# 
  2149  0F14                     	;# 
  2150  0F15                     	;# 
  2151  0F16                     	;# 
  2152  0F17                     	;# 
  2153  0F18                     	;# 
  2154  0F19                     	;# 
  2155  0F1A                     	;# 
  2156  0F1B                     	;# 
  2157  0F1C                     	;# 
  2158  0F1D                     	;# 
  2159  0F1E                     	;# 
  2160  0F1F                     	;# 
  2161  0F20                     	;# 
  2162  0F21                     	;# 
  2163  0F22                     	;# 
  2164  0F23                     	;# 
  2165  0F24                     	;# 
  2166  0F25                     	;# 
  2167  0F26                     	;# 
  2168  0F27                     	;# 
  2169  0F28                     	;# 
  2170  0F29                     	;# 
  2171  0F2A                     	;# 
  2172  0F2B                     	;# 
  2173  0F2C                     	;# 
  2174  0F2D                     	;# 
  2175  0F2E                     	;# 
  2176  0F2F                     	;# 
  2177  0F30                     	;# 
  2178  0F31                     	;# 
  2179  0F32                     	;# 
  2180  0F33                     	;# 
  2181  0F34                     	;# 
  2182  0F35                     	;# 
  2183  0F36                     	;# 
  2184  0F37                     	;# 
  2185  0FE4                     	;# 
  2186  0FE5                     	;# 
  2187  0FE6                     	;# 
  2188  0FE7                     	;# 
  2189  0FE8                     	;# 
  2190  0FE9                     	;# 
  2191  0FEA                     	;# 
  2192  0FEB                     	;# 
  2193  0FED                     	;# 
  2194  0FEE                     	;# 
  2195  0FEF                     	;# 
  2196  0000                     	;# 
  2197  0001                     	;# 
  2198  0002                     	;# 
  2199  0003                     	;# 
  2200  0004                     	;# 
  2201  0005                     	;# 
  2202  0006                     	;# 
  2203  0007                     	;# 
  2204  0008                     	;# 
  2205  0009                     	;# 
  2206  000A                     	;# 
  2207  000B                     	;# 
  2208  000C                     	;# 
  2209  000D                     	;# 
  2210  000E                     	;# 
  2211  0010                     	;# 
  2212  0011                     	;# 
  2213  0012                     	;# 
  2214  0013                     	;# 
  2215  0014                     	;# 
  2216  0015                     	;# 
  2217  0015                     	;# 
  2218  0016                     	;# 
  2219  0016                     	;# 
  2220  0017                     	;# 
  2221  0018                     	;# 
  2222  0019                     	;# 
  2223  0019                     	;# 
  2224  001A                     	;# 
  2225  001B                     	;# 
  2226  001C                     	;# 
  2227  001D                     	;# 
  2228  001E                     	;# 
  2229  001F                     	;# 
  2230  008C                     	;# 
  2231  008D                     	;# 
  2232  008E                     	;# 
  2233  0090                     	;# 
  2234  0091                     	;# 
  2235  0092                     	;# 
  2236  0093                     	;# 
  2237  0094                     	;# 
  2238  0097                     	;# 
  2239  009B                     	;# 
  2240  009B                     	;# 
  2241  009C                     	;# 
  2242  009D                     	;# 
  2243  009E                     	;# 
  2244  009F                     	;# 
  2245  010C                     	;# 
  2246  010D                     	;# 
  2247  010E                     	;# 
  2248  0111                     	;# 
  2249  0112                     	;# 
  2250  0113                     	;# 
  2251  0114                     	;# 
  2252  0115                     	;# 
  2253  0116                     	;# 
  2254  0117                     	;# 
  2255  0118                     	;# 
  2256  0119                     	;# 
  2257  018C                     	;# 
  2258  018D                     	;# 
  2259  018E                     	;# 
  2260  0197                     	;# 
  2261  0199                     	;# 
  2262  0199                     	;# 
  2263  0199                     	;# 
  2264  019A                     	;# 
  2265  019A                     	;# 
  2266  019A                     	;# 
  2267  019B                     	;# 
  2268  019B                     	;# 
  2269  019B                     	;# 
  2270  019B                     	;# 
  2271  019B                     	;# 
  2272  019C                     	;# 
  2273  019C                     	;# 
  2274  019C                     	;# 
  2275  019D                     	;# 
  2276  019D                     	;# 
  2277  019D                     	;# 
  2278  019E                     	;# 
  2279  019E                     	;# 
  2280  019E                     	;# 
  2281  019F                     	;# 
  2282  019F                     	;# 
  2283  019F                     	;# 
  2284  019F                     	;# 
  2285  019F                     	;# 
  2286  020C                     	;# 
  2287  020D                     	;# 
  2288  020E                     	;# 
  2289  0211                     	;# 
  2290  0211                     	;# 
  2291  0212                     	;# 
  2292  0212                     	;# 
  2293  0213                     	;# 
  2294  0213                     	;# 
  2295  0214                     	;# 
  2296  0214                     	;# 
  2297  0215                     	;# 
  2298  0215                     	;# 
  2299  0215                     	;# 
  2300  0215                     	;# 
  2301  0216                     	;# 
  2302  0216                     	;# 
  2303  0217                     	;# 
  2304  0217                     	;# 
  2305  0219                     	;# 
  2306  021A                     	;# 
  2307  021B                     	;# 
  2308  021C                     	;# 
  2309  021D                     	;# 
  2310  021D                     	;# 
  2311  021E                     	;# 
  2312  021F                     	;# 
  2313  028C                     	;# 
  2314  028D                     	;# 
  2315  028E                     	;# 
  2316  0291                     	;# 
  2317  0291                     	;# 
  2318  0292                     	;# 
  2319  0293                     	;# 
  2320  0294                     	;# 
  2321  0295                     	;# 
  2322  0295                     	;# 
  2323  0296                     	;# 
  2324  0297                     	;# 
  2325  0298                     	;# 
  2326  029F                     	;# 
  2327  030C                     	;# 
  2328  030D                     	;# 
  2329  030E                     	;# 
  2330  0311                     	;# 
  2331  0311                     	;# 
  2332  0312                     	;# 
  2333  0313                     	;# 
  2334  0314                     	;# 
  2335  0315                     	;# 
  2336  0315                     	;# 
  2337  0316                     	;# 
  2338  0317                     	;# 
  2339  0318                     	;# 
  2340  038C                     	;# 
  2341  038D                     	;# 
  2342  038E                     	;# 
  2343  0391                     	;# 
  2344  0392                     	;# 
  2345  0393                     	;# 
  2346  0394                     	;# 
  2347  0395                     	;# 
  2348  0396                     	;# 
  2349  0397                     	;# 
  2350  0398                     	;# 
  2351  0399                     	;# 
  2352  039A                     	;# 
  2353  039C                     	;# 
  2354  039D                     	;# 
  2355  039E                     	;# 
  2356  039F                     	;# 
  2357  0411                     	;# 
  2358  0411                     	;# 
  2359  0412                     	;# 
  2360  0413                     	;# 
  2361  0414                     	;# 
  2362  0415                     	;# 
  2363  0416                     	;# 
  2364  0417                     	;# 
  2365  0418                     	;# 
  2366  0418                     	;# 
  2367  0419                     	;# 
  2368  041A                     	;# 
  2369  041B                     	;# 
  2370  041C                     	;# 
  2371  041D                     	;# 
  2372  041E                     	;# 
  2373  041F                     	;# 
  2374  0498                     	;# 
  2375  0498                     	;# 
  2376  0499                     	;# 
  2377  049A                     	;# 
  2378  049B                     	;# 
  2379  049B                     	;# 
  2380  049C                     	;# 
  2381  049D                     	;# 
  2382  049E                     	;# 
  2383  049F                     	;# 
  2384  0617                     	;# 
  2385  0618                     	;# 
  2386  0619                     	;# 
  2387  0619                     	;# 
  2388  061A                     	;# 
  2389  061B                     	;# 
  2390  061C                     	;# 
  2391  061C                     	;# 
  2392  061F                     	;# 
  2393  0691                     	;# 
  2394  0692                     	;# 
  2395  0693                     	;# 
  2396  0694                     	;# 
  2397  0695                     	;# 
  2398  0696                     	;# 
  2399  0697                     	;# 
  2400  0698                     	;# 
  2401  0699                     	;# 
  2402  0711                     	;# 
  2403  0712                     	;# 
  2404  0713                     	;# 
  2405  0714                     	;# 
  2406  0715                     	;# 
  2407  0716                     	;# 
  2408  0717                     	;# 
  2409  0718                     	;# 
  2410  0719                     	;# 
  2411  0891                     	;# 
  2412  0891                     	;# 
  2413  0891                     	;# 
  2414  0891                     	;# 
  2415  0891                     	;# 
  2416  0891                     	;# 
  2417  0892                     	;# 
  2418  0892                     	;# 
  2419  0892                     	;# 
  2420  0893                     	;# 
  2421  0893                     	;# 
  2422  0893                     	;# 
  2423  0893                     	;# 
  2424  0893                     	;# 
  2425  0893                     	;# 
  2426  0894                     	;# 
  2427  0894                     	;# 
  2428  0894                     	;# 
  2429  0895                     	;# 
  2430  0895                     	;# 
  2431  0895                     	;# 
  2432  0896                     	;# 
  2433  0896                     	;# 
  2434  0896                     	;# 
  2435  089B                     	;# 
  2436  0911                     	;# 
  2437  0912                     	;# 
  2438  0913                     	;# 
  2439  0914                     	;# 
  2440  0915                     	;# 
  2441  0916                     	;# 
  2442  0918                     	;# 
  2443  0919                     	;# 
  2444  091A                     	;# 
  2445  091B                     	;# 
  2446  091C                     	;# 
  2447  091D                     	;# 
  2448  091E                     	;# 
  2449  091F                     	;# 
  2450  0E0F                     	;# 
  2451  0E10                     	;# 
  2452  0E11                     	;# 
  2453  0E12                     	;# 
  2454  0E13                     	;# 
  2455  0E14                     	;# 
  2456  0E15                     	;# 
  2457  0E16                     	;# 
  2458  0E17                     	;# 
  2459  0E18                     	;# 
  2460  0E19                     	;# 
  2461  0E1A                     	;# 
  2462  0E1B                     	;# 
  2463  0E1C                     	;# 
  2464  0E1D                     	;# 
  2465  0E1E                     	;# 
  2466  0E1F                     	;# 
  2467  0E20                     	;# 
  2468  0E21                     	;# 
  2469  0E22                     	;# 
  2470  0E24                     	;# 
  2471  0E25                     	;# 
  2472  0E28                     	;# 
  2473  0E29                     	;# 
  2474  0E2A                     	;# 
  2475  0E2B                     	;# 
  2476  0E2C                     	;# 
  2477  0E2D                     	;# 
  2478  0E2E                     	;# 
  2479  0E2F                     	;# 
  2480  0E90                     	;# 
  2481  0E91                     	;# 
  2482  0E92                     	;# 
  2483  0E94                     	;# 
  2484  0E95                     	;# 
  2485  0E9C                     	;# 
  2486  0E9D                     	;# 
  2487  0E9E                     	;# 
  2488  0E9F                     	;# 
  2489  0EA0                     	;# 
  2490  0EA1                     	;# 
  2491  0EA2                     	;# 
  2492  0EA3                     	;# 
  2493  0EA4                     	;# 
  2494  0EA5                     	;# 
  2495  0EA6                     	;# 
  2496  0EA7                     	;# 
  2497  0F0F                     	;# 
  2498  0F10                     	;# 
  2499  0F11                     	;# 
  2500  0F12                     	;# 
  2501  0F13                     	;# 
  2502  0F14                     	;# 
  2503  0F15                     	;# 
  2504  0F16                     	;# 
  2505  0F17                     	;# 
  2506  0F18                     	;# 
  2507  0F19                     	;# 
  2508  0F1A                     	;# 
  2509  0F1B                     	;# 
  2510  0F1C                     	;# 
  2511  0F1D                     	;# 
  2512  0F1E                     	;# 
  2513  0F1F                     	;# 
  2514  0F20                     	;# 
  2515  0F21                     	;# 
  2516  0F22                     	;# 
  2517  0F23                     	;# 
  2518  0F24                     	;# 
  2519  0F25                     	;# 
  2520  0F26                     	;# 
  2521  0F27                     	;# 
  2522  0F28                     	;# 
  2523  0F29                     	;# 
  2524  0F2A                     	;# 
  2525  0F2B                     	;# 
  2526  0F2C                     	;# 
  2527  0F2D                     	;# 
  2528  0F2E                     	;# 
  2529  0F2F                     	;# 
  2530  0F30                     	;# 
  2531  0F31                     	;# 
  2532  0F32                     	;# 
  2533  0F33                     	;# 
  2534  0F34                     	;# 
  2535  0F35                     	;# 
  2536  0F36                     	;# 
  2537  0F37                     	;# 
  2538  0FE4                     	;# 
  2539  0FE5                     	;# 
  2540  0FE6                     	;# 
  2541  0FE7                     	;# 
  2542  0FE8                     	;# 
  2543  0FE9                     	;# 
  2544  0FEA                     	;# 
  2545  0FEB                     	;# 
  2546  0FED                     	;# 
  2547  0FEE                     	;# 
  2548  0FEF                     	;# 
  2549  0000                     	;# 
  2550  0001                     	;# 
  2551  0002                     	;# 
  2552  0003                     	;# 
  2553  0004                     	;# 
  2554  0005                     	;# 
  2555  0006                     	;# 
  2556  0007                     	;# 
  2557  0008                     	;# 
  2558  0009                     	;# 
  2559  000A                     	;# 
  2560  000B                     	;# 
  2561  000C                     	;# 
  2562  000D                     	;# 
  2563  000E                     	;# 
  2564  0010                     	;# 
  2565  0011                     	;# 
  2566  0012                     	;# 
  2567  0013                     	;# 
  2568  0014                     	;# 
  2569  0015                     	;# 
  2570  0015                     	;# 
  2571  0016                     	;# 
  2572  0016                     	;# 
  2573  0017                     	;# 
  2574  0018                     	;# 
  2575  0019                     	;# 
  2576  0019                     	;# 
  2577  001A                     	;# 
  2578  001B                     	;# 
  2579  001C                     	;# 
  2580  001D                     	;# 
  2581  001E                     	;# 
  2582  001F                     	;# 
  2583  008C                     	;# 
  2584  008D                     	;# 
  2585  008E                     	;# 
  2586  0090                     	;# 
  2587  0091                     	;# 
  2588  0092                     	;# 
  2589  0093                     	;# 
  2590  0094                     	;# 
  2591  0097                     	;# 
  2592  009B                     	;# 
  2593  009B                     	;# 
  2594  009C                     	;# 
  2595  009D                     	;# 
  2596  009E                     	;# 
  2597  009F                     	;# 
  2598  010C                     	;# 
  2599  010D                     	;# 
  2600  010E                     	;# 
  2601  0111                     	;# 
  2602  0112                     	;# 
  2603  0113                     	;# 
  2604  0114                     	;# 
  2605  0115                     	;# 
  2606  0116                     	;# 
  2607  0117                     	;# 
  2608  0118                     	;# 
  2609  0119                     	;# 
  2610  018C                     	;# 
  2611  018D                     	;# 
  2612  018E                     	;# 
  2613  0197                     	;# 
  2614  0199                     	;# 
  2615  0199                     	;# 
  2616  0199                     	;# 
  2617  019A                     	;# 
  2618  019A                     	;# 
  2619  019A                     	;# 
  2620  019B                     	;# 
  2621  019B                     	;# 
  2622  019B                     	;# 
  2623  019B                     	;# 
  2624  019B                     	;# 
  2625  019C                     	;# 
  2626  019C                     	;# 
  2627  019C                     	;# 
  2628  019D                     	;# 
  2629  019D                     	;# 
  2630  019D                     	;# 
  2631  019E                     	;# 
  2632  019E                     	;# 
  2633  019E                     	;# 
  2634  019F                     	;# 
  2635  019F                     	;# 
  2636  019F                     	;# 
  2637  019F                     	;# 
  2638  019F                     	;# 
  2639  020C                     	;# 
  2640  020D                     	;# 
  2641  020E                     	;# 
  2642  0211                     	;# 
  2643  0211                     	;# 
  2644  0212                     	;# 
  2645  0212                     	;# 
  2646  0213                     	;# 
  2647  0213                     	;# 
  2648  0214                     	;# 
  2649  0214                     	;# 
  2650  0215                     	;# 
  2651  0215                     	;# 
  2652  0215                     	;# 
  2653  0215                     	;# 
  2654  0216                     	;# 
  2655  0216                     	;# 
  2656  0217                     	;# 
  2657  0217                     	;# 
  2658  0219                     	;# 
  2659  021A                     	;# 
  2660  021B                     	;# 
  2661  021C                     	;# 
  2662  021D                     	;# 
  2663  021D                     	;# 
  2664  021E                     	;# 
  2665  021F                     	;# 
  2666  028C                     	;# 
  2667  028D                     	;# 
  2668  028E                     	;# 
  2669  0291                     	;# 
  2670  0291                     	;# 
  2671  0292                     	;# 
  2672  0293                     	;# 
  2673  0294                     	;# 
  2674  0295                     	;# 
  2675  0295                     	;# 
  2676  0296                     	;# 
  2677  0297                     	;# 
  2678  0298                     	;# 
  2679  029F                     	;# 
  2680  030C                     	;# 
  2681  030D                     	;# 
  2682  030E                     	;# 
  2683  0311                     	;# 
  2684  0311                     	;# 
  2685  0312                     	;# 
  2686  0313                     	;# 
  2687  0314                     	;# 
  2688  0315                     	;# 
  2689  0315                     	;# 
  2690  0316                     	;# 
  2691  0317                     	;# 
  2692  0318                     	;# 
  2693  038C                     	;# 
  2694  038D                     	;# 
  2695  038E                     	;# 
  2696  0391                     	;# 
  2697  0392                     	;# 
  2698  0393                     	;# 
  2699  0394                     	;# 
  2700  0395                     	;# 
  2701  0396                     	;# 
  2702  0397                     	;# 
  2703  0398                     	;# 
  2704  0399                     	;# 
  2705  039A                     	;# 
  2706  039C                     	;# 
  2707  039D                     	;# 
  2708  039E                     	;# 
  2709  039F                     	;# 
  2710  0411                     	;# 
  2711  0411                     	;# 
  2712  0412                     	;# 
  2713  0413                     	;# 
  2714  0414                     	;# 
  2715  0415                     	;# 
  2716  0416                     	;# 
  2717  0417                     	;# 
  2718  0418                     	;# 
  2719  0418                     	;# 
  2720  0419                     	;# 
  2721  041A                     	;# 
  2722  041B                     	;# 
  2723  041C                     	;# 
  2724  041D                     	;# 
  2725  041E                     	;# 
  2726  041F                     	;# 
  2727  0498                     	;# 
  2728  0498                     	;# 
  2729  0499                     	;# 
  2730  049A                     	;# 
  2731  049B                     	;# 
  2732  049B                     	;# 
  2733  049C                     	;# 
  2734  049D                     	;# 
  2735  049E                     	;# 
  2736  049F                     	;# 
  2737  0617                     	;# 
  2738  0618                     	;# 
  2739  0619                     	;# 
  2740  0619                     	;# 
  2741  061A                     	;# 
  2742  061B                     	;# 
  2743  061C                     	;# 
  2744  061C                     	;# 
  2745  061F                     	;# 
  2746  0691                     	;# 
  2747  0692                     	;# 
  2748  0693                     	;# 
  2749  0694                     	;# 
  2750  0695                     	;# 
  2751  0696                     	;# 
  2752  0697                     	;# 
  2753  0698                     	;# 
  2754  0699                     	;# 
  2755  0711                     	;# 
  2756  0712                     	;# 
  2757  0713                     	;# 
  2758  0714                     	;# 
  2759  0715                     	;# 
  2760  0716                     	;# 
  2761  0717                     	;# 
  2762  0718                     	;# 
  2763  0719                     	;# 
  2764  0891                     	;# 
  2765  0891                     	;# 
  2766  0891                     	;# 
  2767  0891                     	;# 
  2768  0891                     	;# 
  2769  0891                     	;# 
  2770  0892                     	;# 
  2771  0892                     	;# 
  2772  0892                     	;# 
  2773  0893                     	;# 
  2774  0893                     	;# 
  2775  0893                     	;# 
  2776  0893                     	;# 
  2777  0893                     	;# 
  2778  0893                     	;# 
  2779  0894                     	;# 
  2780  0894                     	;# 
  2781  0894                     	;# 
  2782  0895                     	;# 
  2783  0895                     	;# 
  2784  0895                     	;# 
  2785  0896                     	;# 
  2786  0896                     	;# 
  2787  0896                     	;# 
  2788  089B                     	;# 
  2789  0911                     	;# 
  2790  0912                     	;# 
  2791  0913                     	;# 
  2792  0914                     	;# 
  2793  0915                     	;# 
  2794  0916                     	;# 
  2795  0918                     	;# 
  2796  0919                     	;# 
  2797  091A                     	;# 
  2798  091B                     	;# 
  2799  091C                     	;# 
  2800  091D                     	;# 
  2801  091E                     	;# 
  2802  091F                     	;# 
  2803  0E0F                     	;# 
  2804  0E10                     	;# 
  2805  0E11                     	;# 
  2806  0E12                     	;# 
  2807  0E13                     	;# 
  2808  0E14                     	;# 
  2809  0E15                     	;# 
  2810  0E16                     	;# 
  2811  0E17                     	;# 
  2812  0E18                     	;# 
  2813  0E19                     	;# 
  2814  0E1A                     	;# 
  2815  0E1B                     	;# 
  2816  0E1C                     	;# 
  2817  0E1D                     	;# 
  2818  0E1E                     	;# 
  2819  0E1F                     	;# 
  2820  0E20                     	;# 
  2821  0E21                     	;# 
  2822  0E22                     	;# 
  2823  0E24                     	;# 
  2824  0E25                     	;# 
  2825  0E28                     	;# 
  2826  0E29                     	;# 
  2827  0E2A                     	;# 
  2828  0E2B                     	;# 
  2829  0E2C                     	;# 
  2830  0E2D                     	;# 
  2831  0E2E                     	;# 
  2832  0E2F                     	;# 
  2833  0E90                     	;# 
  2834  0E91                     	;# 
  2835  0E92                     	;# 
  2836  0E94                     	;# 
  2837  0E95                     	;# 
  2838  0E9C                     	;# 
  2839  0E9D                     	;# 
  2840  0E9E                     	;# 
  2841  0E9F                     	;# 
  2842  0EA0                     	;# 
  2843  0EA1                     	;# 
  2844  0EA2                     	;# 
  2845  0EA3                     	;# 
  2846  0EA4                     	;# 
  2847  0EA5                     	;# 
  2848  0EA6                     	;# 
  2849  0EA7                     	;# 
  2850  0F0F                     	;# 
  2851  0F10                     	;# 
  2852  0F11                     	;# 
  2853  0F12                     	;# 
  2854  0F13                     	;# 
  2855  0F14                     	;# 
  2856  0F15                     	;# 
  2857  0F16                     	;# 
  2858  0F17                     	;# 
  2859  0F18                     	;# 
  2860  0F19                     	;# 
  2861  0F1A                     	;# 
  2862  0F1B                     	;# 
  2863  0F1C                     	;# 
  2864  0F1D                     	;# 
  2865  0F1E                     	;# 
  2866  0F1F                     	;# 
  2867  0F20                     	;# 
  2868  0F21                     	;# 
  2869  0F22                     	;# 
  2870  0F23                     	;# 
  2871  0F24                     	;# 
  2872  0F25                     	;# 
  2873  0F26                     	;# 
  2874  0F27                     	;# 
  2875  0F28                     	;# 
  2876  0F29                     	;# 
  2877  0F2A                     	;# 
  2878  0F2B                     	;# 
  2879  0F2C                     	;# 
  2880  0F2D                     	;# 
  2881  0F2E                     	;# 
  2882  0F2F                     	;# 
  2883  0F30                     	;# 
  2884  0F31                     	;# 
  2885  0F32                     	;# 
  2886  0F33                     	;# 
  2887  0F34                     	;# 
  2888  0F35                     	;# 
  2889  0F36                     	;# 
  2890  0F37                     	;# 
  2891  0FE4                     	;# 
  2892  0FE5                     	;# 
  2893  0FE6                     	;# 
  2894  0FE7                     	;# 
  2895  0FE8                     	;# 
  2896  0FE9                     	;# 
  2897  0FEA                     	;# 
  2898  0FEB                     	;# 
  2899  0FED                     	;# 
  2900  0FEE                     	;# 
  2901  0FEF                     	;# 
  2902  0000                     	;# 
  2903  0001                     	;# 
  2904  0002                     	;# 
  2905  0003                     	;# 
  2906  0004                     	;# 
  2907  0005                     	;# 
  2908  0006                     	;# 
  2909  0007                     	;# 
  2910  0008                     	;# 
  2911  0009                     	;# 
  2912  000A                     	;# 
  2913  000B                     	;# 
  2914  000C                     	;# 
  2915  000D                     	;# 
  2916  000E                     	;# 
  2917  0010                     	;# 
  2918  0011                     	;# 
  2919  0012                     	;# 
  2920  0013                     	;# 
  2921  0014                     	;# 
  2922  0015                     	;# 
  2923  0015                     	;# 
  2924  0016                     	;# 
  2925  0016                     	;# 
  2926  0017                     	;# 
  2927  0018                     	;# 
  2928  0019                     	;# 
  2929  0019                     	;# 
  2930  001A                     	;# 
  2931  001B                     	;# 
  2932  001C                     	;# 
  2933  001D                     	;# 
  2934  001E                     	;# 
  2935  001F                     	;# 
  2936  008C                     	;# 
  2937  008D                     	;# 
  2938  008E                     	;# 
  2939  0090                     	;# 
  2940  0091                     	;# 
  2941  0092                     	;# 
  2942  0093                     	;# 
  2943  0094                     	;# 
  2944  0097                     	;# 
  2945  009B                     	;# 
  2946  009B                     	;# 
  2947  009C                     	;# 
  2948  009D                     	;# 
  2949  009E                     	;# 
  2950  009F                     	;# 
  2951  010C                     	;# 
  2952  010D                     	;# 
  2953  010E                     	;# 
  2954  0111                     	;# 
  2955  0112                     	;# 
  2956  0113                     	;# 
  2957  0114                     	;# 
  2958  0115                     	;# 
  2959  0116                     	;# 
  2960  0117                     	;# 
  2961  0118                     	;# 
  2962  0119                     	;# 
  2963  018C                     	;# 
  2964  018D                     	;# 
  2965  018E                     	;# 
  2966  0197                     	;# 
  2967  0199                     	;# 
  2968  0199                     	;# 
  2969  0199                     	;# 
  2970  019A                     	;# 
  2971  019A                     	;# 
  2972  019A                     	;# 
  2973  019B                     	;# 
  2974  019B                     	;# 
  2975  019B                     	;# 
  2976  019B                     	;# 
  2977  019B                     	;# 
  2978  019C                     	;# 
  2979  019C                     	;# 
  2980  019C                     	;# 
  2981  019D                     	;# 
  2982  019D                     	;# 
  2983  019D                     	;# 
  2984  019E                     	;# 
  2985  019E                     	;# 
  2986  019E                     	;# 
  2987  019F                     	;# 
  2988  019F                     	;# 
  2989  019F                     	;# 
  2990  019F                     	;# 
  2991  019F                     	;# 
  2992  020C                     	;# 
  2993  020D                     	;# 
  2994  020E                     	;# 
  2995  0211                     	;# 
  2996  0211                     	;# 
  2997  0212                     	;# 
  2998  0212                     	;# 
  2999  0213                     	;# 
  3000  0213                     	;# 
  3001  0214                     	;# 
  3002  0214                     	;# 
  3003  0215                     	;# 
  3004  0215                     	;# 
  3005  0215                     	;# 
  3006  0215                     	;# 
  3007  0216                     	;# 
  3008  0216                     	;# 
  3009  0217                     	;# 
  3010  0217                     	;# 
  3011  0219                     	;# 
  3012  021A                     	;# 
  3013  021B                     	;# 
  3014  021C                     	;# 
  3015  021D                     	;# 
  3016  021D                     	;# 
  3017  021E                     	;# 
  3018  021F                     	;# 
  3019  028C                     	;# 
  3020  028D                     	;# 
  3021  028E                     	;# 
  3022  0291                     	;# 
  3023  0291                     	;# 
  3024  0292                     	;# 
  3025  0293                     	;# 
  3026  0294                     	;# 
  3027  0295                     	;# 
  3028  0295                     	;# 
  3029  0296                     	;# 
  3030  0297                     	;# 
  3031  0298                     	;# 
  3032  029F                     	;# 
  3033  030C                     	;# 
  3034  030D                     	;# 
  3035  030E                     	;# 
  3036  0311                     	;# 
  3037  0311                     	;# 
  3038  0312                     	;# 
  3039  0313                     	;# 
  3040  0314                     	;# 
  3041  0315                     	;# 
  3042  0315                     	;# 
  3043  0316                     	;# 
  3044  0317                     	;# 
  3045  0318                     	;# 
  3046  038C                     	;# 
  3047  038D                     	;# 
  3048  038E                     	;# 
  3049  0391                     	;# 
  3050  0392                     	;# 
  3051  0393                     	;# 
  3052  0394                     	;# 
  3053  0395                     	;# 
  3054  0396                     	;# 
  3055  0397                     	;# 
  3056  0398                     	;# 
  3057  0399                     	;# 
  3058  039A                     	;# 
  3059  039C                     	;# 
  3060  039D                     	;# 
  3061  039E                     	;# 
  3062  039F                     	;# 
  3063  0411                     	;# 
  3064  0411                     	;# 
  3065  0412                     	;# 
  3066  0413                     	;# 
  3067  0414                     	;# 
  3068  0415                     	;# 
  3069  0416                     	;# 
  3070  0417                     	;# 
  3071  0418                     	;# 
  3072  0418                     	;# 
  3073  0419                     	;# 
  3074  041A                     	;# 
  3075  041B                     	;# 
  3076  041C                     	;# 
  3077  041D                     	;# 
  3078  041E                     	;# 
  3079  041F                     	;# 
  3080  0498                     	;# 
  3081  0498                     	;# 
  3082  0499                     	;# 
  3083  049A                     	;# 
  3084  049B                     	;# 
  3085  049B                     	;# 
  3086  049C                     	;# 
  3087  049D                     	;# 
  3088  049E                     	;# 
  3089  049F                     	;# 
  3090  0617                     	;# 
  3091  0618                     	;# 
  3092  0619                     	;# 
  3093  0619                     	;# 
  3094  061A                     	;# 
  3095  061B                     	;# 
  3096  061C                     	;# 
  3097  061C                     	;# 
  3098  061F                     	;# 
  3099  0691                     	;# 
  3100  0692                     	;# 
  3101  0693                     	;# 
  3102  0694                     	;# 
  3103  0695                     	;# 
  3104  0696                     	;# 
  3105  0697                     	;# 
  3106  0698                     	;# 
  3107  0699                     	;# 
  3108  0711                     	;# 
  3109  0712                     	;# 
  3110  0713                     	;# 
  3111  0714                     	;# 
  3112  0715                     	;# 
  3113  0716                     	;# 
  3114  0717                     	;# 
  3115  0718                     	;# 
  3116  0719                     	;# 
  3117  0891                     	;# 
  3118  0891                     	;# 
  3119  0891                     	;# 
  3120  0891                     	;# 
  3121  0891                     	;# 
  3122  0891                     	;# 
  3123  0892                     	;# 
  3124  0892                     	;# 
  3125  0892                     	;# 
  3126  0893                     	;# 
  3127  0893                     	;# 
  3128  0893                     	;# 
  3129  0893                     	;# 
  3130  0893                     	;# 
  3131  0893                     	;# 
  3132  0894                     	;# 
  3133  0894                     	;# 
  3134  0894                     	;# 
  3135  0895                     	;# 
  3136  0895                     	;# 
  3137  0895                     	;# 
  3138  0896                     	;# 
  3139  0896                     	;# 
  3140  0896                     	;# 
  3141  089B                     	;# 
  3142  0911                     	;# 
  3143  0912                     	;# 
  3144  0913                     	;# 
  3145  0914                     	;# 
  3146  0915                     	;# 
  3147  0916                     	;# 
  3148  0918                     	;# 
  3149  0919                     	;# 
  3150  091A                     	;# 
  3151  091B                     	;# 
  3152  091C                     	;# 
  3153  091D                     	;# 
  3154  091E                     	;# 
  3155  091F                     	;# 
  3156  0E0F                     	;# 
  3157  0E10                     	;# 
  3158  0E11                     	;# 
  3159  0E12                     	;# 
  3160  0E13                     	;# 
  3161  0E14                     	;# 
  3162  0E15                     	;# 
  3163  0E16                     	;# 
  3164  0E17                     	;# 
  3165  0E18                     	;# 
  3166  0E19                     	;# 
  3167  0E1A                     	;# 
  3168  0E1B                     	;# 
  3169  0E1C                     	;# 
  3170  0E1D                     	;# 
  3171  0E1E                     	;# 
  3172  0E1F                     	;# 
  3173  0E20                     	;# 
  3174  0E21                     	;# 
  3175  0E22                     	;# 
  3176  0E24                     	;# 
  3177  0E25                     	;# 
  3178  0E28                     	;# 
  3179  0E29                     	;# 
  3180  0E2A                     	;# 
  3181  0E2B                     	;# 
  3182  0E2C                     	;# 
  3183  0E2D                     	;# 
  3184  0E2E                     	;# 
  3185  0E2F                     	;# 
  3186  0E90                     	;# 
  3187  0E91                     	;# 
  3188  0E92                     	;# 
  3189  0E94                     	;# 
  3190  0E95                     	;# 
  3191  0E9C                     	;# 
  3192  0E9D                     	;# 
  3193  0E9E                     	;# 
  3194  0E9F                     	;# 
  3195  0EA0                     	;# 
  3196  0EA1                     	;# 
  3197  0EA2                     	;# 
  3198  0EA3                     	;# 
  3199  0EA4                     	;# 
  3200  0EA5                     	;# 
  3201  0EA6                     	;# 
  3202  0EA7                     	;# 
  3203  0F0F                     	;# 
  3204  0F10                     	;# 
  3205  0F11                     	;# 
  3206  0F12                     	;# 
  3207  0F13                     	;# 
  3208  0F14                     	;# 
  3209  0F15                     	;# 
  3210  0F16                     	;# 
  3211  0F17                     	;# 
  3212  0F18                     	;# 
  3213  0F19                     	;# 
  3214  0F1A                     	;# 
  3215  0F1B                     	;# 
  3216  0F1C                     	;# 
  3217  0F1D                     	;# 
  3218  0F1E                     	;# 
  3219  0F1F                     	;# 
  3220  0F20                     	;# 
  3221  0F21                     	;# 
  3222  0F22                     	;# 
  3223  0F23                     	;# 
  3224  0F24                     	;# 
  3225  0F25                     	;# 
  3226  0F26                     	;# 
  3227  0F27                     	;# 
  3228  0F28                     	;# 
  3229  0F29                     	;# 
  3230  0F2A                     	;# 
  3231  0F2B                     	;# 
  3232  0F2C                     	;# 
  3233  0F2D                     	;# 
  3234  0F2E                     	;# 
  3235  0F2F                     	;# 
  3236  0F30                     	;# 
  3237  0F31                     	;# 
  3238  0F32                     	;# 
  3239  0F33                     	;# 
  3240  0F34                     	;# 
  3241  0F35                     	;# 
  3242  0F36                     	;# 
  3243  0F37                     	;# 
  3244  0FE4                     	;# 
  3245  0FE5                     	;# 
  3246  0FE6                     	;# 
  3247  0FE7                     	;# 
  3248  0FE8                     	;# 
  3249  0FE9                     	;# 
  3250  0FEA                     	;# 
  3251  0FEB                     	;# 
  3252  0FED                     	;# 
  3253  0FEE                     	;# 
  3254  0FEF                     	;# 
  3255  0000                     	;# 
  3256  0001                     	;# 
  3257  0002                     	;# 
  3258  0003                     	;# 
  3259  0004                     	;# 
  3260  0005                     	;# 
  3261  0006                     	;# 
  3262  0007                     	;# 
  3263  0008                     	;# 
  3264  0009                     	;# 
  3265  000A                     	;# 
  3266  000B                     	;# 
  3267  000C                     	;# 
  3268  000D                     	;# 
  3269  000E                     	;# 
  3270  0010                     	;# 
  3271  0011                     	;# 
  3272  0012                     	;# 
  3273  0013                     	;# 
  3274  0014                     	;# 
  3275  0015                     	;# 
  3276  0015                     	;# 
  3277  0016                     	;# 
  3278  0016                     	;# 
  3279  0017                     	;# 
  3280  0018                     	;# 
  3281  0019                     	;# 
  3282  0019                     	;# 
  3283  001A                     	;# 
  3284  001B                     	;# 
  3285  001C                     	;# 
  3286  001D                     	;# 
  3287  001E                     	;# 
  3288  001F                     	;# 
  3289  008C                     	;# 
  3290  008D                     	;# 
  3291  008E                     	;# 
  3292  0090                     	;# 
  3293  0091                     	;# 
  3294  0092                     	;# 
  3295  0093                     	;# 
  3296  0094                     	;# 
  3297  0097                     	;# 
  3298  009B                     	;# 
  3299  009B                     	;# 
  3300  009C                     	;# 
  3301  009D                     	;# 
  3302  009E                     	;# 
  3303  009F                     	;# 
  3304  010C                     	;# 
  3305  010D                     	;# 
  3306  010E                     	;# 
  3307  0111                     	;# 
  3308  0112                     	;# 
  3309  0113                     	;# 
  3310  0114                     	;# 
  3311  0115                     	;# 
  3312  0116                     	;# 
  3313  0117                     	;# 
  3314  0118                     	;# 
  3315  0119                     	;# 
  3316  018C                     	;# 
  3317  018D                     	;# 
  3318  018E                     	;# 
  3319  0197                     	;# 
  3320  0199                     	;# 
  3321  0199                     	;# 
  3322  0199                     	;# 
  3323  019A                     	;# 
  3324  019A                     	;# 
  3325  019A                     	;# 
  3326  019B                     	;# 
  3327  019B                     	;# 
  3328  019B                     	;# 
  3329  019B                     	;# 
  3330  019B                     	;# 
  3331  019C                     	;# 
  3332  019C                     	;# 
  3333  019C                     	;# 
  3334  019D                     	;# 
  3335  019D                     	;# 
  3336  019D                     	;# 
  3337  019E                     	;# 
  3338  019E                     	;# 
  3339  019E                     	;# 
  3340  019F                     	;# 
  3341  019F                     	;# 
  3342  019F                     	;# 
  3343  019F                     	;# 
  3344  019F                     	;# 
  3345  020C                     	;# 
  3346  020D                     	;# 
  3347  020E                     	;# 
  3348  0211                     	;# 
  3349  0211                     	;# 
  3350  0212                     	;# 
  3351  0212                     	;# 
  3352  0213                     	;# 
  3353  0213                     	;# 
  3354  0214                     	;# 
  3355  0214                     	;# 
  3356  0215                     	;# 
  3357  0215                     	;# 
  3358  0215                     	;# 
  3359  0215                     	;# 
  3360  0216                     	;# 
  3361  0216                     	;# 
  3362  0217                     	;# 
  3363  0217                     	;# 
  3364  0219                     	;# 
  3365  021A                     	;# 
  3366  021B                     	;# 
  3367  021C                     	;# 
  3368  021D                     	;# 
  3369  021D                     	;# 
  3370  021E                     	;# 
  3371  021F                     	;# 
  3372  028C                     	;# 
  3373  028D                     	;# 
  3374  028E                     	;# 
  3375  0291                     	;# 
  3376  0291                     	;# 
  3377  0292                     	;# 
  3378  0293                     	;# 
  3379  0294                     	;# 
  3380  0295                     	;# 
  3381  0295                     	;# 
  3382  0296                     	;# 
  3383  0297                     	;# 
  3384  0298                     	;# 
  3385  029F                     	;# 
  3386  030C                     	;# 
  3387  030D                     	;# 
  3388  030E                     	;# 
  3389  0311                     	;# 
  3390  0311                     	;# 
  3391  0312                     	;# 
  3392  0313                     	;# 
  3393  0314                     	;# 
  3394  0315                     	;# 
  3395  0315                     	;# 
  3396  0316                     	;# 
  3397  0317                     	;# 
  3398  0318                     	;# 
  3399  038C                     	;# 
  3400  038D                     	;# 
  3401  038E                     	;# 
  3402  0391                     	;# 
  3403  0392                     	;# 
  3404  0393                     	;# 
  3405  0394                     	;# 
  3406  0395                     	;# 
  3407  0396                     	;# 
  3408  0397                     	;# 
  3409  0398                     	;# 
  3410  0399                     	;# 
  3411  039A                     	;# 
  3412  039C                     	;# 
  3413  039D                     	;# 
  3414  039E                     	;# 
  3415  039F                     	;# 
  3416  0411                     	;# 
  3417  0411                     	;# 
  3418  0412                     	;# 
  3419  0413                     	;# 
  3420  0414                     	;# 
  3421  0415                     	;# 
  3422  0416                     	;# 
  3423  0417                     	;# 
  3424  0418                     	;# 
  3425  0418                     	;# 
  3426  0419                     	;# 
  3427  041A                     	;# 
  3428  041B                     	;# 
  3429  041C                     	;# 
  3430  041D                     	;# 
  3431  041E                     	;# 
  3432  041F                     	;# 
  3433  0498                     	;# 
  3434  0498                     	;# 
  3435  0499                     	;# 
  3436  049A                     	;# 
  3437  049B                     	;# 
  3438  049B                     	;# 
  3439  049C                     	;# 
  3440  049D                     	;# 
  3441  049E                     	;# 
  3442  049F                     	;# 
  3443  0617                     	;# 
  3444  0618                     	;# 
  3445  0619                     	;# 
  3446  0619                     	;# 
  3447  061A                     	;# 
  3448  061B                     	;# 
  3449  061C                     	;# 
  3450  061C                     	;# 
  3451  061F                     	;# 
  3452  0691                     	;# 
  3453  0692                     	;# 
  3454  0693                     	;# 
  3455  0694                     	;# 
  3456  0695                     	;# 
  3457  0696                     	;# 
  3458  0697                     	;# 
  3459  0698                     	;# 
  3460  0699                     	;# 
  3461  0711                     	;# 
  3462  0712                     	;# 
  3463  0713                     	;# 
  3464  0714                     	;# 
  3465  0715                     	;# 
  3466  0716                     	;# 
  3467  0717                     	;# 
  3468  0718                     	;# 
  3469  0719                     	;# 
  3470  0891                     	;# 
  3471  0891                     	;# 
  3472  0891                     	;# 
  3473  0891                     	;# 
  3474  0891                     	;# 
  3475  0891                     	;# 
  3476  0892                     	;# 
  3477  0892                     	;# 
  3478  0892                     	;# 
  3479  0893                     	;# 
  3480  0893                     	;# 
  3481  0893                     	;# 
  3482  0893                     	;# 
  3483  0893                     	;# 
  3484  0893                     	;# 
  3485  0894                     	;# 
  3486  0894                     	;# 
  3487  0894                     	;# 
  3488  0895                     	;# 
  3489  0895                     	;# 
  3490  0895                     	;# 
  3491  0896                     	;# 
  3492  0896                     	;# 
  3493  0896                     	;# 
  3494  089B                     	;# 
  3495  0911                     	;# 
  3496  0912                     	;# 
  3497  0913                     	;# 
  3498  0914                     	;# 
  3499  0915                     	;# 
  3500  0916                     	;# 
  3501  0918                     	;# 
  3502  0919                     	;# 
  3503  091A                     	;# 
  3504  091B                     	;# 
  3505  091C                     	;# 
  3506  091D                     	;# 
  3507  091E                     	;# 
  3508  091F                     	;# 
  3509  0E0F                     	;# 
  3510  0E10                     	;# 
  3511  0E11                     	;# 
  3512  0E12                     	;# 
  3513  0E13                     	;# 
  3514  0E14                     	;# 
  3515  0E15                     	;# 
  3516  0E16                     	;# 
  3517  0E17                     	;# 
  3518  0E18                     	;# 
  3519  0E19                     	;# 
  3520  0E1A                     	;# 
  3521  0E1B                     	;# 
  3522  0E1C                     	;# 
  3523  0E1D                     	;# 
  3524  0E1E                     	;# 
  3525  0E1F                     	;# 
  3526  0E20                     	;# 
  3527  0E21                     	;# 
  3528  0E22                     	;# 
  3529  0E24                     	;# 
  3530  0E25                     	;# 
  3531  0E28                     	;# 
  3532  0E29                     	;# 
  3533  0E2A                     	;# 
  3534  0E2B                     	;# 
  3535  0E2C                     	;# 
  3536  0E2D                     	;# 
  3537  0E2E                     	;# 
  3538  0E2F                     	;# 
  3539  0E90                     	;# 
  3540  0E91                     	;# 
  3541  0E92                     	;# 
  3542  0E94                     	;# 
  3543  0E95                     	;# 
  3544  0E9C                     	;# 
  3545  0E9D                     	;# 
  3546  0E9E                     	;# 
  3547  0E9F                     	;# 
  3548  0EA0                     	;# 
  3549  0EA1                     	;# 
  3550  0EA2                     	;# 
  3551  0EA3                     	;# 
  3552  0EA4                     	;# 
  3553  0EA5                     	;# 
  3554  0EA6                     	;# 
  3555  0EA7                     	;# 
  3556  0F0F                     	;# 
  3557  0F10                     	;# 
  3558  0F11                     	;# 
  3559  0F12                     	;# 
  3560  0F13                     	;# 
  3561  0F14                     	;# 
  3562  0F15                     	;# 
  3563  0F16                     	;# 
  3564  0F17                     	;# 
  3565  0F18                     	;# 
  3566  0F19                     	;# 
  3567  0F1A                     	;# 
  3568  0F1B                     	;# 
  3569  0F1C                     	;# 
  3570  0F1D                     	;# 
  3571  0F1E                     	;# 
  3572  0F1F                     	;# 
  3573  0F20                     	;# 
  3574  0F21                     	;# 
  3575  0F22                     	;# 
  3576  0F23                     	;# 
  3577  0F24                     	;# 
  3578  0F25                     	;# 
  3579  0F26                     	;# 
  3580  0F27                     	;# 
  3581  0F28                     	;# 
  3582  0F29                     	;# 
  3583  0F2A                     	;# 
  3584  0F2B                     	;# 
  3585  0F2C                     	;# 
  3586  0F2D                     	;# 
  3587  0F2E                     	;# 
  3588  0F2F                     	;# 
  3589  0F30                     	;# 
  3590  0F31                     	;# 
  3591  0F32                     	;# 
  3592  0F33                     	;# 
  3593  0F34                     	;# 
  3594  0F35                     	;# 
  3595  0F36                     	;# 
  3596  0F37                     	;# 
  3597  0FE4                     	;# 
  3598  0FE5                     	;# 
  3599  0FE6                     	;# 
  3600  0FE7                     	;# 
  3601  0FE8                     	;# 
  3602  0FE9                     	;# 
  3603  0FEA                     	;# 
  3604  0FEB                     	;# 
  3605  0FED                     	;# 
  3606  0FEE                     	;# 
  3607  0FEF                     	;# 
  3608  0000                     	;# 
  3609  0001                     	;# 
  3610  0002                     	;# 
  3611  0003                     	;# 
  3612  0004                     	;# 
  3613  0005                     	;# 
  3614  0006                     	;# 
  3615  0007                     	;# 
  3616  0008                     	;# 
  3617  0009                     	;# 
  3618  000A                     	;# 
  3619  000B                     	;# 
  3620  000C                     	;# 
  3621  000D                     	;# 
  3622  000E                     	;# 
  3623  0010                     	;# 
  3624  0011                     	;# 
  3625  0012                     	;# 
  3626  0013                     	;# 
  3627  0014                     	;# 
  3628  0015                     	;# 
  3629  0015                     	;# 
  3630  0016                     	;# 
  3631  0016                     	;# 
  3632  0017                     	;# 
  3633  0018                     	;# 
  3634  0019                     	;# 
  3635  0019                     	;# 
  3636  001A                     	;# 
  3637  001B                     	;# 
  3638  001C                     	;# 
  3639  001D                     	;# 
  3640  001E                     	;# 
  3641  001F                     	;# 
  3642  008C                     	;# 
  3643  008D                     	;# 
  3644  008E                     	;# 
  3645  0090                     	;# 
  3646  0091                     	;# 
  3647  0092                     	;# 
  3648  0093                     	;# 
  3649  0094                     	;# 
  3650  0097                     	;# 
  3651  009B                     	;# 
  3652  009B                     	;# 
  3653  009C                     	;# 
  3654  009D                     	;# 
  3655  009E                     	;# 
  3656  009F                     	;# 
  3657  010C                     	;# 
  3658  010D                     	;# 
  3659  010E                     	;# 
  3660  0111                     	;# 
  3661  0112                     	;# 
  3662  0113                     	;# 
  3663  0114                     	;# 
  3664  0115                     	;# 
  3665  0116                     	;# 
  3666  0117                     	;# 
  3667  0118                     	;# 
  3668  0119                     	;# 
  3669  018C                     	;# 
  3670  018D                     	;# 
  3671  018E                     	;# 
  3672  0197                     	;# 
  3673  0199                     	;# 
  3674  0199                     	;# 
  3675  0199                     	;# 
  3676  019A                     	;# 
  3677  019A                     	;# 
  3678  019A                     	;# 
  3679  019B                     	;# 
  3680  019B                     	;# 
  3681  019B                     	;# 
  3682  019B                     	;# 
  3683  019B                     	;# 
  3684  019C                     	;# 
  3685  019C                     	;# 
  3686  019C                     	;# 
  3687  019D                     	;# 
  3688  019D                     	;# 
  3689  019D                     	;# 
  3690  019E                     	;# 
  3691  019E                     	;# 
  3692  019E                     	;# 
  3693  019F                     	;# 
  3694  019F                     	;# 
  3695  019F                     	;# 
  3696  019F                     	;# 
  3697  019F                     	;# 
  3698  020C                     	;# 
  3699  020D                     	;# 
  3700  020E                     	;# 
  3701  0211                     	;# 
  3702  0211                     	;# 
  3703  0212                     	;# 
  3704  0212                     	;# 
  3705  0213                     	;# 
  3706  0213                     	;# 
  3707  0214                     	;# 
  3708  0214                     	;# 
  3709  0215                     	;# 
  3710  0215                     	;# 
  3711  0215                     	;# 
  3712  0215                     	;# 
  3713  0216                     	;# 
  3714  0216                     	;# 
  3715  0217                     	;# 
  3716  0217                     	;# 
  3717  0219                     	;# 
  3718  021A                     	;# 
  3719  021B                     	;# 
  3720  021C                     	;# 
  3721  021D                     	;# 
  3722  021D                     	;# 
  3723  021E                     	;# 
  3724  021F                     	;# 
  3725  028C                     	;# 
  3726  028D                     	;# 
  3727  028E                     	;# 
  3728  0291                     	;# 
  3729  0291                     	;# 
  3730  0292                     	;# 
  3731  0293                     	;# 
  3732  0294                     	;# 
  3733  0295                     	;# 
  3734  0295                     	;# 
  3735  0296                     	;# 
  3736  0297                     	;# 
  3737  0298                     	;# 
  3738  029F                     	;# 
  3739  030C                     	;# 
  3740  030D                     	;# 
  3741  030E                     	;# 
  3742  0311                     	;# 
  3743  0311                     	;# 
  3744  0312                     	;# 
  3745  0313                     	;# 
  3746  0314                     	;# 
  3747  0315                     	;# 
  3748  0315                     	;# 
  3749  0316                     	;# 
  3750  0317                     	;# 
  3751  0318                     	;# 
  3752  038C                     	;# 
  3753  038D                     	;# 
  3754  038E                     	;# 
  3755  0391                     	;# 
  3756  0392                     	;# 
  3757  0393                     	;# 
  3758  0394                     	;# 
  3759  0395                     	;# 
  3760  0396                     	;# 
  3761  0397                     	;# 
  3762  0398                     	;# 
  3763  0399                     	;# 
  3764  039A                     	;# 
  3765  039C                     	;# 
  3766  039D                     	;# 
  3767  039E                     	;# 
  3768  039F                     	;# 
  3769  0411                     	;# 
  3770  0411                     	;# 
  3771  0412                     	;# 
  3772  0413                     	;# 
  3773  0414                     	;# 
  3774  0415                     	;# 
  3775  0416                     	;# 
  3776  0417                     	;# 
  3777  0418                     	;# 
  3778  0418                     	;# 
  3779  0419                     	;# 
  3780  041A                     	;# 
  3781  041B                     	;# 
  3782  041C                     	;# 
  3783  041D                     	;# 
  3784  041E                     	;# 
  3785  041F                     	;# 
  3786  0498                     	;# 
  3787  0498                     	;# 
  3788  0499                     	;# 
  3789  049A                     	;# 
  3790  049B                     	;# 
  3791  049B                     	;# 
  3792  049C                     	;# 
  3793  049D                     	;# 
  3794  049E                     	;# 
  3795  049F                     	;# 
  3796  0617                     	;# 
  3797  0618                     	;# 
  3798  0619                     	;# 
  3799  0619                     	;# 
  3800  061A                     	;# 
  3801  061B                     	;# 
  3802  061C                     	;# 
  3803  061C                     	;# 
  3804  061F                     	;# 
  3805  0691                     	;# 
  3806  0692                     	;# 
  3807  0693                     	;# 
  3808  0694                     	;# 
  3809  0695                     	;# 
  3810  0696                     	;# 
  3811  0697                     	;# 
  3812  0698                     	;# 
  3813  0699                     	;# 
  3814  0711                     	;# 
  3815  0712                     	;# 
  3816  0713                     	;# 
  3817  0714                     	;# 
  3818  0715                     	;# 
  3819  0716                     	;# 
  3820  0717                     	;# 
  3821  0718                     	;# 
  3822  0719                     	;# 
  3823  0891                     	;# 
  3824  0891                     	;# 
  3825  0891                     	;# 
  3826  0891                     	;# 
  3827  0891                     	;# 
  3828  0891                     	;# 
  3829  0892                     	;# 
  3830  0892                     	;# 
  3831  0892                     	;# 
  3832  0893                     	;# 
  3833  0893                     	;# 
  3834  0893                     	;# 
  3835  0893                     	;# 
  3836  0893                     	;# 
  3837  0893                     	;# 
  3838  0894                     	;# 
  3839  0894                     	;# 
  3840  0894                     	;# 
  3841  0895                     	;# 
  3842  0895                     	;# 
  3843  0895                     	;# 
  3844  0896                     	;# 
  3845  0896                     	;# 
  3846  0896                     	;# 
  3847  089B                     	;# 
  3848  0911                     	;# 
  3849  0912                     	;# 
  3850  0913                     	;# 
  3851  0914                     	;# 
  3852  0915                     	;# 
  3853  0916                     	;# 
  3854  0918                     	;# 
  3855  0919                     	;# 
  3856  091A                     	;# 
  3857  091B                     	;# 
  3858  091C                     	;# 
  3859  091D                     	;# 
  3860  091E                     	;# 
  3861  091F                     	;# 
  3862  0E0F                     	;# 
  3863  0E10                     	;# 
  3864  0E11                     	;# 
  3865  0E12                     	;# 
  3866  0E13                     	;# 
  3867  0E14                     	;# 
  3868  0E15                     	;# 
  3869  0E16                     	;# 
  3870  0E17                     	;# 
  3871  0E18                     	;# 
  3872  0E19                     	;# 
  3873  0E1A                     	;# 
  3874  0E1B                     	;# 
  3875  0E1C                     	;# 
  3876  0E1D                     	;# 
  3877  0E1E                     	;# 
  3878  0E1F                     	;# 
  3879  0E20                     	;# 
  3880  0E21                     	;# 
  3881  0E22                     	;# 
  3882  0E24                     	;# 
  3883  0E25                     	;# 
  3884  0E28                     	;# 
  3885  0E29                     	;# 
  3886  0E2A                     	;# 
  3887  0E2B                     	;# 
  3888  0E2C                     	;# 
  3889  0E2D                     	;# 
  3890  0E2E                     	;# 
  3891  0E2F                     	;# 
  3892  0E90                     	;# 
  3893  0E91                     	;# 
  3894  0E92                     	;# 
  3895  0E94                     	;# 
  3896  0E95                     	;# 
  3897  0E9C                     	;# 
  3898  0E9D                     	;# 
  3899  0E9E                     	;# 
  3900  0E9F                     	;# 
  3901  0EA0                     	;# 
  3902  0EA1                     	;# 
  3903  0EA2                     	;# 
  3904  0EA3                     	;# 
  3905  0EA4                     	;# 
  3906  0EA5                     	;# 
  3907  0EA6                     	;# 
  3908  0EA7                     	;# 
  3909  0F0F                     	;# 
  3910  0F10                     	;# 
  3911  0F11                     	;# 
  3912  0F12                     	;# 
  3913  0F13                     	;# 
  3914  0F14                     	;# 
  3915  0F15                     	;# 
  3916  0F16                     	;# 
  3917  0F17                     	;# 
  3918  0F18                     	;# 
  3919  0F19                     	;# 
  3920  0F1A                     	;# 
  3921  0F1B                     	;# 
  3922  0F1C                     	;# 
  3923  0F1D                     	;# 
  3924  0F1E                     	;# 
  3925  0F1F                     	;# 
  3926  0F20                     	;# 
  3927  0F21                     	;# 
  3928  0F22                     	;# 
  3929  0F23                     	;# 
  3930  0F24                     	;# 
  3931  0F25                     	;# 
  3932  0F26                     	;# 
  3933  0F27                     	;# 
  3934  0F28                     	;# 
  3935  0F29                     	;# 
  3936  0F2A                     	;# 
  3937  0F2B                     	;# 
  3938  0F2C                     	;# 
  3939  0F2D                     	;# 
  3940  0F2E                     	;# 
  3941  0F2F                     	;# 
  3942  0F30                     	;# 
  3943  0F31                     	;# 
  3944  0F32                     	;# 
  3945  0F33                     	;# 
  3946  0F34                     	;# 
  3947  0F35                     	;# 
  3948  0F36                     	;# 
  3949  0F37                     	;# 
  3950  0FE4                     	;# 
  3951  0FE5                     	;# 
  3952  0FE6                     	;# 
  3953  0FE7                     	;# 
  3954  0FE8                     	;# 
  3955  0FE9                     	;# 
  3956  0FEA                     	;# 
  3957  0FEB                     	;# 
  3958  0FED                     	;# 
  3959  0FEE                     	;# 
  3960  0FEF                     	;# 
  3961  0000                     	;# 
  3962  0001                     	;# 
  3963  0002                     	;# 
  3964  0003                     	;# 
  3965  0004                     	;# 
  3966  0005                     	;# 
  3967  0006                     	;# 
  3968  0007                     	;# 
  3969  0008                     	;# 
  3970  0009                     	;# 
  3971  000A                     	;# 
  3972  000B                     	;# 
  3973  000C                     	;# 
  3974  000D                     	;# 
  3975  000E                     	;# 
  3976  0010                     	;# 
  3977  0011                     	;# 
  3978  0012                     	;# 
  3979  0013                     	;# 
  3980  0014                     	;# 
  3981  0015                     	;# 
  3982  0015                     	;# 
  3983  0016                     	;# 
  3984  0016                     	;# 
  3985  0017                     	;# 
  3986  0018                     	;# 
  3987  0019                     	;# 
  3988  0019                     	;# 
  3989  001A                     	;# 
  3990  001B                     	;# 
  3991  001C                     	;# 
  3992  001D                     	;# 
  3993  001E                     	;# 
  3994  001F                     	;# 
  3995  008C                     	;# 
  3996  008D                     	;# 
  3997  008E                     	;# 
  3998  0090                     	;# 
  3999  0091                     	;# 
  4000  0092                     	;# 
  4001  0093                     	;# 
  4002  0094                     	;# 
  4003  0097                     	;# 
  4004  009B                     	;# 
  4005  009B                     	;# 
  4006  009C                     	;# 
  4007  009D                     	;# 
  4008  009E                     	;# 
  4009  009F                     	;# 
  4010  010C                     	;# 
  4011  010D                     	;# 
  4012  010E                     	;# 
  4013  0111                     	;# 
  4014  0112                     	;# 
  4015  0113                     	;# 
  4016  0114                     	;# 
  4017  0115                     	;# 
  4018  0116                     	;# 
  4019  0117                     	;# 
  4020  0118                     	;# 
  4021  0119                     	;# 
  4022  018C                     	;# 
  4023  018D                     	;# 
  4024  018E                     	;# 
  4025  0197                     	;# 
  4026  0199                     	;# 
  4027  0199                     	;# 
  4028  0199                     	;# 
  4029  019A                     	;# 
  4030  019A                     	;# 
  4031  019A                     	;# 
  4032  019B                     	;# 
  4033  019B                     	;# 
  4034  019B                     	;# 
  4035  019B                     	;# 
  4036  019B                     	;# 
  4037  019C                     	;# 
  4038  019C                     	;# 
  4039  019C                     	;# 
  4040  019D                     	;# 
  4041  019D                     	;# 
  4042  019D                     	;# 
  4043  019E                     	;# 
  4044  019E                     	;# 
  4045  019E                     	;# 
  4046  019F                     	;# 
  4047  019F                     	;# 
  4048  019F                     	;# 
  4049  019F                     	;# 
  4050  019F                     	;# 
  4051  020C                     	;# 
  4052  020D                     	;# 
  4053  020E                     	;# 
  4054  0211                     	;# 
  4055  0211                     	;# 
  4056  0212                     	;# 
  4057  0212                     	;# 
  4058  0213                     	;# 
  4059  0213                     	;# 
  4060  0214                     	;# 
  4061  0214                     	;# 
  4062  0215                     	;# 
  4063  0215                     	;# 
  4064  0215                     	;# 
  4065  0215                     	;# 
  4066  0216                     	;# 
  4067  0216                     	;# 
  4068  0217                     	;# 
  4069  0217                     	;# 
  4070  0219                     	;# 
  4071  021A                     	;# 
  4072  021B                     	;# 
  4073  021C                     	;# 
  4074  021D                     	;# 
  4075  021D                     	;# 
  4076  021E                     	;# 
  4077  021F                     	;# 
  4078  028C                     	;# 
  4079  028D                     	;# 
  4080  028E                     	;# 
  4081  0291                     	;# 
  4082  0291                     	;# 
  4083  0292                     	;# 
  4084  0293                     	;# 
  4085  0294                     	;# 
  4086  0295                     	;# 
  4087  0295                     	;# 
  4088  0296                     	;# 
  4089  0297                     	;# 
  4090  0298                     	;# 
  4091  029F                     	;# 
  4092  030C                     	;# 
  4093  030D                     	;# 
  4094  030E                     	;# 
  4095  0311                     	;# 
  4096  0311                     	;# 
  4097  0312                     	;# 
  4098  0313                     	;# 
  4099  0314                     	;# 
  4100  0315                     	;# 
  4101  0315                     	;# 
  4102  0316                     	;# 
  4103  0317                     	;# 
  4104  0318                     	;# 
  4105  038C                     	;# 
  4106  038D                     	;# 
  4107  038E                     	;# 
  4108  0391                     	;# 
  4109  0392                     	;# 
  4110  0393                     	;# 
  4111  0394                     	;# 
  4112  0395                     	;# 
  4113  0396                     	;# 
  4114  0397                     	;# 
  4115  0398                     	;# 
  4116  0399                     	;# 
  4117  039A                     	;# 
  4118  039C                     	;# 
  4119  039D                     	;# 
  4120  039E                     	;# 
  4121  039F                     	;# 
  4122  0411                     	;# 
  4123  0411                     	;# 
  4124  0412                     	;# 
  4125  0413                     	;# 
  4126  0414                     	;# 
  4127  0415                     	;# 
  4128  0416                     	;# 
  4129  0417                     	;# 
  4130  0418                     	;# 
  4131  0418                     	;# 
  4132  0419                     	;# 
  4133  041A                     	;# 
  4134  041B                     	;# 
  4135  041C                     	;# 
  4136  041D                     	;# 
  4137  041E                     	;# 
  4138  041F                     	;# 
  4139  0498                     	;# 
  4140  0498                     	;# 
  4141  0499                     	;# 
  4142  049A                     	;# 
  4143  049B                     	;# 
  4144  049B                     	;# 
  4145  049C                     	;# 
  4146  049D                     	;# 
  4147  049E                     	;# 
  4148  049F                     	;# 
  4149  0617                     	;# 
  4150  0618                     	;# 
  4151  0619                     	;# 
  4152  0619                     	;# 
  4153  061A                     	;# 
  4154  061B                     	;# 
  4155  061C                     	;# 
  4156  061C                     	;# 
  4157  061F                     	;# 
  4158  0691                     	;# 
  4159  0692                     	;# 
  4160  0693                     	;# 
  4161  0694                     	;# 
  4162  0695                     	;# 
  4163  0696                     	;# 
  4164  0697                     	;# 
  4165  0698                     	;# 
  4166  0699                     	;# 
  4167  0711                     	;# 
  4168  0712                     	;# 
  4169  0713                     	;# 
  4170  0714                     	;# 
  4171  0715                     	;# 
  4172  0716                     	;# 
  4173  0717                     	;# 
  4174  0718                     	;# 
  4175  0719                     	;# 
  4176  0891                     	;# 
  4177  0891                     	;# 
  4178  0891                     	;# 
  4179  0891                     	;# 
  4180  0891                     	;# 
  4181  0891                     	;# 
  4182  0892                     	;# 
  4183  0892                     	;# 
  4184  0892                     	;# 
  4185  0893                     	;# 
  4186  0893                     	;# 
  4187  0893                     	;# 
  4188  0893                     	;# 
  4189  0893                     	;# 
  4190  0893                     	;# 
  4191  0894                     	;# 
  4192  0894                     	;# 
  4193  0894                     	;# 
  4194  0895                     	;# 
  4195  0895                     	;# 
  4196  0895                     	;# 
  4197  0896                     	;# 
  4198  0896                     	;# 
  4199  0896                     	;# 
  4200  089B                     	;# 
  4201  0911                     	;# 
  4202  0912                     	;# 
  4203  0913                     	;# 
  4204  0914                     	;# 
  4205  0915                     	;# 
  4206  0916                     	;# 
  4207  0918                     	;# 
  4208  0919                     	;# 
  4209  091A                     	;# 
  4210  091B                     	;# 
  4211  091C                     	;# 
  4212  091D                     	;# 
  4213  091E                     	;# 
  4214  091F                     	;# 
  4215  0E0F                     	;# 
  4216  0E10                     	;# 
  4217  0E11                     	;# 
  4218  0E12                     	;# 
  4219  0E13                     	;# 
  4220  0E14                     	;# 
  4221  0E15                     	;# 
  4222  0E16                     	;# 
  4223  0E17                     	;# 
  4224  0E18                     	;# 
  4225  0E19                     	;# 
  4226  0E1A                     	;# 
  4227  0E1B                     	;# 
  4228  0E1C                     	;# 
  4229  0E1D                     	;# 
  4230  0E1E                     	;# 
  4231  0E1F                     	;# 
  4232  0E20                     	;# 
  4233  0E21                     	;# 
  4234  0E22                     	;# 
  4235  0E24                     	;# 
  4236  0E25                     	;# 
  4237  0E28                     	;# 
  4238  0E29                     	;# 
  4239  0E2A                     	;# 
  4240  0E2B                     	;# 
  4241  0E2C                     	;# 
  4242  0E2D                     	;# 
  4243  0E2E                     	;# 
  4244  0E2F                     	;# 
  4245  0E90                     	;# 
  4246  0E91                     	;# 
  4247  0E92                     	;# 
  4248  0E94                     	;# 
  4249  0E95                     	;# 
  4250  0E9C                     	;# 
  4251  0E9D                     	;# 
  4252  0E9E                     	;# 
  4253  0E9F                     	;# 
  4254  0EA0                     	;# 
  4255  0EA1                     	;# 
  4256  0EA2                     	;# 
  4257  0EA3                     	;# 
  4258  0EA4                     	;# 
  4259  0EA5                     	;# 
  4260  0EA6                     	;# 
  4261  0EA7                     	;# 
  4262  0F0F                     	;# 
  4263  0F10                     	;# 
  4264  0F11                     	;# 
  4265  0F12                     	;# 
  4266  0F13                     	;# 
  4267  0F14                     	;# 
  4268  0F15                     	;# 
  4269  0F16                     	;# 
  4270  0F17                     	;# 
  4271  0F18                     	;# 
  4272  0F19                     	;# 
  4273  0F1A                     	;# 
  4274  0F1B                     	;# 
  4275  0F1C                     	;# 
  4276  0F1D                     	;# 
  4277  0F1E                     	;# 
  4278  0F1F                     	;# 
  4279  0F20                     	;# 
  4280  0F21                     	;# 
  4281  0F22                     	;# 
  4282  0F23                     	;# 
  4283  0F24                     	;# 
  4284  0F25                     	;# 
  4285  0F26                     	;# 
  4286  0F27                     	;# 
  4287  0F28                     	;# 
  4288  0F29                     	;# 
  4289  0F2A                     	;# 
  4290  0F2B                     	;# 
  4291  0F2C                     	;# 
  4292  0F2D                     	;# 
  4293  0F2E                     	;# 
  4294  0F2F                     	;# 
  4295  0F30                     	;# 
  4296  0F31                     	;# 
  4297  0F32                     	;# 
  4298  0F33                     	;# 
  4299  0F34                     	;# 
  4300  0F35                     	;# 
  4301  0F36                     	;# 
  4302  0F37                     	;# 
  4303  0FE4                     	;# 
  4304  0FE5                     	;# 
  4305  0FE6                     	;# 
  4306  0FE7                     	;# 
  4307  0FE8                     	;# 
  4308  0FE9                     	;# 
  4309  0FEA                     	;# 
  4310  0FEB                     	;# 
  4311  0FED                     	;# 
  4312  0FEE                     	;# 
  4313  0FEF                     	;# 
  4314  0000                     	;# 
  4315  0001                     	;# 
  4316  0002                     	;# 
  4317  0003                     	;# 
  4318  0004                     	;# 
  4319  0005                     	;# 
  4320  0006                     	;# 
  4321  0007                     	;# 
  4322  0008                     	;# 
  4323  0009                     	;# 
  4324  000A                     	;# 
  4325  000B                     	;# 
  4326  000C                     	;# 
  4327  000D                     	;# 
  4328  000E                     	;# 
  4329  0010                     	;# 
  4330  0011                     	;# 
  4331  0012                     	;# 
  4332  0013                     	;# 
  4333  0014                     	;# 
  4334  0015                     	;# 
  4335  0015                     	;# 
  4336  0016                     	;# 
  4337  0016                     	;# 
  4338  0017                     	;# 
  4339  0018                     	;# 
  4340  0019                     	;# 
  4341  0019                     	;# 
  4342  001A                     	;# 
  4343  001B                     	;# 
  4344  001C                     	;# 
  4345  001D                     	;# 
  4346  001E                     	;# 
  4347  001F                     	;# 
  4348  008C                     	;# 
  4349  008D                     	;# 
  4350  008E                     	;# 
  4351  0090                     	;# 
  4352  0091                     	;# 
  4353  0092                     	;# 
  4354  0093                     	;# 
  4355  0094                     	;# 
  4356  0097                     	;# 
  4357  009B                     	;# 
  4358  009B                     	;# 
  4359  009C                     	;# 
  4360  009D                     	;# 
  4361  009E                     	;# 
  4362  009F                     	;# 
  4363  010C                     	;# 
  4364  010D                     	;# 
  4365  010E                     	;# 
  4366  0111                     	;# 
  4367  0112                     	;# 
  4368  0113                     	;# 
  4369  0114                     	;# 
  4370  0115                     	;# 
  4371  0116                     	;# 
  4372  0117                     	;# 
  4373  0118                     	;# 
  4374  0119                     	;# 
  4375  018C                     	;# 
  4376  018D                     	;# 
  4377  018E                     	;# 
  4378  0197                     	;# 
  4379  0199                     	;# 
  4380  0199                     	;# 
  4381  0199                     	;# 
  4382  019A                     	;# 
  4383  019A                     	;# 
  4384  019A                     	;# 
  4385  019B                     	;# 
  4386  019B                     	;# 
  4387  019B                     	;# 
  4388  019B                     	;# 
  4389  019B                     	;# 
  4390  019C                     	;# 
  4391  019C                     	;# 
  4392  019C                     	;# 
  4393  019D                     	;# 
  4394  019D                     	;# 
  4395  019D                     	;# 
  4396  019E                     	;# 
  4397  019E                     	;# 
  4398  019E                     	;# 
  4399  019F                     	;# 
  4400  019F                     	;# 
  4401  019F                     	;# 
  4402  019F                     	;# 
  4403  019F                     	;# 
  4404  020C                     	;# 
  4405  020D                     	;# 
  4406  020E                     	;# 
  4407  0211                     	;# 
  4408  0211                     	;# 
  4409  0212                     	;# 
  4410  0212                     	;# 
  4411  0213                     	;# 
  4412  0213                     	;# 
  4413  0214                     	;# 
  4414  0214                     	;# 
  4415  0215                     	;# 
  4416  0215                     	;# 
  4417  0215                     	;# 
  4418  0215                     	;# 
  4419  0216                     	;# 
  4420  0216                     	;# 
  4421  0217                     	;# 
  4422  0217                     	;# 
  4423  0219                     	;# 
  4424  021A                     	;# 
  4425  021B                     	;# 
  4426  021C                     	;# 
  4427  021D                     	;# 
  4428  021D                     	;# 
  4429  021E                     	;# 
  4430  021F                     	;# 
  4431  028C                     	;# 
  4432  028D                     	;# 
  4433  028E                     	;# 
  4434  0291                     	;# 
  4435  0291                     	;# 
  4436  0292                     	;# 
  4437  0293                     	;# 
  4438  0294                     	;# 
  4439  0295                     	;# 
  4440  0295                     	;# 
  4441  0296                     	;# 
  4442  0297                     	;# 
  4443  0298                     	;# 
  4444  029F                     	;# 
  4445  030C                     	;# 
  4446  030D                     	;# 
  4447  030E                     	;# 
  4448  0311                     	;# 
  4449  0311                     	;# 
  4450  0312                     	;# 
  4451  0313                     	;# 
  4452  0314                     	;# 
  4453  0315                     	;# 
  4454  0315                     	;# 
  4455  0316                     	;# 
  4456  0317                     	;# 
  4457  0318                     	;# 
  4458  038C                     	;# 
  4459  038D                     	;# 
  4460  038E                     	;# 
  4461  0391                     	;# 
  4462  0392                     	;# 
  4463  0393                     	;# 
  4464  0394                     	;# 
  4465  0395                     	;# 
  4466  0396                     	;# 
  4467  0397                     	;# 
  4468  0398                     	;# 
  4469  0399                     	;# 
  4470  039A                     	;# 
  4471  039C                     	;# 
  4472  039D                     	;# 
  4473  039E                     	;# 
  4474  039F                     	;# 
  4475  0411                     	;# 
  4476  0411                     	;# 
  4477  0412                     	;# 
  4478  0413                     	;# 
  4479  0414                     	;# 
  4480  0415                     	;# 
  4481  0416                     	;# 
  4482  0417                     	;# 
  4483  0418                     	;# 
  4484  0418                     	;# 
  4485  0419                     	;# 
  4486  041A                     	;# 
  4487  041B                     	;# 
  4488  041C                     	;# 
  4489  041D                     	;# 
  4490  041E                     	;# 
  4491  041F                     	;# 
  4492  0498                     	;# 
  4493  0498                     	;# 
  4494  0499                     	;# 
  4495  049A                     	;# 
  4496  049B                     	;# 
  4497  049B                     	;# 
  4498  049C                     	;# 
  4499  049D                     	;# 
  4500  049E                     	;# 
  4501  049F                     	;# 
  4502  0617                     	;# 
  4503  0618                     	;# 
  4504  0619                     	;# 
  4505  0619                     	;# 
  4506  061A                     	;# 
  4507  061B                     	;# 
  4508  061C                     	;# 
  4509  061C                     	;# 
  4510  061F                     	;# 
  4511  0691                     	;# 
  4512  0692                     	;# 
  4513  0693                     	;# 
  4514  0694                     	;# 
  4515  0695                     	;# 
  4516  0696                     	;# 
  4517  0697                     	;# 
  4518  0698                     	;# 
  4519  0699                     	;# 
  4520  0711                     	;# 
  4521  0712                     	;# 
  4522  0713                     	;# 
  4523  0714                     	;# 
  4524  0715                     	;# 
  4525  0716                     	;# 
  4526  0717                     	;# 
  4527  0718                     	;# 
  4528  0719                     	;# 
  4529  0891                     	;# 
  4530  0891                     	;# 
  4531  0891                     	;# 
  4532  0891                     	;# 
  4533  0891                     	;# 
  4534  0891                     	;# 
  4535  0892                     	;# 
  4536  0892                     	;# 
  4537  0892                     	;# 
  4538  0893                     	;# 
  4539  0893                     	;# 
  4540  0893                     	;# 
  4541  0893                     	;# 
  4542  0893                     	;# 
  4543  0893                     	;# 
  4544  0894                     	;# 
  4545  0894                     	;# 
  4546  0894                     	;# 
  4547  0895                     	;# 
  4548  0895                     	;# 
  4549  0895                     	;# 
  4550  0896                     	;# 
  4551  0896                     	;# 
  4552  0896                     	;# 
  4553  089B                     	;# 
  4554  0911                     	;# 
  4555  0912                     	;# 
  4556  0913                     	;# 
  4557  0914                     	;# 
  4558  0915                     	;# 
  4559  0916                     	;# 
  4560  0918                     	;# 
  4561  0919                     	;# 
  4562  091A                     	;# 
  4563  091B                     	;# 
  4564  091C                     	;# 
  4565  091D                     	;# 
  4566  091E                     	;# 
  4567  091F                     	;# 
  4568  0E0F                     	;# 
  4569  0E10                     	;# 
  4570  0E11                     	;# 
  4571  0E12                     	;# 
  4572  0E13                     	;# 
  4573  0E14                     	;# 
  4574  0E15                     	;# 
  4575  0E16                     	;# 
  4576  0E17                     	;# 
  4577  0E18                     	;# 
  4578  0E19                     	;# 
  4579  0E1A                     	;# 
  4580  0E1B                     	;# 
  4581  0E1C                     	;# 
  4582  0E1D                     	;# 
  4583  0E1E                     	;# 
  4584  0E1F                     	;# 
  4585  0E20                     	;# 
  4586  0E21                     	;# 
  4587  0E22                     	;# 
  4588  0E24                     	;# 
  4589  0E25                     	;# 
  4590  0E28                     	;# 
  4591  0E29                     	;# 
  4592  0E2A                     	;# 
  4593  0E2B                     	;# 
  4594  0E2C                     	;# 
  4595  0E2D                     	;# 
  4596  0E2E                     	;# 
  4597  0E2F                     	;# 
  4598  0E90                     	;# 
  4599  0E91                     	;# 
  4600  0E92                     	;# 
  4601  0E94                     	;# 
  4602  0E95                     	;# 
  4603  0E9C                     	;# 
  4604  0E9D                     	;# 
  4605  0E9E                     	;# 
  4606  0E9F                     	;# 
  4607  0EA0                     	;# 
  4608  0EA1                     	;# 
  4609  0EA2                     	;# 
  4610  0EA3                     	;# 
  4611  0EA4                     	;# 
  4612  0EA5                     	;# 
  4613  0EA6                     	;# 
  4614  0EA7                     	;# 
  4615  0F0F                     	;# 
  4616  0F10                     	;# 
  4617  0F11                     	;# 
  4618  0F12                     	;# 
  4619  0F13                     	;# 
  4620  0F14                     	;# 
  4621  0F15                     	;# 
  4622  0F16                     	;# 
  4623  0F17                     	;# 
  4624  0F18                     	;# 
  4625  0F19                     	;# 
  4626  0F1A                     	;# 
  4627  0F1B                     	;# 
  4628  0F1C                     	;# 
  4629  0F1D                     	;# 
  4630  0F1E                     	;# 
  4631  0F1F                     	;# 
  4632  0F20                     	;# 
  4633  0F21                     	;# 
  4634  0F22                     	;# 
  4635  0F23                     	;# 
  4636  0F24                     	;# 
  4637  0F25                     	;# 
  4638  0F26                     	;# 
  4639  0F27                     	;# 
  4640  0F28                     	;# 
  4641  0F29                     	;# 
  4642  0F2A                     	;# 
  4643  0F2B                     	;# 
  4644  0F2C                     	;# 
  4645  0F2D                     	;# 
  4646  0F2E                     	;# 
  4647  0F2F                     	;# 
  4648  0F30                     	;# 
  4649  0F31                     	;# 
  4650  0F32                     	;# 
  4651  0F33                     	;# 
  4652  0F34                     	;# 
  4653  0F35                     	;# 
  4654  0F36                     	;# 
  4655  0F37                     	;# 
  4656  0FE4                     	;# 
  4657  0FE5                     	;# 
  4658  0FE6                     	;# 
  4659  0FE7                     	;# 
  4660  0FE8                     	;# 
  4661  0FE9                     	;# 
  4662  0FEA                     	;# 
  4663  0FEB                     	;# 
  4664  0FED                     	;# 
  4665  0FEE                     	;# 
  4666  0FEF                     	;# 
  4667  0000                     	;# 
  4668  0001                     	;# 
  4669  0002                     	;# 
  4670  0003                     	;# 
  4671  0004                     	;# 
  4672  0005                     	;# 
  4673  0006                     	;# 
  4674  0007                     	;# 
  4675  0008                     	;# 
  4676  0009                     	;# 
  4677  000A                     	;# 
  4678  000B                     	;# 
  4679  000C                     	;# 
  4680  000D                     	;# 
  4681  000E                     	;# 
  4682  0010                     	;# 
  4683  0011                     	;# 
  4684  0012                     	;# 
  4685  0013                     	;# 
  4686  0014                     	;# 
  4687  0015                     	;# 
  4688  0015                     	;# 
  4689  0016                     	;# 
  4690  0016                     	;# 
  4691  0017                     	;# 
  4692  0018                     	;# 
  4693  0019                     	;# 
  4694  0019                     	;# 
  4695  001A                     	;# 
  4696  001B                     	;# 
  4697  001C                     	;# 
  4698  001D                     	;# 
  4699  001E                     	;# 
  4700  001F                     	;# 
  4701  008C                     	;# 
  4702  008D                     	;# 
  4703  008E                     	;# 
  4704  0090                     	;# 
  4705  0091                     	;# 
  4706  0092                     	;# 
  4707  0093                     	;# 
  4708  0094                     	;# 
  4709  0097                     	;# 
  4710  009B                     	;# 
  4711  009B                     	;# 
  4712  009C                     	;# 
  4713  009D                     	;# 
  4714  009E                     	;# 
  4715  009F                     	;# 
  4716  010C                     	;# 
  4717  010D                     	;# 
  4718  010E                     	;# 
  4719  0111                     	;# 
  4720  0112                     	;# 
  4721  0113                     	;# 
  4722  0114                     	;# 
  4723  0115                     	;# 
  4724  0116                     	;# 
  4725  0117                     	;# 
  4726  0118                     	;# 
  4727  0119                     	;# 
  4728  018C                     	;# 
  4729  018D                     	;# 
  4730  018E                     	;# 
  4731  0197                     	;# 
  4732  0199                     	;# 
  4733  0199                     	;# 
  4734  0199                     	;# 
  4735  019A                     	;# 
  4736  019A                     	;# 
  4737  019A                     	;# 
  4738  019B                     	;# 
  4739  019B                     	;# 
  4740  019B                     	;# 
  4741  019B                     	;# 
  4742  019B                     	;# 
  4743  019C                     	;# 
  4744  019C                     	;# 
  4745  019C                     	;# 
  4746  019D                     	;# 
  4747  019D                     	;# 
  4748  019D                     	;# 
  4749  019E                     	;# 
  4750  019E                     	;# 
  4751  019E                     	;# 
  4752  019F                     	;# 
  4753  019F                     	;# 
  4754  019F                     	;# 
  4755  019F                     	;# 
  4756  019F                     	;# 
  4757  020C                     	;# 
  4758  020D                     	;# 
  4759  020E                     	;# 
  4760  0211                     	;# 
  4761  0211                     	;# 
  4762  0212                     	;# 
  4763  0212                     	;# 
  4764  0213                     	;# 
  4765  0213                     	;# 
  4766  0214                     	;# 
  4767  0214                     	;# 
  4768  0215                     	;# 
  4769  0215                     	;# 
  4770  0215                     	;# 
  4771  0215                     	;# 
  4772  0216                     	;# 
  4773  0216                     	;# 
  4774  0217                     	;# 
  4775  0217                     	;# 
  4776  0219                     	;# 
  4777  021A                     	;# 
  4778  021B                     	;# 
  4779  021C                     	;# 
  4780  021D                     	;# 
  4781  021D                     	;# 
  4782  021E                     	;# 
  4783  021F                     	;# 
  4784  028C                     	;# 
  4785  028D                     	;# 
  4786  028E                     	;# 
  4787  0291                     	;# 
  4788  0291                     	;# 
  4789  0292                     	;# 
  4790  0293                     	;# 
  4791  0294                     	;# 
  4792  0295                     	;# 
  4793  0295                     	;# 
  4794  0296                     	;# 
  4795  0297                     	;# 
  4796  0298                     	;# 
  4797  029F                     	;# 
  4798  030C                     	;# 
  4799  030D                     	;# 
  4800  030E                     	;# 
  4801  0311                     	;# 
  4802  0311                     	;# 
  4803  0312                     	;# 
  4804  0313                     	;# 
  4805  0314                     	;# 
  4806  0315                     	;# 
  4807  0315                     	;# 
  4808  0316                     	;# 
  4809  0317                     	;# 
  4810  0318                     	;# 
  4811  038C                     	;# 
  4812  038D                     	;# 
  4813  038E                     	;# 
  4814  0391                     	;# 
  4815  0392                     	;# 
  4816  0393                     	;# 
  4817  0394                     	;# 
  4818  0395                     	;# 
  4819  0396                     	;# 
  4820  0397                     	;# 
  4821  0398                     	;# 
  4822  0399                     	;# 
  4823  039A                     	;# 
  4824  039C                     	;# 
  4825  039D                     	;# 
  4826  039E                     	;# 
  4827  039F                     	;# 
  4828  0411                     	;# 
  4829  0411                     	;# 
  4830  0412                     	;# 
  4831  0413                     	;# 
  4832  0414                     	;# 
  4833  0415                     	;# 
  4834  0416                     	;# 
  4835  0417                     	;# 
  4836  0418                     	;# 
  4837  0418                     	;# 
  4838  0419                     	;# 
  4839  041A                     	;# 
  4840  041B                     	;# 
  4841  041C                     	;# 
  4842  041D                     	;# 
  4843  041E                     	;# 
  4844  041F                     	;# 
  4845  0498                     	;# 
  4846  0498                     	;# 
  4847  0499                     	;# 
  4848  049A                     	;# 
  4849  049B                     	;# 
  4850  049B                     	;# 
  4851  049C                     	;# 
  4852  049D                     	;# 
  4853  049E                     	;# 
  4854  049F                     	;# 
  4855  0617                     	;# 
  4856  0618                     	;# 
  4857  0619                     	;# 
  4858  0619                     	;# 
  4859  061A                     	;# 
  4860  061B                     	;# 
  4861  061C                     	;# 
  4862  061C                     	;# 
  4863  061F                     	;# 
  4864  0691                     	;# 
  4865  0692                     	;# 
  4866  0693                     	;# 
  4867  0694                     	;# 
  4868  0695                     	;# 
  4869  0696                     	;# 
  4870  0697                     	;# 
  4871  0698                     	;# 
  4872  0699                     	;# 
  4873  0711                     	;# 
  4874  0712                     	;# 
  4875  0713                     	;# 
  4876  0714                     	;# 
  4877  0715                     	;# 
  4878  0716                     	;# 
  4879  0717                     	;# 
  4880  0718                     	;# 
  4881  0719                     	;# 
  4882  0891                     	;# 
  4883  0891                     	;# 
  4884  0891                     	;# 
  4885  0891                     	;# 
  4886  0891                     	;# 
  4887  0891                     	;# 
  4888  0892                     	;# 
  4889  0892                     	;# 
  4890  0892                     	;# 
  4891  0893                     	;# 
  4892  0893                     	;# 
  4893  0893                     	;# 
  4894  0893                     	;# 
  4895  0893                     	;# 
  4896  0893                     	;# 
  4897  0894                     	;# 
  4898  0894                     	;# 
  4899  0894                     	;# 
  4900  0895                     	;# 
  4901  0895                     	;# 
  4902  0895                     	;# 
  4903  0896                     	;# 
  4904  0896                     	;# 
  4905  0896                     	;# 
  4906  089B                     	;# 
  4907  0911                     	;# 
  4908  0912                     	;# 
  4909  0913                     	;# 
  4910  0914                     	;# 
  4911  0915                     	;# 
  4912  0916                     	;# 
  4913  0918                     	;# 
  4914  0919                     	;# 
  4915  091A                     	;# 
  4916  091B                     	;# 
  4917  091C                     	;# 
  4918  091D                     	;# 
  4919  091E                     	;# 
  4920  091F                     	;# 
  4921  0E0F                     	;# 
  4922  0E10                     	;# 
  4923  0E11                     	;# 
  4924  0E12                     	;# 
  4925  0E13                     	;# 
  4926  0E14                     	;# 
  4927  0E15                     	;# 
  4928  0E16                     	;# 
  4929  0E17                     	;# 
  4930  0E18                     	;# 
  4931  0E19                     	;# 
  4932  0E1A                     	;# 
  4933  0E1B                     	;# 
  4934  0E1C                     	;# 
  4935  0E1D                     	;# 
  4936  0E1E                     	;# 
  4937  0E1F                     	;# 
  4938  0E20                     	;# 
  4939  0E21                     	;# 
  4940  0E22                     	;# 
  4941  0E24                     	;# 
  4942  0E25                     	;# 
  4943  0E28                     	;# 
  4944  0E29                     	;# 
  4945  0E2A                     	;# 
  4946  0E2B                     	;# 
  4947  0E2C                     	;# 
  4948  0E2D                     	;# 
  4949  0E2E                     	;# 
  4950  0E2F                     	;# 
  4951  0E90                     	;# 
  4952  0E91                     	;# 
  4953  0E92                     	;# 
  4954  0E94                     	;# 
  4955  0E95                     	;# 
  4956  0E9C                     	;# 
  4957  0E9D                     	;# 
  4958  0E9E                     	;# 
  4959  0E9F                     	;# 
  4960  0EA0                     	;# 
  4961  0EA1                     	;# 
  4962  0EA2                     	;# 
  4963  0EA3                     	;# 
  4964  0EA4                     	;# 
  4965  0EA5                     	;# 
  4966  0EA6                     	;# 
  4967  0EA7                     	;# 
  4968  0F0F                     	;# 
  4969  0F10                     	;# 
  4970  0F11                     	;# 
  4971  0F12                     	;# 
  4972  0F13                     	;# 
  4973  0F14                     	;# 
  4974  0F15                     	;# 
  4975  0F16                     	;# 
  4976  0F17                     	;# 
  4977  0F18                     	;# 
  4978  0F19                     	;# 
  4979  0F1A                     	;# 
  4980  0F1B                     	;# 
  4981  0F1C                     	;# 
  4982  0F1D                     	;# 
  4983  0F1E                     	;# 
  4984  0F1F                     	;# 
  4985  0F20                     	;# 
  4986  0F21                     	;# 
  4987  0F22                     	;# 
  4988  0F23                     	;# 
  4989  0F24                     	;# 
  4990  0F25                     	;# 
  4991  0F26                     	;# 
  4992  0F27                     	;# 
  4993  0F28                     	;# 
  4994  0F29                     	;# 
  4995  0F2A                     	;# 
  4996  0F2B                     	;# 
  4997  0F2C                     	;# 
  4998  0F2D                     	;# 
  4999  0F2E                     	;# 
  5000  0F2F                     	;# 
  5001  0F30                     	;# 
  5002  0F31                     	;# 
  5003  0F32                     	;# 
  5004  0F33                     	;# 
  5005  0F34                     	;# 
  5006  0F35                     	;# 
  5007  0F36                     	;# 
  5008  0F37                     	;# 
  5009  0FE4                     	;# 
  5010  0FE5                     	;# 
  5011  0FE6                     	;# 
  5012  0FE7                     	;# 
  5013  0FE8                     	;# 
  5014  0FE9                     	;# 
  5015  0FEA                     	;# 
  5016  0FEB                     	;# 
  5017  0FED                     	;# 
  5018  0FEE                     	;# 
  5019  0FEF                     	;# 
  5020  0000                     	;# 
  5021  0001                     	;# 
  5022  0002                     	;# 
  5023  0003                     	;# 
  5024  0004                     	;# 
  5025  0005                     	;# 
  5026  0006                     	;# 
  5027  0007                     	;# 
  5028  0008                     	;# 
  5029  0009                     	;# 
  5030  000A                     	;# 
  5031  000B                     	;# 
  5032  000C                     	;# 
  5033  000D                     	;# 
  5034  000E                     	;# 
  5035  0010                     	;# 
  5036  0011                     	;# 
  5037  0012                     	;# 
  5038  0013                     	;# 
  5039  0014                     	;# 
  5040  0015                     	;# 
  5041  0015                     	;# 
  5042  0016                     	;# 
  5043  0016                     	;# 
  5044  0017                     	;# 
  5045  0018                     	;# 
  5046  0019                     	;# 
  5047  0019                     	;# 
  5048  001A                     	;# 
  5049  001B                     	;# 
  5050  001C                     	;# 
  5051  001D                     	;# 
  5052  001E                     	;# 
  5053  001F                     	;# 
  5054  008C                     	;# 
  5055  008D                     	;# 
  5056  008E                     	;# 
  5057  0090                     	;# 
  5058  0091                     	;# 
  5059  0092                     	;# 
  5060  0093                     	;# 
  5061  0094                     	;# 
  5062  0097                     	;# 
  5063  009B                     	;# 
  5064  009B                     	;# 
  5065  009C                     	;# 
  5066  009D                     	;# 
  5067  009E                     	;# 
  5068  009F                     	;# 
  5069  010C                     	;# 
  5070  010D                     	;# 
  5071  010E                     	;# 
  5072  0111                     	;# 
  5073  0112                     	;# 
  5074  0113                     	;# 
  5075  0114                     	;# 
  5076  0115                     	;# 
  5077  0116                     	;# 
  5078  0117                     	;# 
  5079  0118                     	;# 
  5080  0119                     	;# 
  5081  018C                     	;# 
  5082  018D                     	;# 
  5083  018E                     	;# 
  5084  0197                     	;# 
  5085  0199                     	;# 
  5086  0199                     	;# 
  5087  0199                     	;# 
  5088  019A                     	;# 
  5089  019A                     	;# 
  5090  019A                     	;# 
  5091  019B                     	;# 
  5092  019B                     	;# 
  5093  019B                     	;# 
  5094  019B                     	;# 
  5095  019B                     	;# 
  5096  019C                     	;# 
  5097  019C                     	;# 
  5098  019C                     	;# 
  5099  019D                     	;# 
  5100  019D                     	;# 
  5101  019D                     	;# 
  5102  019E                     	;# 
  5103  019E                     	;# 
  5104  019E                     	;# 
  5105  019F                     	;# 
  5106  019F                     	;# 
  5107  019F                     	;# 
  5108  019F                     	;# 
  5109  019F                     	;# 
  5110  020C                     	;# 
  5111  020D                     	;# 
  5112  020E                     	;# 
  5113  0211                     	;# 
  5114  0211                     	;# 
  5115  0212                     	;# 
  5116  0212                     	;# 
  5117  0213                     	;# 
  5118  0213                     	;# 
  5119  0214                     	;# 
  5120  0214                     	;# 
  5121  0215                     	;# 
  5122  0215                     	;# 
  5123  0215                     	;# 
  5124  0215                     	;# 
  5125  0216                     	;# 
  5126  0216                     	;# 
  5127  0217                     	;# 
  5128  0217                     	;# 
  5129  0219                     	;# 
  5130  021A                     	;# 
  5131  021B                     	;# 
  5132  021C                     	;# 
  5133  021D                     	;# 
  5134  021D                     	;# 
  5135  021E                     	;# 
  5136  021F                     	;# 
  5137  028C                     	;# 
  5138  028D                     	;# 
  5139  028E                     	;# 
  5140  0291                     	;# 
  5141  0291                     	;# 
  5142  0292                     	;# 
  5143  0293                     	;# 
  5144  0294                     	;# 
  5145  0295                     	;# 
  5146  0295                     	;# 
  5147  0296                     	;# 
  5148  0297                     	;# 
  5149  0298                     	;# 
  5150  029F                     	;# 
  5151  030C                     	;# 
  5152  030D                     	;# 
  5153  030E                     	;# 
  5154  0311                     	;# 
  5155  0311                     	;# 
  5156  0312                     	;# 
  5157  0313                     	;# 
  5158  0314                     	;# 
  5159  0315                     	;# 
  5160  0315                     	;# 
  5161  0316                     	;# 
  5162  0317                     	;# 
  5163  0318                     	;# 
  5164  038C                     	;# 
  5165  038D                     	;# 
  5166  038E                     	;# 
  5167  0391                     	;# 
  5168  0392                     	;# 
  5169  0393                     	;# 
  5170  0394                     	;# 
  5171  0395                     	;# 
  5172  0396                     	;# 
  5173  0397                     	;# 
  5174  0398                     	;# 
  5175  0399                     	;# 
  5176  039A                     	;# 
  5177  039C                     	;# 
  5178  039D                     	;# 
  5179  039E                     	;# 
  5180  039F                     	;# 
  5181  0411                     	;# 
  5182  0411                     	;# 
  5183  0412                     	;# 
  5184  0413                     	;# 
  5185  0414                     	;# 
  5186  0415                     	;# 
  5187  0416                     	;# 
  5188  0417                     	;# 
  5189  0418                     	;# 
  5190  0418                     	;# 
  5191  0419                     	;# 
  5192  041A                     	;# 
  5193  041B                     	;# 
  5194  041C                     	;# 
  5195  041D                     	;# 
  5196  041E                     	;# 
  5197  041F                     	;# 
  5198  0498                     	;# 
  5199  0498                     	;# 
  5200  0499                     	;# 
  5201  049A                     	;# 
  5202  049B                     	;# 
  5203  049B                     	;# 
  5204  049C                     	;# 
  5205  049D                     	;# 
  5206  049E                     	;# 
  5207  049F                     	;# 
  5208  0617                     	;# 
  5209  0618                     	;# 
  5210  0619                     	;# 
  5211  0619                     	;# 
  5212  061A                     	;# 
  5213  061B                     	;# 
  5214  061C                     	;# 
  5215  061C                     	;# 
  5216  061F                     	;# 
  5217  0691                     	;# 
  5218  0692                     	;# 
  5219  0693                     	;# 
  5220  0694                     	;# 
  5221  0695                     	;# 
  5222  0696                     	;# 
  5223  0697                     	;# 
  5224  0698                     	;# 
  5225  0699                     	;# 
  5226  0711                     	;# 
  5227  0712                     	;# 
  5228  0713                     	;# 
  5229  0714                     	;# 
  5230  0715                     	;# 
  5231  0716                     	;# 
  5232  0717                     	;# 
  5233  0718                     	;# 
  5234  0719                     	;# 
  5235  0891                     	;# 
  5236  0891                     	;# 
  5237  0891                     	;# 
  5238  0891                     	;# 
  5239  0891                     	;# 
  5240  0891                     	;# 
  5241  0892                     	;# 
  5242  0892                     	;# 
  5243  0892                     	;# 
  5244  0893                     	;# 
  5245  0893                     	;# 
  5246  0893                     	;# 
  5247  0893                     	;# 
  5248  0893                     	;# 
  5249  0893                     	;# 
  5250  0894                     	;# 
  5251  0894                     	;# 
  5252  0894                     	;# 
  5253  0895                     	;# 
  5254  0895                     	;# 
  5255  0895                     	;# 
  5256  0896                     	;# 
  5257  0896                     	;# 
  5258  0896                     	;# 
  5259  089B                     	;# 
  5260  0911                     	;# 
  5261  0912                     	;# 
  5262  0913                     	;# 
  5263  0914                     	;# 
  5264  0915                     	;# 
  5265  0916                     	;# 
  5266  0918                     	;# 
  5267  0919                     	;# 
  5268  091A                     	;# 
  5269  091B                     	;# 
  5270  091C                     	;# 
  5271  091D                     	;# 
  5272  091E                     	;# 
  5273  091F                     	;# 
  5274  0E0F                     	;# 
  5275  0E10                     	;# 
  5276  0E11                     	;# 
  5277  0E12                     	;# 
  5278  0E13                     	;# 
  5279  0E14                     	;# 
  5280  0E15                     	;# 
  5281  0E16                     	;# 
  5282  0E17                     	;# 
  5283  0E18                     	;# 
  5284  0E19                     	;# 
  5285  0E1A                     	;# 
  5286  0E1B                     	;# 
  5287  0E1C                     	;# 
  5288  0E1D                     	;# 
  5289  0E1E                     	;# 
  5290  0E1F                     	;# 
  5291  0E20                     	;# 
  5292  0E21                     	;# 
  5293  0E22                     	;# 
  5294  0E24                     	;# 
  5295  0E25                     	;# 
  5296  0E28                     	;# 
  5297  0E29                     	;# 
  5298  0E2A                     	;# 
  5299  0E2B                     	;# 
  5300  0E2C                     	;# 
  5301  0E2D                     	;# 
  5302  0E2E                     	;# 
  5303  0E2F                     	;# 
  5304  0E90                     	;# 
  5305  0E91                     	;# 
  5306  0E92                     	;# 
  5307  0E94                     	;# 
  5308  0E95                     	;# 
  5309  0E9C                     	;# 
  5310  0E9D                     	;# 
  5311  0E9E                     	;# 
  5312  0E9F                     	;# 
  5313  0EA0                     	;# 
  5314  0EA1                     	;# 
  5315  0EA2                     	;# 
  5316  0EA3                     	;# 
  5317  0EA4                     	;# 
  5318  0EA5                     	;# 
  5319  0EA6                     	;# 
  5320  0EA7                     	;# 
  5321  0F0F                     	;# 
  5322  0F10                     	;# 
  5323  0F11                     	;# 
  5324  0F12                     	;# 
  5325  0F13                     	;# 
  5326  0F14                     	;# 
  5327  0F15                     	;# 
  5328  0F16                     	;# 
  5329  0F17                     	;# 
  5330  0F18                     	;# 
  5331  0F19                     	;# 
  5332  0F1A                     	;# 
  5333  0F1B                     	;# 
  5334  0F1C                     	;# 
  5335  0F1D                     	;# 
  5336  0F1E                     	;# 
  5337  0F1F                     	;# 
  5338  0F20                     	;# 
  5339  0F21                     	;# 
  5340  0F22                     	;# 
  5341  0F23                     	;# 
  5342  0F24                     	;# 
  5343  0F25                     	;# 
  5344  0F26                     	;# 
  5345  0F27                     	;# 
  5346  0F28                     	;# 
  5347  0F29                     	;# 
  5348  0F2A                     	;# 
  5349  0F2B                     	;# 
  5350  0F2C                     	;# 
  5351  0F2D                     	;# 
  5352  0F2E                     	;# 
  5353  0F2F                     	;# 
  5354  0F30                     	;# 
  5355  0F31                     	;# 
  5356  0F32                     	;# 
  5357  0F33                     	;# 
  5358  0F34                     	;# 
  5359  0F35                     	;# 
  5360  0F36                     	;# 
  5361  0F37                     	;# 
  5362  0FE4                     	;# 
  5363  0FE5                     	;# 
  5364  0FE6                     	;# 
  5365  0FE7                     	;# 
  5366  0FE8                     	;# 
  5367  0FE9                     	;# 
  5368  0FEA                     	;# 
  5369  0FEB                     	;# 
  5370  0FED                     	;# 
  5371  0FEE                     	;# 
  5372  0FEF                     	;# 
  5373  0000                     	;# 
  5374  0001                     	;# 
  5375  0002                     	;# 
  5376  0003                     	;# 
  5377  0004                     	;# 
  5378  0005                     	;# 
  5379  0006                     	;# 
  5380  0007                     	;# 
  5381  0008                     	;# 
  5382  0009                     	;# 
  5383  000A                     	;# 
  5384  000B                     	;# 
  5385  000C                     	;# 
  5386  000D                     	;# 
  5387  000E                     	;# 
  5388  0010                     	;# 
  5389  0011                     	;# 
  5390  0012                     	;# 
  5391  0013                     	;# 
  5392  0014                     	;# 
  5393  0015                     	;# 
  5394  0015                     	;# 
  5395  0016                     	;# 
  5396  0016                     	;# 
  5397  0017                     	;# 
  5398  0018                     	;# 
  5399  0019                     	;# 
  5400  0019                     	;# 
  5401  001A                     	;# 
  5402  001B                     	;# 
  5403  001C                     	;# 
  5404  001D                     	;# 
  5405  001E                     	;# 
  5406  001F                     	;# 
  5407  008C                     	;# 
  5408  008D                     	;# 
  5409  008E                     	;# 
  5410  0090                     	;# 
  5411  0091                     	;# 
  5412  0092                     	;# 
  5413  0093                     	;# 
  5414  0094                     	;# 
  5415  0097                     	;# 
  5416  009B                     	;# 
  5417  009B                     	;# 
  5418  009C                     	;# 
  5419  009D                     	;# 
  5420  009E                     	;# 
  5421  009F                     	;# 
  5422  010C                     	;# 
  5423  010D                     	;# 
  5424  010E                     	;# 
  5425  0111                     	;# 
  5426  0112                     	;# 
  5427  0113                     	;# 
  5428  0114                     	;# 
  5429  0115                     	;# 
  5430  0116                     	;# 
  5431  0117                     	;# 
  5432  0118                     	;# 
  5433  0119                     	;# 
  5434  018C                     	;# 
  5435  018D                     	;# 
  5436  018E                     	;# 
  5437  0197                     	;# 
  5438  0199                     	;# 
  5439  0199                     	;# 
  5440  0199                     	;# 
  5441  019A                     	;# 
  5442  019A                     	;# 
  5443  019A                     	;# 
  5444  019B                     	;# 
  5445  019B                     	;# 
  5446  019B                     	;# 
  5447  019B                     	;# 
  5448  019B                     	;# 
  5449  019C                     	;# 
  5450  019C                     	;# 
  5451  019C                     	;# 
  5452  019D                     	;# 
  5453  019D                     	;# 
  5454  019D                     	;# 
  5455  019E                     	;# 
  5456  019E                     	;# 
  5457  019E                     	;# 
  5458  019F                     	;# 
  5459  019F                     	;# 
  5460  019F                     	;# 
  5461  019F                     	;# 
  5462  019F                     	;# 
  5463  020C                     	;# 
  5464  020D                     	;# 
  5465  020E                     	;# 
  5466  0211                     	;# 
  5467  0211                     	;# 
  5468  0212                     	;# 
  5469  0212                     	;# 
  5470  0213                     	;# 
  5471  0213                     	;# 
  5472  0214                     	;# 
  5473  0214                     	;# 
  5474  0215                     	;# 
  5475  0215                     	;# 
  5476  0215                     	;# 
  5477  0215                     	;# 
  5478  0216                     	;# 
  5479  0216                     	;# 
  5480  0217                     	;# 
  5481  0217                     	;# 
  5482  0219                     	;# 
  5483  021A                     	;# 
  5484  021B                     	;# 
  5485  021C                     	;# 
  5486  021D                     	;# 
  5487  021D                     	;# 
  5488  021E                     	;# 
  5489  021F                     	;# 
  5490  028C                     	;# 
  5491  028D                     	;# 
  5492  028E                     	;# 
  5493  0291                     	;# 
  5494  0291                     	;# 
  5495  0292                     	;# 
  5496  0293                     	;# 
  5497  0294                     	;# 
  5498  0295                     	;# 
  5499  0295                     	;# 
  5500  0296                     	;# 
  5501  0297                     	;# 
  5502  0298                     	;# 
  5503  029F                     	;# 
  5504  030C                     	;# 
  5505  030D                     	;# 
  5506  030E                     	;# 
  5507  0311                     	;# 
  5508  0311                     	;# 
  5509  0312                     	;# 
  5510  0313                     	;# 
  5511  0314                     	;# 
  5512  0315                     	;# 
  5513  0315                     	;# 
  5514  0316                     	;# 
  5515  0317                     	;# 
  5516  0318                     	;# 
  5517  038C                     	;# 
  5518  038D                     	;# 
  5519  038E                     	;# 
  5520  0391                     	;# 
  5521  0392                     	;# 
  5522  0393                     	;# 
  5523  0394                     	;# 
  5524  0395                     	;# 
  5525  0396                     	;# 
  5526  0397                     	;# 
  5527  0398                     	;# 
  5528  0399                     	;# 
  5529  039A                     	;# 
  5530  039C                     	;# 
  5531  039D                     	;# 
  5532  039E                     	;# 
  5533  039F                     	;# 
  5534  0411                     	;# 
  5535  0411                     	;# 
  5536  0412                     	;# 
  5537  0413                     	;# 
  5538  0414                     	;# 
  5539  0415                     	;# 
  5540  0416                     	;# 
  5541  0417                     	;# 
  5542  0418                     	;# 
  5543  0418                     	;# 
  5544  0419                     	;# 
  5545  041A                     	;# 
  5546  041B                     	;# 
  5547  041C                     	;# 
  5548  041D                     	;# 
  5549  041E                     	;# 
  5550  041F                     	;# 
  5551  0498                     	;# 
  5552  0498                     	;# 
  5553  0499                     	;# 
  5554  049A                     	;# 
  5555  049B                     	;# 
  5556  049B                     	;# 
  5557  049C                     	;# 
  5558  049D                     	;# 
  5559  049E                     	;# 
  5560  049F                     	;# 
  5561  0617                     	;# 
  5562  0618                     	;# 
  5563  0619                     	;# 
  5564  0619                     	;# 
  5565  061A                     	;# 
  5566  061B                     	;# 
  5567  061C                     	;# 
  5568  061C                     	;# 
  5569  061F                     	;# 
  5570  0691                     	;# 
  5571  0692                     	;# 
  5572  0693                     	;# 
  5573  0694                     	;# 
  5574  0695                     	;# 
  5575  0696                     	;# 
  5576  0697                     	;# 
  5577  0698                     	;# 
  5578  0699                     	;# 
  5579  0711                     	;# 
  5580  0712                     	;# 
  5581  0713                     	;# 
  5582  0714                     	;# 
  5583  0715                     	;# 
  5584  0716                     	;# 
  5585  0717                     	;# 
  5586  0718                     	;# 
  5587  0719                     	;# 
  5588  0891                     	;# 
  5589  0891                     	;# 
  5590  0891                     	;# 
  5591  0891                     	;# 
  5592  0891                     	;# 
  5593  0891                     	;# 
  5594  0892                     	;# 
  5595  0892                     	;# 
  5596  0892                     	;# 
  5597  0893                     	;# 
  5598  0893                     	;# 
  5599  0893                     	;# 
  5600  0893                     	;# 
  5601  0893                     	;# 
  5602  0893                     	;# 
  5603  0894                     	;# 
  5604  0894                     	;# 
  5605  0894                     	;# 
  5606  0895                     	;# 
  5607  0895                     	;# 
  5608  0895                     	;# 
  5609  0896                     	;# 
  5610  0896                     	;# 
  5611  0896                     	;# 
  5612  089B                     	;# 
  5613  0911                     	;# 
  5614  0912                     	;# 
  5615  0913                     	;# 
  5616  0914                     	;# 
  5617  0915                     	;# 
  5618  0916                     	;# 
  5619  0918                     	;# 
  5620  0919                     	;# 
  5621  091A                     	;# 
  5622  091B                     	;# 
  5623  091C                     	;# 
  5624  091D                     	;# 
  5625  091E                     	;# 
  5626  091F                     	;# 
  5627  0E0F                     	;# 
  5628  0E10                     	;# 
  5629  0E11                     	;# 
  5630  0E12                     	;# 
  5631  0E13                     	;# 
  5632  0E14                     	;# 
  5633  0E15                     	;# 
  5634  0E16                     	;# 
  5635  0E17                     	;# 
  5636  0E18                     	;# 
  5637  0E19                     	;# 
  5638  0E1A                     	;# 
  5639  0E1B                     	;# 
  5640  0E1C                     	;# 
  5641  0E1D                     	;# 
  5642  0E1E                     	;# 
  5643  0E1F                     	;# 
  5644  0E20                     	;# 
  5645  0E21                     	;# 
  5646  0E22                     	;# 
  5647  0E24                     	;# 
  5648  0E25                     	;# 
  5649  0E28                     	;# 
  5650  0E29                     	;# 
  5651  0E2A                     	;# 
  5652  0E2B                     	;# 
  5653  0E2C                     	;# 
  5654  0E2D                     	;# 
  5655  0E2E                     	;# 
  5656  0E2F                     	;# 
  5657  0E90                     	;# 
  5658  0E91                     	;# 
  5659  0E92                     	;# 
  5660  0E94                     	;# 
  5661  0E95                     	;# 
  5662  0E9C                     	;# 
  5663  0E9D                     	;# 
  5664  0E9E                     	;# 
  5665  0E9F                     	;# 
  5666  0EA0                     	;# 
  5667  0EA1                     	;# 
  5668  0EA2                     	;# 
  5669  0EA3                     	;# 
  5670  0EA4                     	;# 
  5671  0EA5                     	;# 
  5672  0EA6                     	;# 
  5673  0EA7                     	;# 
  5674  0F0F                     	;# 
  5675  0F10                     	;# 
  5676  0F11                     	;# 
  5677  0F12                     	;# 
  5678  0F13                     	;# 
  5679  0F14                     	;# 
  5680  0F15                     	;# 
  5681  0F16                     	;# 
  5682  0F17                     	;# 
  5683  0F18                     	;# 
  5684  0F19                     	;# 
  5685  0F1A                     	;# 
  5686  0F1B                     	;# 
  5687  0F1C                     	;# 
  5688  0F1D                     	;# 
  5689  0F1E                     	;# 
  5690  0F1F                     	;# 
  5691  0F20                     	;# 
  5692  0F21                     	;# 
  5693  0F22                     	;# 
  5694  0F23                     	;# 
  5695  0F24                     	;# 
  5696  0F25                     	;# 
  5697  0F26                     	;# 
  5698  0F27                     	;# 
  5699  0F28                     	;# 
  5700  0F29                     	;# 
  5701  0F2A                     	;# 
  5702  0F2B                     	;# 
  5703  0F2C                     	;# 
  5704  0F2D                     	;# 
  5705  0F2E                     	;# 
  5706  0F2F                     	;# 
  5707  0F30                     	;# 
  5708  0F31                     	;# 
  5709  0F32                     	;# 
  5710  0F33                     	;# 
  5711  0F34                     	;# 
  5712  0F35                     	;# 
  5713  0F36                     	;# 
  5714  0F37                     	;# 
  5715  0FE4                     	;# 
  5716  0FE5                     	;# 
  5717  0FE6                     	;# 
  5718  0FE7                     	;# 
  5719  0FE8                     	;# 
  5720  0FE9                     	;# 
  5721  0FEA                     	;# 
  5722  0FEB                     	;# 
  5723  0FED                     	;# 
  5724  0FEE                     	;# 
  5725  0FEF                     	;# 
  5726  0000                     	;# 
  5727  0001                     	;# 
  5728  0002                     	;# 
  5729  0003                     	;# 
  5730  0004                     	;# 
  5731  0005                     	;# 
  5732  0006                     	;# 
  5733  0007                     	;# 
  5734  0008                     	;# 
  5735  0009                     	;# 
  5736  000A                     	;# 
  5737  000B                     	;# 
  5738  000C                     	;# 
  5739  000D                     	;# 
  5740  000E                     	;# 
  5741  0010                     	;# 
  5742  0011                     	;# 
  5743  0012                     	;# 
  5744  0013                     	;# 
  5745  0014                     	;# 
  5746  0015                     	;# 
  5747  0015                     	;# 
  5748  0016                     	;# 
  5749  0016                     	;# 
  5750  0017                     	;# 
  5751  0018                     	;# 
  5752  0019                     	;# 
  5753  0019                     	;# 
  5754  001A                     	;# 
  5755  001B                     	;# 
  5756  001C                     	;# 
  5757  001D                     	;# 
  5758  001E                     	;# 
  5759  001F                     	;# 
  5760  008C                     	;# 
  5761  008D                     	;# 
  5762  008E                     	;# 
  5763  0090                     	;# 
  5764  0091                     	;# 
  5765  0092                     	;# 
  5766  0093                     	;# 
  5767  0094                     	;# 
  5768  0097                     	;# 
  5769  009B                     	;# 
  5770  009B                     	;# 
  5771  009C                     	;# 
  5772  009D                     	;# 
  5773  009E                     	;# 
  5774  009F                     	;# 
  5775  010C                     	;# 
  5776  010D                     	;# 
  5777  010E                     	;# 
  5778  0111                     	;# 
  5779  0112                     	;# 
  5780  0113                     	;# 
  5781  0114                     	;# 
  5782  0115                     	;# 
  5783  0116                     	;# 
  5784  0117                     	;# 
  5785  0118                     	;# 
  5786  0119                     	;# 
  5787  018C                     	;# 
  5788  018D                     	;# 
  5789  018E                     	;# 
  5790  0197                     	;# 
  5791  0199                     	;# 
  5792  0199                     	;# 
  5793  0199                     	;# 
  5794  019A                     	;# 
  5795  019A                     	;# 
  5796  019A                     	;# 
  5797  019B                     	;# 
  5798  019B                     	;# 
  5799  019B                     	;# 
  5800  019B                     	;# 
  5801  019B                     	;# 
  5802  019C                     	;# 
  5803  019C                     	;# 
  5804  019C                     	;# 
  5805  019D                     	;# 
  5806  019D                     	;# 
  5807  019D                     	;# 
  5808  019E                     	;# 
  5809  019E                     	;# 
  5810  019E                     	;# 
  5811  019F                     	;# 
  5812  019F                     	;# 
  5813  019F                     	;# 
  5814  019F                     	;# 
  5815  019F                     	;# 
  5816  020C                     	;# 
  5817  020D                     	;# 
  5818  020E                     	;# 
  5819  0211                     	;# 
  5820  0211                     	;# 
  5821  0212                     	;# 
  5822  0212                     	;# 
  5823  0213                     	;# 
  5824  0213                     	;# 
  5825  0214                     	;# 
  5826  0214                     	;# 
  5827  0215                     	;# 
  5828  0215                     	;# 
  5829  0215                     	;# 
  5830  0215                     	;# 
  5831  0216                     	;# 
  5832  0216                     	;# 
  5833  0217                     	;# 
  5834  0217                     	;# 
  5835  0219                     	;# 
  5836  021A                     	;# 
  5837  021B                     	;# 
  5838  021C                     	;# 
  5839  021D                     	;# 
  5840  021D                     	;# 
  5841  021E                     	;# 
  5842  021F                     	;# 
  5843  028C                     	;# 
  5844  028D                     	;# 
  5845  028E                     	;# 
  5846  0291                     	;# 
  5847  0291                     	;# 
  5848  0292                     	;# 
  5849  0293                     	;# 
  5850  0294                     	;# 
  5851  0295                     	;# 
  5852  0295                     	;# 
  5853  0296                     	;# 
  5854  0297                     	;# 
  5855  0298                     	;# 
  5856  029F                     	;# 
  5857  030C                     	;# 
  5858  030D                     	;# 
  5859  030E                     	;# 
  5860  0311                     	;# 
  5861  0311                     	;# 
  5862  0312                     	;# 
  5863  0313                     	;# 
  5864  0314                     	;# 
  5865  0315                     	;# 
  5866  0315                     	;# 
  5867  0316                     	;# 
  5868  0317                     	;# 
  5869  0318                     	;# 
  5870  038C                     	;# 
  5871  038D                     	;# 
  5872  038E                     	;# 
  5873  0391                     	;# 
  5874  0392                     	;# 
  5875  0393                     	;# 
  5876  0394                     	;# 
  5877  0395                     	;# 
  5878  0396                     	;# 
  5879  0397                     	;# 
  5880  0398                     	;# 
  5881  0399                     	;# 
  5882  039A                     	;# 
  5883  039C                     	;# 
  5884  039D                     	;# 
  5885  039E                     	;# 
  5886  039F                     	;# 
  5887  0411                     	;# 
  5888  0411                     	;# 
  5889  0412                     	;# 
  5890  0413                     	;# 
  5891  0414                     	;# 
  5892  0415                     	;# 
  5893  0416                     	;# 
  5894  0417                     	;# 
  5895  0418                     	;# 
  5896  0418                     	;# 
  5897  0419                     	;# 
  5898  041A                     	;# 
  5899  041B                     	;# 
  5900  041C                     	;# 
  5901  041D                     	;# 
  5902  041E                     	;# 
  5903  041F                     	;# 
  5904  0498                     	;# 
  5905  0498                     	;# 
  5906  0499                     	;# 
  5907  049A                     	;# 
  5908  049B                     	;# 
  5909  049B                     	;# 
  5910  049C                     	;# 
  5911  049D                     	;# 
  5912  049E                     	;# 
  5913  049F                     	;# 
  5914  0617                     	;# 
  5915  0618                     	;# 
  5916  0619                     	;# 
  5917  0619                     	;# 
  5918  061A                     	;# 
  5919  061B                     	;# 
  5920  061C                     	;# 
  5921  061C                     	;# 
  5922  061F                     	;# 
  5923  0691                     	;# 
  5924  0692                     	;# 
  5925  0693                     	;# 
  5926  0694                     	;# 
  5927  0695                     	;# 
  5928  0696                     	;# 
  5929  0697                     	;# 
  5930  0698                     	;# 
  5931  0699                     	;# 
  5932  0711                     	;# 
  5933  0712                     	;# 
  5934  0713                     	;# 
  5935  0714                     	;# 
  5936  0715                     	;# 
  5937  0716                     	;# 
  5938  0717                     	;# 
  5939  0718                     	;# 
  5940  0719                     	;# 
  5941  0891                     	;# 
  5942  0891                     	;# 
  5943  0891                     	;# 
  5944  0891                     	;# 
  5945  0891                     	;# 
  5946  0891                     	;# 
  5947  0892                     	;# 
  5948  0892                     	;# 
  5949  0892                     	;# 
  5950  0893                     	;# 
  5951  0893                     	;# 
  5952  0893                     	;# 
  5953  0893                     	;# 
  5954  0893                     	;# 
  5955  0893                     	;# 
  5956  0894                     	;# 
  5957  0894                     	;# 
  5958  0894                     	;# 
  5959  0895                     	;# 
  5960  0895                     	;# 
  5961  0895                     	;# 
  5962  0896                     	;# 
  5963  0896                     	;# 
  5964  0896                     	;# 
  5965  089B                     	;# 
  5966  0911                     	;# 
  5967  0912                     	;# 
  5968  0913                     	;# 
  5969  0914                     	;# 
  5970  0915                     	;# 
  5971  0916                     	;# 
  5972  0918                     	;# 
  5973  0919                     	;# 
  5974  091A                     	;# 
  5975  091B                     	;# 
  5976  091C                     	;# 
  5977  091D                     	;# 
  5978  091E                     	;# 
  5979  091F                     	;# 
  5980  0E0F                     	;# 
  5981  0E10                     	;# 
  5982  0E11                     	;# 
  5983  0E12                     	;# 
  5984  0E13                     	;# 
  5985  0E14                     	;# 
  5986  0E15                     	;# 
  5987  0E16                     	;# 
  5988  0E17                     	;# 
  5989  0E18                     	;# 
  5990  0E19                     	;# 
  5991  0E1A                     	;# 
  5992  0E1B                     	;# 
  5993  0E1C                     	;# 
  5994  0E1D                     	;# 
  5995  0E1E                     	;# 
  5996  0E1F                     	;# 
  5997  0E20                     	;# 
  5998  0E21                     	;# 
  5999  0E22                     	;# 
  6000  0E24                     	;# 
  6001  0E25                     	;# 
  6002  0E28                     	;# 
  6003  0E29                     	;# 
  6004  0E2A                     	;# 
  6005  0E2B                     	;# 
  6006  0E2C                     	;# 
  6007  0E2D                     	;# 
  6008  0E2E                     	;# 
  6009  0E2F                     	;# 
  6010  0E90                     	;# 
  6011  0E91                     	;# 
  6012  0E92                     	;# 
  6013  0E94                     	;# 
  6014  0E95                     	;# 
  6015  0E9C                     	;# 
  6016  0E9D                     	;# 
  6017  0E9E                     	;# 
  6018  0E9F                     	;# 
  6019  0EA0                     	;# 
  6020  0EA1                     	;# 
  6021  0EA2                     	;# 
  6022  0EA3                     	;# 
  6023  0EA4                     	;# 
  6024  0EA5                     	;# 
  6025  0EA6                     	;# 
  6026  0EA7                     	;# 
  6027  0F0F                     	;# 
  6028  0F10                     	;# 
  6029  0F11                     	;# 
  6030  0F12                     	;# 
  6031  0F13                     	;# 
  6032  0F14                     	;# 
  6033  0F15                     	;# 
  6034  0F16                     	;# 
  6035  0F17                     	;# 
  6036  0F18                     	;# 
  6037  0F19                     	;# 
  6038  0F1A                     	;# 
  6039  0F1B                     	;# 
  6040  0F1C                     	;# 
  6041  0F1D                     	;# 
  6042  0F1E                     	;# 
  6043  0F1F                     	;# 
  6044  0F20                     	;# 
  6045  0F21                     	;# 
  6046  0F22                     	;# 
  6047  0F23                     	;# 
  6048  0F24                     	;# 
  6049  0F25                     	;# 
  6050  0F26                     	;# 
  6051  0F27                     	;# 
  6052  0F28                     	;# 
  6053  0F29                     	;# 
  6054  0F2A                     	;# 
  6055  0F2B                     	;# 
  6056  0F2C                     	;# 
  6057  0F2D                     	;# 
  6058  0F2E                     	;# 
  6059  0F2F                     	;# 
  6060  0F30                     	;# 
  6061  0F31                     	;# 
  6062  0F32                     	;# 
  6063  0F33                     	;# 
  6064  0F34                     	;# 
  6065  0F35                     	;# 
  6066  0F36                     	;# 
  6067  0F37                     	;# 
  6068  0FE4                     	;# 
  6069  0FE5                     	;# 
  6070  0FE6                     	;# 
  6071  0FE7                     	;# 
  6072  0FE8                     	;# 
  6073  0FE9                     	;# 
  6074  0FEA                     	;# 
  6075  0FEB                     	;# 
  6076  0FED                     	;# 
  6077  0FEE                     	;# 
  6078  0FEF                     	;# 
  6079  0000                     	;# 
  6080  0001                     	;# 
  6081  0002                     	;# 
  6082  0003                     	;# 
  6083  0004                     	;# 
  6084  0005                     	;# 
  6085  0006                     	;# 
  6086  0007                     	;# 
  6087  0008                     	;# 
  6088  0009                     	;# 
  6089  000A                     	;# 
  6090  000B                     	;# 
  6091  000C                     	;# 
  6092  000D                     	;# 
  6093  000E                     	;# 
  6094  0010                     	;# 
  6095  0011                     	;# 
  6096  0012                     	;# 
  6097  0013                     	;# 
  6098  0014                     	;# 
  6099  0015                     	;# 
  6100  0015                     	;# 
  6101  0016                     	;# 
  6102  0016                     	;# 
  6103  0017                     	;# 
  6104  0018                     	;# 
  6105  0019                     	;# 
  6106  0019                     	;# 
  6107  001A                     	;# 
  6108  001B                     	;# 
  6109  001C                     	;# 
  6110  001D                     	;# 
  6111  001E                     	;# 
  6112  001F                     	;# 
  6113  008C                     	;# 
  6114  008D                     	;# 
  6115  008E                     	;# 
  6116  0090                     	;# 
  6117  0091                     	;# 
  6118  0092                     	;# 
  6119  0093                     	;# 
  6120  0094                     	;# 
  6121  0097                     	;# 
  6122  009B                     	;# 
  6123  009B                     	;# 
  6124  009C                     	;# 
  6125  009D                     	;# 
  6126  009E                     	;# 
  6127  009F                     	;# 
  6128  010C                     	;# 
  6129  010D                     	;# 
  6130  010E                     	;# 
  6131  0111                     	;# 
  6132  0112                     	;# 
  6133  0113                     	;# 
  6134  0114                     	;# 
  6135  0115                     	;# 
  6136  0116                     	;# 
  6137  0117                     	;# 
  6138  0118                     	;# 
  6139  0119                     	;# 
  6140  018C                     	;# 
  6141  018D                     	;# 
  6142  018E                     	;# 
  6143  0197                     	;# 
  6144  0199                     	;# 
  6145  0199                     	;# 
  6146  0199                     	;# 
  6147  019A                     	;# 
  6148  019A                     	;# 
  6149  019A                     	;# 
  6150  019B                     	;# 
  6151  019B                     	;# 
  6152  019B                     	;# 
  6153  019B                     	;# 
  6154  019B                     	;# 
  6155  019C                     	;# 
  6156  019C                     	;# 
  6157  019C                     	;# 
  6158  019D                     	;# 
  6159  019D                     	;# 
  6160  019D                     	;# 
  6161  019E                     	;# 
  6162  019E                     	;# 
  6163  019E                     	;# 
  6164  019F                     	;# 
  6165  019F                     	;# 
  6166  019F                     	;# 
  6167  019F                     	;# 
  6168  019F                     	;# 
  6169  020C                     	;# 
  6170  020D                     	;# 
  6171  020E                     	;# 
  6172  0211                     	;# 
  6173  0211                     	;# 
  6174  0212                     	;# 
  6175  0212                     	;# 
  6176  0213                     	;# 
  6177  0213                     	;# 
  6178  0214                     	;# 
  6179  0214                     	;# 
  6180  0215                     	;# 
  6181  0215                     	;# 
  6182  0215                     	;# 
  6183  0215                     	;# 
  6184  0216                     	;# 
  6185  0216                     	;# 
  6186  0217                     	;# 
  6187  0217                     	;# 
  6188  0219                     	;# 
  6189  021A                     	;# 
  6190  021B                     	;# 
  6191  021C                     	;# 
  6192  021D                     	;# 
  6193  021D                     	;# 
  6194  021E                     	;# 
  6195  021F                     	;# 
  6196  028C                     	;# 
  6197  028D                     	;# 
  6198  028E                     	;# 
  6199  0291                     	;# 
  6200  0291                     	;# 
  6201  0292                     	;# 
  6202  0293                     	;# 
  6203  0294                     	;# 
  6204  0295                     	;# 
  6205  0295                     	;# 
  6206  0296                     	;# 
  6207  0297                     	;# 
  6208  0298                     	;# 
  6209  029F                     	;# 
  6210  030C                     	;# 
  6211  030D                     	;# 
  6212  030E                     	;# 
  6213  0311                     	;# 
  6214  0311                     	;# 
  6215  0312                     	;# 
  6216  0313                     	;# 
  6217  0314                     	;# 
  6218  0315                     	;# 
  6219  0315                     	;# 
  6220  0316                     	;# 
  6221  0317                     	;# 
  6222  0318                     	;# 
  6223  038C                     	;# 
  6224  038D                     	;# 
  6225  038E                     	;# 
  6226  0391                     	;# 
  6227  0392                     	;# 
  6228  0393                     	;# 
  6229  0394                     	;# 
  6230  0395                     	;# 
  6231  0396                     	;# 
  6232  0397                     	;# 
  6233  0398                     	;# 
  6234  0399                     	;# 
  6235  039A                     	;# 
  6236  039C                     	;# 
  6237  039D                     	;# 
  6238  039E                     	;# 
  6239  039F                     	;# 
  6240  0411                     	;# 
  6241  0411                     	;# 
  6242  0412                     	;# 
  6243  0413                     	;# 
  6244  0414                     	;# 
  6245  0415                     	;# 
  6246  0416                     	;# 
  6247  0417                     	;# 
  6248  0418                     	;# 
  6249  0418                     	;# 
  6250  0419                     	;# 
  6251  041A                     	;# 
  6252  041B                     	;# 
  6253  041C                     	;# 
  6254  041D                     	;# 
  6255  041E                     	;# 
  6256  041F                     	;# 
  6257  0498                     	;# 
  6258  0498                     	;# 
  6259  0499                     	;# 
  6260  049A                     	;# 
  6261  049B                     	;# 
  6262  049B                     	;# 
  6263  049C                     	;# 
  6264  049D                     	;# 
  6265  049E                     	;# 
  6266  049F                     	;# 
  6267  0617                     	;# 
  6268  0618                     	;# 
  6269  0619                     	;# 
  6270  0619                     	;# 
  6271  061A                     	;# 
  6272  061B                     	;# 
  6273  061C                     	;# 
  6274  061C                     	;# 
  6275  061F                     	;# 
  6276  0691                     	;# 
  6277  0692                     	;# 
  6278  0693                     	;# 
  6279  0694                     	;# 
  6280  0695                     	;# 
  6281  0696                     	;# 
  6282  0697                     	;# 
  6283  0698                     	;# 
  6284  0699                     	;# 
  6285  0711                     	;# 
  6286  0712                     	;# 
  6287  0713                     	;# 
  6288  0714                     	;# 
  6289  0715                     	;# 
  6290  0716                     	;# 
  6291  0717                     	;# 
  6292  0718                     	;# 
  6293  0719                     	;# 
  6294  0891                     	;# 
  6295  0891                     	;# 
  6296  0891                     	;# 
  6297  0891                     	;# 
  6298  0891                     	;# 
  6299  0891                     	;# 
  6300  0892                     	;# 
  6301  0892                     	;# 
  6302  0892                     	;# 
  6303  0893                     	;# 
  6304  0893                     	;# 
  6305  0893                     	;# 
  6306  0893                     	;# 
  6307  0893                     	;# 
  6308  0893                     	;# 
  6309  0894                     	;# 
  6310  0894                     	;# 
  6311  0894                     	;# 
  6312  0895                     	;# 
  6313  0895                     	;# 
  6314  0895                     	;# 
  6315  0896                     	;# 
  6316  0896                     	;# 
  6317  0896                     	;# 
  6318  089B                     	;# 
  6319  0911                     	;# 
  6320  0912                     	;# 
  6321  0913                     	;# 
  6322  0914                     	;# 
  6323  0915                     	;# 
  6324  0916                     	;# 
  6325  0918                     	;# 
  6326  0919                     	;# 
  6327  091A                     	;# 
  6328  091B                     	;# 
  6329  091C                     	;# 
  6330  091D                     	;# 
  6331  091E                     	;# 
  6332  091F                     	;# 
  6333  0E0F                     	;# 
  6334  0E10                     	;# 
  6335  0E11                     	;# 
  6336  0E12                     	;# 
  6337  0E13                     	;# 
  6338  0E14                     	;# 
  6339  0E15                     	;# 
  6340  0E16                     	;# 
  6341  0E17                     	;# 
  6342  0E18                     	;# 
  6343  0E19                     	;# 
  6344  0E1A                     	;# 
  6345  0E1B                     	;# 
  6346  0E1C                     	;# 
  6347  0E1D                     	;# 
  6348  0E1E                     	;# 
  6349  0E1F                     	;# 
  6350  0E20                     	;# 
  6351  0E21                     	;# 
  6352  0E22                     	;# 
  6353  0E24                     	;# 
  6354  0E25                     	;# 
  6355  0E28                     	;# 
  6356  0E29                     	;# 
  6357  0E2A                     	;# 
  6358  0E2B                     	;# 
  6359  0E2C                     	;# 
  6360  0E2D                     	;# 
  6361  0E2E                     	;# 
  6362  0E2F                     	;# 
  6363  0E90                     	;# 
  6364  0E91                     	;# 
  6365  0E92                     	;# 
  6366  0E94                     	;# 
  6367  0E95                     	;# 
  6368  0E9C                     	;# 
  6369  0E9D                     	;# 
  6370  0E9E                     	;# 
  6371  0E9F                     	;# 
  6372  0EA0                     	;# 
  6373  0EA1                     	;# 
  6374  0EA2                     	;# 
  6375  0EA3                     	;# 
  6376  0EA4                     	;# 
  6377  0EA5                     	;# 
  6378  0EA6                     	;# 
  6379  0EA7                     	;# 
  6380  0F0F                     	;# 
  6381  0F10                     	;# 
  6382  0F11                     	;# 
  6383  0F12                     	;# 
  6384  0F13                     	;# 
  6385  0F14                     	;# 
  6386  0F15                     	;# 
  6387  0F16                     	;# 
  6388  0F17                     	;# 
  6389  0F18                     	;# 
  6390  0F19                     	;# 
  6391  0F1A                     	;# 
  6392  0F1B                     	;# 
  6393  0F1C                     	;# 
  6394  0F1D                     	;# 
  6395  0F1E                     	;# 
  6396  0F1F                     	;# 
  6397  0F20                     	;# 
  6398  0F21                     	;# 
  6399  0F22                     	;# 
  6400  0F23                     	;# 
  6401  0F24                     	;# 
  6402  0F25                     	;# 
  6403  0F26                     	;# 
  6404  0F27                     	;# 
  6405  0F28                     	;# 
  6406  0F29                     	;# 
  6407  0F2A                     	;# 
  6408  0F2B                     	;# 
  6409  0F2C                     	;# 
  6410  0F2D                     	;# 
  6411  0F2E                     	;# 
  6412  0F2F                     	;# 
  6413  0F30                     	;# 
  6414  0F31                     	;# 
  6415  0F32                     	;# 
  6416  0F33                     	;# 
  6417  0F34                     	;# 
  6418  0F35                     	;# 
  6419  0F36                     	;# 
  6420  0F37                     	;# 
  6421  0FE4                     	;# 
  6422  0FE5                     	;# 
  6423  0FE6                     	;# 
  6424  0FE7                     	;# 
  6425  0FE8                     	;# 
  6426  0FE9                     	;# 
  6427  0FEA                     	;# 
  6428  0FEB                     	;# 
  6429  0FED                     	;# 
  6430  0FEE                     	;# 
  6431  0FEF                     	;# 
  6432  0000                     	;# 
  6433  0001                     	;# 
  6434  0002                     	;# 
  6435  0003                     	;# 
  6436  0004                     	;# 
  6437  0005                     	;# 
  6438  0006                     	;# 
  6439  0007                     	;# 
  6440  0008                     	;# 
  6441  0009                     	;# 
  6442  000A                     	;# 
  6443  000B                     	;# 
  6444  000C                     	;# 
  6445  000D                     	;# 
  6446  000E                     	;# 
  6447  0010                     	;# 
  6448  0011                     	;# 
  6449  0012                     	;# 
  6450  0013                     	;# 
  6451  0014                     	;# 
  6452  0015                     	;# 
  6453  0015                     	;# 
  6454  0016                     	;# 
  6455  0016                     	;# 
  6456  0017                     	;# 
  6457  0018                     	;# 
  6458  0019                     	;# 
  6459  0019                     	;# 
  6460  001A                     	;# 
  6461  001B                     	;# 
  6462  001C                     	;# 
  6463  001D                     	;# 
  6464  001E                     	;# 
  6465  001F                     	;# 
  6466  008C                     	;# 
  6467  008D                     	;# 
  6468  008E                     	;# 
  6469  0090                     	;# 
  6470  0091                     	;# 
  6471  0092                     	;# 
  6472  0093                     	;# 
  6473  0094                     	;# 
  6474  0097                     	;# 
  6475  009B                     	;# 
  6476  009B                     	;# 
  6477  009C                     	;# 
  6478  009D                     	;# 
  6479  009E                     	;# 
  6480  009F                     	;# 
  6481  010C                     	;# 
  6482  010D                     	;# 
  6483  010E                     	;# 
  6484  0111                     	;# 
  6485  0112                     	;# 
  6486  0113                     	;# 
  6487  0114                     	;# 
  6488  0115                     	;# 
  6489  0116                     	;# 
  6490  0117                     	;# 
  6491  0118                     	;# 
  6492  0119                     	;# 
  6493  018C                     	;# 
  6494  018D                     	;# 
  6495  018E                     	;# 
  6496  0197                     	;# 
  6497  0199                     	;# 
  6498  0199                     	;# 
  6499  0199                     	;# 
  6500  019A                     	;# 
  6501  019A                     	;# 
  6502  019A                     	;# 
  6503  019B                     	;# 
  6504  019B                     	;# 
  6505  019B                     	;# 
  6506  019B                     	;# 
  6507  019B                     	;# 
  6508  019C                     	;# 
  6509  019C                     	;# 
  6510  019C                     	;# 
  6511  019D                     	;# 
  6512  019D                     	;# 
  6513  019D                     	;# 
  6514  019E                     	;# 
  6515  019E                     	;# 
  6516  019E                     	;# 
  6517  019F                     	;# 
  6518  019F                     	;# 
  6519  019F                     	;# 
  6520  019F                     	;# 
  6521  019F                     	;# 
  6522  020C                     	;# 
  6523  020D                     	;# 
  6524  020E                     	;# 
  6525  0211                     	;# 
  6526  0211                     	;# 
  6527  0212                     	;# 
  6528  0212                     	;# 
  6529  0213                     	;# 
  6530  0213                     	;# 
  6531  0214                     	;# 
  6532  0214                     	;# 
  6533  0215                     	;# 
  6534  0215                     	;# 
  6535  0215                     	;# 
  6536  0215                     	;# 
  6537  0216                     	;# 
  6538  0216                     	;# 
  6539  0217                     	;# 
  6540  0217                     	;# 
  6541  0219                     	;# 
  6542  021A                     	;# 
  6543  021B                     	;# 
  6544  021C                     	;# 
  6545  021D                     	;# 
  6546  021D                     	;# 
  6547  021E                     	;# 
  6548  021F                     	;# 
  6549  028C                     	;# 
  6550  028D                     	;# 
  6551  028E                     	;# 
  6552  0291                     	;# 
  6553  0291                     	;# 
  6554  0292                     	;# 
  6555  0293                     	;# 
  6556  0294                     	;# 
  6557  0295                     	;# 
  6558  0295                     	;# 
  6559  0296                     	;# 
  6560  0297                     	;# 
  6561  0298                     	;# 
  6562  029F                     	;# 
  6563  030C                     	;# 
  6564  030D                     	;# 
  6565  030E                     	;# 
  6566  0311                     	;# 
  6567  0311                     	;# 
  6568  0312                     	;# 
  6569  0313                     	;# 
  6570  0314                     	;# 
  6571  0315                     	;# 
  6572  0315                     	;# 
  6573  0316                     	;# 
  6574  0317                     	;# 
  6575  0318                     	;# 
  6576  038C                     	;# 
  6577  038D                     	;# 
  6578  038E                     	;# 
  6579  0391                     	;# 
  6580  0392                     	;# 
  6581  0393                     	;# 
  6582  0394                     	;# 
  6583  0395                     	;# 
  6584  0396                     	;# 
  6585  0397                     	;# 
  6586  0398                     	;# 
  6587  0399                     	;# 
  6588  039A                     	;# 
  6589  039C                     	;# 
  6590  039D                     	;# 
  6591  039E                     	;# 
  6592  039F                     	;# 
  6593  0411                     	;# 
  6594  0411                     	;# 
  6595  0412                     	;# 
  6596  0413                     	;# 
  6597  0414                     	;# 
  6598  0415                     	;# 
  6599  0416                     	;# 
  6600  0417                     	;# 
  6601  0418                     	;# 
  6602  0418                     	;# 
  6603  0419                     	;# 
  6604  041A                     	;# 
  6605  041B                     	;# 
  6606  041C                     	;# 
  6607  041D                     	;# 
  6608  041E                     	;# 
  6609  041F                     	;# 
  6610  0498                     	;# 
  6611  0498                     	;# 
  6612  0499                     	;# 
  6613  049A                     	;# 
  6614  049B                     	;# 
  6615  049B                     	;# 
  6616  049C                     	;# 
  6617  049D                     	;# 
  6618  049E                     	;# 
  6619  049F                     	;# 
  6620  0617                     	;# 
  6621  0618                     	;# 
  6622  0619                     	;# 
  6623  0619                     	;# 
  6624  061A                     	;# 
  6625  061B                     	;# 
  6626  061C                     	;# 
  6627  061C                     	;# 
  6628  061F                     	;# 
  6629  0691                     	;# 
  6630  0692                     	;# 
  6631  0693                     	;# 
  6632  0694                     	;# 
  6633  0695                     	;# 
  6634  0696                     	;# 
  6635  0697                     	;# 
  6636  0698                     	;# 
  6637  0699                     	;# 
  6638  0711                     	;# 
  6639  0712                     	;# 
  6640  0713                     	;# 
  6641  0714                     	;# 
  6642  0715                     	;# 
  6643  0716                     	;# 
  6644  0717                     	;# 
  6645  0718                     	;# 
  6646  0719                     	;# 
  6647  0891                     	;# 
  6648  0891                     	;# 
  6649  0891                     	;# 
  6650  0891                     	;# 
  6651  0891                     	;# 
  6652  0891                     	;# 
  6653  0892                     	;# 
  6654  0892                     	;# 
  6655  0892                     	;# 
  6656  0893                     	;# 
  6657  0893                     	;# 
  6658  0893                     	;# 
  6659  0893                     	;# 
  6660  0893                     	;# 
  6661  0893                     	;# 
  6662  0894                     	;# 
  6663  0894                     	;# 
  6664  0894                     	;# 
  6665  0895                     	;# 
  6666  0895                     	;# 
  6667  0895                     	;# 
  6668  0896                     	;# 
  6669  0896                     	;# 
  6670  0896                     	;# 
  6671  089B                     	;# 
  6672  0911                     	;# 
  6673  0912                     	;# 
  6674  0913                     	;# 
  6675  0914                     	;# 
  6676  0915                     	;# 
  6677  0916                     	;# 
  6678  0918                     	;# 
  6679  0919                     	;# 
  6680  091A                     	;# 
  6681  091B                     	;# 
  6682  091C                     	;# 
  6683  091D                     	;# 
  6684  091E                     	;# 
  6685  091F                     	;# 
  6686  0E0F                     	;# 
  6687  0E10                     	;# 
  6688  0E11                     	;# 
  6689  0E12                     	;# 
  6690  0E13                     	;# 
  6691  0E14                     	;# 
  6692  0E15                     	;# 
  6693  0E16                     	;# 
  6694  0E17                     	;# 
  6695  0E18                     	;# 
  6696  0E19                     	;# 
  6697  0E1A                     	;# 
  6698  0E1B                     	;# 
  6699  0E1C                     	;# 
  6700  0E1D                     	;# 
  6701  0E1E                     	;# 
  6702  0E1F                     	;# 
  6703  0E20                     	;# 
  6704  0E21                     	;# 
  6705  0E22                     	;# 
  6706  0E24                     	;# 
  6707  0E25                     	;# 
  6708  0E28                     	;# 
  6709  0E29                     	;# 
  6710  0E2A                     	;# 
  6711  0E2B                     	;# 
  6712  0E2C                     	;# 
  6713  0E2D                     	;# 
  6714  0E2E                     	;# 
  6715  0E2F                     	;# 
  6716  0E90                     	;# 
  6717  0E91                     	;# 
  6718  0E92                     	;# 
  6719  0E94                     	;# 
  6720  0E95                     	;# 
  6721  0E9C                     	;# 
  6722  0E9D                     	;# 
  6723  0E9E                     	;# 
  6724  0E9F                     	;# 
  6725  0EA0                     	;# 
  6726  0EA1                     	;# 
  6727  0EA2                     	;# 
  6728  0EA3                     	;# 
  6729  0EA4                     	;# 
  6730  0EA5                     	;# 
  6731  0EA6                     	;# 
  6732  0EA7                     	;# 
  6733  0F0F                     	;# 
  6734  0F10                     	;# 
  6735  0F11                     	;# 
  6736  0F12                     	;# 
  6737  0F13                     	;# 
  6738  0F14                     	;# 
  6739  0F15                     	;# 
  6740  0F16                     	;# 
  6741  0F17                     	;# 
  6742  0F18                     	;# 
  6743  0F19                     	;# 
  6744  0F1A                     	;# 
  6745  0F1B                     	;# 
  6746  0F1C                     	;# 
  6747  0F1D                     	;# 
  6748  0F1E                     	;# 
  6749  0F1F                     	;# 
  6750  0F20                     	;# 
  6751  0F21                     	;# 
  6752  0F22                     	;# 
  6753  0F23                     	;# 
  6754  0F24                     	;# 
  6755  0F25                     	;# 
  6756  0F26                     	;# 
  6757  0F27                     	;# 
  6758  0F28                     	;# 
  6759  0F29                     	;# 
  6760  0F2A                     	;# 
  6761  0F2B                     	;# 
  6762  0F2C                     	;# 
  6763  0F2D                     	;# 
  6764  0F2E                     	;# 
  6765  0F2F                     	;# 
  6766  0F30                     	;# 
  6767  0F31                     	;# 
  6768  0F32                     	;# 
  6769  0F33                     	;# 
  6770  0F34                     	;# 
  6771  0F35                     	;# 
  6772  0F36                     	;# 
  6773  0F37                     	;# 
  6774  0FE4                     	;# 
  6775  0FE5                     	;# 
  6776  0FE6                     	;# 
  6777  0FE7                     	;# 
  6778  0FE8                     	;# 
  6779  0FE9                     	;# 
  6780  0FEA                     	;# 
  6781  0FEB                     	;# 
  6782  0FED                     	;# 
  6783  0FEE                     	;# 
  6784  0FEF                     	;# 
  6785  0000                     	;# 
  6786  0001                     	;# 
  6787  0002                     	;# 
  6788  0003                     	;# 
  6789  0004                     	;# 
  6790  0005                     	;# 
  6791  0006                     	;# 
  6792  0007                     	;# 
  6793  0008                     	;# 
  6794  0009                     	;# 
  6795  000A                     	;# 
  6796  000B                     	;# 
  6797  000C                     	;# 
  6798  000D                     	;# 
  6799  000E                     	;# 
  6800  0010                     	;# 
  6801  0011                     	;# 
  6802  0012                     	;# 
  6803  0013                     	;# 
  6804  0014                     	;# 
  6805  0015                     	;# 
  6806  0015                     	;# 
  6807  0016                     	;# 
  6808  0016                     	;# 
  6809  0017                     	;# 
  6810  0018                     	;# 
  6811  0019                     	;# 
  6812  0019                     	;# 
  6813  001A                     	;# 
  6814  001B                     	;# 
  6815  001C                     	;# 
  6816  001D                     	;# 
  6817  001E                     	;# 
  6818  001F                     	;# 
  6819  008C                     	;# 
  6820  008D                     	;# 
  6821  008E                     	;# 
  6822  0090                     	;# 
  6823  0091                     	;# 
  6824  0092                     	;# 
  6825  0093                     	;# 
  6826  0094                     	;# 
  6827  0097                     	;# 
  6828  009B                     	;# 
  6829  009B                     	;# 
  6830  009C                     	;# 
  6831  009D                     	;# 
  6832  009E                     	;# 
  6833  009F                     	;# 
  6834  010C                     	;# 
  6835  010D                     	;# 
  6836  010E                     	;# 
  6837  0111                     	;# 
  6838  0112                     	;# 
  6839  0113                     	;# 
  6840  0114                     	;# 
  6841  0115                     	;# 
  6842  0116                     	;# 
  6843  0117                     	;# 
  6844  0118                     	;# 
  6845  0119                     	;# 
  6846  018C                     	;# 
  6847  018D                     	;# 
  6848  018E                     	;# 
  6849  0197                     	;# 
  6850  0199                     	;# 
  6851  0199                     	;# 
  6852  0199                     	;# 
  6853  019A                     	;# 
  6854  019A                     	;# 
  6855  019A                     	;# 
  6856  019B                     	;# 
  6857  019B                     	;# 
  6858  019B                     	;# 
  6859  019B                     	;# 
  6860  019B                     	;# 
  6861  019C                     	;# 
  6862  019C                     	;# 
  6863  019C                     	;# 
  6864  019D                     	;# 
  6865  019D                     	;# 
  6866  019D                     	;# 
  6867  019E                     	;# 
  6868  019E                     	;# 
  6869  019E                     	;# 
  6870  019F                     	;# 
  6871  019F                     	;# 
  6872  019F                     	;# 
  6873  019F                     	;# 
  6874  019F                     	;# 
  6875  020C                     	;# 
  6876  020D                     	;# 
  6877  020E                     	;# 
  6878  0211                     	;# 
  6879  0211                     	;# 
  6880  0212                     	;# 
  6881  0212                     	;# 
  6882  0213                     	;# 
  6883  0213                     	;# 
  6884  0214                     	;# 
  6885  0214                     	;# 
  6886  0215                     	;# 
  6887  0215                     	;# 
  6888  0215                     	;# 
  6889  0215                     	;# 
  6890  0216                     	;# 
  6891  0216                     	;# 
  6892  0217                     	;# 
  6893  0217                     	;# 
  6894  0219                     	;# 
  6895  021A                     	;# 
  6896  021B                     	;# 
  6897  021C                     	;# 
  6898  021D                     	;# 
  6899  021D                     	;# 
  6900  021E                     	;# 
  6901  021F                     	;# 
  6902  028C                     	;# 
  6903  028D                     	;# 
  6904  028E                     	;# 
  6905  0291                     	;# 
  6906  0291                     	;# 
  6907  0292                     	;# 
  6908  0293                     	;# 
  6909  0294                     	;# 
  6910  0295                     	;# 
  6911  0295                     	;# 
  6912  0296                     	;# 
  6913  0297                     	;# 
  6914  0298                     	;# 
  6915  029F                     	;# 
  6916  030C                     	;# 
  6917  030D                     	;# 
  6918  030E                     	;# 
  6919  0311                     	;# 
  6920  0311                     	;# 
  6921  0312                     	;# 
  6922  0313                     	;# 
  6923  0314                     	;# 
  6924  0315                     	;# 
  6925  0315                     	;# 
  6926  0316                     	;# 
  6927  0317                     	;# 
  6928  0318                     	;# 
  6929  038C                     	;# 
  6930  038D                     	;# 
  6931  038E                     	;# 
  6932  0391                     	;# 
  6933  0392                     	;# 
  6934  0393                     	;# 
  6935  0394                     	;# 
  6936  0395                     	;# 
  6937  0396                     	;# 
  6938  0397                     	;# 
  6939  0398                     	;# 
  6940  0399                     	;# 
  6941  039A                     	;# 
  6942  039C                     	;# 
  6943  039D                     	;# 
  6944  039E                     	;# 
  6945  039F                     	;# 
  6946  0411                     	;# 
  6947  0411                     	;# 
  6948  0412                     	;# 
  6949  0413                     	;# 
  6950  0414                     	;# 
  6951  0415                     	;# 
  6952  0416                     	;# 
  6953  0417                     	;# 
  6954  0418                     	;# 
  6955  0418                     	;# 
  6956  0419                     	;# 
  6957  041A                     	;# 
  6958  041B                     	;# 
  6959  041C                     	;# 
  6960  041D                     	;# 
  6961  041E                     	;# 
  6962  041F                     	;# 
  6963  0498                     	;# 
  6964  0498                     	;# 
  6965  0499                     	;# 
  6966  049A                     	;# 
  6967  049B                     	;# 
  6968  049B                     	;# 
  6969  049C                     	;# 
  6970  049D                     	;# 
  6971  049E                     	;# 
  6972  049F                     	;# 
  6973  0617                     	;# 
  6974  0618                     	;# 
  6975  0619                     	;# 
  6976  0619                     	;# 
  6977  061A                     	;# 
  6978  061B                     	;# 
  6979  061C                     	;# 
  6980  061C                     	;# 
  6981  061F                     	;# 
  6982  0691                     	;# 
  6983  0692                     	;# 
  6984  0693                     	;# 
  6985  0694                     	;# 
  6986  0695                     	;# 
  6987  0696                     	;# 
  6988  0697                     	;# 
  6989  0698                     	;# 
  6990  0699                     	;# 
  6991  0711                     	;# 
  6992  0712                     	;# 
  6993  0713                     	;# 
  6994  0714                     	;# 
  6995  0715                     	;# 
  6996  0716                     	;# 
  6997  0717                     	;# 
  6998  0718                     	;# 
  6999  0719                     	;# 
  7000  0891                     	;# 
  7001  0891                     	;# 
  7002  0891                     	;# 
  7003  0891                     	;# 
  7004  0891                     	;# 
  7005  0891                     	;# 
  7006  0892                     	;# 
  7007  0892                     	;# 
  7008  0892                     	;# 
  7009  0893                     	;# 
  7010  0893                     	;# 
  7011  0893                     	;# 
  7012  0893                     	;# 
  7013  0893                     	;# 
  7014  0893                     	;# 
  7015  0894                     	;# 
  7016  0894                     	;# 
  7017  0894                     	;# 
  7018  0895                     	;# 
  7019  0895                     	;# 
  7020  0895                     	;# 
  7021  0896                     	;# 
  7022  0896                     	;# 
  7023  0896                     	;# 
  7024  089B                     	;# 
  7025  0911                     	;# 
  7026  0912                     	;# 
  7027  0913                     	;# 
  7028  0914                     	;# 
  7029  0915                     	;# 
  7030  0916                     	;# 
  7031  0918                     	;# 
  7032  0919                     	;# 
  7033  091A                     	;# 
  7034  091B                     	;# 
  7035  091C                     	;# 
  7036  091D                     	;# 
  7037  091E                     	;# 
  7038  091F                     	;# 
  7039  0E0F                     	;# 
  7040  0E10                     	;# 
  7041  0E11                     	;# 
  7042  0E12                     	;# 
  7043  0E13                     	;# 
  7044  0E14                     	;# 
  7045  0E15                     	;# 
  7046  0E16                     	;# 
  7047  0E17                     	;# 
  7048  0E18                     	;# 
  7049  0E19                     	;# 
  7050  0E1A                     	;# 
  7051  0E1B                     	;# 
  7052  0E1C                     	;# 
  7053  0E1D                     	;# 
  7054  0E1E                     	;# 
  7055  0E1F                     	;# 
  7056  0E20                     	;# 
  7057  0E21                     	;# 
  7058  0E22                     	;# 
  7059  0E24                     	;# 
  7060  0E25                     	;# 
  7061  0E28                     	;# 
  7062  0E29                     	;# 
  7063  0E2A                     	;# 
  7064  0E2B                     	;# 
  7065  0E2C                     	;# 
  7066  0E2D                     	;# 
  7067  0E2E                     	;# 
  7068  0E2F                     	;# 
  7069  0E90                     	;# 
  7070  0E91                     	;# 
  7071  0E92                     	;# 
  7072  0E94                     	;# 
  7073  0E95                     	;# 
  7074  0E9C                     	;# 
  7075  0E9D                     	;# 
  7076  0E9E                     	;# 
  7077  0E9F                     	;# 
  7078  0EA0                     	;# 
  7079  0EA1                     	;# 
  7080  0EA2                     	;# 
  7081  0EA3                     	;# 
  7082  0EA4                     	;# 
  7083  0EA5                     	;# 
  7084  0EA6                     	;# 
  7085  0EA7                     	;# 
  7086  0F0F                     	;# 
  7087  0F10                     	;# 
  7088  0F11                     	;# 
  7089  0F12                     	;# 
  7090  0F13                     	;# 
  7091  0F14                     	;# 
  7092  0F15                     	;# 
  7093  0F16                     	;# 
  7094  0F17                     	;# 
  7095  0F18                     	;# 
  7096  0F19                     	;# 
  7097  0F1A                     	;# 
  7098  0F1B                     	;# 
  7099  0F1C                     	;# 
  7100  0F1D                     	;# 
  7101  0F1E                     	;# 
  7102  0F1F                     	;# 
  7103  0F20                     	;# 
  7104  0F21                     	;# 
  7105  0F22                     	;# 
  7106  0F23                     	;# 
  7107  0F24                     	;# 
  7108  0F25                     	;# 
  7109  0F26                     	;# 
  7110  0F27                     	;# 
  7111  0F28                     	;# 
  7112  0F29                     	;# 
  7113  0F2A                     	;# 
  7114  0F2B                     	;# 
  7115  0F2C                     	;# 
  7116  0F2D                     	;# 
  7117  0F2E                     	;# 
  7118  0F2F                     	;# 
  7119  0F30                     	;# 
  7120  0F31                     	;# 
  7121  0F32                     	;# 
  7122  0F33                     	;# 
  7123  0F34                     	;# 
  7124  0F35                     	;# 
  7125  0F36                     	;# 
  7126  0F37                     	;# 
  7127  0FE4                     	;# 
  7128  0FE5                     	;# 
  7129  0FE6                     	;# 
  7130  0FE7                     	;# 
  7131  0FE8                     	;# 
  7132  0FE9                     	;# 
  7133  0FEA                     	;# 
  7134  0FEB                     	;# 
  7135  0FED                     	;# 
  7136  0FEE                     	;# 
  7137  0FEF                     	;# 
  7138  0000                     	;# 
  7139  0001                     	;# 
  7140  0002                     	;# 
  7141  0003                     	;# 
  7142  0004                     	;# 
  7143  0005                     	;# 
  7144  0006                     	;# 
  7145  0007                     	;# 
  7146  0008                     	;# 
  7147  0009                     	;# 
  7148  000A                     	;# 
  7149  000B                     	;# 
  7150  000C                     	;# 
  7151  000D                     	;# 
  7152  000E                     	;# 
  7153  0010                     	;# 
  7154  0011                     	;# 
  7155  0012                     	;# 
  7156  0013                     	;# 
  7157  0014                     	;# 
  7158  0015                     	;# 
  7159  0015                     	;# 
  7160  0016                     	;# 
  7161  0016                     	;# 
  7162  0017                     	;# 
  7163  0018                     	;# 
  7164  0019                     	;# 
  7165  0019                     	;# 
  7166  001A                     	;# 
  7167  001B                     	;# 
  7168  001C                     	;# 
  7169  001D                     	;# 
  7170  001E                     	;# 
  7171  001F                     	;# 
  7172  008C                     	;# 
  7173  008D                     	;# 
  7174  008E                     	;# 
  7175  0090                     	;# 
  7176  0091                     	;# 
  7177  0092                     	;# 
  7178  0093                     	;# 
  7179  0094                     	;# 
  7180  0097                     	;# 
  7181  009B                     	;# 
  7182  009B                     	;# 
  7183  009C                     	;# 
  7184  009D                     	;# 
  7185  009E                     	;# 
  7186  009F                     	;# 
  7187  010C                     	;# 
  7188  010D                     	;# 
  7189  010E                     	;# 
  7190  0111                     	;# 
  7191  0112                     	;# 
  7192  0113                     	;# 
  7193  0114                     	;# 
  7194  0115                     	;# 
  7195  0116                     	;# 
  7196  0117                     	;# 
  7197  0118                     	;# 
  7198  0119                     	;# 
  7199  018C                     	;# 
  7200  018D                     	;# 
  7201  018E                     	;# 
  7202  0197                     	;# 
  7203  0199                     	;# 
  7204  0199                     	;# 
  7205  0199                     	;# 
  7206  019A                     	;# 
  7207  019A                     	;# 
  7208  019A                     	;# 
  7209  019B                     	;# 
  7210  019B                     	;# 
  7211  019B                     	;# 
  7212  019B                     	;# 
  7213  019B                     	;# 
  7214  019C                     	;# 
  7215  019C                     	;# 
  7216  019C                     	;# 
  7217  019D                     	;# 
  7218  019D                     	;# 
  7219  019D                     	;# 
  7220  019E                     	;# 
  7221  019E                     	;# 
  7222  019E                     	;# 
  7223  019F                     	;# 
  7224  019F                     	;# 
  7225  019F                     	;# 
  7226  019F                     	;# 
  7227  019F                     	;# 
  7228  020C                     	;# 
  7229  020D                     	;# 
  7230  020E                     	;# 
  7231  0211                     	;# 
  7232  0211                     	;# 
  7233  0212                     	;# 
  7234  0212                     	;# 
  7235  0213                     	;# 
  7236  0213                     	;# 
  7237  0214                     	;# 
  7238  0214                     	;# 
  7239  0215                     	;# 
  7240  0215                     	;# 
  7241  0215                     	;# 
  7242  0215                     	;# 
  7243  0216                     	;# 
  7244  0216                     	;# 
  7245  0217                     	;# 
  7246  0217                     	;# 
  7247  0219                     	;# 
  7248  021A                     	;# 
  7249  021B                     	;# 
  7250  021C                     	;# 
  7251  021D                     	;# 
  7252  021D                     	;# 
  7253  021E                     	;# 
  7254  021F                     	;# 
  7255  028C                     	;# 
  7256  028D                     	;# 
  7257  028E                     	;# 
  7258  0291                     	;# 
  7259  0291                     	;# 
  7260  0292                     	;# 
  7261  0293                     	;# 
  7262  0294                     	;# 
  7263  0295                     	;# 
  7264  0295                     	;# 
  7265  0296                     	;# 
  7266  0297                     	;# 
  7267  0298                     	;# 
  7268  029F                     	;# 
  7269  030C                     	;# 
  7270  030D                     	;# 
  7271  030E                     	;# 
  7272  0311                     	;# 
  7273  0311                     	;# 
  7274  0312                     	;# 
  7275  0313                     	;# 
  7276  0314                     	;# 
  7277  0315                     	;# 
  7278  0315                     	;# 
  7279  0316                     	;# 
  7280  0317                     	;# 
  7281  0318                     	;# 
  7282  038C                     	;# 
  7283  038D                     	;# 
  7284  038E                     	;# 
  7285  0391                     	;# 
  7286  0392                     	;# 
  7287  0393                     	;# 
  7288  0394                     	;# 
  7289  0395                     	;# 
  7290  0396                     	;# 
  7291  0397                     	;# 
  7292  0398                     	;# 
  7293  0399                     	;# 
  7294  039A                     	;# 
  7295  039C                     	;# 
  7296  039D                     	;# 
  7297  039E                     	;# 
  7298  039F                     	;# 
  7299  0411                     	;# 
  7300  0411                     	;# 
  7301  0412                     	;# 
  7302  0413                     	;# 
  7303  0414                     	;# 
  7304  0415                     	;# 
  7305  0416                     	;# 
  7306  0417                     	;# 
  7307  0418                     	;# 
  7308  0418                     	;# 
  7309  0419                     	;# 
  7310  041A                     	;# 
  7311  041B                     	;# 
  7312  041C                     	;# 
  7313  041D                     	;# 
  7314  041E                     	;# 
  7315  041F                     	;# 
  7316  0498                     	;# 
  7317  0498                     	;# 
  7318  0499                     	;# 
  7319  049A                     	;# 
  7320  049B                     	;# 
  7321  049B                     	;# 
  7322  049C                     	;# 
  7323  049D                     	;# 
  7324  049E                     	;# 
  7325  049F                     	;# 
  7326  0617                     	;# 
  7327  0618                     	;# 
  7328  0619                     	;# 
  7329  0619                     	;# 
  7330  061A                     	;# 
  7331  061B                     	;# 
  7332  061C                     	;# 
  7333  061C                     	;# 
  7334  061F                     	;# 
  7335  0691                     	;# 
  7336  0692                     	;# 
  7337  0693                     	;# 
  7338  0694                     	;# 
  7339  0695                     	;# 
  7340  0696                     	;# 
  7341  0697                     	;# 
  7342  0698                     	;# 
  7343  0699                     	;# 
  7344  0711                     	;# 
  7345  0712                     	;# 
  7346  0713                     	;# 
  7347  0714                     	;# 
  7348  0715                     	;# 
  7349  0716                     	;# 
  7350  0717                     	;# 
  7351  0718                     	;# 
  7352  0719                     	;# 
  7353  0891                     	;# 
  7354  0891                     	;# 
  7355  0891                     	;# 
  7356  0891                     	;# 
  7357  0891                     	;# 
  7358  0891                     	;# 
  7359  0892                     	;# 
  7360  0892                     	;# 
  7361  0892                     	;# 
  7362  0893                     	;# 
  7363  0893                     	;# 
  7364  0893                     	;# 
  7365  0893                     	;# 
  7366  0893                     	;# 
  7367  0893                     	;# 
  7368  0894                     	;# 
  7369  0894                     	;# 
  7370  0894                     	;# 
  7371  0895                     	;# 
  7372  0895                     	;# 
  7373  0895                     	;# 
  7374  0896                     	;# 
  7375  0896                     	;# 
  7376  0896                     	;# 
  7377  089B                     	;# 
  7378  0911                     	;# 
  7379  0912                     	;# 
  7380  0913                     	;# 
  7381  0914                     	;# 
  7382  0915                     	;# 
  7383  0916                     	;# 
  7384  0918                     	;# 
  7385  0919                     	;# 
  7386  091A                     	;# 
  7387  091B                     	;# 
  7388  091C                     	;# 
  7389  091D                     	;# 
  7390  091E                     	;# 
  7391  091F                     	;# 
  7392  0E0F                     	;# 
  7393  0E10                     	;# 
  7394  0E11                     	;# 
  7395  0E12                     	;# 
  7396  0E13                     	;# 
  7397  0E14                     	;# 
  7398  0E15                     	;# 
  7399  0E16                     	;# 
  7400  0E17                     	;# 
  7401  0E18                     	;# 
  7402  0E19                     	;# 
  7403  0E1A                     	;# 
  7404  0E1B                     	;# 
  7405  0E1C                     	;# 
  7406  0E1D                     	;# 
  7407  0E1E                     	;# 
  7408  0E1F                     	;# 
  7409  0E20                     	;# 
  7410  0E21                     	;# 
  7411  0E22                     	;# 
  7412  0E24                     	;# 
  7413  0E25                     	;# 
  7414  0E28                     	;# 
  7415  0E29                     	;# 
  7416  0E2A                     	;# 
  7417  0E2B                     	;# 
  7418  0E2C                     	;# 
  7419  0E2D                     	;# 
  7420  0E2E                     	;# 
  7421  0E2F                     	;# 
  7422  0E90                     	;# 
  7423  0E91                     	;# 
  7424  0E92                     	;# 
  7425  0E94                     	;# 
  7426  0E95                     	;# 
  7427  0E9C                     	;# 
  7428  0E9D                     	;# 
  7429  0E9E                     	;# 
  7430  0E9F                     	;# 
  7431  0EA0                     	;# 
  7432  0EA1                     	;# 
  7433  0EA2                     	;# 
  7434  0EA3                     	;# 
  7435  0EA4                     	;# 
  7436  0EA5                     	;# 
  7437  0EA6                     	;# 
  7438  0EA7                     	;# 
  7439  0F0F                     	;# 
  7440  0F10                     	;# 
  7441  0F11                     	;# 
  7442  0F12                     	;# 
  7443  0F13                     	;# 
  7444  0F14                     	;# 
  7445  0F15                     	;# 
  7446  0F16                     	;# 
  7447  0F17                     	;# 
  7448  0F18                     	;# 
  7449  0F19                     	;# 
  7450  0F1A                     	;# 
  7451  0F1B                     	;# 
  7452  0F1C                     	;# 
  7453  0F1D                     	;# 
  7454  0F1E                     	;# 
  7455  0F1F                     	;# 
  7456  0F20                     	;# 
  7457  0F21                     	;# 
  7458  0F22                     	;# 
  7459  0F23                     	;# 
  7460  0F24                     	;# 
  7461  0F25                     	;# 
  7462  0F26                     	;# 
  7463  0F27                     	;# 
  7464  0F28                     	;# 
  7465  0F29                     	;# 
  7466  0F2A                     	;# 
  7467  0F2B                     	;# 
  7468  0F2C                     	;# 
  7469  0F2D                     	;# 
  7470  0F2E                     	;# 
  7471  0F2F                     	;# 
  7472  0F30                     	;# 
  7473  0F31                     	;# 
  7474  0F32                     	;# 
  7475  0F33                     	;# 
  7476  0F34                     	;# 
  7477  0F35                     	;# 
  7478  0F36                     	;# 
  7479  0F37                     	;# 
  7480  0FE4                     	;# 
  7481  0FE5                     	;# 
  7482  0FE6                     	;# 
  7483  0FE7                     	;# 
  7484  0FE8                     	;# 
  7485  0FE9                     	;# 
  7486  0FEA                     	;# 
  7487  0FEB                     	;# 
  7488  0FED                     	;# 
  7489  0FEE                     	;# 
  7490  0FEF                     	;# 
  7491                           
  7492                           	psect	idataBANK0
  7493  0000                     __pidataBANK0:	
  7494                           
  7495                           	psect	stringtext1
  7496  041E                     __pstringtext1:	
  7497  041E                     _gamma_table:	
  7498  041E  34F5               	retlw	245
  7499  041F  3403               	retlw	3
  7500  0420  34EB               	retlw	235
  7501  0421  3403               	retlw	3
  7502  0422  34E0               	retlw	224
  7503  0423  3403               	retlw	3
  7504  0424  34D6               	retlw	214
  7505  0425  3403               	retlw	3
  7506  0426  34CC               	retlw	204
  7507  0427  3403               	retlw	3
  7508  0428  34C2               	retlw	194
  7509  0429  3403               	retlw	3
  7510  042A  34B7               	retlw	183
  7511  042B  3403               	retlw	3
  7512  042C  34AD               	retlw	173
  7513  042D  3403               	retlw	3
  7514  042E  34A3               	retlw	163
  7515  042F  3403               	retlw	3
  7516  0430  3499               	retlw	153
  7517  0431  3403               	retlw	3
  7518  0432  348E               	retlw	142
  7519  0433  3403               	retlw	3
  7520  0434  3484               	retlw	132
  7521  0435  3403               	retlw	3
  7522  0436  347A               	retlw	122
  7523  0437  3403               	retlw	3
  7524  0438  3470               	retlw	112
  7525  0439  3403               	retlw	3
  7526  043A  3466               	retlw	102
  7527  043B  3403               	retlw	3
  7528  043C  345B               	retlw	91
  7529  043D  3403               	retlw	3
  7530  043E  3451               	retlw	81
  7531  043F  3403               	retlw	3
  7532  0440  3447               	retlw	71
  7533  0441  3403               	retlw	3
  7534  0442  343D               	retlw	61
  7535  0443  3403               	retlw	3
  7536  0444  3432               	retlw	50
  7537  0445  3403               	retlw	3
  7538  0446  3428               	retlw	40
  7539  0447  3403               	retlw	3
  7540  0448  341E               	retlw	30
  7541  0449  3403               	retlw	3
  7542  044A  3414               	retlw	20
  7543  044B  3403               	retlw	3
  7544  044C  3409               	retlw	9
  7545  044D  3403               	retlw	3
  7546  044E  34FF               	retlw	255
  7547  044F  3402               	retlw	2
  7548  0450  34F5               	retlw	245
  7549  0451  3402               	retlw	2
  7550  0452  34EB               	retlw	235
  7551  0453  3402               	retlw	2
  7552  0454  34E1               	retlw	225
  7553  0455  3402               	retlw	2
  7554  0456  34D6               	retlw	214
  7555  0457  3402               	retlw	2
  7556  0458  34CC               	retlw	204
  7557  0459  3402               	retlw	2
  7558  045A  34C2               	retlw	194
  7559  045B  3402               	retlw	2
  7560  045C  34B8               	retlw	184
  7561  045D  3402               	retlw	2
  7562  045E  34AD               	retlw	173
  7563  045F  3402               	retlw	2
  7564  0460  34A3               	retlw	163
  7565  0461  3402               	retlw	2
  7566  0462  3499               	retlw	153
  7567  0463  3402               	retlw	2
  7568  0464  348F               	retlw	143
  7569  0465  3402               	retlw	2
  7570  0466  3484               	retlw	132
  7571  0467  3402               	retlw	2
  7572  0468  347A               	retlw	122
  7573  0469  3402               	retlw	2
  7574  046A  3470               	retlw	112
  7575  046B  3402               	retlw	2
  7576  046C  3466               	retlw	102
  7577  046D  3402               	retlw	2
  7578  046E  345C               	retlw	92
  7579  046F  3402               	retlw	2
  7580  0470  3451               	retlw	81
  7581  0471  3402               	retlw	2
  7582  0472  3447               	retlw	71
  7583  0473  3402               	retlw	2
  7584  0474  343D               	retlw	61
  7585  0475  3402               	retlw	2
  7586  0476  3433               	retlw	51
  7587  0477  3402               	retlw	2
  7588  0478  3428               	retlw	40
  7589  0479  3402               	retlw	2
  7590  047A  341E               	retlw	30
  7591  047B  3402               	retlw	2
  7592  047C  3414               	retlw	20
  7593  047D  3402               	retlw	2
  7594  047E  340A               	retlw	10
  7595  047F  3402               	retlw	2
  7596  0480  34FF               	retlw	255
  7597  0481  3401               	retlw	1
  7598  0482  34F5               	retlw	245
  7599  0483  3401               	retlw	1
  7600  0484  34EB               	retlw	235
  7601  0485  3401               	retlw	1
  7602  0486  34E1               	retlw	225
  7603  0487  3401               	retlw	1
  7604  0488  34D7               	retlw	215
  7605  0489  3401               	retlw	1
  7606  048A  34CC               	retlw	204
  7607  048B  3401               	retlw	1
  7608  048C  34C2               	retlw	194
  7609  048D  3401               	retlw	1
  7610  048E  34B8               	retlw	184
  7611  048F  3401               	retlw	1
  7612  0490  34AE               	retlw	174
  7613  0491  3401               	retlw	1
  7614  0492  34A3               	retlw	163
  7615  0493  3401               	retlw	1
  7616  0494  3499               	retlw	153
  7617  0495  3401               	retlw	1
  7618  0496  348F               	retlw	143
  7619  0497  3401               	retlw	1
  7620  0498  3485               	retlw	133
  7621  0499  3401               	retlw	1
  7622  049A  347B               	retlw	123
  7623  049B  3401               	retlw	1
  7624  049C  3470               	retlw	112
  7625  049D  3401               	retlw	1
  7626  049E  3466               	retlw	102
  7627  049F  3401               	retlw	1
  7628  04A0  345C               	retlw	92
  7629  04A1  3401               	retlw	1
  7630  04A2  3452               	retlw	82
  7631  04A3  3401               	retlw	1
  7632  04A4  3447               	retlw	71
  7633  04A5  3401               	retlw	1
  7634  04A6  343D               	retlw	61
  7635  04A7  3401               	retlw	1
  7636  04A8  3433               	retlw	51
  7637  04A9  3401               	retlw	1
  7638  04AA  3429               	retlw	41
  7639  04AB  3401               	retlw	1
  7640  04AC  341E               	retlw	30
  7641  04AD  3401               	retlw	1
  7642  04AE  3414               	retlw	20
  7643  04AF  3401               	retlw	1
  7644  04B0  340A               	retlw	10
  7645  04B1  3401               	retlw	1
  7646  04B2  3400               	retlw	0
  7647  04B3  3401               	retlw	1
  7648  04B4  34F6               	retlw	246
  7649  04B5  3400               	retlw	0
  7650  04B6  34EB               	retlw	235
  7651  04B7  3400               	retlw	0
  7652  04B8  34E1               	retlw	225
  7653  04B9  3400               	retlw	0
  7654  04BA  34D7               	retlw	215
  7655  04BB  3400               	retlw	0
  7656  04BC  34CD               	retlw	205
  7657  04BD  3400               	retlw	0
  7658  04BE  34C2               	retlw	194
  7659  04BF  3400               	retlw	0
  7660  04C0  34B8               	retlw	184
  7661  04C1  3400               	retlw	0
  7662  04C2  34AE               	retlw	174
  7663  04C3  3400               	retlw	0
  7664  04C4  34A4               	retlw	164
  7665  04C5  3400               	retlw	0
  7666  04C6  3499               	retlw	153
  7667  04C7  3400               	retlw	0
  7668  04C8  348F               	retlw	143
  7669  04C9  3400               	retlw	0
  7670  04CA  3485               	retlw	133
  7671  04CB  3400               	retlw	0
  7672  04CC  347B               	retlw	123
  7673  04CD  3400               	retlw	0
  7674  04CE  3471               	retlw	113
  7675  04CF  3400               	retlw	0
  7676  04D0  3466               	retlw	102
  7677  04D1  3400               	retlw	0
  7678  04D2  345C               	retlw	92
  7679  04D3  3400               	retlw	0
  7680  04D4  3452               	retlw	82
  7681  04D5  3400               	retlw	0
  7682  04D6  3448               	retlw	72
  7683  04D7  3400               	retlw	0
  7684  04D8  343D               	retlw	61
  7685  04D9  3400               	retlw	0
  7686  04DA  3433               	retlw	51
  7687  04DB  3400               	retlw	0
  7688  04DC  3429               	retlw	41
  7689  04DD  3400               	retlw	0
  7690  04DE  341F               	retlw	31
  7691  04DF  3400               	retlw	0
  7692  04E0  3414               	retlw	20
  7693  04E1  3400               	retlw	0
  7694  04E2  340A               	retlw	10
  7695  04E3  3400               	retlw	0
  7696  04E4  3400               	retlw	0
  7697  04E5  3400               	retlw	0
  7698  04E6  34FF               	retlw	255
  7699  04E7  3403               	retlw	3
  7700  04E8  34FE               	retlw	254
  7701  04E9  3403               	retlw	3
  7702  04EA  34FD               	retlw	253
  7703  04EB  3403               	retlw	3
  7704  04EC  34FC               	retlw	252
  7705  04ED  3403               	retlw	3
  7706  04EE  34FA               	retlw	250
  7707  04EF  3403               	retlw	3
  7708  04F0  34F9               	retlw	249
  7709  04F1  3403               	retlw	3
  7710  04F2  34F6               	retlw	246
  7711  04F3  3403               	retlw	3
  7712  04F4  34F4               	retlw	244
  7713  04F5  3403               	retlw	3
  7714  04F6  34F2               	retlw	242
  7715  04F7  3403               	retlw	3
  7716  04F8  34EF               	retlw	239
  7717  04F9  3403               	retlw	3
  7718  04FA  34EC               	retlw	236
  7719  04FB  3403               	retlw	3
  7720  04FC  34E8               	retlw	232
  7721  04FD  3403               	retlw	3
  7722  04FE  34E5               	retlw	229
  7723  04FF  3403               	retlw	3
  7724  0500  34E1               	retlw	225
  7725  0501  3403               	retlw	3
  7726  0502  34DD               	retlw	221
  7727  0503  3403               	retlw	3
  7728  0504  34D9               	retlw	217
  7729  0505  3403               	retlw	3
  7730  0506  34D5               	retlw	213
  7731  0507  3403               	retlw	3
  7732  0508  34D0               	retlw	208
  7733  0509  3403               	retlw	3
  7734  050A  34CC               	retlw	204
  7735  050B  3403               	retlw	3
  7736  050C  34C7               	retlw	199
  7737  050D  3403               	retlw	3
  7738  050E  34C1               	retlw	193
  7739  050F  3403               	retlw	3
  7740  0510  34BC               	retlw	188
  7741  0511  3403               	retlw	3
  7742  0512  34B6               	retlw	182
  7743  0513  3403               	retlw	3
  7744  0514  34B1               	retlw	177
  7745  0515  3403               	retlw	3
  7746  0516  34AB               	retlw	171
  7747  0517  3403               	retlw	3
  7748  0518  34A4               	retlw	164
  7749  0519  3403               	retlw	3
  7750  051A  349E               	retlw	158
  7751  051B  3403               	retlw	3
  7752  051C  3498               	retlw	152
  7753  051D  3403               	retlw	3
  7754  051E  3491               	retlw	145
  7755  051F  3403               	retlw	3
  7756  0520  348A               	retlw	138
  7757  0521  3403               	retlw	3
  7758  0522  3483               	retlw	131
  7759  0523  3403               	retlw	3
  7760  0524  347B               	retlw	123
  7761  0525  3403               	retlw	3
  7762  0526  3474               	retlw	116
  7763  0527  3403               	retlw	3
  7764  0528  346C               	retlw	108
  7765  0529  3403               	retlw	3
  7766  052A  3464               	retlw	100
  7767  052B  3403               	retlw	3
  7768  052C  345C               	retlw	92
  7769  052D  3403               	retlw	3
  7770  052E  3454               	retlw	84
  7771  052F  3403               	retlw	3
  7772  0530  344C               	retlw	76
  7773  0531  3403               	retlw	3
  7774  0532  3443               	retlw	67
  7775  0533  3403               	retlw	3
  7776  0534  343A               	retlw	58
  7777  0535  3403               	retlw	3
  7778  0536  3431               	retlw	49
  7779  0537  3403               	retlw	3
  7780  0538  3428               	retlw	40
  7781  0539  3403               	retlw	3
  7782  053A  341F               	retlw	31
  7783  053B  3403               	retlw	3
  7784  053C  3416               	retlw	22
  7785  053D  3403               	retlw	3
  7786  053E  340C               	retlw	12
  7787  053F  3403               	retlw	3
  7788  0540  3402               	retlw	2
  7789  0541  3403               	retlw	3
  7790  0542  34F8               	retlw	248
  7791  0543  3402               	retlw	2
  7792  0544  34EE               	retlw	238
  7793  0545  3402               	retlw	2
  7794  0546  34E4               	retlw	228
  7795  0547  3402               	retlw	2
  7796  0548  34D9               	retlw	217
  7797  0549  3402               	retlw	2
  7798  054A  34CF               	retlw	207
  7799  054B  3402               	retlw	2
  7800  054C  34C4               	retlw	196
  7801  054D  3402               	retlw	2
  7802  054E  34B9               	retlw	185
  7803  054F  3402               	retlw	2
  7804  0550  34AE               	retlw	174
  7805  0551  3402               	retlw	2
  7806  0552  34A2               	retlw	162
  7807  0553  3402               	retlw	2
  7808  0554  3497               	retlw	151
  7809  0555  3402               	retlw	2
  7810  0556  348B               	retlw	139
  7811  0557  3402               	retlw	2
  7812  0558  347F               	retlw	127
  7813  0559  3402               	retlw	2
  7814  055A  3473               	retlw	115
  7815  055B  3402               	retlw	2
  7816  055C  3467               	retlw	103
  7817  055D  3402               	retlw	2
  7818  055E  345B               	retlw	91
  7819  055F  3402               	retlw	2
  7820  0560  344E               	retlw	78
  7821  0561  3402               	retlw	2
  7822  0562  3442               	retlw	66
  7823  0563  3402               	retlw	2
  7824  0564  3435               	retlw	53
  7825  0565  3402               	retlw	2
  7826  0566  3428               	retlw	40
  7827  0567  3402               	retlw	2
  7828  0568  341B               	retlw	27
  7829  0569  3402               	retlw	2
  7830  056A  340D               	retlw	13
  7831  056B  3402               	retlw	2
  7832  056C  3400               	retlw	0
  7833  056D  3402               	retlw	2
  7834  056E  34F2               	retlw	242
  7835  056F  3401               	retlw	1
  7836  0570  34E5               	retlw	229
  7837  0571  3401               	retlw	1
  7838  0572  34D7               	retlw	215
  7839  0573  3401               	retlw	1
  7840  0574  34C9               	retlw	201
  7841  0575  3401               	retlw	1
  7842  0576  34BA               	retlw	186
  7843  0577  3401               	retlw	1
  7844  0578  34AC               	retlw	172
  7845  0579  3401               	retlw	1
  7846  057A  349D               	retlw	157
  7847  057B  3401               	retlw	1
  7848  057C  348F               	retlw	143
  7849  057D  3401               	retlw	1
  7850  057E  3480               	retlw	128
  7851  057F  3401               	retlw	1
  7852  0580  3471               	retlw	113
  7853  0581  3401               	retlw	1
  7854  0582  3462               	retlw	98
  7855  0583  3401               	retlw	1
  7856  0584  3452               	retlw	82
  7857  0585  3401               	retlw	1
  7858  0586  3443               	retlw	67
  7859  0587  3401               	retlw	1
  7860  0588  3433               	retlw	51
  7861  0589  3401               	retlw	1
  7862  058A  3423               	retlw	35
  7863  058B  3401               	retlw	1
  7864  058C  3414               	retlw	20
  7865  058D  3401               	retlw	1
  7866  058E  3403               	retlw	3
  7867  058F  3401               	retlw	1
  7868  0590  34F3               	retlw	243
  7869  0591  3400               	retlw	0
  7870  0592  34E3               	retlw	227
  7871  0593  3400               	retlw	0
  7872  0594  34D2               	retlw	210
  7873  0595  3400               	retlw	0
  7874  0596  34C2               	retlw	194
  7875  0597  3400               	retlw	0
  7876  0598  34B1               	retlw	177
  7877  0599  3400               	retlw	0
  7878  059A  34A0               	retlw	160
  7879  059B  3400               	retlw	0
  7880  059C  348F               	retlw	143
  7881  059D  3400               	retlw	0
  7882  059E  347D               	retlw	125
  7883  059F  3400               	retlw	0
  7884  05A0  346C               	retlw	108
  7885  05A1  3400               	retlw	0
  7886  05A2  345A               	retlw	90
  7887  05A3  3400               	retlw	0
  7888  05A4  3448               	retlw	72
  7889  05A5  3400               	retlw	0
  7890  05A6  3437               	retlw	55
  7891  05A7  3400               	retlw	0
  7892  05A8  3425               	retlw	37
  7893  05A9  3400               	retlw	0
  7894  05AA  3412               	retlw	18
  7895  05AB  3400               	retlw	0
  7896  05AC  3400               	retlw	0
  7897  05AD  3400               	retlw	0
  7898  05AE  34FF               	retlw	255
  7899  05AF  3403               	retlw	3
  7900  05B0  34FF               	retlw	255
  7901  05B1  3403               	retlw	3
  7902  05B2  34FE               	retlw	254
  7903  05B3  3403               	retlw	3
  7904  05B4  34FD               	retlw	253
  7905  05B5  3403               	retlw	3
  7906  05B6  34FC               	retlw	252
  7907  05B7  3403               	retlw	3
  7908  05B8  34FB               	retlw	251
  7909  05B9  3403               	retlw	3
  7910  05BA  34FA               	retlw	250
  7911  05BB  3403               	retlw	3
  7912  05BC  34F8               	retlw	248
  7913  05BD  3403               	retlw	3
  7914  05BE  34F7               	retlw	247
  7915  05BF  3403               	retlw	3
  7916  05C0  34F5               	retlw	245
  7917  05C1  3403               	retlw	3
  7918  05C2  34F3               	retlw	243
  7919  05C3  3403               	retlw	3
  7920  05C4  34F0               	retlw	240
  7921  05C5  3403               	retlw	3
  7922  05C6  34EE               	retlw	238
  7923  05C7  3403               	retlw	3
  7924  05C8  34EB               	retlw	235
  7925  05C9  3403               	retlw	3
  7926  05CA  34E8               	retlw	232
  7927  05CB  3403               	retlw	3
  7928  05CC  34E5               	retlw	229
  7929  05CD  3403               	retlw	3
  7930  05CE  34E1               	retlw	225
  7931  05CF  3403               	retlw	3
  7932  05D0  34DE               	retlw	222
  7933  05D1  3403               	retlw	3
  7934  05D2  34DA               	retlw	218
  7935  05D3  3403               	retlw	3
  7936  05D4  34D6               	retlw	214
  7937  05D5  3403               	retlw	3
  7938  05D6  34D2               	retlw	210
  7939  05D7  3403               	retlw	3
  7940  05D8  34CD               	retlw	205
  7941  05D9  3403               	retlw	3
  7942  05DA  34C9               	retlw	201
  7943  05DB  3403               	retlw	3
  7944  05DC  34C4               	retlw	196
  7945  05DD  3403               	retlw	3
  7946  05DE  34BF               	retlw	191
  7947  05DF  3403               	retlw	3
  7948  05E0  34BA               	retlw	186
  7949  05E1  3403               	retlw	3
  7950  05E2  34B4               	retlw	180
  7951  05E3  3403               	retlw	3
  7952  05E4  34AF               	retlw	175
  7953  05E5  3403               	retlw	3
  7954  05E6  34A9               	retlw	169
  7955  05E7  3403               	retlw	3
  7956  05E8  34A3               	retlw	163
  7957  05E9  3403               	retlw	3
  7958  05EA  349D               	retlw	157
  7959  05EB  3403               	retlw	3
  7960  05EC  3496               	retlw	150
  7961  05ED  3403               	retlw	3
  7962  05EE  3490               	retlw	144
  7963  05EF  3403               	retlw	3
  7964  05F0  3489               	retlw	137
  7965  05F1  3403               	retlw	3
  7966  05F2  3482               	retlw	130
  7967  05F3  3403               	retlw	3
  7968  05F4  347A               	retlw	122
  7969  05F5  3403               	retlw	3
  7970  05F6  3473               	retlw	115
  7971  05F7  3403               	retlw	3
  7972  05F8  346B               	retlw	107
  7973  05F9  3403               	retlw	3
  7974  05FA  3463               	retlw	99
  7975  05FB  3403               	retlw	3
  7976  05FC  345B               	retlw	91
  7977  05FD  3403               	retlw	3
  7978  05FE  3453               	retlw	83
  7979  05FF  3403               	retlw	3
  7980  0600  344B               	retlw	75
  7981  0601  3403               	retlw	3
  7982  0602  3442               	retlw	66
  7983  0603  3403               	retlw	3
  7984  0604  3439               	retlw	57
  7985  0605  3403               	retlw	3
  7986  0606  3430               	retlw	48
  7987  0607  3403               	retlw	3
  7988  0608  3427               	retlw	39
  7989  0609  3403               	retlw	3
  7990  060A  341D               	retlw	29
  7991  060B  3403               	retlw	3
  7992  060C  3413               	retlw	19
  7993  060D  3403               	retlw	3
  7994  060E  3409               	retlw	9
  7995  060F  3403               	retlw	3
  7996  0610  34FF               	retlw	255
  7997  0611  3402               	retlw	2
  7998  0612  34F5               	retlw	245
  7999  0613  3402               	retlw	2
  8000  0614  34EA               	retlw	234
  8001  0615  3402               	retlw	2
  8002  0616  34E0               	retlw	224
  8003  0617  3402               	retlw	2
  8004  0618  34D5               	retlw	213
  8005  0619  3402               	retlw	2
  8006  061A  34CA               	retlw	202
  8007  061B  3402               	retlw	2
  8008  061C  34BE               	retlw	190
  8009  061D  3402               	retlw	2
  8010  061E  34B3               	retlw	179
  8011  061F  3402               	retlw	2
  8012  0620  34A7               	retlw	167
  8013  0621  3402               	retlw	2
  8014  0622  349B               	retlw	155
  8015  0623  3402               	retlw	2
  8016  0624  348F               	retlw	143
  8017  0625  3402               	retlw	2
  8018  0626  3482               	retlw	130
  8019  0627  3402               	retlw	2
  8020  0628  3476               	retlw	118
  8021  0629  3402               	retlw	2
  8022  062A  3469               	retlw	105
  8023  062B  3402               	retlw	2
  8024  062C  345C               	retlw	92
  8025  062D  3402               	retlw	2
  8026  062E  344F               	retlw	79
  8027  062F  3402               	retlw	2
  8028  0630  3441               	retlw	65
  8029  0631  3402               	retlw	2
  8030  0632  3434               	retlw	52
  8031  0633  3402               	retlw	2
  8032  0634  3426               	retlw	38
  8033  0635  3402               	retlw	2
  8034  0636  3418               	retlw	24
  8035  0637  3402               	retlw	2
  8036  0638  340A               	retlw	10
  8037  0639  3402               	retlw	2
  8038  063A  34FB               	retlw	251
  8039  063B  3401               	retlw	1
  8040  063C  34ED               	retlw	237
  8041  063D  3401               	retlw	1
  8042  063E  34DE               	retlw	222
  8043  063F  3401               	retlw	1
  8044  0640  34CF               	retlw	207
  8045  0641  3401               	retlw	1
  8046  0642  34C0               	retlw	192
  8047  0643  3401               	retlw	1
  8048  0644  34B0               	retlw	176
  8049  0645  3401               	retlw	1
  8050  0646  34A0               	retlw	160
  8051  0647  3401               	retlw	1
  8052  0648  3491               	retlw	145
  8053  0649  3401               	retlw	1
  8054  064A  3481               	retlw	129
  8055  064B  3401               	retlw	1
  8056  064C  3470               	retlw	112
  8057  064D  3401               	retlw	1
  8058  064E  3460               	retlw	96
  8059  064F  3401               	retlw	1
  8060  0650  344F               	retlw	79
  8061  0651  3401               	retlw	1
  8062  0652  343E               	retlw	62
  8063  0653  3401               	retlw	1
  8064  0654  342D               	retlw	45
  8065  0655  3401               	retlw	1
  8066  0656  341C               	retlw	28
  8067  0657  3401               	retlw	1
  8068  0658  340A               	retlw	10
  8069  0659  3401               	retlw	1
  8070  065A  34F9               	retlw	249
  8071  065B  3400               	retlw	0
  8072  065C  34E7               	retlw	231
  8073  065D  3400               	retlw	0
  8074  065E  34D5               	retlw	213
  8075  065F  3400               	retlw	0
  8076  0660  34C2               	retlw	194
  8077  0661  3400               	retlw	0
  8078  0662  34B0               	retlw	176
  8079  0663  3400               	retlw	0
  8080  0664  349D               	retlw	157
  8081  0665  3400               	retlw	0
  8082  0666  348A               	retlw	138
  8083  0667  3400               	retlw	0
  8084  0668  3477               	retlw	119
  8085  0669  3400               	retlw	0
  8086  066A  3464               	retlw	100
  8087  066B  3400               	retlw	0
  8088  066C  3450               	retlw	80
  8089  066D  3400               	retlw	0
  8090  066E  343C               	retlw	60
  8091  066F  3400               	retlw	0
  8092  0670  3429               	retlw	41
  8093  0671  3400               	retlw	0
  8094  0672  3414               	retlw	20
  8095  0673  3400               	retlw	0
  8096  0674  3400               	retlw	0
  8097  0675  3400               	retlw	0
  8098  0676  34FF               	retlw	255
  8099  0677  3403               	retlw	3
  8100  0678  34FF               	retlw	255
  8101  0679  3403               	retlw	3
  8102  067A  34FF               	retlw	255
  8103  067B  3403               	retlw	3
  8104  067C  34FE               	retlw	254
  8105  067D  3403               	retlw	3
  8106  067E  34FE               	retlw	254
  8107  067F  3403               	retlw	3
  8108  0680  34FD               	retlw	253
  8109  0681  3403               	retlw	3
  8110  0682  34FC               	retlw	252
  8111  0683  3403               	retlw	3
  8112  0684  34FB               	retlw	251
  8113  0685  3403               	retlw	3
  8114  0686  34FA               	retlw	250
  8115  0687  3403               	retlw	3
  8116  0688  34F9               	retlw	249
  8117  0689  3403               	retlw	3
  8118  068A  34F7               	retlw	247
  8119  068B  3403               	retlw	3
  8120  068C  34F5               	retlw	245
  8121  068D  3403               	retlw	3
  8122  068E  34F4               	retlw	244
  8123  068F  3403               	retlw	3
  8124  0690  34F1               	retlw	241
  8125  0691  3403               	retlw	3
  8126  0692  34EF               	retlw	239
  8127  0693  3403               	retlw	3
  8128  0694  34ED               	retlw	237
  8129  0695  3403               	retlw	3
  8130  0696  34EA               	retlw	234
  8131  0697  3403               	retlw	3
  8132  0698  34E7               	retlw	231
  8133  0699  3403               	retlw	3
  8134  069A  34E5               	retlw	229
  8135  069B  3403               	retlw	3
  8136  069C  34E1               	retlw	225
  8137  069D  3403               	retlw	3
  8138  069E  34DE               	retlw	222
  8139  069F  3403               	retlw	3
  8140  06A0  34DA               	retlw	218
  8141  06A1  3403               	retlw	3
  8142  06A2  34D7               	retlw	215
  8143  06A3  3403               	retlw	3
  8144  06A4  34D3               	retlw	211
  8145  06A5  3403               	retlw	3
  8146  06A6  34CF               	retlw	207
  8147  06A7  3403               	retlw	3
  8148  06A8  34CA               	retlw	202
  8149  06A9  3403               	retlw	3
  8150  06AA  34C6               	retlw	198
  8151  06AB  3403               	retlw	3
  8152  06AC  34C1               	retlw	193
  8153  06AD  3403               	retlw	3
  8154  06AE  34BC               	retlw	188
  8155  06AF  3403               	retlw	3
  8156  06B0  34B7               	retlw	183
  8157  06B1  3403               	retlw	3
  8158  06B2  34B1               	retlw	177
  8159  06B3  3403               	retlw	3
  8160  06B4  34AC               	retlw	172
  8161  06B5  3403               	retlw	3
  8162  06B6  34A6               	retlw	166
  8163  06B7  3403               	retlw	3
  8164  06B8  34A0               	retlw	160
  8165  06B9  3403               	retlw	3
  8166  06BA  3499               	retlw	153
  8167  06BB  3403               	retlw	3
  8168  06BC  3493               	retlw	147
  8169  06BD  3403               	retlw	3
  8170  06BE  348C               	retlw	140
  8171  06BF  3403               	retlw	3
  8172  06C0  3485               	retlw	133
  8173  06C1  3403               	retlw	3
  8174  06C2  347E               	retlw	126
  8175  06C3  3403               	retlw	3
  8176  06C4  3477               	retlw	119
  8177  06C5  3403               	retlw	3
  8178  06C6  346F               	retlw	111
  8179  06C7  3403               	retlw	3
  8180  06C8  3467               	retlw	103
  8181  06C9  3403               	retlw	3
  8182  06CA  345F               	retlw	95
  8183  06CB  3403               	retlw	3
  8184  06CC  3457               	retlw	87
  8185  06CD  3403               	retlw	3
  8186  06CE  344E               	retlw	78
  8187  06CF  3403               	retlw	3
  8188  06D0  3446               	retlw	70
  8189  06D1  3403               	retlw	3
  8190  06D2  343D               	retlw	61
  8191  06D3  3403               	retlw	3
  8192  06D4  3433               	retlw	51
  8193  06D5  3403               	retlw	3
  8194  06D6  342A               	retlw	42
  8195  06D7  3403               	retlw	3
  8196  06D8  3420               	retlw	32
  8197  06D9  3403               	retlw	3
  8198  06DA  3416               	retlw	22
  8199  06DB  3403               	retlw	3
  8200  06DC  340C               	retlw	12
  8201  06DD  3403               	retlw	3
  8202  06DE  3402               	retlw	2
  8203  06DF  3403               	retlw	3
  8204  06E0  34F7               	retlw	247
  8205  06E1  3402               	retlw	2
  8206  06E2  34EC               	retlw	236
  8207  06E3  3402               	retlw	2
  8208  06E4  34E1               	retlw	225
  8209  06E5  3402               	retlw	2
  8210  06E6  34D6               	retlw	214
  8211  06E7  3402               	retlw	2
  8212  06E8  34CA               	retlw	202
  8213  06E9  3402               	retlw	2
  8214  06EA  34BF               	retlw	191
  8215  06EB  3402               	retlw	2
  8216  06EC  34B2               	retlw	178
  8217  06ED  3402               	retlw	2
  8218  06EE  34A6               	retlw	166
  8219  06EF  3402               	retlw	2
  8220  06F0  349A               	retlw	154
  8221  06F1  3402               	retlw	2
  8222  06F2  348D               	retlw	141
  8223  06F3  3402               	retlw	2
  8224  06F4  3480               	retlw	128
  8225  06F5  3402               	retlw	2
  8226  06F6  3472               	retlw	114
  8227  06F7  3402               	retlw	2
  8228  06F8  3465               	retlw	101
  8229  06F9  3402               	retlw	2
  8230  06FA  3457               	retlw	87
  8231  06FB  3402               	retlw	2
  8232  06FC  3449               	retlw	73
  8233  06FD  3402               	retlw	2
  8234  06FE  343B               	retlw	59
  8235  06FF  3402               	retlw	2
  8236  0700  342C               	retlw	44
  8237  0701  3402               	retlw	2
  8238  0702  341D               	retlw	29
  8239  0703  3402               	retlw	2
  8240  0704  340E               	retlw	14
  8241  0705  3402               	retlw	2
  8242  0706  34FF               	retlw	255
  8243  0707  3401               	retlw	1
  8244  0708  34F0               	retlw	240
  8245  0709  3401               	retlw	1
  8246  070A  34E0               	retlw	224
  8247  070B  3401               	retlw	1
  8248  070C  34D0               	retlw	208
  8249  070D  3401               	retlw	1
  8250  070E  34BF               	retlw	191
  8251  070F  3401               	retlw	1
  8252  0710  34AF               	retlw	175
  8253  0711  3401               	retlw	1
  8254  0712  349E               	retlw	158
  8255  0713  3401               	retlw	1
  8256  0714  348D               	retlw	141
  8257  0715  3401               	retlw	1
  8258  0716  347C               	retlw	124
  8259  0717  3401               	retlw	1
  8260  0718  346A               	retlw	106
  8261  0719  3401               	retlw	1
  8262  071A  3458               	retlw	88
  8263  071B  3401               	retlw	1
  8264  071C  3446               	retlw	70
  8265  071D  3401               	retlw	1
  8266  071E  3434               	retlw	52
  8267  071F  3401               	retlw	1
  8268  0720  3421               	retlw	33
  8269  0721  3401               	retlw	1
  8270  0722  340E               	retlw	14
  8271  0723  3401               	retlw	1
  8272  0724  34FB               	retlw	251
  8273  0725  3400               	retlw	0
  8274  0726  34E7               	retlw	231
  8275  0727  3400               	retlw	0
  8276  0728  34D4               	retlw	212
  8277  0729  3400               	retlw	0
  8278  072A  34C0               	retlw	192
  8279  072B  3400               	retlw	0
  8280  072C  34AB               	retlw	171
  8281  072D  3400               	retlw	0
  8282  072E  3497               	retlw	151
  8283  072F  3400               	retlw	0
  8284  0730  3482               	retlw	130
  8285  0731  3400               	retlw	0
  8286  0732  346D               	retlw	109
  8287  0733  3400               	retlw	0
  8288  0734  3458               	retlw	88
  8289  0735  3400               	retlw	0
  8290  0736  3442               	retlw	66
  8291  0737  3400               	retlw	0
  8292  0738  342C               	retlw	44
  8293  0739  3400               	retlw	0
  8294  073A  3416               	retlw	22
  8295  073B  3400               	retlw	0
  8296  073C  3400               	retlw	0
  8297  073D  3400               	retlw	0
  8298  073E  34FF               	retlw	255
  8299  073F  3403               	retlw	3
  8300  0740  34FF               	retlw	255
  8301  0741  3403               	retlw	3
  8302  0742  34FF               	retlw	255
  8303  0743  3403               	retlw	3
  8304  0744  34FF               	retlw	255
  8305  0745  3403               	retlw	3
  8306  0746  34FE               	retlw	254
  8307  0747  3403               	retlw	3
  8308  0748  34FE               	retlw	254
  8309  0749  3403               	retlw	3
  8310  074A  34FD               	retlw	253
  8311  074B  3403               	retlw	3
  8312  074C  34FD               	retlw	253
  8313  074D  3403               	retlw	3
  8314  074E  34FC               	retlw	252
  8315  074F  3403               	retlw	3
  8316  0750  34FB               	retlw	251
  8317  0751  3403               	retlw	3
  8318  0752  34FA               	retlw	250
  8319  0753  3403               	retlw	3
  8320  0754  34F9               	retlw	249
  8321  0755  3403               	retlw	3
  8322  0756  34F7               	retlw	247
  8323  0757  3403               	retlw	3
  8324  0758  34F6               	retlw	246
  8325  0759  3403               	retlw	3
  8326  075A  34F4               	retlw	244
  8327  075B  3403               	retlw	3
  8328  075C  34F2               	retlw	242
  8329  075D  3403               	retlw	3
  8330  075E  34F0               	retlw	240
  8331  075F  3403               	retlw	3
  8332  0760  34EE               	retlw	238
  8333  0761  3403               	retlw	3
  8334  0762  34EC               	retlw	236
  8335  0763  3403               	retlw	3
  8336  0764  34EA               	retlw	234
  8337  0765  3403               	retlw	3
  8338  0766  34E7               	retlw	231
  8339  0767  3403               	retlw	3
  8340  0768  34E4               	retlw	228
  8341  0769  3403               	retlw	3
  8342  076A  34E1               	retlw	225
  8343  076B  3403               	retlw	3
  8344  076C  34DE               	retlw	222
  8345  076D  3403               	retlw	3
  8346  076E  34DA               	retlw	218
  8347  076F  3403               	retlw	3
  8348  0770  34D7               	retlw	215
  8349  0771  3403               	retlw	3
  8350  0772  34D3               	retlw	211
  8351  0773  3403               	retlw	3
  8352  0774  34CF               	retlw	207
  8353  0775  3403               	retlw	3
  8354  0776  34CB               	retlw	203
  8355  0777  3403               	retlw	3
  8356  0778  34C6               	retlw	198
  8357  0779  3403               	retlw	3
  8358  077A  34C1               	retlw	193
  8359  077B  3403               	retlw	3
  8360  077C  34BD               	retlw	189
  8361  077D  3403               	retlw	3
  8362  077E  34B7               	retlw	183
  8363  077F  3403               	retlw	3
  8364  0780  34B2               	retlw	178
  8365  0781  3403               	retlw	3
  8366  0782  34AD               	retlw	173
  8367  0783  3403               	retlw	3
  8368  0784  34A7               	retlw	167
  8369  0785  3403               	retlw	3
  8370  0786  34A1               	retlw	161
  8371  0787  3403               	retlw	3
  8372  0788  349B               	retlw	155
  8373  0789  3403               	retlw	3
  8374  078A  3494               	retlw	148
  8375  078B  3403               	retlw	3
  8376  078C  348E               	retlw	142
  8377  078D  3403               	retlw	3
  8378  078E  3487               	retlw	135
  8379  078F  3403               	retlw	3
  8380  0790  347F               	retlw	127
  8381  0791  3403               	retlw	3
  8382  0792  3478               	retlw	120
  8383  0793  3403               	retlw	3
  8384  0794  3470               	retlw	112
  8385  0795  3403               	retlw	3
  8386  0796  3468               	retlw	104
  8387  0797  3403               	retlw	3
  8388  0798  3460               	retlw	96
  8389  0799  3403               	retlw	3
  8390  079A  3458               	retlw	88
  8391  079B  3403               	retlw	3
  8392  079C  344F               	retlw	79
  8393  079D  3403               	retlw	3
  8394  079E  3446               	retlw	70
  8395  079F  3403               	retlw	3
  8396  07A0  343D               	retlw	61
  8397  07A1  3403               	retlw	3
  8398  07A2  3434               	retlw	52
  8399  07A3  3403               	retlw	3
  8400  07A4  342A               	retlw	42
  8401  07A5  3403               	retlw	3
  8402  07A6  3420               	retlw	32
  8403  07A7  3403               	retlw	3
  8404  07A8  3416               	retlw	22
  8405  07A9  3403               	retlw	3
  8406  07AA  340B               	retlw	11
  8407  07AB  3403               	retlw	3
  8408  07AC  3401               	retlw	1
  8409  07AD  3403               	retlw	3
  8410  07AE  34F6               	retlw	246
  8411  07AF  3402               	retlw	2
  8412  07B0  34EA               	retlw	234
  8413  07B1  3402               	retlw	2
  8414  07B2  34DF               	retlw	223
  8415  07B3  3402               	retlw	2
  8416  07B4  34D3               	retlw	211
  8417  07B5  3402               	retlw	2
  8418  07B6  34C7               	retlw	199
  8419  07B7  3402               	retlw	2
  8420  07B8  34BA               	retlw	186
  8421  07B9  3402               	retlw	2
  8422  07BA  34AD               	retlw	173
  8423  07BB  3402               	retlw	2
  8424  07BC  34A0               	retlw	160
  8425  07BD  3402               	retlw	2
  8426  07BE  3493               	retlw	147
  8427  07BF  3402               	retlw	2
  8428  07C0  3486               	retlw	134
  8429  07C1  3402               	retlw	2
  8430  07C2  3478               	retlw	120
  8431  07C3  3402               	retlw	2
  8432  07C4  346A               	retlw	106
  8433  07C5  3402               	retlw	2
  8434  07C6  345B               	retlw	91
  8435  07C7  3402               	retlw	2
  8436  07C8  344C               	retlw	76
  8437  07C9  3402               	retlw	2
  8438  07CA  343D               	retlw	61
  8439  07CB  3402               	retlw	2
  8440  07CC  342E               	retlw	46
  8441  07CD  3402               	retlw	2
  8442  07CE  341E               	retlw	30
  8443  07CF  3402               	retlw	2
  8444  07D0  340E               	retlw	14
  8445  07D1  3402               	retlw	2
  8446  07D2  34FE               	retlw	254
  8447  07D3  3401               	retlw	1
  8448  07D4  34EE               	retlw	238
  8449  07D5  3401               	retlw	1
  8450  07D6  34DD               	retlw	221
  8451  07D7  3401               	retlw	1
  8452  07D8  34CB               	retlw	203
  8453  07D9  3401               	retlw	1
  8454  07DA  34BA               	retlw	186
  8455  07DB  3401               	retlw	1
  8456  07DC  34A8               	retlw	168
  8457  07DD  3401               	retlw	1
  8458  07DE  3496               	retlw	150
  8459  07DF  3401               	retlw	1
  8460  07E0  3484               	retlw	132
  8461  07E1  3401               	retlw	1
  8462  07E2  3471               	retlw	113
  8463  07E3  3401               	retlw	1
  8464  07E4  345E               	retlw	94
  8465  07E5  3401               	retlw	1
  8466  07E6  344A               	retlw	74
  8467  07E7  3401               	retlw	1
  8468  07E8  3437               	retlw	55
  8469  07E9  3401               	retlw	1
  8470  07EA  3423               	retlw	35
  8471  07EB  3401               	retlw	1
  8472  07EC  340E               	retlw	14
  8473  07ED  3401               	retlw	1
  8474  07EE  34FA               	retlw	250
  8475  07EF  3400               	retlw	0
  8476  07F0  34E5               	retlw	229
  8477  07F1  3400               	retlw	0
  8478  07F2  34CF               	retlw	207
  8479  07F3  3400               	retlw	0
  8480  07F4  34BA               	retlw	186
  8481  07F5  3400               	retlw	0
  8482  07F6  34A4               	retlw	164
  8483  07F7  3400               	retlw	0
  8484  07F8  348D               	retlw	141
  8485  07F9  3400               	retlw	0
  8486  07FA  3476               	retlw	118
  8487  07FB  3400               	retlw	0
  8488  07FC  345F               	retlw	95
  8489  07FD  3400               	retlw	0
  8490  07FE  3448               	retlw	72
  8491  07FF  3400               	retlw	0
  8492  0800  3430               	retlw	48
  8493  0801  3400               	retlw	0
  8494  0802  3418               	retlw	24
  8495  0803  3400               	retlw	0
  8496  0804  3400               	retlw	0
  8497  0805  3400               	retlw	0
  8498  0806  34FF               	retlw	255
  8499  0807  3403               	retlw	3
  8500  0808  34FF               	retlw	255
  8501  0809  3403               	retlw	3
  8502  080A  34FF               	retlw	255
  8503  080B  3403               	retlw	3
  8504  080C  34FF               	retlw	255
  8505  080D  3403               	retlw	3
  8506  080E  34FF               	retlw	255
  8507  080F  3403               	retlw	3
  8508  0810  34FE               	retlw	254
  8509  0811  3403               	retlw	3
  8510  0812  34FE               	retlw	254
  8511  0813  3403               	retlw	3
  8512  0814  34FE               	retlw	254
  8513  0815  3403               	retlw	3
  8514  0816  34FD               	retlw	253
  8515  0817  3403               	retlw	3
  8516  0818  34FC               	retlw	252
  8517  0819  3403               	retlw	3
  8518  081A  34FC               	retlw	252
  8519  081B  3403               	retlw	3
  8520  081C  34FB               	retlw	251
  8521  081D  3403               	retlw	3
  8522  081E  34FA               	retlw	250
  8523  081F  3403               	retlw	3
  8524  0820  34F9               	retlw	249
  8525  0821  3403               	retlw	3
  8526  0822  34F8               	retlw	248
  8527  0823  3403               	retlw	3
  8528  0824  34F6               	retlw	246
  8529  0825  3403               	retlw	3
  8530  0826  34F5               	retlw	245
  8531  0827  3403               	retlw	3
  8532  0828  34F3               	retlw	243
  8533  0829  3403               	retlw	3
  8534  082A  34F1               	retlw	241
  8535  082B  3403               	retlw	3
  8536  082C  34EF               	retlw	239
  8537  082D  3403               	retlw	3
  8538  082E  34ED               	retlw	237
  8539  082F  3403               	retlw	3
  8540  0830  34EB               	retlw	235
  8541  0831  3403               	retlw	3
  8542  0832  34E9               	retlw	233
  8543  0833  3403               	retlw	3
  8544  0834  34E6               	retlw	230
  8545  0835  3403               	retlw	3
  8546  0836  34E3               	retlw	227
  8547  0837  3403               	retlw	3
  8548  0838  34E0               	retlw	224
  8549  0839  3403               	retlw	3
  8550  083A  34DD               	retlw	221
  8551  083B  3403               	retlw	3
  8552  083C  34DA               	retlw	218
  8553  083D  3403               	retlw	3
  8554  083E  34D6               	retlw	214
  8555  083F  3403               	retlw	3
  8556  0840  34D2               	retlw	210
  8557  0841  3403               	retlw	3
  8558  0842  34CE               	retlw	206
  8559  0843  3403               	retlw	3
  8560  0844  34CA               	retlw	202
  8561  0845  3403               	retlw	3
  8562  0846  34C6               	retlw	198
  8563  0847  3403               	retlw	3
  8564  0848  34C1               	retlw	193
  8565  0849  3403               	retlw	3
  8566  084A  34BC               	retlw	188
  8567  084B  3403               	retlw	3
  8568  084C  34B7               	retlw	183
  8569  084D  3403               	retlw	3
  8570  084E  34B2               	retlw	178
  8571  084F  3403               	retlw	3
  8572  0850  34AC               	retlw	172
  8573  0851  3403               	retlw	3
  8574  0852  34A7               	retlw	167
  8575  0853  3403               	retlw	3
  8576  0854  34A1               	retlw	161
  8577  0855  3403               	retlw	3
  8578  0856  349A               	retlw	154
  8579  0857  3403               	retlw	3
  8580  0858  3494               	retlw	148
  8581  0859  3403               	retlw	3
  8582  085A  348D               	retlw	141
  8583  085B  3403               	retlw	3
  8584  085C  3486               	retlw	134
  8585  085D  3403               	retlw	3
  8586  085E  347F               	retlw	127
  8587  085F  3403               	retlw	3
  8588  0860  3477               	retlw	119
  8589  0861  3403               	retlw	3
  8590  0862  346F               	retlw	111
  8591  0863  3403               	retlw	3
  8592  0864  3467               	retlw	103
  8593  0865  3403               	retlw	3
  8594  0866  345F               	retlw	95
  8595  0867  3403               	retlw	3
  8596  0868  3456               	retlw	86
  8597  0869  3403               	retlw	3
  8598  086A  344D               	retlw	77
  8599  086B  3403               	retlw	3
  8600  086C  3444               	retlw	68
  8601  086D  3403               	retlw	3
  8602  086E  343B               	retlw	59
  8603  086F  3403               	retlw	3
  8604  0870  3431               	retlw	49
  8605  0871  3403               	retlw	3
  8606  0872  3427               	retlw	39
  8607  0873  3403               	retlw	3
  8608  0874  341C               	retlw	28
  8609  0875  3403               	retlw	3
  8610  0876  3412               	retlw	18
  8611  0877  3403               	retlw	3
  8612  0878  3407               	retlw	7
  8613  0879  3403               	retlw	3
  8614  087A  34FC               	retlw	252
  8615  087B  3402               	retlw	2
  8616  087C  34F0               	retlw	240
  8617  087D  3402               	retlw	2
  8618  087E  34E4               	retlw	228
  8619  087F  3402               	retlw	2
  8620  0880  34D8               	retlw	216
  8621  0881  3402               	retlw	2
  8622  0882  34CB               	retlw	203
  8623  0883  3402               	retlw	2
  8624  0884  34BE               	retlw	190
  8625  0885  3402               	retlw	2
  8626  0886  34B1               	retlw	177
  8627  0887  3402               	retlw	2
  8628  0888  34A4               	retlw	164
  8629  0889  3402               	retlw	2
  8630  088A  3496               	retlw	150
  8631  088B  3402               	retlw	2
  8632  088C  3488               	retlw	136
  8633  088D  3402               	retlw	2
  8634  088E  3479               	retlw	121
  8635  088F  3402               	retlw	2
  8636  0890  346A               	retlw	106
  8637  0891  3402               	retlw	2
  8638  0892  345B               	retlw	91
  8639  0893  3402               	retlw	2
  8640  0894  344C               	retlw	76
  8641  0895  3402               	retlw	2
  8642  0896  343C               	retlw	60
  8643  0897  3402               	retlw	2
  8644  0898  342B               	retlw	43
  8645  0899  3402               	retlw	2
  8646  089A  341B               	retlw	27
  8647  089B  3402               	retlw	2
  8648  089C  340A               	retlw	10
  8649  089D  3402               	retlw	2
  8650  089E  34F8               	retlw	248
  8651  089F  3401               	retlw	1
  8652  08A0  34E7               	retlw	231
  8653  08A1  3401               	retlw	1
  8654  08A2  34D5               	retlw	213
  8655  08A3  3401               	retlw	1
  8656  08A4  34C2               	retlw	194
  8657  08A5  3401               	retlw	1
  8658  08A6  34B0               	retlw	176
  8659  08A7  3401               	retlw	1
  8660  08A8  349C               	retlw	156
  8661  08A9  3401               	retlw	1
  8662  08AA  3489               	retlw	137
  8663  08AB  3401               	retlw	1
  8664  08AC  3475               	retlw	117
  8665  08AD  3401               	retlw	1
  8666  08AE  3461               	retlw	97
  8667  08AF  3401               	retlw	1
  8668  08B0  344C               	retlw	76
  8669  08B1  3401               	retlw	1
  8670  08B2  3437               	retlw	55
  8671  08B3  3401               	retlw	1
  8672  08B4  3421               	retlw	33
  8673  08B5  3401               	retlw	1
  8674  08B6  340B               	retlw	11
  8675  08B7  3401               	retlw	1
  8676  08B8  34F5               	retlw	245
  8677  08B9  3400               	retlw	0
  8678  08BA  34DE               	retlw	222
  8679  08BB  3400               	retlw	0
  8680  08BC  34C7               	retlw	199
  8681  08BD  3400               	retlw	0
  8682  08BE  34B0               	retlw	176
  8683  08BF  3400               	retlw	0
  8684  08C0  3498               	retlw	152
  8685  08C1  3400               	retlw	0
  8686  08C2  3480               	retlw	128
  8687  08C3  3400               	retlw	0
  8688  08C4  3467               	retlw	103
  8689  08C5  3400               	retlw	0
  8690  08C6  344E               	retlw	78
  8691  08C7  3400               	retlw	0
  8692  08C8  3434               	retlw	52
  8693  08C9  3400               	retlw	0
  8694  08CA  341A               	retlw	26
  8695  08CB  3400               	retlw	0
  8696  08CC  3400               	retlw	0
  8697  08CD  3400               	retlw	0
  8698  08CE  34FF               	retlw	255
  8699  08CF  3403               	retlw	3
  8700  08D0  34FF               	retlw	255
  8701  08D1  3403               	retlw	3
  8702  08D2  34FF               	retlw	255
  8703  08D3  3403               	retlw	3
  8704  08D4  34FF               	retlw	255
  8705  08D5  3403               	retlw	3
  8706  08D6  34FF               	retlw	255
  8707  08D7  3403               	retlw	3
  8708  08D8  34FF               	retlw	255
  8709  08D9  3403               	retlw	3
  8710  08DA  34FE               	retlw	254
  8711  08DB  3403               	retlw	3
  8712  08DC  34FE               	retlw	254
  8713  08DD  3403               	retlw	3
  8714  08DE  34FE               	retlw	254
  8715  08DF  3403               	retlw	3
  8716  08E0  34FD               	retlw	253
  8717  08E1  3403               	retlw	3
  8718  08E2  34FD               	retlw	253
  8719  08E3  3403               	retlw	3
  8720  08E4  34FC               	retlw	252
  8721  08E5  3403               	retlw	3
  8722  08E6  34FC               	retlw	252
  8723  08E7  3403               	retlw	3
  8724  08E8  34FB               	retlw	251
  8725  08E9  3403               	retlw	3
  8726  08EA  34FA               	retlw	250
  8727  08EB  3403               	retlw	3
  8728  08EC  34F9               	retlw	249
  8729  08ED  3403               	retlw	3
  8730  08EE  34F8               	retlw	248
  8731  08EF  3403               	retlw	3
  8732  08F0  34F7               	retlw	247
  8733  08F1  3403               	retlw	3
  8734  08F2  34F5               	retlw	245
  8735  08F3  3403               	retlw	3
  8736  08F4  34F4               	retlw	244
  8737  08F5  3403               	retlw	3
  8738  08F6  34F2               	retlw	242
  8739  08F7  3403               	retlw	3
  8740  08F8  34F0               	retlw	240
  8741  08F9  3403               	retlw	3
  8742  08FA  34EE               	retlw	238
  8743  08FB  3403               	retlw	3
  8744  08FC  34EC               	retlw	236
  8745  08FD  3403               	retlw	3
  8746  08FE  34EA               	retlw	234
  8747  08FF  3403               	retlw	3
  8748  0900  34E7               	retlw	231
  8749  0901  3403               	retlw	3
  8750  0902  34E5               	retlw	229
  8751  0903  3403               	retlw	3
  8752  0904  34E2               	retlw	226
  8753  0905  3403               	retlw	3
  8754  0906  34DF               	retlw	223
  8755  0907  3403               	retlw	3
  8756  0908  34DC               	retlw	220
  8757  0909  3403               	retlw	3
  8758  090A  34D8               	retlw	216
  8759  090B  3403               	retlw	3
  8760  090C  34D5               	retlw	213
  8761  090D  3403               	retlw	3
  8762  090E  34D1               	retlw	209
  8763  090F  3403               	retlw	3
  8764  0910  34CD               	retlw	205
  8765  0911  3403               	retlw	3
  8766  0912  34C9               	retlw	201
  8767  0913  3403               	retlw	3
  8768  0914  34C4               	retlw	196
  8769  0915  3403               	retlw	3
  8770  0916  34C0               	retlw	192
  8771  0917  3403               	retlw	3
  8772  0918  34BB               	retlw	187
  8773  0919  3403               	retlw	3
  8774  091A  34B6               	retlw	182
  8775  091B  3403               	retlw	3
  8776  091C  34B0               	retlw	176
  8777  091D  3403               	retlw	3
  8778  091E  34AB               	retlw	171
  8779  091F  3403               	retlw	3
  8780  0920  34A5               	retlw	165
  8781  0921  3403               	retlw	3
  8782  0922  349F               	retlw	159
  8783  0923  3403               	retlw	3
  8784  0924  3498               	retlw	152
  8785  0925  3403               	retlw	3
  8786  0926  3492               	retlw	146
  8787  0927  3403               	retlw	3
  8788  0928  348B               	retlw	139
  8789  0929  3403               	retlw	3
  8790  092A  3483               	retlw	131
  8791  092B  3403               	retlw	3
  8792  092C  347C               	retlw	124
  8793  092D  3403               	retlw	3
  8794  092E  3474               	retlw	116
  8795  092F  3403               	retlw	3
  8796  0930  346C               	retlw	108
  8797  0931  3403               	retlw	3
  8798  0932  3464               	retlw	100
  8799  0933  3403               	retlw	3
  8800  0934  345B               	retlw	91
  8801  0935  3403               	retlw	3
  8802  0936  3452               	retlw	82
  8803  0937  3403               	retlw	3
  8804  0938  3449               	retlw	73
  8805  0939  3403               	retlw	3
  8806  093A  343F               	retlw	63
  8807  093B  3403               	retlw	3
  8808  093C  3435               	retlw	53
  8809  093D  3403               	retlw	3
  8810  093E  342B               	retlw	43
  8811  093F  3403               	retlw	3
  8812  0940  3420               	retlw	32
  8813  0941  3403               	retlw	3
  8814  0942  3416               	retlw	22
  8815  0943  3403               	retlw	3
  8816  0944  340A               	retlw	10
  8817  0945  3403               	retlw	3
  8818  0946  34FF               	retlw	255
  8819  0947  3402               	retlw	2
  8820  0948  34F3               	retlw	243
  8821  0949  3402               	retlw	2
  8822  094A  34E6               	retlw	230
  8823  094B  3402               	retlw	2
  8824  094C  34DA               	retlw	218
  8825  094D  3402               	retlw	2
  8826  094E  34CD               	retlw	205
  8827  094F  3402               	retlw	2
  8828  0950  34BF               	retlw	191
  8829  0951  3402               	retlw	2
  8830  0952  34B2               	retlw	178
  8831  0953  3402               	retlw	2
  8832  0954  34A4               	retlw	164
  8833  0955  3402               	retlw	2
  8834  0956  3495               	retlw	149
  8835  0957  3402               	retlw	2
  8836  0958  3486               	retlw	134
  8837  0959  3402               	retlw	2
  8838  095A  3477               	retlw	119
  8839  095B  3402               	retlw	2
  8840  095C  3467               	retlw	103
  8841  095D  3402               	retlw	2
  8842  095E  3457               	retlw	87
  8843  095F  3402               	retlw	2
  8844  0960  3447               	retlw	71
  8845  0961  3402               	retlw	2
  8846  0962  3436               	retlw	54
  8847  0963  3402               	retlw	2
  8848  0964  3425               	retlw	37
  8849  0965  3402               	retlw	2
  8850  0966  3413               	retlw	19
  8851  0967  3402               	retlw	2
  8852  0968  3401               	retlw	1
  8853  0969  3402               	retlw	2
  8854  096A  34EE               	retlw	238
  8855  096B  3401               	retlw	1
  8856  096C  34DB               	retlw	219
  8857  096D  3401               	retlw	1
  8858  096E  34C8               	retlw	200
  8859  096F  3401               	retlw	1
  8860  0970  34B4               	retlw	180
  8861  0971  3401               	retlw	1
  8862  0972  34A0               	retlw	160
  8863  0973  3401               	retlw	1
  8864  0974  348B               	retlw	139
  8865  0975  3401               	retlw	1
  8866  0976  3476               	retlw	118
  8867  0977  3401               	retlw	1
  8868  0978  3460               	retlw	96
  8869  0979  3401               	retlw	1
  8870  097A  344A               	retlw	74
  8871  097B  3401               	retlw	1
  8872  097C  3434               	retlw	52
  8873  097D  3401               	retlw	1
  8874  097E  341D               	retlw	29
  8875  097F  3401               	retlw	1
  8876  0980  3405               	retlw	5
  8877  0981  3401               	retlw	1
  8878  0982  34ED               	retlw	237
  8879  0983  3400               	retlw	0
  8880  0984  34D5               	retlw	213
  8881  0985  3400               	retlw	0
  8882  0986  34BC               	retlw	188
  8883  0987  3400               	retlw	0
  8884  0988  34A3               	retlw	163
  8885  0989  3400               	retlw	0
  8886  098A  3489               	retlw	137
  8887  098B  3400               	retlw	0
  8888  098C  346E               	retlw	110
  8889  098D  3400               	retlw	0
  8890  098E  3454               	retlw	84
  8891  098F  3400               	retlw	0
  8892  0990  3438               	retlw	56
  8893  0991  3400               	retlw	0
  8894  0992  341C               	retlw	28
  8895  0993  3400               	retlw	0
  8896  0994  3400               	retlw	0
  8897  0995  3400               	retlw	0
  8898  0996                     __end_of_gamma_table:	
  8899                           
  8900                           	psect	nvBANK0
  8901  005E                     __pnvBANK0:	
  8902  005E                     _i2c_address:	
  8903  005E                     	ds	1
  8904                           
  8905                           	psect	nvBANK1
  8906  00D7                     __pnvBANK1:	
  8907  00D7                     _TMR3_InterruptHandler:	
  8908  00D7                     	ds	2
  8909  00D9                     _timer3ReloadVal:	
  8910  00D9                     	ds	2
  8911  0003                     _STATUSbits	set	3
  8912  000C                     _PORTAbits	set	12
  8913  000D                     _PORTBbits	set	13
  8914  000E                     _PORTCbits	set	14
  8915  001F                     _T2CON	set	31
  8916  001D                     _TMR2	set	29
  8917  001E                     _PR2	set	30
  8918  0011                     _PIR1bits	set	17
  8919  0013                     _PIR3bits	set	19
  8920  000B                     _INTCONbits	set	11
  8921  008E                     _TRISCbits	set	142
  8922  009D                     _ADCON0bits	set	157
  8923  009C                     _ADRESH	set	156
  8924  009B                     _ADRESL	set	155
  8925  009F                     _ADACT	set	159
  8926  009E                     _ADCON1	set	158
  8927  009D                     _ADCON0	set	157
  8928  008E                     _TRISC	set	142
  8929  008D                     _TRISB	set	141
  8930  008C                     _TRISA	set	140
  8931  0091                     _PIE1bits	set	145
  8932  0093                     _PIE3bits	set	147
  8933  0097                     _WDTCON	set	151
  8934  010E                     _LATCbits	set	270
  8935  010D                     _LATBbits	set	269
  8936  010E                     _LATC	set	270
  8937  010D                     _LATB	set	269
  8938  010C                     _LATA	set	268
  8939  018E                     _ANSELCbits	set	398
  8940  018C                     _ANSELA	set	396
  8941  018D                     _ANSELB	set	397
  8942  018E                     _ANSELC	set	398
  8943  020E                     _WPUCbits	set	526
  8944  020D                     _WPUBbits	set	525
  8945  020E                     _WPUC	set	526
  8946  020C                     _WPUA	set	524
  8947  020D                     _WPUB	set	525
  8948  0215                     _SSP1CON1bits	set	533
  8949  0216                     _SSP1CON2bits	set	534
  8950  0214                     _SSP1STATbits	set	532
  8951  0211                     _SSP1BUF	set	529
  8952  0212                     _SSP1ADD	set	530
  8953  0213                     _SSP1MSK	set	531
  8954  0217                     _SSP1CON3	set	535
  8955  0214                     _SSP1STAT	set	532
  8956  0216                     _SSP1CON2	set	534
  8957  0215                     _SSP1CON1	set	533
  8958  028E                     _ODCONCbits	set	654
  8959  0295                     _CCPR2L	set	661
  8960  0296                     _CCPR2H	set	662
  8961  0297                     _CCP2CON	set	663
  8962  0291                     _CCPR1L	set	657
  8963  0292                     _CCPR1H	set	658
  8964  0293                     _CCP1CON	set	659
  8965  029F                     _CCPTMRSbits	set	671
  8966  028E                     _ODCONC	set	654
  8967  028D                     _ODCONB	set	653
  8968  028C                     _ODCONA	set	652
  8969  0311                     _CCPR3L	set	785
  8970  0312                     _CCPR3H	set	786
  8971  0313                     _CCP3CON	set	787
  8972  0413                     _T3CONbits	set	1043
  8973  0413                     _T3CON	set	1043
  8974  0411                     _TMR3L	set	1041
  8975  0412                     _TMR3H	set	1042
  8976  0414                     _T3GCON	set	1044
  8977  0896                     _NVMCON2	set	2198
  8978  0894                     _NVMDATH	set	2196
  8979  0893                     _NVMDATL	set	2195
  8980  0892                     _NVMADRH	set	2194
  8981  0891                     _NVMADRL	set	2193
  8982  0895                     _NVMCON1bits	set	2197
  8983  0916                     _PMD5	set	2326
  8984  0915                     _PMD4	set	2325
  8985  0914                     _PMD3	set	2324
  8986  0913                     _PMD2	set	2323
  8987  0912                     _PMD1	set	2322
  8988  0911                     _PMD0	set	2321
  8989  091E                     _OSCTUNE	set	2334
  8990  091F                     _OSCFRQ	set	2335
  8991  091D                     _OSCEN	set	2333
  8992  091B                     _OSCCON3	set	2331
  8993  0919                     _OSCCON1	set	2329
  8994  0E0F                     _PPSLOCKbits	set	3599
  8995  0E0F                     _PPSLOCK	set	3599
  8996  0E28                     _CLCIN0PPSbits	set	3624
  8997  0E29                     _CLCIN1PPSbits	set	3625
  8998  0E21                     _SSP1DATPPSbits	set	3617
  8999  0E20                     _SSP1CLKPPSbits	set	3616
  9000  0EA0                     _RC0PPSbits	set	3744
  9001  0EA1                     _RC1PPSbits	set	3745
  9002  0EA2                     _RC2PPSbits	set	3746
  9003  0E9E                     _RB6PPSbits	set	3742
  9004  0E9F                     _RB7PPSbits	set	3743
  9005  0F10                     _CLC1CON	set	3856
  9006  0F19                     _CLC1GLS3	set	3865
  9007  0F18                     _CLC1GLS2	set	3864
  9008  0F17                     _CLC1GLS1	set	3863
  9009  0F16                     _CLC1GLS0	set	3862
  9010  0F15                     _CLC1SEL3	set	3861
  9011  0F14                     _CLC1SEL2	set	3860
  9012  0F13                     _CLC1SEL1	set	3859
  9013  0F12                     _CLC1SEL0	set	3858
  9014  0F11                     _CLC1POL	set	3857
  9015  0F1A                     _CLC2CON	set	3866
  9016  0F23                     _CLC2GLS3	set	3875
  9017  0F22                     _CLC2GLS2	set	3874
  9018  0F21                     _CLC2GLS1	set	3873
  9019  0F20                     _CLC2GLS0	set	3872
  9020  0F1F                     _CLC2SEL3	set	3871
  9021  0F1E                     _CLC2SEL2	set	3870
  9022  0F1D                     _CLC2SEL1	set	3869
  9023  0F1C                     _CLC2SEL0	set	3868
  9024  0F1B                     _CLC2POL	set	3867
  9025                           
  9026                           ; #config settings
  9027  0000                     
  9028                           	psect	cinit
  9029  0032                     start_initialization:	
  9030  0032                     __initialization:	
  9031                           
  9032                           ;initializer for _I2C1_slaveWriteData
  9033  0032  3055               	movlw	85
  9034  0033  00DF               	movwf	__pdataBANK0& (0+127)
  9035                           
  9036                           ; Clear objects allocated to BANK0
  9037  0034  3020               	movlw	low __pbssBANK0
  9038  0035  0084               	movwf	4
  9039  0036  3000               	movlw	high __pbssBANK0
  9040  0037  0085               	movwf	5
  9041  0038  302A               	movlw	42
  9042  0039  318B  232A  3180   	fcall	clear_ram0
  9043                           
  9044                           ; Clear objects allocated to BANK1
  9045  003C  30A0               	movlw	low __pbssBANK1
  9046  003D  0084               	movwf	4
  9047  003E  3000               	movlw	high __pbssBANK1
  9048  003F  0085               	movwf	5
  9049  0040  3027               	movlw	39
  9050  0041  318B  232A  3180   	fcall	clear_ram0
  9051  0044                     end_of_initialization:	
  9052                           ;End of C runtime variable initialization code
  9053                           
  9054  0044                     __end_of__initialization:	
  9055  0044  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  9056  0045  0020               	movlb	0
  9057  0046  2847               	ljmp	l6912	;jump to C main() function
  9058  0047                     __pmaintext:	
  9059 ;;
  9060 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  9061 ;;
  9062 ;; *************** function _main *****************
  9063 ;; Defined at:
  9064 ;;		line 80 in file "main.c"
  9065 ;; Parameters:    Size  Location     Type
  9066 ;;		None
  9067 ;; Auto vars:     Size  Location     Type
  9068 ;;		None
  9069 ;; Return value:  Size  Location     Type
  9070 ;;                  1    wreg      void 
  9071 ;; Registers used:
  9072 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9073 ;; Tracked objects:
  9074 ;;		On entry : B1F/0
  9075 ;;		On exit  : 1E/0
  9076 ;;		Unchanged: 0/0
  9077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9082 ;;Total ram usage:        0 bytes
  9083 ;; Hardware stack levels required when called:   12
  9084 ;; This function calls:
  9085 ;;		_ClearInterrupt
  9086 ;;		_DataInitSet
  9087 ;;		_GP_Ports_FSM
  9088 ;;		_NavKey_FSM
  9089 ;;		_SYSTEM_Initialize
  9090 ;;		_TMR3_SetInterruptHandler
  9091 ;;		_TMR3_StartTimer
  9092 ;; This function is called by:
  9093 ;;		Startup code after reset
  9094 ;; This function uses a non-reentrant model
  9095 ;;
  9096                           
  9097                           
  9098                           ;psect for function _main
  9099  0047                     _main:	
  9100  0047                     l6912:	
  9101                           ;incstack = 0
  9102                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9103                           
  9104                           
  9105                           ;main.c: 82: SYSTEM_Initialize();
  9106  0047  3194  243A  3180   	fcall	_SYSTEM_Initialize
  9107                           
  9108                           ;main.c: 88: (INTCONbits.GIE = 1);
  9109  004A  178B               	bsf	11,7	;volatile
  9110                           
  9111                           ;main.c: 91: (INTCONbits.PEIE = 1);
  9112  004B  170B               	bsf	11,6	;volatile
  9113                           
  9114                           ;main.c: 99: TMR3_SetInterruptHandler(TimerInt);
  9115  004C  30AB               	movlw	low _TimerInt
  9116  004D  0021               	movlb	1	; select bank1
  9117  004E  00C7               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
  9118  004F  3009               	movlw	high _TimerInt
  9119  0050  00C8               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  9120  0051  2416  3180         	fcall	_TMR3_SetInterruptHandler
  9121                           
  9122                           ;main.c: 100: DataInitSet();
  9123  0053  2068  3180         	fcall	_DataInitSet
  9124  0055  150E               	bsf	14,2	;volatile
  9125  0056  148E               	bsf	14,1	;volatile
  9126  0057  140E               	bsf	14,0	;volatile
  9127                           
  9128                           ;main.c: 105: TMR3_StartTimer();
  9129  0058  241B  3180         	fcall	_TMR3_StartTimer
  9130                           
  9131                           ;main.c: 106: ClearInterrupt();
  9132  005A  2065  3180         	fcall	_ClearInterrupt
  9133  005C                     l6928:	
  9134                           
  9135                           ;main.c: 109: if (fsm_tmr == 1) {
  9136  005C  0021               	movlb	1	; select bank1
  9137  005D  0B46               	decfsz	_fsm_tmr^(0+128),w
  9138  005E  285C               	goto	l6928
  9139                           
  9140                           ;main.c: 111: fsm_tmr = 0;
  9141  005F  01C6               	clrf	_fsm_tmr^(0+128)
  9142                           
  9143                           ;main.c: 112: NavKey_FSM();
  9144  0060  238A  3180         	fcall	_NavKey_FSM
  9145                           
  9146                           ;main.c: 113: GP_Ports_FSM();
  9147  0062  20C1  3180         	fcall	_GP_Ports_FSM
  9148  0064  285C               	goto	l6928
  9149  0065                     __end_of_main:	
  9150  0065                     __ptext40:	
  9151 ;; *************** function _ClearInterrupt *****************
  9152 ;; Defined at:
  9153 ;;		line 66 in file "main.c"
  9154 ;; Parameters:    Size  Location     Type
  9155 ;;		None
  9156 ;; Auto vars:     Size  Location     Type
  9157 ;;		None
  9158 ;; Return value:  Size  Location     Type
  9159 ;;                  1    wreg      void 
  9160 ;; Registers used:
  9161 ;;		None
  9162 ;; Tracked objects:
  9163 ;;		On entry : 1F/8
  9164 ;;		On exit  : 1F/2
  9165 ;;		Unchanged: 0/0
  9166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9171 ;;Total ram usage:        0 bytes
  9172 ;; Hardware stack levels used:    1
  9173 ;; Hardware stack levels required when called:    7
  9174 ;; This function calls:
  9175 ;;		Nothing
  9176 ;; This function is called by:
  9177 ;;		_main
  9178 ;; This function uses a non-reentrant model
  9179 ;;
  9180                           
  9181                           
  9182                           ;psect for function _ClearInterrupt
  9183  0065                     _ClearInterrupt:	
  9184                           
  9185                           ;incstack = 0
  9186                           ; Regs used in _ClearInterrupt: []
  9187                           ;main.c: 67: do { LATBbits.LATB5 = 1; } while(0);
  9188  0065  0022               	movlb	2	; select bank2
  9189  0066  168D               	bsf	13,5	;volatile
  9190  0067  0008               	return
  9191  0068                     __end_of_ClearInterrupt:	
  9192  0068                     __ptext39:	
  9193 ;; *************** function _DataInitSet *****************
  9194 ;; Defined at:
  9195 ;;		line 54 in file "DataVariable.c"
  9196 ;; Parameters:    Size  Location     Type
  9197 ;;		None
  9198 ;; Auto vars:     Size  Location     Type
  9199 ;;		None
  9200 ;; Return value:  Size  Location     Type
  9201 ;;                  1    wreg      void 
  9202 ;; Registers used:
  9203 ;;		wreg, status,2
  9204 ;; Tracked objects:
  9205 ;;		On entry : 1F/1
  9206 ;;		On exit  : 1F/1
  9207 ;;		Unchanged: 0/0
  9208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9213 ;;Total ram usage:        0 bytes
  9214 ;; Hardware stack levels used:    1
  9215 ;; Hardware stack levels required when called:    7
  9216 ;; This function calls:
  9217 ;;		Nothing
  9218 ;; This function is called by:
  9219 ;;		_main
  9220 ;; This function uses a non-reentrant model
  9221 ;;
  9222                           
  9223                           
  9224                           ;psect for function _DataInitSet
  9225  0068                     _DataInitSet:	
  9226                           
  9227                           ;DataVariable.c: 55: GCONF = 0;
  9228                           
  9229                           ;incstack = 0
  9230                           ; Regs used in _DataInitSet: [wreg+status,2]
  9231  0068  0020               	movlb	0	; select bank0
  9232  0069  01C9               	clrf	_GCONF	;volatile
  9233                           
  9234                           ;DataVariable.c: 56: GP1CONF = 0;
  9235  006A  01C8               	clrf	_GP1CONF	;volatile
  9236                           
  9237                           ;DataVariable.c: 57: GP3CONF = 0;
  9238  006B  01C6               	clrf	_GP3CONF	;volatile
  9239                           
  9240                           ;DataVariable.c: 58: INTCONF.val = 0;
  9241  006C  01B0               	clrf	_INTCONF	;volatile
  9242  006D  01B1               	clrf	_INTCONF+1	;volatile
  9243                           
  9244                           ;DataVariable.c: 59: NSTATUS.val = 0;
  9245  006E  01B2               	clrf	_NSTATUS	;volatile
  9246  006F  01B3               	clrf	_NSTATUS+1	;volatile
  9247                           
  9248                           ;DataVariable.c: 60: CVAL.val = 0;
  9249  0070  01AC               	clrf	_CVAL	;volatile
  9250  0071  01AD               	clrf	_CVAL+1	;volatile
  9251  0072  01AE               	clrf	_CVAL+2	;volatile
  9252  0073  01AF               	clrf	_CVAL+3	;volatile
  9253                           
  9254                           ;DataVariable.c: 61: CMAX.val = 0;
  9255  0074  01A8               	clrf	_CMAX	;volatile
  9256  0075  01A9               	clrf	_CMAX+1	;volatile
  9257  0076  01AA               	clrf	_CMAX+2	;volatile
  9258  0077  01AB               	clrf	_CMAX+3	;volatile
  9259                           
  9260                           ;DataVariable.c: 62: CMIN.val = 0;
  9261  0078  01A4               	clrf	_CMIN	;volatile
  9262  0079  01A5               	clrf	_CMIN+1	;volatile
  9263  007A  01A6               	clrf	_CMIN+2	;volatile
  9264  007B  01A7               	clrf	_CMIN+3	;volatile
  9265                           
  9266                           ;DataVariable.c: 63: ISTEP.val = 1;
  9267  007C  3001               	movlw	1
  9268  007D  00A0               	movwf	_ISTEP	;volatile
  9269  007E  01A1               	clrf	_ISTEP+1	;volatile
  9270  007F  01A2               	clrf	_ISTEP+2	;volatile
  9271  0080  01A3               	clrf	_ISTEP+3	;volatile
  9272                           
  9273                           ;DataVariable.c: 64: GP1REG = 0;
  9274  0081  01C3               	clrf	_GP1REG	;volatile
  9275                           
  9276                           ;DataVariable.c: 65: GP2REG = 0;
  9277  0082  01C2               	clrf	_GP2REG	;volatile
  9278                           
  9279                           ;DataVariable.c: 66: GP3REG = 0;
  9280  0083  01C1               	clrf	_GP3REG	;volatile
  9281                           
  9282                           ;DataVariable.c: 67: C_RESET = 0;
  9283  0084  0021               	movlb	1	; select bank1
  9284  0085  01C5               	clrf	_C_RESET^(0+128)	;volatile
  9285                           
  9286                           ;DataVariable.c: 68: C_MBANK = 0;
  9287  0086  0020               	movlb	0	; select bank0
  9288  0087  01BB               	clrf	_C_MBANK	;volatile
  9289                           
  9290                           ;DataVariable.c: 69: C_CKSRC = 0;
  9291  0088  0021               	movlb	1	; select bank1
  9292  0089  01C4               	clrf	_C_CKSRC^(0+128)	;volatile
  9293                           
  9294                           ;DataVariable.c: 70: C_IPUD = 0;
  9295  008A  01C3               	clrf	_C_IPUD^(0+128)	;volatile
  9296                           
  9297                           ;DataVariable.c: 71: C_DIRE = 0;
  9298  008B  01C2               	clrf	_C_DIRE^(0+128)	;volatile
  9299                           
  9300                           ;DataVariable.c: 72: C_WRAPE = 0;
  9301  008C  0020               	movlb	0	; select bank0
  9302  008D  01BA               	clrf	_C_WRAPE	;volatile
  9303                           
  9304                           ;DataVariable.c: 73: C_DTYPE = 0;
  9305  008E  01B9               	clrf	_C_DTYPE	;volatile
  9306                           
  9307                           ;DataVariable.c: 75: DPPERIOD = 0;
  9308  008F  01C0               	clrf	_DPPERIOD	;volatile
  9309                           
  9310                           ;DataVariable.c: 76: FADEGP = 0;
  9311  0090  01BF               	clrf	_FADEGP	;volatile
  9312                           
  9313                           ;DataVariable.c: 77: GAMMAGP1=0;
  9314  0091  01BE               	clrf	_GAMMAGP1	;volatile
  9315                           
  9316                           ;DataVariable.c: 78: GAMMAGP2=0;
  9317  0092  01BD               	clrf	_GAMMAGP2	;volatile
  9318                           
  9319                           ;DataVariable.c: 79: GAMMAGP3=0;
  9320  0093  01BC               	clrf	_GAMMAGP3	;volatile
  9321                           
  9322                           ;DataVariable.c: 80: DoublePush = 0;
  9323  0094  0021               	movlb	1	; select bank1
  9324  0095  01B3               	clrf	_DoublePush^(0+128)	;volatile
  9325  0096  01B4               	clrf	(_DoublePush+1)^(0+128)	;volatile
  9326  0097  0008               	return
  9327  0098                     __end_of_DataInitSet:	
  9328  0098                     __ptext31:	
  9329 ;; *************** function _FADE_GP1 *****************
  9330 ;; Defined at:
  9331 ;;		line 26 in file "GPports.c"
  9332 ;; Parameters:    Size  Location     Type
  9333 ;;		None
  9334 ;; Auto vars:     Size  Location     Type
  9335 ;;		None
  9336 ;; Return value:  Size  Location     Type
  9337 ;;                  1    wreg      void 
  9338 ;; Registers used:
  9339 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9340 ;; Tracked objects:
  9341 ;;		On entry : 1F/0
  9342 ;;		On exit  : 18/0
  9343 ;;		Unchanged: 0/0
  9344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9349 ;;Total ram usage:        0 bytes
  9350 ;; Hardware stack levels used:    1
  9351 ;; Hardware stack levels required when called:   10
  9352 ;; This function calls:
  9353 ;;		_FadeProcessClear
  9354 ;;		_FadeProcessSet
  9355 ;;		_PWM_GP1
  9356 ;; This function is called by:
  9357 ;;		_GP_Ports_FSM
  9358 ;; This function uses a non-reentrant model
  9359 ;;
  9360                           
  9361                           
  9362                           ;psect for function _FADE_GP1
  9363  0098                     _FADE_GP1:	
  9364                           
  9365                           ;GPports.c: 28: if ((GP1CONF & 0x03) != 0x00)
  9366                           
  9367                           ;incstack = 0
  9368                           ; Regs used in _FADE_GP1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9369  0098  0848               	movf	_GP1CONF,w	;volatile
  9370  0099  3903               	andlw	3
  9371  009A  1D03               	btfss	3,2
  9372  009B  0008               	return
  9373                           
  9374                           ;GPports.c: 31: if (FADEGP == 0) {
  9375  009C  083F               	movf	_FADEGP,w	;volatile
  9376  009D  1D03               	btfss	3,2
  9377  009E  28A6               	goto	l6438
  9378                           
  9379                           ;GPports.c: 32: if (temp_gp1 != GP1REG) {
  9380  009F  0837               	movf	_temp_gp1,w
  9381  00A0  0643               	xorwf	_GP1REG,w	;volatile
  9382  00A1  1903               	skipnz
  9383  00A2  0008               	return
  9384                           
  9385                           ;GPports.c: 33: temp_gp1 = GP1REG;
  9386  00A3  0843               	movf	_GP1REG,w	;volatile
  9387  00A4  00B7               	movwf	_temp_gp1
  9388                           
  9389                           ;GPports.c: 34: PWM_GP1(temp_gp1);
  9390  00A5  2B0E               	ljmp	_PWM_GP1
  9391  00A6                     l6438:	
  9392                           
  9393                           ;GPports.c: 37: };GPports.c: 39: if (gp_fade_cnt >= FADEGP) {
  9394  00A6  083F               	movf	_FADEGP,w	;volatile
  9395  00A7  0234               	subwf	_gp_fade_cnt,w
  9396  00A8  1C03               	skipc
  9397  00A9  0008               	return
  9398                           
  9399                           ;GPports.c: 40: if (temp_gp1 != GP1REG) {
  9400  00AA  0837               	movf	_temp_gp1,w
  9401  00AB  0643               	xorwf	_GP1REG,w	;volatile
  9402  00AC  1903               	skipnz
  9403  00AD  0008               	return
  9404                           
  9405                           ;GPports.c: 42: if (temp_gp1 < GP1REG) {
  9406  00AE  0843               	movf	_GP1REG,w	;volatile
  9407  00AF  0237               	subwf	_temp_gp1,w
  9408  00B0  1C03               	btfss	3,0
  9409                           
  9410                           ;GPports.c: 43: temp_gp1++;
  9411  00B1  0AB7               	incf	_temp_gp1,f
  9412                           
  9413                           ;GPports.c: 44: };GPports.c: 45: if (temp_gp1 > GP1REG) {
  9414  00B2  0837               	movf	_temp_gp1,w
  9415  00B3  0243               	subwf	_GP1REG,w	;volatile
  9416  00B4  1C03               	btfss	3,0
  9417                           
  9418                           ;GPports.c: 46: temp_gp1--;
  9419  00B5  03B7               	decf	_temp_gp1,f
  9420                           
  9421                           ;GPports.c: 47: };GPports.c: 49: PWM_GP1(temp_gp1);
  9422  00B6  0837               	movf	_temp_gp1,w
  9423  00B7  230E  3180         	fcall	_PWM_GP1
  9424                           
  9425                           ;GPports.c: 50: if (temp_gp1 == GP1REG) {
  9426  00B9  0020               	movlb	0	; select bank0
  9427  00BA  0837               	movf	_temp_gp1,w
  9428  00BB  0643               	xorwf	_GP1REG,w	;volatile
  9429                           
  9430                           ;GPports.c: 51: FadeProcessClear(F_FGP1);
  9431  00BC  3001               	movlw	1
  9432  00BD  1D03               	skipz
  9433  00BE  28C0               	goto	L5
  9434  00BF  2B7C               	ljmp	_FadeProcessClear
  9435  00C0                     L5:	
  9436                           ;GPports.c: 53: FadeProcessSet(F_FGP1);
  9437                           
  9438                           ;GPports.c: 52: } else {
  9439                           
  9440  00C0  2B85               	ljmp	_FadeProcessSet
  9441  00C1                     __end_of_FADE_GP1:	
  9442  00C1                     __ptext21:	
  9443 ;; *************** function _GP_Ports_FSM *****************
  9444 ;; Defined at:
  9445 ;;		line 488 in file "GPports.c"
  9446 ;; Parameters:    Size  Location     Type
  9447 ;;		None
  9448 ;; Auto vars:     Size  Location     Type
  9449 ;;		None
  9450 ;; Return value:  Size  Location     Type
  9451 ;;                  1    wreg      void 
  9452 ;; Registers used:
  9453 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9454 ;; Tracked objects:
  9455 ;;		On entry : 1C/1
  9456 ;;		On exit  : 1E/0
  9457 ;;		Unchanged: 0/0
  9458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9461 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9462 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9463 ;;Total ram usage:        1 bytes
  9464 ;; Hardware stack levels used:    1
  9465 ;; Hardware stack levels required when called:   11
  9466 ;; This function calls:
  9467 ;;		_FADE_GP1
  9468 ;;		_FADE_GP2
  9469 ;;		_FADE_GP3
  9470 ;;		_GP1_FSM
  9471 ;;		_GP2_FSM
  9472 ;;		_GP3_FSM
  9473 ;; This function is called by:
  9474 ;;		_main
  9475 ;; This function uses a non-reentrant model
  9476 ;;
  9477                           
  9478                           
  9479                           ;psect for function _GP_Ports_FSM
  9480  00C1                     _GP_Ports_FSM:	
  9481                           
  9482                           ;GPports.c: 490: if (FADEGP > 0) {
  9483                           
  9484                           ;incstack = 0
  9485                           ; Regs used in _GP_Ports_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9486  00C1  0020               	movlb	0	; select bank0
  9487  00C2  083F               	movf	_FADEGP,w	;volatile
  9488  00C3  1903               	btfsc	3,2
  9489  00C4  28D8               	goto	l6902
  9490                           
  9491                           ;GPports.c: 491: FADE_GP1();
  9492  00C5  2098  3180         	fcall	_FADE_GP1
  9493                           
  9494                           ;GPports.c: 492: FADE_GP2();
  9495  00C7  2232  3180         	fcall	_FADE_GP2
  9496                           
  9497                           ;GPports.c: 493: FADE_GP3();
  9498  00C9  2208  3180         	fcall	_FADE_GP3
  9499                           
  9500                           ;GPports.c: 495: if (gp_fade_cnt++ >= FADEGP) {
  9501  00CB  0020               	movlb	0	; select bank0
  9502  00CC  0834               	movf	_gp_fade_cnt,w
  9503  00CD  0AB4               	incf	_gp_fade_cnt,f
  9504  00CE  0021               	movlb	1	; select bank1
  9505  00CF  00D6               	movwf	??_GP_Ports_FSM^(0+128)
  9506  00D0  0020               	movlb	0	; select bank0
  9507  00D1  083F               	movf	_FADEGP,w	;volatile
  9508  00D2  0021               	movlb	1	; select bank1
  9509  00D3  0256               	subwf	??_GP_Ports_FSM^(0+128),w
  9510  00D4  1C03               	skipc
  9511  00D5  28D8               	goto	l6902
  9512                           
  9513                           ;GPports.c: 496: gp_fade_cnt = 0;
  9514  00D6  0020               	movlb	0	; select bank0
  9515  00D7  01B4               	clrf	_gp_fade_cnt
  9516  00D8                     l6902:	
  9517                           
  9518                           ;GPports.c: 497: };GPports.c: 498: };GPports.c: 502: if (gp_timer++ > 10) {
  9519  00D8  0021               	movlb	1	; select bank1
  9520  00D9  083E               	movf	_gp_timer^(0+128),w
  9521  00DA  0ABE               	incf	_gp_timer^(0+128),f
  9522  00DB  00D6               	movwf	??_GP_Ports_FSM^(0+128)
  9523  00DC  300B               	movlw	11
  9524  00DD  0256               	subwf	??_GP_Ports_FSM^(0+128),w
  9525  00DE  1C03               	skipc
  9526  00DF  0008               	return
  9527                           
  9528                           ;GPports.c: 503: gp_timer = 0;
  9529  00E0  01BE               	clrf	_gp_timer^(0+128)
  9530                           
  9531                           ;GPports.c: 504: GP1_FSM();
  9532  00E1  20E6  3180         	fcall	_GP1_FSM
  9533                           
  9534                           ;GPports.c: 505: GP2_FSM();
  9535  00E3  217E  3180         	fcall	_GP2_FSM
  9536                           
  9537                           ;GPports.c: 506: GP3_FSM();
  9538  00E5  2931               	ljmp	l6618
  9539  00E6                     __end_of_GP_Ports_FSM:	
  9540  00E6                     __ptext24:	
  9541 ;; *************** function _GP1_FSM *****************
  9542 ;; Defined at:
  9543 ;;		line 349 in file "GPports.c"
  9544 ;; Parameters:    Size  Location     Type
  9545 ;;		None
  9546 ;; Auto vars:     Size  Location     Type
  9547 ;;		None
  9548 ;; Return value:  Size  Location     Type
  9549 ;;                  1    wreg      void 
  9550 ;; Registers used:
  9551 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9552 ;; Tracked objects:
  9553 ;;		On entry : 1F/1
  9554 ;;		On exit  : 1E/0
  9555 ;;		Unchanged: 0/0
  9556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9559 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9560 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9561 ;;Total ram usage:        2 bytes
  9562 ;; Hardware stack levels used:    1
  9563 ;; Hardware stack levels required when called:    9
  9564 ;; This function calls:
  9565 ;;		_ADC_GetConversion
  9566 ;;		_ADC_Initialize
  9567 ;;		_Int2StatusUpdate
  9568 ;;		_SetInterrupt
  9569 ;; This function is called by:
  9570 ;;		_GP_Ports_FSM
  9571 ;; This function uses a non-reentrant model
  9572 ;;
  9573                           
  9574                           
  9575                           ;psect for function _GP1_FSM
  9576  00E6                     _GP1_FSM:	
  9577                           
  9578                           ;GPports.c: 350: switch (gp1_fsm) {
  9579                           
  9580                           ;incstack = 0
  9581                           ; Regs used in _GP1_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9582  00E6  2926               	goto	l6566
  9583  00E7                     l6528:	
  9584                           
  9585                           ;GPports.c: 352: if ((GP1CONF & 0x03) == 0x02) {
  9586  00E7  3003               	movlw	3
  9587  00E8  0020               	movlb	0	; select bank0
  9588  00E9  0548               	andwf	_GP1CONF,w	;volatile
  9589  00EA  0021               	movlb	1	; select bank1
  9590  00EB  00CB               	movwf	??_GP1_FSM^(0+128)
  9591  00EC  3A02               	xorlw	2
  9592  00ED  1D03               	btfss	3,2
  9593  00EE  28F2               	goto	l6536
  9594                           
  9595                           ;GPports.c: 353: gp1_fsm = GP_ADC_MODE;
  9596  00EF  01BD               	clrf	_gp1_fsm^(0+128)
  9597  00F0  0ABD               	incf	_gp1_fsm^(0+128),f
  9598                           
  9599                           ;GPports.c: 354: ADC_Initialize();
  9600  00F1  2A00               	ljmp	l6218
  9601  00F2                     l6536:	
  9602                           
  9603                           ;GPports.c: 356: };GPports.c: 357: if ((GP1CONF & 0x03) == 0x03) {
  9604  00F2  3003               	movlw	3
  9605  00F3  0020               	movlb	0	; select bank0
  9606  00F4  0548               	andwf	_GP1CONF,w	;volatile
  9607  00F5  0021               	movlb	1	; select bank1
  9608  00F6  00CB               	movwf	??_GP1_FSM^(0+128)
  9609  00F7  3A03               	xorlw	3
  9610  00F8  1D03               	btfss	3,2
  9611  00F9  0008               	return
  9612  00FA                     l6538:	
  9613                           
  9614                           ;GPports.c: 358: gp1_fsm = GP_WAITRISE;
  9615  00FA  3002               	movlw	2
  9616  00FB  0021               	movlb	1	; select bank1
  9617  00FC  00BD               	movwf	_gp1_fsm^(0+128)
  9618  00FD  0008               	return
  9619  00FE                     l6542:	
  9620                           
  9621                           ;GPports.c: 364: GP1REG = (ADC_GetConversion(A_GP1) >> 2);
  9622  00FE  3012               	movlw	18
  9623  00FF  21E5               	fcall	_ADC_GetConversion
  9624  0100  0847               	movf	?_ADC_GetConversion^(0+128),w
  9625  0101  00CB               	movwf	??_GP1_FSM^(0+128)
  9626  0102  0848               	movf	(?_ADC_GetConversion+1)^(0+128),w
  9627  0103  00CC               	movwf	(??_GP1_FSM^(0+128)+1)
  9628  0104  36CC               	lsrf	(??_GP1_FSM^(0+128)+1),f
  9629  0105  0CCB               	rrf	??_GP1_FSM^(0+128),f
  9630  0106  36CC               	lsrf	(??_GP1_FSM^(0+128)+1),f
  9631  0107  0CCB               	rrf	??_GP1_FSM^(0+128),f
  9632  0108  084B               	movf	??_GP1_FSM^(0+128),w
  9633  0109  0020               	movlb	0	; select bank0
  9634  010A  00C3               	movwf	_GP1REG	;volatile
  9635                           
  9636                           ;GPports.c: 365: break;
  9637  010B  0008               	return
  9638  010C                     l1106:	
  9639                           ;GPports.c: 367: case GP_WAITRISE:
  9640                           
  9641                           
  9642                           ;GPports.c: 368: if (PORTCbits.RC2 == 1) {
  9643  010C  0020               	movlb	0	; select bank0
  9644  010D  1D0E               	btfss	14,2	;volatile
  9645  010E  0008               	return
  9646                           
  9647                           ;GPports.c: 369: GP1REG = 1;
  9648  010F  3001               	movlw	1
  9649  0110  00C3               	movwf	_GP1REG	;volatile
  9650                           
  9651                           ;GPports.c: 370: Int2StatusUpdate(E_GP1POS);
  9652  0111  21CB  3180         	fcall	_Int2StatusUpdate
  9653                           
  9654                           ;GPports.c: 371: if ((GP1CONF & 0x08) != 0) {
  9655  0113  1DC8               	btfss	_GP1CONF,3	;volatile
  9656  0114  2916               	goto	l6552
  9657                           
  9658                           ;GPports.c: 372: SetInterrupt();
  9659  0115  21D4               	fcall	_SetInterrupt
  9660  0116                     l6552:	
  9661                           
  9662                           ;GPports.c: 373: };GPports.c: 374: gp1_fsm = GP_WAITFALL;
  9663  0116  3003               	movlw	3
  9664  0117  0021               	movlb	1	; select bank1
  9665  0118  00BD               	movwf	_gp1_fsm^(0+128)
  9666  0119  0008               	return
  9667  011A                     l1109:	
  9668                           ;GPports.c: 378: case GP_WAITFALL:
  9669                           
  9670                           
  9671                           ;GPports.c: 379: if (PORTCbits.RC2 == 0) {
  9672  011A  0020               	movlb	0	; select bank0
  9673  011B  190E               	btfsc	14,2	;volatile
  9674  011C  0008               	return
  9675                           
  9676                           ;GPports.c: 380: GP1REG = 0;
  9677  011D  01C3               	clrf	_GP1REG	;volatile
  9678                           
  9679                           ;GPports.c: 381: Int2StatusUpdate(E_GP1NEG);
  9680  011E  3002               	movlw	2
  9681  011F  21CB  3180         	fcall	_Int2StatusUpdate
  9682                           
  9683                           ;GPports.c: 382: if ((GP1CONF & 0x10) != 0) {
  9684  0121  1E48               	btfss	_GP1CONF,4	;volatile
  9685  0122  28FA               	goto	l6538
  9686                           
  9687                           ;GPports.c: 383: SetInterrupt();
  9688  0123  21D4  3180         	fcall	_SetInterrupt
  9689  0125  28FA               	goto	l6538
  9690  0126                     l6566:	
  9691  0126  083D               	movf	_gp1_fsm^(0+128),w
  9692                           
  9693                           ; Switch size 1, requested type "speed"
  9694                           ; Number of cases is 4, Range of values is 0 to 3
  9695                           ; switch strategies available:
  9696                           ; Name         Instructions Cycles
  9697                           ; direct_byte           14     6 (fixed)
  9698                           ; simple_byte           13     7 (average)
  9699                           ; jumptable            260     6 (fixed)
  9700                           ;	Chosen strategy is direct_byte
  9701  0127  0084               	movwf	4
  9702  0128  3004               	movlw	4
  9703  0129  0204               	subwf	4,w
  9704  012A  1803               	skipnc
  9705  012B  0008               	return
  9706  012C  3190               	movlp	high S7272
  9707  012D  3504               	lslf	4,w
  9708  012E  3E4C               	addlw	low S7272
  9709  012F  0082               	movwf	2
  9710  0130  0008               	return
  9711  0131                     __end_of_GP1_FSM:	
  9712  0131                     __ptext22:	
  9713 ;; *************** function _GP3_FSM *****************
  9714 ;; Defined at:
  9715 ;;		line 443 in file "GPports.c"
  9716 ;; Parameters:    Size  Location     Type
  9717 ;;		None
  9718 ;; Auto vars:     Size  Location     Type
  9719 ;;		None
  9720 ;; Return value:  Size  Location     Type
  9721 ;;                  1    wreg      void 
  9722 ;; Registers used:
  9723 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9724 ;; Tracked objects:
  9725 ;;		On entry : 1E/1
  9726 ;;		On exit  : 1E/0
  9727 ;;		Unchanged: 0/0
  9728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9731 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9732 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9733 ;;Total ram usage:        2 bytes
  9734 ;; Hardware stack levels used:    1
  9735 ;; Hardware stack levels required when called:    9
  9736 ;; This function calls:
  9737 ;;		_ADC_GetConversion
  9738 ;;		_ADC_Initialize
  9739 ;;		_Int2StatusUpdate
  9740 ;;		_SetInterrupt
  9741 ;; This function is called by:
  9742 ;;		_GP_Ports_FSM
  9743 ;; This function uses a non-reentrant model
  9744 ;;
  9745                           
  9746                           
  9747                           ;psect for function _GP3_FSM
  9748  0131                     _GP3_FSM:	
  9749  0131                     l6618:	
  9750                           ;incstack = 0
  9751                           ; Regs used in _GP3_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9752                           
  9753                           
  9754                           ;GPports.c: 445: switch (gp3_fsm) {
  9755  0131  2972               	goto	l6658
  9756  0132                     l6620:	
  9757                           
  9758                           ;GPports.c: 447: if ((GP3CONF & 0x03) == 0x02) {
  9759  0132  3003               	movlw	3
  9760  0133  0020               	movlb	0	; select bank0
  9761  0134  0546               	andwf	_GP3CONF,w	;volatile
  9762  0135  0021               	movlb	1	; select bank1
  9763  0136  00CB               	movwf	??_GP3_FSM^(0+128)
  9764  0137  3A02               	xorlw	2
  9765  0138  1D03               	btfss	3,2
  9766  0139  293D               	goto	l6628
  9767                           
  9768                           ;GPports.c: 448: gp3_fsm = GP_ADC_MODE;
  9769  013A  01BB               	clrf	_gp3_fsm^(0+128)
  9770  013B  0ABB               	incf	_gp3_fsm^(0+128),f
  9771                           
  9772                           ;GPports.c: 449: ADC_Initialize();
  9773  013C  2A00               	ljmp	l6218
  9774  013D                     l6628:	
  9775                           
  9776                           ;GPports.c: 451: };GPports.c: 453: if ((GP3CONF & 0x03) == 0x03) {
  9777  013D  3003               	movlw	3
  9778  013E  0020               	movlb	0	; select bank0
  9779  013F  0546               	andwf	_GP3CONF,w	;volatile
  9780  0140  0021               	movlb	1	; select bank1
  9781  0141  00CB               	movwf	??_GP3_FSM^(0+128)
  9782  0142  3A03               	xorlw	3
  9783  0143  1D03               	btfss	3,2
  9784  0144  0008               	return
  9785  0145                     l6630:	
  9786                           
  9787                           ;GPports.c: 454: gp3_fsm = GP_WAITRISE;
  9788  0145  3002               	movlw	2
  9789  0146  0021               	movlb	1	; select bank1
  9790  0147  00BB               	movwf	_gp3_fsm^(0+128)
  9791  0148  0008               	return
  9792  0149                     l6634:	
  9793                           
  9794                           ;GPports.c: 460: GP3REG = (ADC_GetConversion(A_GP3) >> 2);
  9795  0149  3010               	movlw	16
  9796  014A  21E5               	fcall	_ADC_GetConversion
  9797  014B  0847               	movf	?_ADC_GetConversion^(0+128),w
  9798  014C  00CB               	movwf	??_GP3_FSM^(0+128)
  9799  014D  0848               	movf	(?_ADC_GetConversion+1)^(0+128),w
  9800  014E  00CC               	movwf	(??_GP3_FSM^(0+128)+1)
  9801  014F  36CC               	lsrf	(??_GP3_FSM^(0+128)+1),f
  9802  0150  0CCB               	rrf	??_GP3_FSM^(0+128),f
  9803  0151  36CC               	lsrf	(??_GP3_FSM^(0+128)+1),f
  9804  0152  0CCB               	rrf	??_GP3_FSM^(0+128),f
  9805  0153  084B               	movf	??_GP3_FSM^(0+128),w
  9806  0154  0020               	movlb	0	; select bank0
  9807  0155  00C1               	movwf	_GP3REG	;volatile
  9808                           
  9809                           ;GPports.c: 461: break;
  9810  0156  0008               	return
  9811  0157                     l1136:	
  9812                           ;GPports.c: 463: case GP_WAITRISE:
  9813                           
  9814                           
  9815                           ;GPports.c: 464: if (PORTCbits.RC0 == 1) {
  9816  0157  0020               	movlb	0	; select bank0
  9817  0158  1C0E               	btfss	14,0	;volatile
  9818  0159  0008               	return
  9819                           
  9820                           ;GPports.c: 465: GP3REG = 1;
  9821  015A  3001               	movlw	1
  9822  015B  00C1               	movwf	_GP3REG	;volatile
  9823                           
  9824                           ;GPports.c: 466: Int2StatusUpdate(E_GP3POS);
  9825  015C  3010               	movlw	16
  9826  015D  21CB  3180         	fcall	_Int2StatusUpdate
  9827                           
  9828                           ;GPports.c: 467: if ((GP3CONF & 0x08) != 0) {
  9829  015F  1DC6               	btfss	_GP3CONF,3	;volatile
  9830  0160  2962               	goto	l6644
  9831                           
  9832                           ;GPports.c: 468: SetInterrupt();
  9833  0161  21D4               	fcall	_SetInterrupt
  9834  0162                     l6644:	
  9835                           
  9836                           ;GPports.c: 469: };GPports.c: 470: gp3_fsm = GP_WAITFALL;
  9837  0162  3003               	movlw	3
  9838  0163  0021               	movlb	1	; select bank1
  9839  0164  00BB               	movwf	_gp3_fsm^(0+128)
  9840  0165  0008               	return
  9841  0166                     l1139:	
  9842                           ;GPports.c: 474: case GP_WAITFALL:
  9843                           
  9844                           
  9845                           ;GPports.c: 475: if (PORTCbits.RC0 == 0) {
  9846  0166  0020               	movlb	0	; select bank0
  9847  0167  180E               	btfsc	14,0	;volatile
  9848  0168  0008               	return
  9849                           
  9850                           ;GPports.c: 477: GP3REG = 0;
  9851  0169  01C1               	clrf	_GP3REG	;volatile
  9852                           
  9853                           ;GPports.c: 478: Int2StatusUpdate(E_GP3NEG);
  9854  016A  3020               	movlw	32
  9855  016B  21CB  3180         	fcall	_Int2StatusUpdate
  9856                           
  9857                           ;GPports.c: 479: if ((GP3CONF & 0x10) != 0) {
  9858  016D  1E46               	btfss	_GP3CONF,4	;volatile
  9859  016E  2945               	goto	l6630
  9860                           
  9861                           ;GPports.c: 480: SetInterrupt();
  9862  016F  21D4  3180         	fcall	_SetInterrupt
  9863  0171  2945               	goto	l6630
  9864  0172                     l6658:	
  9865  0172  0021               	movlb	1	; select bank1
  9866  0173  083B               	movf	_gp3_fsm^(0+128),w
  9867                           
  9868                           ; Switch size 1, requested type "speed"
  9869                           ; Number of cases is 4, Range of values is 0 to 3
  9870                           ; switch strategies available:
  9871                           ; Name         Instructions Cycles
  9872                           ; direct_byte           14     6 (fixed)
  9873                           ; simple_byte           13     7 (average)
  9874                           ; jumptable            260     6 (fixed)
  9875                           ;	Chosen strategy is direct_byte
  9876  0174  0084               	movwf	4
  9877  0175  3004               	movlw	4
  9878  0176  0204               	subwf	4,w
  9879  0177  1803               	skipnc
  9880  0178  0008               	return
  9881  0179  3189               	movlp	high S7268
  9882  017A  3504               	lslf	4,w
  9883  017B  3EA2               	addlw	low S7268
  9884  017C  0082               	movwf	2
  9885  017D  0008               	return
  9886  017E                     __end_of_GP3_FSM:	
  9887  017E                     __ptext23:	
  9888 ;; *************** function _GP2_FSM *****************
  9889 ;; Defined at:
  9890 ;;		line 394 in file "GPports.c"
  9891 ;; Parameters:    Size  Location     Type
  9892 ;;		None
  9893 ;; Auto vars:     Size  Location     Type
  9894 ;;		None
  9895 ;; Return value:  Size  Location     Type
  9896 ;;                  1    wreg      void 
  9897 ;; Registers used:
  9898 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9899 ;; Tracked objects:
  9900 ;;		On entry : 1E/1
  9901 ;;		On exit  : 1E/0
  9902 ;;		Unchanged: 0/0
  9903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9906 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9907 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9908 ;;Total ram usage:        2 bytes
  9909 ;; Hardware stack levels used:    1
  9910 ;; Hardware stack levels required when called:    9
  9911 ;; This function calls:
  9912 ;;		_ADC_GetConversion
  9913 ;;		_ADC_Initialize
  9914 ;;		_Int2StatusUpdate
  9915 ;;		_SetInterrupt
  9916 ;; This function is called by:
  9917 ;;		_GP_Ports_FSM
  9918 ;; This function uses a non-reentrant model
  9919 ;;
  9920                           
  9921                           
  9922                           ;psect for function _GP2_FSM
  9923  017E                     _GP2_FSM:	
  9924                           
  9925                           ;GPports.c: 396: switch (gp2_fsm) {
  9926                           
  9927                           ;incstack = 0
  9928                           ; Regs used in _GP2_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9929  017E  29BF               	goto	l6612
  9930  017F                     l6574:	
  9931                           
  9932                           ;GPports.c: 398: if ((GP2CONF & 0x03) == 0x02) {
  9933  017F  3003               	movlw	3
  9934  0180  0020               	movlb	0	; select bank0
  9935  0181  0547               	andwf	_GP2CONF,w	;volatile
  9936  0182  0021               	movlb	1	; select bank1
  9937  0183  00CB               	movwf	??_GP2_FSM^(0+128)
  9938  0184  3A02               	xorlw	2
  9939  0185  1D03               	btfss	3,2
  9940  0186  298A               	goto	l6582
  9941                           
  9942                           ;GPports.c: 399: gp2_fsm = GP_ADC_MODE;
  9943  0187  01BC               	clrf	_gp2_fsm^(0+128)
  9944  0188  0ABC               	incf	_gp2_fsm^(0+128),f
  9945                           
  9946                           ;GPports.c: 400: ADC_Initialize();
  9947  0189  2A00               	ljmp	l6218
  9948  018A                     l6582:	
  9949                           
  9950                           ;GPports.c: 402: };GPports.c: 404: if ((GP2CONF & 0x03) == 0x03) {
  9951  018A  3003               	movlw	3
  9952  018B  0020               	movlb	0	; select bank0
  9953  018C  0547               	andwf	_GP2CONF,w	;volatile
  9954  018D  0021               	movlb	1	; select bank1
  9955  018E  00CB               	movwf	??_GP2_FSM^(0+128)
  9956  018F  3A03               	xorlw	3
  9957  0190  1D03               	btfss	3,2
  9958  0191  0008               	return
  9959  0192                     l6584:	
  9960                           
  9961                           ;GPports.c: 405: gp2_fsm = GP_WAITRISE;
  9962  0192  3002               	movlw	2
  9963  0193  0021               	movlb	1	; select bank1
  9964  0194  00BC               	movwf	_gp2_fsm^(0+128)
  9965  0195  0008               	return
  9966  0196                     l6588:	
  9967                           
  9968                           ;GPports.c: 411: GP2REG = (ADC_GetConversion(A_GP2) >> 2);
  9969  0196  3011               	movlw	17
  9970  0197  21E5               	fcall	_ADC_GetConversion
  9971  0198  0847               	movf	?_ADC_GetConversion^(0+128),w
  9972  0199  00CB               	movwf	??_GP2_FSM^(0+128)
  9973  019A  0848               	movf	(?_ADC_GetConversion+1)^(0+128),w
  9974  019B  00CC               	movwf	(??_GP2_FSM^(0+128)+1)
  9975  019C  36CC               	lsrf	(??_GP2_FSM^(0+128)+1),f
  9976  019D  0CCB               	rrf	??_GP2_FSM^(0+128),f
  9977  019E  36CC               	lsrf	(??_GP2_FSM^(0+128)+1),f
  9978  019F  0CCB               	rrf	??_GP2_FSM^(0+128),f
  9979  01A0  084B               	movf	??_GP2_FSM^(0+128),w
  9980  01A1  0020               	movlb	0	; select bank0
  9981  01A2  00C2               	movwf	_GP2REG	;volatile
  9982                           
  9983                           ;GPports.c: 412: break;
  9984  01A3  0008               	return
  9985  01A4                     l1121:	
  9986                           ;GPports.c: 414: case GP_WAITRISE:
  9987                           
  9988                           
  9989                           ;GPports.c: 415: if (PORTCbits.RC1 == 1) {
  9990  01A4  0020               	movlb	0	; select bank0
  9991  01A5  1C8E               	btfss	14,1	;volatile
  9992  01A6  0008               	return
  9993                           
  9994                           ;GPports.c: 416: GP2REG = 1;
  9995  01A7  3001               	movlw	1
  9996  01A8  00C2               	movwf	_GP2REG	;volatile
  9997                           
  9998                           ;GPports.c: 417: Int2StatusUpdate(E_GP2POS);
  9999  01A9  3004               	movlw	4
 10000  01AA  21CB  3180         	fcall	_Int2StatusUpdate
 10001                           
 10002                           ;GPports.c: 418: if ((GP2CONF & 0x08) != 0) {
 10003  01AC  1DC7               	btfss	_GP2CONF,3	;volatile
 10004  01AD  29AF               	goto	l6598
 10005                           
 10006                           ;GPports.c: 419: SetInterrupt();
 10007  01AE  21D4               	fcall	_SetInterrupt
 10008  01AF                     l6598:	
 10009                           
 10010                           ;GPports.c: 420: };GPports.c: 421: gp2_fsm = GP_WAITFALL;
 10011  01AF  3003               	movlw	3
 10012  01B0  0021               	movlb	1	; select bank1
 10013  01B1  00BC               	movwf	_gp2_fsm^(0+128)
 10014  01B2  0008               	return
 10015  01B3                     l1124:	
 10016                           ;GPports.c: 425: case GP_WAITFALL:
 10017                           
 10018                           
 10019                           ;GPports.c: 426: if (PORTCbits.RC1 == 0) {
 10020  01B3  0020               	movlb	0	; select bank0
 10021  01B4  188E               	btfsc	14,1	;volatile
 10022  01B5  0008               	return
 10023                           
 10024                           ;GPports.c: 428: GP2REG = 0;
 10025  01B6  01C2               	clrf	_GP2REG	;volatile
 10026                           
 10027                           ;GPports.c: 429: Int2StatusUpdate(E_GP2NEG);
 10028  01B7  3008               	movlw	8
 10029  01B8  21CB  3180         	fcall	_Int2StatusUpdate
 10030                           
 10031                           ;GPports.c: 430: if ((GP2CONF & 0x10) != 0) {
 10032  01BA  1E47               	btfss	_GP2CONF,4	;volatile
 10033  01BB  2992               	goto	l6584
 10034                           
 10035                           ;GPports.c: 431: SetInterrupt();
 10036  01BC  21D4  3180         	fcall	_SetInterrupt
 10037  01BE  2992               	goto	l6584
 10038  01BF                     l6612:	
 10039  01BF  0021               	movlb	1	; select bank1
 10040  01C0  083C               	movf	_gp2_fsm^(0+128),w
 10041                           
 10042                           ; Switch size 1, requested type "speed"
 10043                           ; Number of cases is 4, Range of values is 0 to 3
 10044                           ; switch strategies available:
 10045                           ; Name         Instructions Cycles
 10046                           ; direct_byte           14     6 (fixed)
 10047                           ; simple_byte           13     7 (average)
 10048                           ; jumptable            260     6 (fixed)
 10049                           ;	Chosen strategy is direct_byte
 10050  01C1  0084               	movwf	4
 10051  01C2  3004               	movlw	4
 10052  01C3  0204               	subwf	4,w
 10053  01C4  1803               	skipnc
 10054  01C5  0008               	return
 10055  01C6  3190               	movlp	high S7270
 10056  01C7  3504               	lslf	4,w
 10057  01C8  3E44               	addlw	low S7270
 10058  01C9  0082               	movwf	2
 10059  01CA  0008               	return
 10060  01CB                     __end_of_GP2_FSM:	
 10061  01CB                     __ptext37:	
 10062 ;; *************** function _Int2StatusUpdate *****************
 10063 ;; Defined at:
 10064 ;;		line 110 in file "DataVariable.c"
 10065 ;; Parameters:    Size  Location     Type
 10066 ;;  stat            1    wreg     enum E86
 10067 ;; Auto vars:     Size  Location     Type
 10068 ;;  stat            1    2[BANK1 ] enum E86
 10069 ;; Return value:  Size  Location     Type
 10070 ;;                  1    wreg      void 
 10071 ;; Registers used:
 10072 ;;		wreg, status,2, status,0, pclath, cstack
 10073 ;; Tracked objects:
 10074 ;;		On entry : 1F/0
 10075 ;;		On exit  : 1F/0
 10076 ;;		Unchanged: 0/0
 10077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10079 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10081 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10082 ;;Total ram usage:        1 bytes
 10083 ;; Hardware stack levels used:    1
 10084 ;; Hardware stack levels required when called:    8
 10085 ;; This function calls:
 10086 ;;		_NavKeyStatusUpdate
 10087 ;; This function is called by:
 10088 ;;		_FadeProcessClear
 10089 ;;		_GP1_FSM
 10090 ;;		_GP2_FSM
 10091 ;;		_GP3_FSM
 10092 ;; This function uses a non-reentrant model
 10093 ;;
 10094                           
 10095                           
 10096                           ;psect for function _Int2StatusUpdate
 10097  01CB                     _Int2StatusUpdate:	
 10098                           
 10099                           ;incstack = 0
 10100                           ; Regs used in _Int2StatusUpdate: [wreg+status,2+status,0+pclath+cstack]
 10101                           ;Int2StatusUpdate@stat stored from wreg
 10102  01CB  0021               	movlb	1	; select bank1
 10103  01CC  00C9               	movwf	Int2StatusUpdate@stat^(0+128)
 10104                           
 10105                           ;DataVariable.c: 111: SSTATUS |= (uint8_t) stat;
 10106  01CD  0020               	movlb	0	; select bank0
 10107  01CE  04C5               	iorwf	_SSTATUS,f	;volatile
 10108                           
 10109                           ;DataVariable.c: 112: NavKeyStatusUpdate(S_INT2);
 10110  01CF  0021               	movlb	1	; select bank1
 10111  01D0  3080               	movlw	128
 10112  01D1  01C7               	clrf	NavKeyStatusUpdate@stat^(0+128)
 10113  01D2  00C8               	movwf	(NavKeyStatusUpdate@stat^(0+128)+1)
 10114  01D3  2BED               	ljmp	l6194
 10115  01D4                     __end_of_Int2StatusUpdate:	
 10116  01D4                     __ptext36:	
 10117 ;; *************** function _SetInterrupt *****************
 10118 ;; Defined at:
 10119 ;;		line 56 in file "main.c"
 10120 ;; Parameters:    Size  Location     Type
 10121 ;;		None
 10122 ;; Auto vars:     Size  Location     Type
 10123 ;;		None
 10124 ;; Return value:  Size  Location     Type
 10125 ;;                  1    wreg      void 
 10126 ;; Registers used:
 10127 ;;		wreg, status,2, status,0
 10128 ;; Tracked objects:
 10129 ;;		On entry : 1E/0
 10130 ;;		On exit  : 1C/0
 10131 ;;		Unchanged: 0/0
 10132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10135 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10136 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10137 ;;Total ram usage:        2 bytes
 10138 ;; Hardware stack levels used:    1
 10139 ;; Hardware stack levels required when called:    7
 10140 ;; This function calls:
 10141 ;;		Nothing
 10142 ;; This function is called by:
 10143 ;;		_FadeProcessClear
 10144 ;;		_GP1_FSM
 10145 ;;		_GP2_FSM
 10146 ;;		_GP3_FSM
 10147 ;;		_NavKey_CentralButton_FSM
 10148 ;;		_NavKey_UPButton_FSM
 10149 ;;		_NavKey_DWButton_FSM
 10150 ;;		_NavKey_RTButton_FSM
 10151 ;;		_NavKey_LTButton_FSM
 10152 ;; This function uses a non-reentrant model
 10153 ;;
 10154                           
 10155                           
 10156                           ;psect for function _SetInterrupt
 10157  01D4                     _SetInterrupt:	
 10158  01D4                     l6196:	
 10159                           ;incstack = 0
 10160                           ; Regs used in _SetInterrupt: [wreg+status,2+status,0]
 10161                           
 10162                           
 10163                           ;main.c: 58: if ((NSTATUS.val & INTCONF.val) != 0) {
 10164  01D4  0020               	movlb	0	; select bank0
 10165  01D5  0830               	movf	_INTCONF,w	;volatile
 10166  01D6  0532               	andwf	_NSTATUS,w	;volatile
 10167  01D7  0021               	movlb	1	; select bank1
 10168  01D8  00C7               	movwf	??_SetInterrupt^(0+128)
 10169  01D9  0020               	movlb	0	; select bank0
 10170  01DA  0831               	movf	_INTCONF+1,w	;volatile
 10171  01DB  0533               	andwf	_NSTATUS+1,w	;volatile
 10172  01DC  0021               	movlb	1	; select bank1
 10173  01DD  00C8               	movwf	(??_SetInterrupt+1)^(0+128)
 10174  01DE  0847               	movf	??_SetInterrupt^(0+128),w
 10175  01DF  0448               	iorwf	(??_SetInterrupt^(0+128)+1),w
 10176  01E0  1903               	btfsc	3,2
 10177  01E1  0008               	return
 10178                           
 10179                           ;main.c: 59: do { LATBbits.LATB5 = 0; } while(0);
 10180  01E2  0022               	movlb	2	; select bank2
 10181  01E3  128D               	bcf	13,5	;volatile
 10182  01E4  0008               	return
 10183  01E5                     __end_of_SetInterrupt:	
 10184  01E5                     __ptext26:	
 10185 ;; *************** function _ADC_GetConversion *****************
 10186 ;; Defined at:
 10187 ;;		line 113 in file "mcc_generated_files/adc.c"
 10188 ;; Parameters:    Size  Location     Type
 10189 ;;  channel         1    wreg     enum E6505
 10190 ;; Auto vars:     Size  Location     Type
 10191 ;;  channel         1    3[BANK1 ] enum E6505
 10192 ;; Return value:  Size  Location     Type
 10193 ;;                  2    0[BANK1 ] unsigned int 
 10194 ;; Registers used:
 10195 ;;		wreg, status,2, status,0
 10196 ;; Tracked objects:
 10197 ;;		On entry : 1E/1
 10198 ;;		On exit  : 1F/1
 10199 ;;		Unchanged: 0/0
 10200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10201 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10202 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10203 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10204 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10205 ;;Total ram usage:        4 bytes
 10206 ;; Hardware stack levels used:    1
 10207 ;; Hardware stack levels required when called:    7
 10208 ;; This function calls:
 10209 ;;		Nothing
 10210 ;; This function is called by:
 10211 ;;		_GP1_FSM
 10212 ;;		_GP2_FSM
 10213 ;;		_GP3_FSM
 10214 ;; This function uses a non-reentrant model
 10215 ;;
 10216                           
 10217                           
 10218                           ;psect for function _ADC_GetConversion
 10219  01E5                     _ADC_GetConversion:	
 10220                           
 10221                           ;incstack = 0
 10222                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
 10223                           ;ADC_GetConversion@channel stored from wreg
 10224  01E5  0021               	movlb	1	; select bank1
 10225  01E6  00CA               	movwf	ADC_GetConversion@channel^(0+128)
 10226                           
 10227                           ;adc.c: 116: ADCON0bits.CHS = channel;
 10228  01E7  00C9               	movwf	??_ADC_GetConversion^(0+128)
 10229  01E8  0DC9               	rlf	??_ADC_GetConversion^(0+128),f
 10230  01E9  0DC9               	rlf	??_ADC_GetConversion^(0+128),f
 10231  01EA  081D               	movf	29,w	;volatile
 10232  01EB  0649               	xorwf	??_ADC_GetConversion^(0+128),w
 10233  01EC  3903               	andlw	-253
 10234  01ED  0649               	xorwf	??_ADC_GetConversion^(0+128),w
 10235  01EE  009D               	movwf	29	;volatile
 10236                           
 10237                           ;adc.c: 119: ADCON0bits.ADON = 1;
 10238  01EF  141D               	bsf	29,0	;volatile
 10239                           
 10240                           ;adc.c: 122: _delay((unsigned long)((5)*(32000000/4000000.0)));
 10241  01F0  300D               	movlw	13
 10242  01F1                     u4637:	
 10243  01F1  0B89               	decfsz	9,f
 10244  01F2  29F1               	goto	u4637
 10245  01F3  0000               	nop
 10246                           
 10247                           ;adc.c: 125: ADCON0bits.ADGO = 1;
 10248  01F4  0021               	movlb	1	; select bank1
 10249  01F5  149D               	bsf	29,1	;volatile
 10250  01F6                     l341:	
 10251                           ;adc.c: 129: {
 10252                           
 10253  01F6  189D               	btfsc	29,1	;volatile
 10254  01F7  29F6               	goto	l341
 10255                           
 10256                           ;adc.c: 130: };adc.c: 133: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 10257  01F8  081C               	movf	28,w	;volatile
 10258  01F9  00C8               	movwf	(?_ADC_GetConversion+1)^(0+128)
 10259  01FA  01C7               	clrf	?_ADC_GetConversion^(0+128)
 10260  01FB  081B               	movf	27,w	;volatile
 10261  01FC  07C7               	addwf	?_ADC_GetConversion^(0+128),f
 10262  01FD  1803               	skipnc
 10263  01FE  0AC8               	incf	(?_ADC_GetConversion+1)^(0+128),f
 10264  01FF  0008               	return
 10265  0200                     __end_of_ADC_GetConversion:	
 10266  0200                     __ptext25:	
 10267 ;; *************** function _ADC_Initialize *****************
 10268 ;; Defined at:
 10269 ;;		line 65 in file "mcc_generated_files/adc.c"
 10270 ;; Parameters:    Size  Location     Type
 10271 ;;		None
 10272 ;; Auto vars:     Size  Location     Type
 10273 ;;		None
 10274 ;; Return value:  Size  Location     Type
 10275 ;;                  1    wreg      void 
 10276 ;; Registers used:
 10277 ;;		wreg, status,2
 10278 ;; Tracked objects:
 10279 ;;		On entry : 1F/1
 10280 ;;		On exit  : 1F/1
 10281 ;;		Unchanged: 0/0
 10282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10287 ;;Total ram usage:        0 bytes
 10288 ;; Hardware stack levels used:    1
 10289 ;; Hardware stack levels required when called:    7
 10290 ;; This function calls:
 10291 ;;		Nothing
 10292 ;; This function is called by:
 10293 ;;		_GP1_FSM
 10294 ;;		_GP2_FSM
 10295 ;;		_GP3_FSM
 10296 ;; This function uses a non-reentrant model
 10297 ;;
 10298                           
 10299                           
 10300                           ;psect for function _ADC_Initialize
 10301  0200                     _ADC_Initialize:	
 10302  0200                     l6218:	
 10303                           ;incstack = 0
 10304                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 10305                           
 10306                           
 10307                           ;adc.c: 70: ADCON0 = 0x01;
 10308  0200  3001               	movlw	1
 10309  0201  009D               	movwf	29	;volatile
 10310                           
 10311                           ;adc.c: 73: ADCON1 = 0xE0;
 10312  0202  30E0               	movlw	224
 10313  0203  009E               	movwf	30	;volatile
 10314                           
 10315                           ;adc.c: 76: ADACT = 0x00;
 10316  0204  019F               	clrf	31	;volatile
 10317                           
 10318                           ;adc.c: 79: ADRESL = 0x00;
 10319  0205  019B               	clrf	27	;volatile
 10320                           
 10321                           ;adc.c: 82: ADRESH = 0x00;
 10322  0206  019C               	clrf	28	;volatile
 10323  0207  0008               	return
 10324  0208                     __end_of_ADC_Initialize:	
 10325  0208                     __ptext27:	
 10326 ;; *************** function _FADE_GP3 *****************
 10327 ;; Defined at:
 10328 ;;		line 101 in file "GPports.c"
 10329 ;; Parameters:    Size  Location     Type
 10330 ;;		None
 10331 ;; Auto vars:     Size  Location     Type
 10332 ;;		None
 10333 ;; Return value:  Size  Location     Type
 10334 ;;                  1    wreg      void 
 10335 ;; Registers used:
 10336 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10337 ;; Tracked objects:
 10338 ;;		On entry : 18/0
 10339 ;;		On exit  : 18/0
 10340 ;;		Unchanged: 0/0
 10341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10346 ;;Total ram usage:        0 bytes
 10347 ;; Hardware stack levels used:    1
 10348 ;; Hardware stack levels required when called:   10
 10349 ;; This function calls:
 10350 ;;		_FadeProcessClear
 10351 ;;		_FadeProcessSet
 10352 ;;		_PWM_GP3
 10353 ;; This function is called by:
 10354 ;;		_GP_Ports_FSM
 10355 ;; This function uses a non-reentrant model
 10356 ;;
 10357                           
 10358                           
 10359                           ;psect for function _FADE_GP3
 10360  0208                     _FADE_GP3:	
 10361                           
 10362                           ;GPports.c: 103: if ((GP3CONF & 0x03) != 0x00)
 10363                           
 10364                           ;incstack = 0
 10365                           ; Regs used in _FADE_GP3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10366  0208  0020               	movlb	0	; select bank0
 10367  0209  0846               	movf	_GP3CONF,w	;volatile
 10368  020A  3903               	andlw	3
 10369  020B  1D03               	btfss	3,2
 10370  020C  0008               	return
 10371                           
 10372                           ;GPports.c: 106: if (FADEGP == 0) {
 10373  020D  083F               	movf	_FADEGP,w	;volatile
 10374  020E  1D03               	btfss	3,2
 10375  020F  2A17               	goto	l6506
 10376                           
 10377                           ;GPports.c: 107: if (temp_gp3 != GP3REG) {
 10378  0210  0835               	movf	_temp_gp3,w
 10379  0211  0641               	xorwf	_GP3REG,w	;volatile
 10380  0212  1903               	skipnz
 10381  0213  0008               	return
 10382                           
 10383                           ;GPports.c: 108: temp_gp3 = GP3REG;
 10384  0214  0841               	movf	_GP3REG,w	;volatile
 10385  0215  00B5               	movwf	_temp_gp3
 10386                           
 10387                           ;GPports.c: 109: PWM_GP3(temp_gp3);
 10388  0216  2A5C               	ljmp	_PWM_GP3
 10389  0217                     l6506:	
 10390                           
 10391                           ;GPports.c: 112: };GPports.c: 114: if (gp_fade_cnt >= FADEGP) {
 10392  0217  083F               	movf	_FADEGP,w	;volatile
 10393  0218  0234               	subwf	_gp_fade_cnt,w
 10394  0219  1C03               	skipc
 10395  021A  0008               	return
 10396                           
 10397                           ;GPports.c: 115: if (temp_gp3 != GP3REG) {
 10398  021B  0835               	movf	_temp_gp3,w
 10399  021C  0641               	xorwf	_GP3REG,w	;volatile
 10400  021D  1903               	skipnz
 10401  021E  0008               	return
 10402                           
 10403                           ;GPports.c: 117: if (temp_gp3 < GP3REG) {
 10404  021F  0841               	movf	_GP3REG,w	;volatile
 10405  0220  0235               	subwf	_temp_gp3,w
 10406  0221  1C03               	btfss	3,0
 10407                           
 10408                           ;GPports.c: 118: temp_gp3++;
 10409  0222  0AB5               	incf	_temp_gp3,f
 10410                           
 10411                           ;GPports.c: 119: };GPports.c: 120: if (temp_gp3 > GP3REG) {
 10412  0223  0835               	movf	_temp_gp3,w
 10413  0224  0241               	subwf	_GP3REG,w	;volatile
 10414  0225  1C03               	btfss	3,0
 10415                           
 10416                           ;GPports.c: 121: temp_gp3--;
 10417  0226  03B5               	decf	_temp_gp3,f
 10418                           
 10419                           ;GPports.c: 122: };GPports.c: 124: PWM_GP3(temp_gp3);
 10420  0227  0835               	movf	_temp_gp3,w
 10421  0228  225C  3180         	fcall	_PWM_GP3
 10422                           
 10423                           ;GPports.c: 125: if (temp_gp3 == GP3REG) {
 10424  022A  0020               	movlb	0	; select bank0
 10425  022B  0835               	movf	_temp_gp3,w
 10426  022C  0641               	xorwf	_GP3REG,w	;volatile
 10427                           
 10428                           ;GPports.c: 126: FadeProcessClear(F_FGP3);
 10429  022D  3004               	movlw	4
 10430  022E  1D03               	skipz
 10431  022F  2A31               	goto	L3
 10432  0230  2B7C               	ljmp	_FadeProcessClear
 10433  0231                     L3:	
 10434                           ;GPports.c: 128: FadeProcessSet(F_FGP3);
 10435                           
 10436                           ;GPports.c: 127: } else {
 10437                           
 10438  0231  2B85               	ljmp	_FadeProcessSet
 10439  0232                     __end_of_FADE_GP3:	
 10440  0232                     __ptext29:	
 10441 ;; *************** function _FADE_GP2 *****************
 10442 ;; Defined at:
 10443 ;;		line 63 in file "GPports.c"
 10444 ;; Parameters:    Size  Location     Type
 10445 ;;		None
 10446 ;; Auto vars:     Size  Location     Type
 10447 ;;		None
 10448 ;; Return value:  Size  Location     Type
 10449 ;;                  1    wreg      void 
 10450 ;; Registers used:
 10451 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10452 ;; Tracked objects:
 10453 ;;		On entry : 18/0
 10454 ;;		On exit  : 18/0
 10455 ;;		Unchanged: 0/0
 10456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10461 ;;Total ram usage:        0 bytes
 10462 ;; Hardware stack levels used:    1
 10463 ;; Hardware stack levels required when called:   10
 10464 ;; This function calls:
 10465 ;;		_FadeProcessClear
 10466 ;;		_FadeProcessSet
 10467 ;;		_PWM_GP2
 10468 ;; This function is called by:
 10469 ;;		_GP_Ports_FSM
 10470 ;; This function uses a non-reentrant model
 10471 ;;
 10472                           
 10473                           
 10474                           ;psect for function _FADE_GP2
 10475  0232                     _FADE_GP2:	
 10476                           
 10477                           ;GPports.c: 65: if ((GP2CONF & 0x03) != 0x00)
 10478                           
 10479                           ;incstack = 0
 10480                           ; Regs used in _FADE_GP2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10481  0232  0020               	movlb	0	; select bank0
 10482  0233  0847               	movf	_GP2CONF,w	;volatile
 10483  0234  3903               	andlw	3
 10484  0235  1D03               	btfss	3,2
 10485  0236  0008               	return
 10486                           
 10487                           ;GPports.c: 68: if (FADEGP == 0) {
 10488  0237  083F               	movf	_FADEGP,w	;volatile
 10489  0238  1D03               	btfss	3,2
 10490  0239  2A41               	goto	l6472
 10491                           
 10492                           ;GPports.c: 69: if (temp_gp2 != GP2REG) {
 10493  023A  0836               	movf	_temp_gp2,w
 10494  023B  0642               	xorwf	_GP2REG,w	;volatile
 10495  023C  1903               	skipnz
 10496  023D  0008               	return
 10497                           
 10498                           ;GPports.c: 70: temp_gp2 = GP2REG;
 10499  023E  0842               	movf	_GP2REG,w	;volatile
 10500  023F  00B6               	movwf	_temp_gp2
 10501                           
 10502                           ;GPports.c: 71: PWM_GP2(temp_gp2);
 10503  0240  2AB5               	ljmp	_PWM_GP2
 10504  0241                     l6472:	
 10505                           
 10506                           ;GPports.c: 74: };GPports.c: 76: if (gp_fade_cnt >= FADEGP) {
 10507  0241  083F               	movf	_FADEGP,w	;volatile
 10508  0242  0234               	subwf	_gp_fade_cnt,w
 10509  0243  1C03               	skipc
 10510  0244  0008               	return
 10511                           
 10512                           ;GPports.c: 77: if (temp_gp2 != GP2REG) {
 10513  0245  0836               	movf	_temp_gp2,w
 10514  0246  0642               	xorwf	_GP2REG,w	;volatile
 10515  0247  1903               	skipnz
 10516  0248  0008               	return
 10517                           
 10518                           ;GPports.c: 79: if (temp_gp2 < GP2REG) {
 10519  0249  0842               	movf	_GP2REG,w	;volatile
 10520  024A  0236               	subwf	_temp_gp2,w
 10521  024B  1C03               	btfss	3,0
 10522                           
 10523                           ;GPports.c: 80: temp_gp2++;
 10524  024C  0AB6               	incf	_temp_gp2,f
 10525                           
 10526                           ;GPports.c: 81: };GPports.c: 82: if (temp_gp2 > GP2REG) {
 10527  024D  0836               	movf	_temp_gp2,w
 10528  024E  0242               	subwf	_GP2REG,w	;volatile
 10529  024F  1C03               	btfss	3,0
 10530                           
 10531                           ;GPports.c: 83: temp_gp2--;
 10532  0250  03B6               	decf	_temp_gp2,f
 10533                           
 10534                           ;GPports.c: 84: };GPports.c: 86: PWM_GP2(temp_gp2);
 10535  0251  0836               	movf	_temp_gp2,w
 10536  0252  22B5  3180         	fcall	_PWM_GP2
 10537                           
 10538                           ;GPports.c: 87: if (temp_gp2 == GP2REG) {
 10539  0254  0020               	movlb	0	; select bank0
 10540  0255  0836               	movf	_temp_gp2,w
 10541  0256  0642               	xorwf	_GP2REG,w	;volatile
 10542                           
 10543                           ;GPports.c: 88: FadeProcessClear(F_FGP2);
 10544  0257  3002               	movlw	2
 10545  0258  1D03               	skipz
 10546  0259  2A5B               	goto	L4
 10547  025A  2B7C               	ljmp	_FadeProcessClear
 10548  025B                     L4:	
 10549                           ;GPports.c: 90: FadeProcessSet(F_FGP2);
 10550                           
 10551                           ;GPports.c: 89: } else {
 10552                           
 10553  025B  2B85               	ljmp	_FadeProcessSet
 10554  025C                     __end_of_FADE_GP2:	
 10555  025C                     __ptext28:	
 10556 ;; *************** function _PWM_GP3 *****************
 10557 ;; Defined at:
 10558 ;;		line 70 in file "PWM.c"
 10559 ;; Parameters:    Size  Location     Type
 10560 ;;  duty            1    wreg     unsigned char 
 10561 ;; Auto vars:     Size  Location     Type
 10562 ;;  duty            1   14[BANK1 ] unsigned char 
 10563 ;; Return value:  Size  Location     Type
 10564 ;;                  1    wreg      void 
 10565 ;; Registers used:
 10566 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10567 ;; Tracked objects:
 10568 ;;		On entry : 1F/0
 10569 ;;		On exit  : 18/0
 10570 ;;		Unchanged: 0/0
 10571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10573 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10574 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 10575 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 10576 ;;Total ram usage:        9 bytes
 10577 ;; Hardware stack levels used:    1
 10578 ;; Hardware stack levels required when called:    8
 10579 ;; This function calls:
 10580 ;;		___wmul
 10581 ;; This function is called by:
 10582 ;;		_FADE_GP3
 10583 ;; This function uses a non-reentrant model
 10584 ;;
 10585                           
 10586                           
 10587                           ;psect for function _PWM_GP3
 10588  025C                     _PWM_GP3:	
 10589                           
 10590                           ;incstack = 0
 10591                           ; Regs used in _PWM_GP3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10592                           ;PWM_GP3@duty stored from wreg
 10593  025C  0021               	movlb	1	; select bank1
 10594  025D  00D5               	movwf	PWM_GP3@duty^(0+128)
 10595                           
 10596                           ;PWM.c: 72: if (duty == 0) {
 10597  025E  0855               	movf	PWM_GP3@duty^(0+128),w
 10598  025F  1D03               	btfss	3,2
 10599  0260  2A63               	goto	l1342
 10600                           
 10601                           ;PWM.c: 73: do { TRISCbits.TRISC0 = 1; } while(0);
 10602  0261  140E               	bsf	14,0	;volatile
 10603  0262  0008               	return
 10604  0263                     l1342:	
 10605                           ;PWM.c: 76: do { TRISCbits.TRISC0 = 0; } while(0);
 10606                           
 10607  0263  100E               	bcf	14,0	;volatile
 10608                           
 10609                           ;PWM.c: 77: };PWM.c: 79: if (duty > 100)
 10610  0264  3065               	movlw	101
 10611  0265  0255               	subwf	PWM_GP3@duty^(0+128),w
 10612  0266  1C03               	skipc
 10613  0267  2A6A               	goto	l6280
 10614                           
 10615                           ;PWM.c: 80: duty = 100;
 10616  0268  3064               	movlw	100
 10617  0269  00D5               	movwf	PWM_GP3@duty^(0+128)
 10618  026A                     l6280:	
 10619                           
 10620                           ;PWM.c: 82: CCPR3H = gamma_table[GAMMAGP3][(uint8_t)(duty - 1)] >> 8;
 10621  026A  0855               	movf	PWM_GP3@duty^(0+128),w
 10622  026B  3EFF               	addlw	255
 10623  026C  00CD               	movwf	??_PWM_GP3^(0+128)
 10624  026D  01CE               	clrf	(??_PWM_GP3^(0+128)+1)
 10625  026E  35CD               	lslf	??_PWM_GP3^(0+128),f
 10626  026F  0DCE               	rlf	(??_PWM_GP3^(0+128)+1),f
 10627  0270  0020               	movlb	0	; select bank0
 10628  0271  083C               	movf	_GAMMAGP3,w	;volatile
 10629  0272  0021               	movlb	1	; select bank1
 10630  0273  00C7               	movwf	___wmul@multiplier^(0+128)
 10631  0274  30C8               	movlw	200
 10632  0275  01C8               	clrf	(___wmul@multiplier+1)^(0+128)
 10633  0276  00C9               	movwf	___wmul@multiplicand^(0+128)
 10634  0277  01CA               	clrf	(___wmul@multiplicand+1)^(0+128)
 10635  0278  2367  3180         	fcall	___wmul
 10636  027A  301E               	movlw	low (_gamma_table| (0+32768))
 10637  027B  00CF               	movwf	(??_PWM_GP3+2)^(0+128)
 10638  027C  3084               	movlw	high (_gamma_table| (0+32768))
 10639  027D  00D0               	movwf	((??_PWM_GP3+2)^(0+128)+1)
 10640  027E  0847               	movf	?___wmul^(0+128),w
 10641  027F  074F               	addwf	(??_PWM_GP3+2)^(0+128),w
 10642  0280  00D1               	movwf	(??_PWM_GP3+4)^(0+128)
 10643  0281  0848               	movf	(?___wmul+1)^(0+128),w
 10644  0282  3D50               	addwfc	(??_PWM_GP3+3)^(0+128),w
 10645  0283  00D2               	movwf	(??_PWM_GP3+5)^(0+128)
 10646  0284  0851               	movf	(??_PWM_GP3+4)^(0+128),w
 10647  0285  074D               	addwf	??_PWM_GP3^(0+128),w
 10648  0286  0084               	movwf	4
 10649  0287  0852               	movf	(??_PWM_GP3+5)^(0+128),w
 10650  0288  3D4E               	addwfc	(??_PWM_GP3+1)^(0+128),w
 10651  0289  0085               	movwf	5
 10652  028A  3F00               	moviw [0]fsr0
 10653  028B  00D3               	movwf	(??_PWM_GP3+6)^(0+128)
 10654  028C  3F01               	moviw [1]fsr0
 10655  028D  00D4               	movwf	((??_PWM_GP3+6)^(0+128)+1)
 10656  028E  0854               	movf	(??_PWM_GP3+7)^(0+128),w
 10657  028F  0026               	movlb	6	; select bank6
 10658  0290  0092               	movwf	18	;volatile
 10659                           
 10660                           ;PWM.c: 83: CCPR3L = gamma_table[GAMMAGP3][(uint8_t)(duty - 1)];
 10661  0291  0021               	movlb	1	; select bank1
 10662  0292  0855               	movf	PWM_GP3@duty^(0+128),w
 10663  0293  3EFF               	addlw	255
 10664  0294  00CD               	movwf	??_PWM_GP3^(0+128)
 10665  0295  01CE               	clrf	(??_PWM_GP3^(0+128)+1)
 10666  0296  35CD               	lslf	??_PWM_GP3^(0+128),f
 10667  0297  0DCE               	rlf	(??_PWM_GP3^(0+128)+1),f
 10668  0298  0020               	movlb	0	; select bank0
 10669  0299  083C               	movf	_GAMMAGP3,w	;volatile
 10670  029A  0021               	movlb	1	; select bank1
 10671  029B  00C7               	movwf	___wmul@multiplier^(0+128)
 10672  029C  30C8               	movlw	200
 10673  029D  01C8               	clrf	(___wmul@multiplier+1)^(0+128)
 10674  029E  00C9               	movwf	___wmul@multiplicand^(0+128)
 10675  029F  01CA               	clrf	(___wmul@multiplicand+1)^(0+128)
 10676  02A0  2367               	fcall	___wmul
 10677  02A1  301E               	movlw	low (_gamma_table| (0+32768))
 10678  02A2  00CF               	movwf	(??_PWM_GP3+2)^(0+128)
 10679  02A3  3084               	movlw	high (_gamma_table| (0+32768))
 10680  02A4  00D0               	movwf	((??_PWM_GP3+2)^(0+128)+1)
 10681  02A5  0847               	movf	?___wmul^(0+128),w
 10682  02A6  074F               	addwf	(??_PWM_GP3+2)^(0+128),w
 10683  02A7  00D1               	movwf	(??_PWM_GP3+4)^(0+128)
 10684  02A8  0848               	movf	(?___wmul+1)^(0+128),w
 10685  02A9  3D50               	addwfc	(??_PWM_GP3+3)^(0+128),w
 10686  02AA  00D2               	movwf	(??_PWM_GP3+5)^(0+128)
 10687  02AB  0851               	movf	(??_PWM_GP3+4)^(0+128),w
 10688  02AC  074D               	addwf	??_PWM_GP3^(0+128),w
 10689  02AD  0084               	movwf	4
 10690  02AE  0852               	movf	(??_PWM_GP3+5)^(0+128),w
 10691  02AF  3D4E               	addwfc	(??_PWM_GP3+1)^(0+128),w
 10692  02B0  0085               	movwf	5
 10693  02B1  0800               	movf	0,w	;code access
 10694  02B2  0026               	movlb	6	; select bank6
 10695  02B3  0091               	movwf	17	;volatile
 10696  02B4  0008               	return
 10697  02B5                     __end_of_PWM_GP3:	
 10698  02B5                     __ptext30:	
 10699 ;; *************** function _PWM_GP2 *****************
 10700 ;; Defined at:
 10701 ;;		line 52 in file "PWM.c"
 10702 ;; Parameters:    Size  Location     Type
 10703 ;;  duty            1    wreg     unsigned char 
 10704 ;; Auto vars:     Size  Location     Type
 10705 ;;  duty            1   14[BANK1 ] unsigned char 
 10706 ;; Return value:  Size  Location     Type
 10707 ;;                  1    wreg      void 
 10708 ;; Registers used:
 10709 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10710 ;; Tracked objects:
 10711 ;;		On entry : 1F/0
 10712 ;;		On exit  : 1B/1
 10713 ;;		Unchanged: 0/0
 10714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10716 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10717 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 10718 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 10719 ;;Total ram usage:        9 bytes
 10720 ;; Hardware stack levels used:    1
 10721 ;; Hardware stack levels required when called:    8
 10722 ;; This function calls:
 10723 ;;		___wmul
 10724 ;; This function is called by:
 10725 ;;		_FADE_GP2
 10726 ;; This function uses a non-reentrant model
 10727 ;;
 10728                           
 10729                           
 10730                           ;psect for function _PWM_GP2
 10731  02B5                     _PWM_GP2:	
 10732                           
 10733                           ;incstack = 0
 10734                           ; Regs used in _PWM_GP2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10735                           ;PWM_GP2@duty stored from wreg
 10736  02B5  0021               	movlb	1	; select bank1
 10737  02B6  00D5               	movwf	PWM_GP2@duty^(0+128)
 10738                           
 10739                           ;PWM.c: 54: if (duty == 0) {
 10740  02B7  0855               	movf	PWM_GP2@duty^(0+128),w
 10741  02B8  1D03               	btfss	3,2
 10742  02B9  2ABC               	goto	l1332
 10743                           
 10744                           ;PWM.c: 55: do { TRISCbits.TRISC1 = 1; } while(0);
 10745  02BA  148E               	bsf	14,1	;volatile
 10746  02BB  0008               	return
 10747  02BC                     l1332:	
 10748                           ;PWM.c: 58: do { TRISCbits.TRISC1 = 0; } while(0);
 10749                           
 10750  02BC  108E               	bcf	14,1	;volatile
 10751                           
 10752                           ;PWM.c: 59: };PWM.c: 61: if (duty > 100)
 10753  02BD  3065               	movlw	101
 10754  02BE  0255               	subwf	PWM_GP2@duty^(0+128),w
 10755  02BF  1C03               	skipc
 10756  02C0  2AC3               	goto	l6268
 10757                           
 10758                           ;PWM.c: 62: duty = 100;
 10759  02C1  3064               	movlw	100
 10760  02C2  00D5               	movwf	PWM_GP2@duty^(0+128)
 10761  02C3                     l6268:	
 10762                           
 10763                           ;PWM.c: 63: CCPR2H = gamma_table[GAMMAGP2][(uint8_t)(duty - 1)] >> 8;
 10764  02C3  0855               	movf	PWM_GP2@duty^(0+128),w
 10765  02C4  3EFF               	addlw	255
 10766  02C5  00CD               	movwf	??_PWM_GP2^(0+128)
 10767  02C6  01CE               	clrf	(??_PWM_GP2^(0+128)+1)
 10768  02C7  35CD               	lslf	??_PWM_GP2^(0+128),f
 10769  02C8  0DCE               	rlf	(??_PWM_GP2^(0+128)+1),f
 10770  02C9  0020               	movlb	0	; select bank0
 10771  02CA  083D               	movf	_GAMMAGP2,w	;volatile
 10772  02CB  0021               	movlb	1	; select bank1
 10773  02CC  00C7               	movwf	___wmul@multiplier^(0+128)
 10774  02CD  30C8               	movlw	200
 10775  02CE  01C8               	clrf	(___wmul@multiplier+1)^(0+128)
 10776  02CF  00C9               	movwf	___wmul@multiplicand^(0+128)
 10777  02D0  01CA               	clrf	(___wmul@multiplicand+1)^(0+128)
 10778  02D1  2367  3180         	fcall	___wmul
 10779  02D3  301E               	movlw	low (_gamma_table| (0+32768))
 10780  02D4  00CF               	movwf	(??_PWM_GP2+2)^(0+128)
 10781  02D5  3084               	movlw	high (_gamma_table| (0+32768))
 10782  02D6  00D0               	movwf	((??_PWM_GP2+2)^(0+128)+1)
 10783  02D7  0847               	movf	?___wmul^(0+128),w
 10784  02D8  074F               	addwf	(??_PWM_GP2+2)^(0+128),w
 10785  02D9  00D1               	movwf	(??_PWM_GP2+4)^(0+128)
 10786  02DA  0848               	movf	(?___wmul+1)^(0+128),w
 10787  02DB  3D50               	addwfc	(??_PWM_GP2+3)^(0+128),w
 10788  02DC  00D2               	movwf	(??_PWM_GP2+5)^(0+128)
 10789  02DD  0851               	movf	(??_PWM_GP2+4)^(0+128),w
 10790  02DE  074D               	addwf	??_PWM_GP2^(0+128),w
 10791  02DF  0084               	movwf	4
 10792  02E0  0852               	movf	(??_PWM_GP2+5)^(0+128),w
 10793  02E1  3D4E               	addwfc	(??_PWM_GP2+1)^(0+128),w
 10794  02E2  0085               	movwf	5
 10795  02E3  3F00               	moviw [0]fsr0
 10796  02E4  00D3               	movwf	(??_PWM_GP2+6)^(0+128)
 10797  02E5  3F01               	moviw [1]fsr0
 10798  02E6  00D4               	movwf	((??_PWM_GP2+6)^(0+128)+1)
 10799  02E7  0854               	movf	(??_PWM_GP2+7)^(0+128),w
 10800  02E8  0025               	movlb	5	; select bank5
 10801  02E9  0096               	movwf	22	;volatile
 10802                           
 10803                           ;PWM.c: 64: CCPR2L = gamma_table[GAMMAGP2][(uint8_t)(duty - 1)];
 10804  02EA  0021               	movlb	1	; select bank1
 10805  02EB  0855               	movf	PWM_GP2@duty^(0+128),w
 10806  02EC  3EFF               	addlw	255
 10807  02ED  00CD               	movwf	??_PWM_GP2^(0+128)
 10808  02EE  01CE               	clrf	(??_PWM_GP2^(0+128)+1)
 10809  02EF  35CD               	lslf	??_PWM_GP2^(0+128),f
 10810  02F0  0DCE               	rlf	(??_PWM_GP2^(0+128)+1),f
 10811  02F1  0020               	movlb	0	; select bank0
 10812  02F2  083D               	movf	_GAMMAGP2,w	;volatile
 10813  02F3  0021               	movlb	1	; select bank1
 10814  02F4  00C7               	movwf	___wmul@multiplier^(0+128)
 10815  02F5  30C8               	movlw	200
 10816  02F6  01C8               	clrf	(___wmul@multiplier+1)^(0+128)
 10817  02F7  00C9               	movwf	___wmul@multiplicand^(0+128)
 10818  02F8  01CA               	clrf	(___wmul@multiplicand+1)^(0+128)
 10819  02F9  2367               	fcall	___wmul
 10820  02FA  301E               	movlw	low (_gamma_table| (0+32768))
 10821  02FB  00CF               	movwf	(??_PWM_GP2+2)^(0+128)
 10822  02FC  3084               	movlw	high (_gamma_table| (0+32768))
 10823  02FD  00D0               	movwf	((??_PWM_GP2+2)^(0+128)+1)
 10824  02FE  0847               	movf	?___wmul^(0+128),w
 10825  02FF  074F               	addwf	(??_PWM_GP2+2)^(0+128),w
 10826  0300  00D1               	movwf	(??_PWM_GP2+4)^(0+128)
 10827  0301  0848               	movf	(?___wmul+1)^(0+128),w
 10828  0302  3D50               	addwfc	(??_PWM_GP2+3)^(0+128),w
 10829  0303  00D2               	movwf	(??_PWM_GP2+5)^(0+128)
 10830  0304  0851               	movf	(??_PWM_GP2+4)^(0+128),w
 10831  0305  074D               	addwf	??_PWM_GP2^(0+128),w
 10832  0306  0084               	movwf	4
 10833  0307  0852               	movf	(??_PWM_GP2+5)^(0+128),w
 10834  0308  3D4E               	addwfc	(??_PWM_GP2+1)^(0+128),w
 10835  0309  0085               	movwf	5
 10836  030A  0800               	movf	0,w	;code access
 10837  030B  0025               	movlb	5	; select bank5
 10838  030C  0095               	movwf	21	;volatile
 10839  030D  0008               	return
 10840  030E                     __end_of_PWM_GP2:	
 10841  030E                     __ptext32:	
 10842 ;; *************** function _PWM_GP1 *****************
 10843 ;; Defined at:
 10844 ;;		line 31 in file "PWM.c"
 10845 ;; Parameters:    Size  Location     Type
 10846 ;;  duty            1    wreg     unsigned char 
 10847 ;; Auto vars:     Size  Location     Type
 10848 ;;  duty            1   14[BANK1 ] unsigned char 
 10849 ;; Return value:  Size  Location     Type
 10850 ;;                  1    wreg      void 
 10851 ;; Registers used:
 10852 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10853 ;; Tracked objects:
 10854 ;;		On entry : 1F/0
 10855 ;;		On exit  : 1B/1
 10856 ;;		Unchanged: 0/0
 10857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10859 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10860 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 10861 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 10862 ;;Total ram usage:        9 bytes
 10863 ;; Hardware stack levels used:    1
 10864 ;; Hardware stack levels required when called:    8
 10865 ;; This function calls:
 10866 ;;		___wmul
 10867 ;; This function is called by:
 10868 ;;		_FADE_GP1
 10869 ;; This function uses a non-reentrant model
 10870 ;;
 10871                           
 10872                           
 10873                           ;psect for function _PWM_GP1
 10874  030E                     _PWM_GP1:	
 10875                           
 10876                           ;incstack = 0
 10877                           ; Regs used in _PWM_GP1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10878                           ;PWM_GP1@duty stored from wreg
 10879  030E  0021               	movlb	1	; select bank1
 10880  030F  00D5               	movwf	PWM_GP1@duty^(0+128)
 10881                           
 10882                           ;PWM.c: 33: if (duty == 0) {
 10883  0310  0855               	movf	PWM_GP1@duty^(0+128),w
 10884  0311  1D03               	btfss	3,2
 10885  0312  2B15               	goto	l1322
 10886                           
 10887                           ;PWM.c: 34: do { TRISCbits.TRISC2 = 1; } while(0);
 10888  0313  150E               	bsf	14,2	;volatile
 10889  0314  0008               	return
 10890  0315                     l1322:	
 10891                           ;PWM.c: 37: do { TRISCbits.TRISC2 = 0; } while(0);
 10892                           
 10893  0315  110E               	bcf	14,2	;volatile
 10894                           
 10895                           ;PWM.c: 38: };PWM.c: 40: if (duty > 100)
 10896  0316  3065               	movlw	101
 10897  0317  0255               	subwf	PWM_GP1@duty^(0+128),w
 10898  0318  1C03               	skipc
 10899  0319  2B1C               	goto	l6256
 10900                           
 10901                           ;PWM.c: 41: duty = 100;
 10902  031A  3064               	movlw	100
 10903  031B  00D5               	movwf	PWM_GP1@duty^(0+128)
 10904  031C                     l6256:	
 10905                           
 10906                           ;PWM.c: 43: CCPR1H = gamma_table[GAMMAGP1][(uint8_t)(duty - 1)] >> 8;
 10907  031C  0855               	movf	PWM_GP1@duty^(0+128),w
 10908  031D  3EFF               	addlw	255
 10909  031E  00CD               	movwf	??_PWM_GP1^(0+128)
 10910  031F  01CE               	clrf	(??_PWM_GP1^(0+128)+1)
 10911  0320  35CD               	lslf	??_PWM_GP1^(0+128),f
 10912  0321  0DCE               	rlf	(??_PWM_GP1^(0+128)+1),f
 10913  0322  0020               	movlb	0	; select bank0
 10914  0323  083E               	movf	_GAMMAGP1,w	;volatile
 10915  0324  0021               	movlb	1	; select bank1
 10916  0325  00C7               	movwf	___wmul@multiplier^(0+128)
 10917  0326  30C8               	movlw	200
 10918  0327  01C8               	clrf	(___wmul@multiplier+1)^(0+128)
 10919  0328  00C9               	movwf	___wmul@multiplicand^(0+128)
 10920  0329  01CA               	clrf	(___wmul@multiplicand+1)^(0+128)
 10921  032A  2367  3180         	fcall	___wmul
 10922  032C  301E               	movlw	low (_gamma_table| (0+32768))
 10923  032D  00CF               	movwf	(??_PWM_GP1+2)^(0+128)
 10924  032E  3084               	movlw	high (_gamma_table| (0+32768))
 10925  032F  00D0               	movwf	((??_PWM_GP1+2)^(0+128)+1)
 10926  0330  0847               	movf	?___wmul^(0+128),w
 10927  0331  074F               	addwf	(??_PWM_GP1+2)^(0+128),w
 10928  0332  00D1               	movwf	(??_PWM_GP1+4)^(0+128)
 10929  0333  0848               	movf	(?___wmul+1)^(0+128),w
 10930  0334  3D50               	addwfc	(??_PWM_GP1+3)^(0+128),w
 10931  0335  00D2               	movwf	(??_PWM_GP1+5)^(0+128)
 10932  0336  0851               	movf	(??_PWM_GP1+4)^(0+128),w
 10933  0337  074D               	addwf	??_PWM_GP1^(0+128),w
 10934  0338  0084               	movwf	4
 10935  0339  0852               	movf	(??_PWM_GP1+5)^(0+128),w
 10936  033A  3D4E               	addwfc	(??_PWM_GP1+1)^(0+128),w
 10937  033B  0085               	movwf	5
 10938  033C  3F00               	moviw [0]fsr0
 10939  033D  00D3               	movwf	(??_PWM_GP1+6)^(0+128)
 10940  033E  3F01               	moviw [1]fsr0
 10941  033F  00D4               	movwf	((??_PWM_GP1+6)^(0+128)+1)
 10942  0340  0854               	movf	(??_PWM_GP1+7)^(0+128),w
 10943  0341  0025               	movlb	5	; select bank5
 10944  0342  0092               	movwf	18	;volatile
 10945                           
 10946                           ;PWM.c: 44: CCPR1L = gamma_table[GAMMAGP1][(uint8_t)(duty - 1)];
 10947  0343  0021               	movlb	1	; select bank1
 10948  0344  0855               	movf	PWM_GP1@duty^(0+128),w
 10949  0345  3EFF               	addlw	255
 10950  0346  00CD               	movwf	??_PWM_GP1^(0+128)
 10951  0347  01CE               	clrf	(??_PWM_GP1^(0+128)+1)
 10952  0348  35CD               	lslf	??_PWM_GP1^(0+128),f
 10953  0349  0DCE               	rlf	(??_PWM_GP1^(0+128)+1),f
 10954  034A  0020               	movlb	0	; select bank0
 10955  034B  083E               	movf	_GAMMAGP1,w	;volatile
 10956  034C  0021               	movlb	1	; select bank1
 10957  034D  00C7               	movwf	___wmul@multiplier^(0+128)
 10958  034E  30C8               	movlw	200
 10959  034F  01C8               	clrf	(___wmul@multiplier+1)^(0+128)
 10960  0350  00C9               	movwf	___wmul@multiplicand^(0+128)
 10961  0351  01CA               	clrf	(___wmul@multiplicand+1)^(0+128)
 10962  0352  2367               	fcall	___wmul
 10963  0353  301E               	movlw	low (_gamma_table| (0+32768))
 10964  0354  00CF               	movwf	(??_PWM_GP1+2)^(0+128)
 10965  0355  3084               	movlw	high (_gamma_table| (0+32768))
 10966  0356  00D0               	movwf	((??_PWM_GP1+2)^(0+128)+1)
 10967  0357  0847               	movf	?___wmul^(0+128),w
 10968  0358  074F               	addwf	(??_PWM_GP1+2)^(0+128),w
 10969  0359  00D1               	movwf	(??_PWM_GP1+4)^(0+128)
 10970  035A  0848               	movf	(?___wmul+1)^(0+128),w
 10971  035B  3D50               	addwfc	(??_PWM_GP1+3)^(0+128),w
 10972  035C  00D2               	movwf	(??_PWM_GP1+5)^(0+128)
 10973  035D  0851               	movf	(??_PWM_GP1+4)^(0+128),w
 10974  035E  074D               	addwf	??_PWM_GP1^(0+128),w
 10975  035F  0084               	movwf	4
 10976  0360  0852               	movf	(??_PWM_GP1+5)^(0+128),w
 10977  0361  3D4E               	addwfc	(??_PWM_GP1+1)^(0+128),w
 10978  0362  0085               	movwf	5
 10979  0363  0800               	movf	0,w	;code access
 10980  0364  0025               	movlb	5	; select bank5
 10981  0365  0091               	movwf	17	;volatile
 10982  0366  0008               	return
 10983  0367                     __end_of_PWM_GP1:	
 10984  0367                     __ptext33:	
 10985 ;; *************** function ___wmul *****************
 10986 ;; Defined at:
 10987 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
 10988 ;; Parameters:    Size  Location     Type
 10989 ;;  multiplier      2    0[BANK1 ] unsigned int 
 10990 ;;  multiplicand    2    2[BANK1 ] unsigned int 
 10991 ;; Auto vars:     Size  Location     Type
 10992 ;;  product         2    4[BANK1 ] unsigned int 
 10993 ;; Return value:  Size  Location     Type
 10994 ;;                  2    0[BANK1 ] unsigned int 
 10995 ;; Registers used:
 10996 ;;		wreg, status,2, status,0
 10997 ;; Tracked objects:
 10998 ;;		On entry : 1F/1
 10999 ;;		On exit  : 1F/1
 11000 ;;		Unchanged: 0/0
 11001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11002 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11003 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11005 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 11006 ;;Total ram usage:        6 bytes
 11007 ;; Hardware stack levels used:    1
 11008 ;; Hardware stack levels required when called:    7
 11009 ;; This function calls:
 11010 ;;		Nothing
 11011 ;; This function is called by:
 11012 ;;		_PWM_GP1
 11013 ;;		_PWM_GP2
 11014 ;;		_PWM_GP3
 11015 ;; This function uses a non-reentrant model
 11016 ;;
 11017                           
 11018                           
 11019                           ;psect for function ___wmul
 11020  0367                     ___wmul:	
 11021                           
 11022                           ;incstack = 0
 11023                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 11024  0367  01CB               	clrf	___wmul@product^(0+128)
 11025  0368  01CC               	clrf	(___wmul@product+1)^(0+128)
 11026  0369                     l6204:	
 11027  0369  1C47               	btfss	___wmul@multiplier^(0+128),0
 11028  036A  2B6F               	goto	l6208
 11029  036B  0849               	movf	___wmul@multiplicand^(0+128),w
 11030  036C  07CB               	addwf	___wmul@product^(0+128),f
 11031  036D  084A               	movf	(___wmul@multiplicand+1)^(0+128),w
 11032  036E  3DCC               	addwfc	(___wmul@product+1)^(0+128),f
 11033  036F                     l6208:	
 11034  036F  35C9               	lslf	___wmul@multiplicand^(0+128),f
 11035  0370  0DCA               	rlf	(___wmul@multiplicand+1)^(0+128),f
 11036  0371  36C8               	lsrf	(___wmul@multiplier+1)^(0+128),f
 11037  0372  0CC7               	rrf	___wmul@multiplier^(0+128),f
 11038  0373  0847               	movf	___wmul@multiplier^(0+128),w
 11039  0374  0448               	iorwf	(___wmul@multiplier+1)^(0+128),w
 11040  0375  1D03               	btfss	3,2
 11041  0376  2B69               	goto	l6204
 11042  0377  084C               	movf	(___wmul@product+1)^(0+128),w
 11043  0378  00C8               	movwf	(?___wmul+1)^(0+128)
 11044  0379  084B               	movf	___wmul@product^(0+128),w
 11045  037A  00C7               	movwf	?___wmul^(0+128)
 11046  037B  0008               	return
 11047  037C                     __end_of___wmul:	
 11048  037C                     __ptext35:	
 11049 ;; *************** function _FadeProcessClear *****************
 11050 ;; Defined at:
 11051 ;;		line 141 in file "DataVariable.c"
 11052 ;; Parameters:    Size  Location     Type
 11053 ;;  stat            1    wreg     enum E95
 11054 ;; Auto vars:     Size  Location     Type
 11055 ;;  stat            1    3[BANK1 ] enum E95
 11056 ;; Return value:  Size  Location     Type
 11057 ;;                  1    wreg      void 
 11058 ;; Registers used:
 11059 ;;		wreg, status,2, status,0, pclath, cstack
 11060 ;; Tracked objects:
 11061 ;;		On entry : 1F/0
 11062 ;;		On exit  : 1C/0
 11063 ;;		Unchanged: 0/0
 11064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11066 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11068 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11069 ;;Total ram usage:        1 bytes
 11070 ;; Hardware stack levels used:    1
 11071 ;; Hardware stack levels required when called:    9
 11072 ;; This function calls:
 11073 ;;		_Int2StatusUpdate
 11074 ;;		_SetInterrupt
 11075 ;; This function is called by:
 11076 ;;		_FADE_GP1
 11077 ;;		_FADE_GP2
 11078 ;;		_FADE_GP3
 11079 ;; This function uses a non-reentrant model
 11080 ;;
 11081                           
 11082                           
 11083                           ;psect for function _FadeProcessClear
 11084  037C                     _FadeProcessClear:	
 11085                           
 11086                           ;incstack = 0
 11087                           ; Regs used in _FadeProcessClear: [wreg+status,2+status,0+pclath+cstack]
 11088                           ;FadeProcessClear@stat stored from wreg
 11089  037C  0021               	movlb	1	; select bank1
 11090  037D  00CA               	movwf	FadeProcessClear@stat^(0+128)
 11091                           
 11092                           ;DataVariable.c: 142: FSTATUS &= ~(uint8_t) stat;
 11093  037E  094A               	comf	FadeProcessClear@stat^(0+128),w
 11094  037F  0020               	movlb	0	; select bank0
 11095  0380  05C4               	andwf	_FSTATUS,f	;volatile
 11096                           
 11097                           ;DataVariable.c: 143: Int2StatusUpdate(E_GPFADE);
 11098  0381  3040               	movlw	64
 11099  0382  21CB  3180         	fcall	_Int2StatusUpdate
 11100                           
 11101                           ;DataVariable.c: 145: SetInterrupt();
 11102  0384  29D4               	ljmp	l6196
 11103  0385                     __end_of_FadeProcessClear:	
 11104  0385                     __ptext34:	
 11105 ;; *************** function _FadeProcessSet *****************
 11106 ;; Defined at:
 11107 ;;		line 133 in file "DataVariable.c"
 11108 ;; Parameters:    Size  Location     Type
 11109 ;;  stat            1    wreg     enum E95
 11110 ;; Auto vars:     Size  Location     Type
 11111 ;;  stat            1    0[BANK1 ] enum E95
 11112 ;; Return value:  Size  Location     Type
 11113 ;;                  1    wreg      void 
 11114 ;; Registers used:
 11115 ;;		wreg, status,2, status,0
 11116 ;; Tracked objects:
 11117 ;;		On entry : 1F/0
 11118 ;;		On exit  : 1F/0
 11119 ;;		Unchanged: 0/0
 11120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11122 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11124 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11125 ;;Total ram usage:        1 bytes
 11126 ;; Hardware stack levels used:    1
 11127 ;; Hardware stack levels required when called:    7
 11128 ;; This function calls:
 11129 ;;		Nothing
 11130 ;; This function is called by:
 11131 ;;		_FADE_GP1
 11132 ;;		_FADE_GP2
 11133 ;;		_FADE_GP3
 11134 ;; This function uses a non-reentrant model
 11135 ;;
 11136                           
 11137                           
 11138                           ;psect for function _FadeProcessSet
 11139  0385                     _FadeProcessSet:	
 11140                           
 11141                           ;incstack = 0
 11142                           ; Regs used in _FadeProcessSet: [wreg+status,2+status,0]
 11143                           ;FadeProcessSet@stat stored from wreg
 11144  0385  0021               	movlb	1	; select bank1
 11145  0386  00C7               	movwf	FadeProcessSet@stat^(0+128)
 11146                           
 11147                           ;DataVariable.c: 134: FSTATUS |= (uint8_t) stat;
 11148  0387  0020               	movlb	0	; select bank0
 11149  0388  04C4               	iorwf	_FSTATUS,f	;volatile
 11150  0389  0008               	return
 11151  038A                     __end_of_FadeProcessSet:	
 11152  038A                     __ptext14:	
 11153 ;; *************** function _NavKey_FSM *****************
 11154 ;; Defined at:
 11155 ;;		line 325 in file "NavKey.c"
 11156 ;; Parameters:    Size  Location     Type
 11157 ;;		None
 11158 ;; Auto vars:     Size  Location     Type
 11159 ;;		None
 11160 ;; Return value:  Size  Location     Type
 11161 ;;                  1    wreg      void 
 11162 ;; Registers used:
 11163 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11164 ;; Tracked objects:
 11165 ;;		On entry : 1F/1
 11166 ;;		On exit  : 1C/0
 11167 ;;		Unchanged: 0/0
 11168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11173 ;;Total ram usage:        0 bytes
 11174 ;; Hardware stack levels used:    1
 11175 ;; Hardware stack levels required when called:    9
 11176 ;; This function calls:
 11177 ;;		_NavKeySwitch_KeyFilter
 11178 ;;		_NavKey_CentralButton_FSM
 11179 ;;		_NavKey_DWButton_FSM
 11180 ;;		_NavKey_LTButton_FSM
 11181 ;;		_NavKey_RTButton_FSM
 11182 ;;		_NavKey_UPButton_FSM
 11183 ;; This function is called by:
 11184 ;;		_main
 11185 ;; This function uses a non-reentrant model
 11186 ;;
 11187                           
 11188                           
 11189                           ;psect for function _NavKey_FSM
 11190  038A                     _NavKey_FSM:	
 11191                           
 11192                           ;NavKey.c: 328: if (en_deb < 50) {
 11193                           
 11194                           ;incstack = 0
 11195                           ; Regs used in _NavKey_FSM: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11196  038A  3000               	movlw	0
 11197  038B  0230               	subwf	(_en_deb+1)^(0+128),w
 11198  038C  3032               	movlw	50
 11199  038D  1903               	skipnz
 11200  038E  022F               	subwf	_en_deb^(0+128),w
 11201  038F  1803               	skipnc
 11202  0390  2B94               	goto	l6882
 11203                           
 11204                           ;NavKey.c: 329: en_deb++;
 11205  0391  0AAF               	incf	_en_deb^(0+128),f
 11206  0392  1903               	skipnz
 11207  0393  0AB0               	incf	(_en_deb+1)^(0+128),f
 11208  0394                     l6882:	
 11209                           
 11210                           ;NavKey.c: 330: };NavKey.c: 332: NavKeySwitch_KeyFilter();
 11211  0394  3189  21AE  3180   	fcall	_NavKeySwitch_KeyFilter
 11212                           
 11213                           ;NavKey.c: 333: NavKey_CentralButton_FSM();
 11214  0397  23A0               	fcall	_NavKey_CentralButton_FSM
 11215                           
 11216                           ;NavKey.c: 334: NavKey_UPButton_FSM();
 11217  0398  318A  22E4  3180   	fcall	_NavKey_UPButton_FSM
 11218                           
 11219                           ;NavKey.c: 335: NavKey_DWButton_FSM();
 11220  039B  23F5               	fcall	_NavKey_DWButton_FSM
 11221                           
 11222                           ;NavKey.c: 336: NavKey_RTButton_FSM();
 11223  039C  318B  2307         	fcall	_NavKey_RTButton_FSM
 11224                           
 11225                           ;NavKey.c: 337: NavKey_LTButton_FSM();
 11226  039E  3194  2C17         	ljmp	l6810
 11227  03A0                     __end_of_NavKey_FSM:	
 11228  03A0                     __ptext19:	
 11229 ;; *************** function _NavKey_CentralButton_FSM *****************
 11230 ;; Defined at:
 11231 ;;		line 136 in file "NavKey.c"
 11232 ;; Parameters:    Size  Location     Type
 11233 ;;		None
 11234 ;; Auto vars:     Size  Location     Type
 11235 ;;		None
 11236 ;; Return value:  Size  Location     Type
 11237 ;;                  1    wreg      void 
 11238 ;; Registers used:
 11239 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11240 ;; Tracked objects:
 11241 ;;		On entry : 1F/1
 11242 ;;		On exit  : 1C/0
 11243 ;;		Unchanged: 0/0
 11244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11249 ;;Total ram usage:        0 bytes
 11250 ;; Hardware stack levels used:    1
 11251 ;; Hardware stack levels required when called:    8
 11252 ;; This function calls:
 11253 ;;		_NavKeyStatusUpdate
 11254 ;;		_SetInterrupt
 11255 ;; This function is called by:
 11256 ;;		_NavKey_FSM
 11257 ;; This function uses a non-reentrant model
 11258 ;;
 11259                           
 11260                           
 11261                           ;psect for function _NavKey_CentralButton_FSM
 11262  03A0                     _NavKey_CentralButton_FSM:	
 11263                           
 11264                           ;NavKey.c: 138: if (double_push_cnt > DoublePush) {
 11265                           
 11266                           ;incstack = 0
 11267                           ; Regs used in _NavKey_CentralButton_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11268  03A0  0832               	movf	(_double_push_cnt+1)^(0+128),w
 11269  03A1  0234               	subwf	(_DoublePush+1)^(0+128),w	;volatile
 11270  03A2  1D03               	skipz
 11271  03A3  2BA6               	goto	u4435
 11272  03A4  0831               	movf	_double_push_cnt^(0+128),w
 11273  03A5  0233               	subwf	_DoublePush^(0+128),w	;volatile
 11274  03A6                     u4435:	
 11275  03A6  1803               	skipnc
 11276  03A7  2BAB               	goto	l6688
 11277                           
 11278                           ;NavKey.c: 139: pb_fsm = NavKey_TIMEOUT;
 11279  03A8  3004               	movlw	4
 11280  03A9  00BA               	movwf	_pb_fsm^(0+128)
 11281                           
 11282                           ;NavKey.c: 140: } else {
 11283  03AA  2BE2               	goto	l6738
 11284  03AB                     l6688:	
 11285                           
 11286                           ;NavKey.c: 141: double_push_cnt++;
 11287  03AB  0AB1               	incf	_double_push_cnt^(0+128),f
 11288  03AC  1903               	skipnz
 11289  03AD  0AB2               	incf	(_double_push_cnt+1)^(0+128),f
 11290  03AE  2BE2               	goto	l6738
 11291  03AF                     l6690:	
 11292                           
 11293                           ;NavKey.c: 146: double_push_cnt = 0;
 11294  03AF  01B1               	clrf	_double_push_cnt^(0+128)
 11295  03B0  01B2               	clrf	(_double_push_cnt+1)^(0+128)
 11296                           
 11297                           ;NavKey.c: 147: if (NavKey_PBstatus[0] == 1) {
 11298  03B1  0B20               	decfsz	_NavKey_PBstatus^(0+128),w
 11299  03B2  0008               	return
 11300                           
 11301                           ;NavKey.c: 148: pb_fsm = NavKey_WAITRELEASE;
 11302  03B3  01BA               	clrf	_pb_fsm^(0+128)
 11303  03B4  0ABA               	incf	_pb_fsm^(0+128),f
 11304  03B5  0008               	return
 11305  03B6                     l6696:	
 11306                           
 11307                           ;NavKey.c: 154: if (NavKey_PBstatus[0] == 0) {
 11308  03B6  0820               	movf	_NavKey_PBstatus^(0+128),w
 11309  03B7  1D03               	btfss	3,2
 11310  03B8  0008               	return
 11311                           
 11312                           ;NavKey.c: 155: pb_fsm = NavKey_WAITDOUBLEPUSH;
 11313  03B9  3002               	movlw	2
 11314  03BA  00BA               	movwf	_pb_fsm^(0+128)
 11315  03BB  0008               	return
 11316  03BC                     l6700:	
 11317                           
 11318                           ;NavKey.c: 160: if (NavKey_PBstatus[0] == 1) {
 11319  03BC  0B20               	decfsz	_NavKey_PBstatus^(0+128),w
 11320  03BD  0008               	return
 11321                           
 11322                           ;NavKey.c: 161: pb_fsm = NavKey_WAITDOUBLERELEASED;
 11323  03BE  3003               	movlw	3
 11324  03BF  00BA               	movwf	_pb_fsm^(0+128)
 11325  03C0  0008               	return
 11326  03C1                     l6704:	
 11327                           
 11328                           ;NavKey.c: 166: if (NavKey_PBstatus[0] == 0) {
 11329  03C1  0820               	movf	_NavKey_PBstatus^(0+128),w
 11330  03C2  1D03               	btfss	3,2
 11331  03C3  0008               	return
 11332  03C4  3004               	movlw	4
 11333                           
 11334                           ;NavKey.c: 167: double_push_cnt = 0;
 11335  03C5  01B1               	clrf	_double_push_cnt^(0+128)
 11336  03C6  01B2               	clrf	(_double_push_cnt+1)^(0+128)
 11337  03C7                     L2:	
 11338                           
 11339                           ;NavKey.c: 168: pb_fsm = NavKey_WAITPUSH;
 11340  03C7  01BA               	clrf	_pb_fsm^(0+128)
 11341                           
 11342                           ;NavKey.c: 169: NavKeyStatusUpdate(S_CTRDP);
 11343  03C8  01C7               	clrf	NavKeyStatusUpdate@stat^(0+128)
 11344  03C9  00C8               	movwf	(NavKeyStatusUpdate@stat^(0+128)+1)
 11345  03CA  23ED  3180         	fcall	_NavKeyStatusUpdate
 11346  03CC                     l6710:	
 11347                           
 11348                           ;NavKey.c: 170: SetInterrupt();
 11349  03CC  29D4               	ljmp	l6196
 11350  03CD                     l6712:	
 11351  03CD  3002               	movlw	2
 11352                           
 11353                           ;NavKey.c: 175: double_push_cnt = 0;
 11354  03CE  01B1               	clrf	_double_push_cnt^(0+128)
 11355  03CF  01B2               	clrf	(_double_push_cnt+1)^(0+128)
 11356                           
 11357                           ;NavKey.c: 176: NavKeyStatusUpdate(S_CTRP);
 11358  03D0  01C7               	clrf	NavKeyStatusUpdate@stat^(0+128)
 11359  03D1  00C8               	movwf	(NavKeyStatusUpdate@stat^(0+128)+1)
 11360  03D2  23ED  3180         	fcall	_NavKeyStatusUpdate
 11361                           
 11362                           ;NavKey.c: 177: if (NavKey_PBstatus[0] == 1) {
 11363  03D4  0021               	movlb	1	; select bank1
 11364  03D5  0B20               	decfsz	_NavKey_PBstatus^(0+128),w
 11365  03D6  2BDA               	goto	l6720
 11366                           
 11367                           ;NavKey.c: 178: pb_fsm = NavKey_PUSHRESET;
 11368  03D7  3005               	movlw	5
 11369  03D8  00BA               	movwf	_pb_fsm^(0+128)
 11370                           
 11371                           ;NavKey.c: 179: } else {
 11372  03D9  2BCC               	goto	l6710
 11373  03DA                     l6720:	
 11374  03DA  3001               	movlw	1
 11375  03DB  2BC7               	goto	L2
 11376  03DC                     l6726:	
 11377                           ;NavKey.c: 181: NavKeyStatusUpdate(S_CTRR);
 11378                           
 11379                           ;NavKey.c: 180: pb_fsm = NavKey_WAITPUSH;
 11380                           
 11381                           
 11382                           ;NavKey.c: 187: double_push_cnt = 0;
 11383  03DC  01B1               	clrf	_double_push_cnt^(0+128)
 11384  03DD  01B2               	clrf	(_double_push_cnt+1)^(0+128)
 11385                           
 11386                           ;NavKey.c: 188: if (NavKey_PBstatus[0] == 0) {
 11387  03DE  0820               	movf	_NavKey_PBstatus^(0+128),w
 11388  03DF  1D03               	btfss	3,2
 11389  03E0  0008               	return
 11390  03E1  2BDA               	goto	l6720
 11391  03E2                     l6738:	
 11392  03E2  083A               	movf	_pb_fsm^(0+128),w
 11393                           
 11394                           ; Switch size 1, requested type "speed"
 11395                           ; Number of cases is 6, Range of values is 0 to 5
 11396                           ; switch strategies available:
 11397                           ; Name         Instructions Cycles
 11398                           ; direct_byte           18     6 (fixed)
 11399                           ; simple_byte           19    10 (average)
 11400                           ; jumptable            260     6 (fixed)
 11401                           ;	Chosen strategy is direct_byte
 11402  03E3  0084               	movwf	4
 11403  03E4  3006               	movlw	6
 11404  03E5  0204               	subwf	4,w
 11405  03E6  1803               	skipnc
 11406  03E7  0008               	return
 11407  03E8  3189               	movlp	high S7266
 11408  03E9  3504               	lslf	4,w
 11409  03EA  3E96               	addlw	low S7266
 11410  03EB  0082               	movwf	2
 11411  03EC  0008               	return
 11412  03ED                     __end_of_NavKey_CentralButton_FSM:	
 11413  03ED                     __ptext38:	
 11414 ;; *************** function _NavKeyStatusUpdate *****************
 11415 ;; Defined at:
 11416 ;;		line 102 in file "DataVariable.c"
 11417 ;; Parameters:    Size  Location     Type
 11418 ;;  stat            2    0[BANK1 ] enum E68
 11419 ;; Auto vars:     Size  Location     Type
 11420 ;;		None
 11421 ;; Return value:  Size  Location     Type
 11422 ;;                  1    wreg      void 
 11423 ;; Registers used:
 11424 ;;		wreg
 11425 ;; Tracked objects:
 11426 ;;		On entry : 1F/1
 11427 ;;		On exit  : 1F/0
 11428 ;;		Unchanged: 0/0
 11429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11430 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11433 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11434 ;;Total ram usage:        2 bytes
 11435 ;; Hardware stack levels used:    1
 11436 ;; Hardware stack levels required when called:    7
 11437 ;; This function calls:
 11438 ;;		Nothing
 11439 ;; This function is called by:
 11440 ;;		_Int2StatusUpdate
 11441 ;;		_NavKey_CentralButton_FSM
 11442 ;;		_NavKey_UPButton_FSM
 11443 ;;		_NavKey_DWButton_FSM
 11444 ;;		_NavKey_RTButton_FSM
 11445 ;;		_NavKey_LTButton_FSM
 11446 ;; This function uses a non-reentrant model
 11447 ;;
 11448                           
 11449                           
 11450                           ;psect for function _NavKeyStatusUpdate
 11451  03ED                     _NavKeyStatusUpdate:	
 11452  03ED                     l6194:	
 11453                           ;incstack = 0
 11454                           ; Regs used in _NavKeyStatusUpdate: [wreg]
 11455                           
 11456                           
 11457                           ;DataVariable.c: 103: NSTATUS.val |= (uint16_t) stat;
 11458  03ED  0847               	movf	NavKeyStatusUpdate@stat^(0+128),w
 11459  03EE  0020               	movlb	0	; select bank0
 11460  03EF  04B2               	iorwf	_NSTATUS,f	;volatile
 11461  03F0  0021               	movlb	1	; select bank1
 11462  03F1  0848               	movf	(NavKeyStatusUpdate@stat+1)^(0+128),w
 11463  03F2  0020               	movlb	0	; select bank0
 11464  03F3  04B3               	iorwf	_NSTATUS+1,f	;volatile
 11465  03F4  0008               	return
 11466  03F5                     __end_of_NavKeyStatusUpdate:	
 11467  03F5                     __ptext18:	
 11468 ;; *************** function _NavKey_DWButton_FSM *****************
 11469 ;; Defined at:
 11470 ;;		line 233 in file "NavKey.c"
 11471 ;; Parameters:    Size  Location     Type
 11472 ;;		None
 11473 ;; Auto vars:     Size  Location     Type
 11474 ;;		None
 11475 ;; Return value:  Size  Location     Type
 11476 ;;                  1    wreg      void 
 11477 ;; Registers used:
 11478 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11479 ;; Tracked objects:
 11480 ;;		On entry : 1C/1
 11481 ;;		On exit  : 1C/0
 11482 ;;		Unchanged: 0/0
 11483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11488 ;;Total ram usage:        0 bytes
 11489 ;; Hardware stack levels used:    1
 11490 ;; Hardware stack levels required when called:    8
 11491 ;; This function calls:
 11492 ;;		_NavKeyStatusUpdate
 11493 ;;		_SetInterrupt
 11494 ;; This function is called by:
 11495 ;;		_NavKey_FSM
 11496 ;; This function uses a non-reentrant model
 11497 ;;
 11498                           
 11499                           
 11500                           ;psect for function _NavKey_DWButton_FSM
 11501  03F5                     _NavKey_DWButton_FSM:	
 11502                           
 11503                           ;NavKey.c: 234: static uint8_t dn_fsm;;NavKey.c: 236: switch (dn_fsm) {
 11504                           
 11505                           ;incstack = 0
 11506                           ; Regs used in _NavKey_DWButton_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11507  03F5  2C0C               	goto	l6786
 11508  03F6                     l6768:	
 11509                           
 11510                           ;NavKey.c: 239: if (NavKey_PBstatus[1] == 1) {
 11511  03F6  0B21               	decfsz	(_NavKey_PBstatus^(0+128)+1),w
 11512  03F7  0008               	return
 11513  03F8  3008               	movlw	8
 11514                           
 11515                           ;NavKey.c: 240: dn_fsm = NavKey_WAITRELEASE;
 11516  03F9  01B7               	clrf	NavKey_DWButton_FSM@dn_fsm^(0+128)
 11517  03FA  0AB7               	incf	NavKey_DWButton_FSM@dn_fsm^(0+128),f
 11518                           
 11519                           ;NavKey.c: 241: NavKeyStatusUpdate(S_DNP);
 11520  03FB  00C7               	movwf	NavKeyStatusUpdate@stat^(0+128)
 11521  03FC  01C8               	clrf	(NavKeyStatusUpdate@stat+1)^(0+128)
 11522  03FD  23ED  3180         	fcall	_NavKeyStatusUpdate
 11523                           
 11524                           ;NavKey.c: 242: SetInterrupt();
 11525  03FF  29D4               	ljmp	l6196
 11526  0400                     l6774:	
 11527                           
 11528                           ;NavKey.c: 247: if (NavKey_PBstatus[1] == 0) {
 11529  0400  0821               	movf	(_NavKey_PBstatus^(0+128)+1),w
 11530  0401  1D03               	btfss	3,2
 11531  0402  0008               	return
 11532  0403  3004               	movlw	4
 11533                           
 11534                           ;NavKey.c: 248: dn_fsm = NavKey_WAITPUSH;
 11535  0404  01B7               	clrf	NavKey_DWButton_FSM@dn_fsm^(0+128)
 11536                           
 11537                           ;NavKey.c: 249: NavKeyStatusUpdate(S_DNR);
 11538  0405  00C7               	movwf	NavKeyStatusUpdate@stat^(0+128)
 11539  0406  01C8               	clrf	(NavKeyStatusUpdate@stat+1)^(0+128)
 11540  0407  23ED  3180         	fcall	_NavKeyStatusUpdate
 11541                           
 11542                           ;NavKey.c: 250: SetInterrupt();
 11543  0409  29D4               	ljmp	l6196
 11544  040A                     l6782:	
 11545                           
 11546                           ;NavKey.c: 255: dn_fsm = NavKey_WAITPUSH;
 11547  040A  01B7               	clrf	NavKey_DWButton_FSM@dn_fsm^(0+128)
 11548                           
 11549                           ;NavKey.c: 256: break;
 11550  040B  0008               	return
 11551  040C                     l6786:	
 11552  040C  0021               	movlb	1	; select bank1
 11553  040D  0837               	movf	NavKey_DWButton_FSM@dn_fsm^(0+128),w
 11554                           
 11555                           ; Switch size 1, requested type "speed"
 11556                           ; Number of cases is 2, Range of values is 0 to 1
 11557                           ; switch strategies available:
 11558                           ; Name         Instructions Cycles
 11559                           ; simple_byte            7     4 (average)
 11560                           ; direct_byte           10     6 (fixed)
 11561                           ; jumptable            260     6 (fixed)
 11562                           ;	Chosen strategy is simple_byte
 11563  040E  3A00               	xorlw	0	; case 0
 11564  040F  1903               	skipnz
 11565  0410  2BF6               	goto	l6768
 11566  0411  3A01               	xorlw	1	; case 1
 11567  0412  1903               	skipnz
 11568  0413  2C00               	goto	l6774
 11569  0414  2C0A               	goto	l6782
 11570  0415  0008               	return
 11571  0416                     __end_of_NavKey_DWButton_FSM:	
 11572  0416                     __ptext5:	
 11573 ;; *************** function _TMR3_SetInterruptHandler *****************
 11574 ;; Defined at:
 11575 ;;		line 178 in file "mcc_generated_files/tmr3.c"
 11576 ;; Parameters:    Size  Location     Type
 11577 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 11578 ;;		 -> TimerInt(1), TMR3_DefaultInterruptHandler(1), 
 11579 ;; Auto vars:     Size  Location     Type
 11580 ;;		None
 11581 ;; Return value:  Size  Location     Type
 11582 ;;                  1    wreg      void 
 11583 ;; Registers used:
 11584 ;;		wreg
 11585 ;; Tracked objects:
 11586 ;;		On entry : 1F/1
 11587 ;;		On exit  : 1F/1
 11588 ;;		Unchanged: 0/0
 11589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11590 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11593 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11594 ;;Total ram usage:        2 bytes
 11595 ;; Hardware stack levels used:    1
 11596 ;; Hardware stack levels required when called:    7
 11597 ;; This function calls:
 11598 ;;		Nothing
 11599 ;; This function is called by:
 11600 ;;		_TMR3_Initialize
 11601 ;;		_main
 11602 ;; This function uses a non-reentrant model
 11603 ;;
 11604                           
 11605                           
 11606                           ;psect for function _TMR3_SetInterruptHandler
 11607  0416                     _TMR3_SetInterruptHandler:	
 11608                           
 11609                           ;tmr3.c: 179: TMR3_InterruptHandler = InterruptHandler;
 11610                           
 11611                           ;incstack = 0
 11612                           ; Regs used in _TMR3_SetInterruptHandler: [wreg]
 11613  0416  0848               	movf	(TMR3_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 11614  0417  00D8               	movwf	(_TMR3_InterruptHandler+1)^(0+128)
 11615  0418  0847               	movf	TMR3_SetInterruptHandler@InterruptHandler^(0+128),w
 11616  0419  00D7               	movwf	_TMR3_InterruptHandler^(0+128)
 11617  041A  0008               	return
 11618  041B                     __end_of_TMR3_SetInterruptHandler:	
 11619  041B                     __ptext1:	
 11620 ;; *************** function _TMR3_StartTimer *****************
 11621 ;; Defined at:
 11622 ;;		line 93 in file "mcc_generated_files/tmr3.c"
 11623 ;; Parameters:    Size  Location     Type
 11624 ;;		None
 11625 ;; Auto vars:     Size  Location     Type
 11626 ;;		None
 11627 ;; Return value:  Size  Location     Type
 11628 ;;                  1    wreg      void 
 11629 ;; Registers used:
 11630 ;;		None
 11631 ;; Tracked objects:
 11632 ;;		On entry : 1F/1
 11633 ;;		On exit  : 1F/8
 11634 ;;		Unchanged: 0/0
 11635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11640 ;;Total ram usage:        0 bytes
 11641 ;; Hardware stack levels used:    1
 11642 ;; Hardware stack levels required when called:    7
 11643 ;; This function calls:
 11644 ;;		Nothing
 11645 ;; This function is called by:
 11646 ;;		_main
 11647 ;; This function uses a non-reentrant model
 11648 ;;
 11649                           
 11650                           
 11651                           ;psect for function _TMR3_StartTimer
 11652  041B                     _TMR3_StartTimer:	
 11653                           
 11654                           ;tmr3.c: 96: T3CONbits.TMR3ON = 1;
 11655                           
 11656                           ;incstack = 0
 11657                           ; Regs used in _TMR3_StartTimer: []
 11658  041B  0028               	movlb	8	; select bank8
 11659  041C  1413               	bsf	19,0	;volatile
 11660  041D  0008               	return
 11661  041E                     __end_of_TMR3_StartTimer:	
 11662                           
 11663                           	psect	bssBANK0
 11664  0020                     __pbssBANK0:	
 11665  0020                     _ISTEP:	
 11666  0020                     	ds	4
 11667  0024                     _CMIN:	
 11668  0024                     	ds	4
 11669  0028                     _CMAX:	
 11670  0028                     	ds	4
 11671  002C                     _CVAL:	
 11672  002C                     	ds	4
 11673  0030                     _INTCONF:	
 11674  0030                     	ds	2
 11675  0032                     _NSTATUS:	
 11676  0032                     	ds	2
 11677  0034                     _gp_fade_cnt:	
 11678  0034                     	ds	1
 11679  0035                     _temp_gp3:	
 11680  0035                     	ds	1
 11681  0036                     _temp_gp2:	
 11682  0036                     	ds	1
 11683  0037                     _temp_gp1:	
 11684  0037                     	ds	1
 11685  0038                     _EncoderReg:	
 11686  0038                     	ds	1
 11687  0039                     _C_DTYPE:	
 11688  0039                     	ds	1
 11689  003A                     _C_WRAPE:	
 11690  003A                     	ds	1
 11691  003B                     _C_MBANK:	
 11692  003B                     	ds	1
 11693  003C                     _GAMMAGP3:	
 11694  003C                     	ds	1
 11695  003D                     _GAMMAGP2:	
 11696  003D                     	ds	1
 11697  003E                     _GAMMAGP1:	
 11698  003E                     	ds	1
 11699  003F                     _FADEGP:	
 11700  003F                     	ds	1
 11701  0040                     _DPPERIOD:	
 11702  0040                     	ds	1
 11703  0041                     _GP3REG:	
 11704  0041                     	ds	1
 11705  0042                     _GP2REG:	
 11706  0042                     	ds	1
 11707  0043                     _GP1REG:	
 11708  0043                     	ds	1
 11709  0044                     _FSTATUS:	
 11710  0044                     	ds	1
 11711  0045                     _SSTATUS:	
 11712  0045                     	ds	1
 11713  0046                     _GP3CONF:	
 11714  0046                     	ds	1
 11715  0047                     _GP2CONF:	
 11716  0047                     	ds	1
 11717  0048                     _GP1CONF:	
 11718  0048                     	ds	1
 11719  0049                     _GCONF:	
 11720  0049                     	ds	1
 11721                           
 11722                           	psect	dataBANK0
 11723  005F                     __pdataBANK0:	
 11724  005F                     _I2C1_slaveWriteData:	
 11725  005F                     	ds	1
 11726                           
 11727                           	psect	bssBANK1
 11728  00A0                     __pbssBANK1:	
 11729  00A0                     _NavKey_PBstatus:	
 11730  00A0                     	ds	5
 11731  00A5                     _NavKey_PBtemp:	
 11732  00A5                     	ds	5
 11733  00AA                     _pb_cnt:	
 11734  00AA                     	ds	5
 11735  00AF                     _en_deb:	
 11736  00AF                     	ds	2
 11737  00B1                     _double_push_cnt:	
 11738  00B1                     	ds	2
 11739  00B3                     _DoublePush:	
 11740  00B3                     	ds	2
 11741  00B5                     NavKey_LTButton_FSM@lt_fsm:	
 11742  00B5                     	ds	1
 11743  00B6                     NavKey_RTButton_FSM@rt_fsm:	
 11744  00B6                     	ds	1
 11745  00B7                     NavKey_DWButton_FSM@dn_fsm:	
 11746  00B7                     	ds	1
 11747  00B8                     NavKey_UPButton_FSM@up_fsm:	
 11748  00B8                     	ds	1
 11749  00B9                     _en_prev:	
 11750  00B9                     	ds	1
 11751  00BA                     _pb_fsm:	
 11752  00BA                     	ds	1
 11753  00BB                     _gp3_fsm:	
 11754  00BB                     	ds	1
 11755  00BC                     _gp2_fsm:	
 11756  00BC                     	ds	1
 11757  00BD                     _gp1_fsm:	
 11758  00BD                     	ds	1
 11759  00BE                     _gp_timer:	
 11760  00BE                     	ds	1
 11761  00BF                     I2C1_StatusCallback@slaveWriteType:	
 11762  00BF                     	ds	1
 11763  00C0                     _int2clear:	
 11764  00C0                     	ds	1
 11765  00C1                     _intclear:	
 11766  00C1                     	ds	1
 11767  00C2                     _C_DIRE:	
 11768  00C2                     	ds	1
 11769  00C3                     _C_IPUD:	
 11770  00C3                     	ds	1
 11771  00C4                     _C_CKSRC:	
 11772  00C4                     	ds	1
 11773  00C5                     _C_RESET:	
 11774  00C5                     	ds	1
 11775  00C6                     _fsm_tmr:	
 11776  00C6                     	ds	1
 11777                           
 11778                           	psect	clrtext
 11779  0B2A                     clear_ram0:	
 11780                           ;	Called with FSR0 containing the base address, and
 11781                           ;	WREG with the size to clear
 11782                           
 11783  0B2A  0064               	clrwdt	;clear the watchdog before getting into this loop
 11784  0B2B                     clrloop0:	
 11785  0B2B  0180               	clrf	0	;clear RAM location pointed to by FSR
 11786  0B2C  3101               	addfsr 0,1
 11787  0B2D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
 11788  0B2E  2B2B               	goto	clrloop0	;have we reached the end yet?
 11789  0B2F  3400               	retlw	0	;all done for this memory range, return
 11790                           
 11791                           	psect	cstackBANK1
 11792  00C7                     __pcstackBANK1:	
 11793  00C7                     ??_PMD_Initialize:	
 11794  00C7                     ??_PIN_MANAGER_Initialize:	
 11795                           ; 1 bytes @ 0x0
 11796                           
 11797  00C7                     ??_OSCILLATOR_Initialize:	
 11798                           ; 1 bytes @ 0x0
 11799                           
 11800  00C7                     ??_WDT_Initialize:	
 11801                           ; 1 bytes @ 0x0
 11802                           
 11803  00C7                     ??_I2C1_AddressSet:	
 11804                           ; 1 bytes @ 0x0
 11805                           
 11806  00C7                     ??_I2C1_Initialize:	
 11807                           ; 1 bytes @ 0x0
 11808                           
 11809  00C7                     ??_CLC2_Initialize:	
 11810                           ; 1 bytes @ 0x0
 11811                           
 11812  00C7                     ??_TMR2_Initialize:	
 11813                           ; 1 bytes @ 0x0
 11814                           
 11815  00C7                     ??_CLC1_Initialize:	
 11816                           ; 1 bytes @ 0x0
 11817                           
 11818  00C7                     ?_TMR3_SetInterruptHandler:	
 11819                           ; 1 bytes @ 0x0
 11820                           
 11821  00C7                     ??_DataInitSet:	
 11822                           ; 1 bytes @ 0x0
 11823                           
 11824  00C7                     ??_ADC_Initialize:	
 11825                           ; 1 bytes @ 0x0
 11826                           
 11827  00C7                     ??_TMR3_StartTimer:	
 11828                           ; 1 bytes @ 0x0
 11829                           
 11830  00C7                     ??_SetInterrupt:	
 11831                           ; 1 bytes @ 0x0
 11832                           
 11833  00C7                     ??_ClearInterrupt:	
 11834                           ; 1 bytes @ 0x0
 11835                           
 11836  00C7                     ?_NavKeyStatusUpdate:	
 11837                           ; 1 bytes @ 0x0
 11838                           
 11839  00C7                     ??_FadeProcessSet:	
 11840                           ; 1 bytes @ 0x0
 11841                           
 11842  00C7                     ??_NavKeySwitch_KeyFilter:	
 11843                           ; 1 bytes @ 0x0
 11844                           
 11845  00C7                     ?_ADC_GetConversion:	
 11846                           ; 1 bytes @ 0x0
 11847                           
 11848  00C7                     ?___wmul:	
 11849                           ; 2 bytes @ 0x0
 11850                           
 11851  00C7                     FadeProcessSet@stat:	
 11852                           ; 2 bytes @ 0x0
 11853                           
 11854  00C7                     NavKeySwitch_KeyFilter@i:	
 11855                           ; 1 bytes @ 0x0
 11856                           
 11857  00C7                     TMR3_SetInterruptHandler@InterruptHandler:	
 11858                           ; 1 bytes @ 0x0
 11859                           
 11860  00C7                     NavKeyStatusUpdate@stat:	
 11861                           ; 2 bytes @ 0x0
 11862                           
 11863  00C7                     ___wmul@multiplier:	
 11864                           ; 2 bytes @ 0x0
 11865                           
 11866                           
 11867                           ; 2 bytes @ 0x0
 11868  00C7                     	ds	2
 11869  00C9                     ??_TMR3_Initialize:	
 11870  00C9                     ??_TMR3_SetInterruptHandler:	
 11871                           ; 1 bytes @ 0x2
 11872                           
 11873  00C9                     ??_NavKey_FSM:	
 11874                           ; 1 bytes @ 0x2
 11875                           
 11876  00C9                     ??_SYSTEM_Initialize:	
 11877                           ; 1 bytes @ 0x2
 11878                           
 11879  00C9                     ??_ADC_GetConversion:	
 11880                           ; 1 bytes @ 0x2
 11881                           
 11882  00C9                     ??_NavKeyStatusUpdate:	
 11883                           ; 1 bytes @ 0x2
 11884                           
 11885  00C9                     ??_Int2StatusUpdate:	
 11886                           ; 1 bytes @ 0x2
 11887                           
 11888  00C9                     ??_NavKey_CentralButton_FSM:	
 11889                           ; 1 bytes @ 0x2
 11890                           
 11891  00C9                     ??_NavKey_UPButton_FSM:	
 11892                           ; 1 bytes @ 0x2
 11893                           
 11894  00C9                     ??_NavKey_DWButton_FSM:	
 11895                           ; 1 bytes @ 0x2
 11896                           
 11897  00C9                     ??_NavKey_RTButton_FSM:	
 11898                           ; 1 bytes @ 0x2
 11899                           
 11900  00C9                     ??_NavKey_LTButton_FSM:	
 11901                           ; 1 bytes @ 0x2
 11902                           
 11903  00C9                     Int2StatusUpdate@stat:	
 11904                           ; 1 bytes @ 0x2
 11905                           
 11906  00C9                     ___wmul@multiplicand:	
 11907                           ; 1 bytes @ 0x2
 11908                           
 11909                           
 11910                           ; 2 bytes @ 0x2
 11911  00C9                     	ds	1
 11912  00CA                     ??_FadeProcessClear:	
 11913  00CA                     ADC_GetConversion@channel:	
 11914                           ; 1 bytes @ 0x3
 11915                           
 11916  00CA                     FadeProcessClear@stat:	
 11917                           ; 1 bytes @ 0x3
 11918                           
 11919                           
 11920                           ; 1 bytes @ 0x3
 11921  00CA                     	ds	1
 11922  00CB                     ??_GP1_FSM:	
 11923  00CB                     ??_GP2_FSM:	
 11924                           ; 1 bytes @ 0x4
 11925                           
 11926  00CB                     ??_GP3_FSM:	
 11927                           ; 1 bytes @ 0x4
 11928                           
 11929  00CB                     ??___wmul:	
 11930                           ; 1 bytes @ 0x4
 11931                           
 11932  00CB                     ___wmul@product:	
 11933                           ; 1 bytes @ 0x4
 11934                           
 11935                           
 11936                           ; 2 bytes @ 0x4
 11937  00CB                     	ds	2
 11938  00CD                     ??_PWM_GP1:	
 11939  00CD                     ??_PWM_GP2:	
 11940                           ; 1 bytes @ 0x6
 11941                           
 11942  00CD                     ??_PWM_GP3:	
 11943                           ; 1 bytes @ 0x6
 11944                           
 11945                           
 11946                           ; 1 bytes @ 0x6
 11947  00CD                     	ds	8
 11948  00D5                     PWM_GP1@duty:	
 11949  00D5                     PWM_GP2@duty:	
 11950                           ; 1 bytes @ 0xE
 11951                           
 11952  00D5                     PWM_GP3@duty:	
 11953                           ; 1 bytes @ 0xE
 11954                           
 11955                           
 11956                           ; 1 bytes @ 0xE
 11957  00D5                     	ds	1
 11958  00D6                     ??_GP_Ports_FSM:	
 11959  00D6                     ??_FADE_GP1:	
 11960                           ; 1 bytes @ 0xF
 11961                           
 11962  00D6                     ??_FADE_GP2:	
 11963                           ; 1 bytes @ 0xF
 11964                           
 11965  00D6                     ??_FADE_GP3:	
 11966                           ; 1 bytes @ 0xF
 11967                           
 11968                           
 11969                           ; 1 bytes @ 0xF
 11970  00D6                     	ds	1
 11971  00D7                     ??_main:	
 11972                           
 11973                           	psect	cstackCOMMON
 11974  0070                     __pcstackCOMMON:	
 11975                           ; 1 bytes @ 0x10
 11976                           
 11977  0070                     ?___flge:	
 11978  0070                     ?_PMD_Initialize:	
 11979                           ; 1 bit 
 11980                           
 11981  0070                     ?_PIN_MANAGER_Initialize:	
 11982                           ; 1 bytes @ 0x0
 11983                           
 11984  0070                     ?_OSCILLATOR_Initialize:	
 11985                           ; 1 bytes @ 0x0
 11986                           
 11987  0070                     ?_WDT_Initialize:	
 11988                           ; 1 bytes @ 0x0
 11989                           
 11990  0070                     ?_I2C1_AddressSet:	
 11991                           ; 1 bytes @ 0x0
 11992                           
 11993  0070                     ?_I2C1_Initialize:	
 11994                           ; 1 bytes @ 0x0
 11995                           
 11996  0070                     ?_CLC2_Initialize:	
 11997                           ; 1 bytes @ 0x0
 11998                           
 11999  0070                     ?_TMR2_Initialize:	
 12000                           ; 1 bytes @ 0x0
 12001                           
 12002  0070                     ?_CLC1_Initialize:	
 12003                           ; 1 bytes @ 0x0
 12004                           
 12005  0070                     ?_TMR3_Initialize:	
 12006                           ; 1 bytes @ 0x0
 12007                           
 12008  0070                     ?_CLC2_ISR:	
 12009                           ; 1 bytes @ 0x0
 12010                           
 12011  0070                     ?_CLC1_ISR:	
 12012                           ; 1 bytes @ 0x0
 12013                           
 12014  0070                     ?_I2C1_ISR:	
 12015                           ; 1 bytes @ 0x0
 12016                           
 12017  0070                     ?_TMR3_ISR:	
 12018                           ; 1 bytes @ 0x0
 12019                           
 12020  0070                     ?_CLC_2_Interrupt:	
 12021                           ; 1 bytes @ 0x0
 12022                           
 12023  0070                     ?_I2C1_StatusCallback:	
 12024                           ; 1 bytes @ 0x0
 12025                           
 12026  0070                     ?_CLC_1_Interrupt:	
 12027                           ; 1 bytes @ 0x0
 12028                           
 12029  0070                     ?_TMR3_DefaultInterruptHandler:	
 12030                           ; 1 bytes @ 0x0
 12031                           
 12032  0070                     ??_TMR3_DefaultInterruptHandler:	
 12033                           ; 1 bytes @ 0x0
 12034                           
 12035  0070                     ?_TMR3_CallBack:	
 12036                           ; 1 bytes @ 0x0
 12037                           
 12038  0070                     ??_TMR3_CallBack:	
 12039                           ; 1 bytes @ 0x0
 12040                           
 12041  0070                     ?_DataInitSet:	
 12042                           ; 1 bytes @ 0x0
 12043                           
 12044  0070                     ?_NavKey_FSM:	
 12045                           ; 1 bytes @ 0x0
 12046                           
 12047  0070                     ?_GP_Ports_FSM:	
 12048                           ; 1 bytes @ 0x0
 12049                           
 12050  0070                     ?_RegisterRead:	
 12051                           ; 1 bytes @ 0x0
 12052                           
 12053  0070                     ?_GeneralDataSet:	
 12054                           ; 1 bytes @ 0x0
 12055                           
 12056  0070                     ??_GeneralDataSet:	
 12057                           ; 1 bytes @ 0x0
 12058                           
 12059  0070                     ?_Config_GP1:	
 12060                           ; 1 bytes @ 0x0
 12061                           
 12062  0070                     ?_Config_GP2:	
 12063                           ; 1 bytes @ 0x0
 12064                           
 12065  0070                     ?_Config_GP3:	
 12066                           ; 1 bytes @ 0x0
 12067                           
 12068  0070                     ?_UpdateOut_GP1:	
 12069                           ; 1 bytes @ 0x0
 12070                           
 12071  0070                     ?_UpdateOut_GP2:	
 12072                           ; 1 bytes @ 0x0
 12073                           
 12074  0070                     ?_UpdateOut_GP3:	
 12075                           ; 1 bytes @ 0x0
 12076                           
 12077  0070                     ?_eeprom_write:	
 12078                           ; 1 bytes @ 0x0
 12079                           
 12080  0070                     ?_eeprom_read:	
 12081                           ; 1 bytes @ 0x0
 12082                           
 12083  0070                     ??_eeprom_read:	
 12084                           ; 1 bytes @ 0x0
 12085                           
 12086  0070                     ?_PWM_GP1:	
 12087                           ; 1 bytes @ 0x0
 12088                           
 12089  0070                     ?_PWM_GP2:	
 12090                           ; 1 bytes @ 0x0
 12091                           
 12092  0070                     ?_PWM_GP3:	
 12093                           ; 1 bytes @ 0x0
 12094                           
 12095  0070                     ?_SYSTEM_Initialize:	
 12096                           ; 1 bytes @ 0x0
 12097                           
 12098  0070                     ?_INTERRUPT_InterruptManager:	
 12099                           ; 1 bytes @ 0x0
 12100                           
 12101  0070                     ?_I2C1_Initialize_ClockStreach:	
 12102                           ; 1 bytes @ 0x0
 12103                           
 12104  0070                     ??_I2C1_Initialize_ClockStreach:	
 12105                           ; 1 bytes @ 0x0
 12106                           
 12107  0070                     ?_PWM3_Initialize:	
 12108                           ; 1 bytes @ 0x0
 12109                           
 12110  0070                     ??_PWM3_Initialize:	
 12111                           ; 1 bytes @ 0x0
 12112                           
 12113  0070                     ?_ADC_Initialize:	
 12114                           ; 1 bytes @ 0x0
 12115                           
 12116  0070                     ?_PWM1_Initialize:	
 12117                           ; 1 bytes @ 0x0
 12118                           
 12119  0070                     ??_PWM1_Initialize:	
 12120                           ; 1 bytes @ 0x0
 12121                           
 12122  0070                     ?_PWM2_Initialize:	
 12123                           ; 1 bytes @ 0x0
 12124                           
 12125  0070                     ??_PWM2_Initialize:	
 12126                           ; 1 bytes @ 0x0
 12127                           
 12128  0070                     ?_TMR3_StartTimer:	
 12129                           ; 1 bytes @ 0x0
 12130                           
 12131  0070                     ?_TMR3_WriteTimer:	
 12132                           ; 1 bytes @ 0x0
 12133                           
 12134  0070                     ?_SetInterrupt:	
 12135                           ; 1 bytes @ 0x0
 12136                           
 12137  0070                     ?_ClearInterrupt:	
 12138                           ; 1 bytes @ 0x0
 12139                           
 12140  0070                     ?_TimerInt:	
 12141                           ; 1 bytes @ 0x0
 12142                           
 12143  0070                     ??_TimerInt:	
 12144                           ; 1 bytes @ 0x0
 12145                           
 12146  0070                     ?_main:	
 12147                           ; 1 bytes @ 0x0
 12148                           
 12149  0070                     ?_GeneralDataSplit:	
 12150                           ; 1 bytes @ 0x0
 12151                           
 12152  0070                     ??_GeneralDataSplit:	
 12153                           ; 1 bytes @ 0x0
 12154                           
 12155  0070                     ?_Int2StatusUpdate:	
 12156                           ; 1 bytes @ 0x0
 12157                           
 12158  0070                     ?_StatusClear:	
 12159                           ; 1 bytes @ 0x0
 12160                           
 12161  0070                     ??_StatusClear:	
 12162                           ; 1 bytes @ 0x0
 12163                           
 12164  0070                     ?_Int2StatusClear:	
 12165                           ; 1 bytes @ 0x0
 12166                           
 12167  0070                     ??_Int2StatusClear:	
 12168                           ; 1 bytes @ 0x0
 12169                           
 12170  0070                     ?_FadeProcessSet:	
 12171                           ; 1 bytes @ 0x0
 12172                           
 12173  0070                     ?_FadeProcessClear:	
 12174                           ; 1 bytes @ 0x0
 12175                           
 12176  0070                     ?_FADE_GP1:	
 12177                           ; 1 bytes @ 0x0
 12178                           
 12179  0070                     ?_FADE_GP2:	
 12180                           ; 1 bytes @ 0x0
 12181                           
 12182  0070                     ?_FADE_GP3:	
 12183                           ; 1 bytes @ 0x0
 12184                           
 12185  0070                     ?_GP1_FSM:	
 12186                           ; 1 bytes @ 0x0
 12187                           
 12188  0070                     ?_GP2_FSM:	
 12189                           ; 1 bytes @ 0x0
 12190                           
 12191  0070                     ?_GP3_FSM:	
 12192                           ; 1 bytes @ 0x0
 12193                           
 12194  0070                     ?_NavKeySwitch_KeyFilter:	
 12195                           ; 1 bytes @ 0x0
 12196                           
 12197  0070                     ?_NavKey_CentralButton_FSM:	
 12198                           ; 1 bytes @ 0x0
 12199                           
 12200  0070                     ?_NavKey_UPButton_FSM:	
 12201                           ; 1 bytes @ 0x0
 12202                           
 12203  0070                     ?_NavKey_DWButton_FSM:	
 12204                           ; 1 bytes @ 0x0
 12205                           
 12206  0070                     ?_NavKey_RTButton_FSM:	
 12207                           ; 1 bytes @ 0x0
 12208                           
 12209  0070                     ?_NavKey_LTButton_FSM:	
 12210                           ; 1 bytes @ 0x0
 12211                           
 12212  0070                     ?i1_I2C1_Initialize:	
 12213                           ; 1 bytes @ 0x0
 12214                           
 12215  0070                     ??i1_I2C1_Initialize:	
 12216                           ; 1 bytes @ 0x0
 12217                           
 12218  0070                     ?i1_SetInterrupt:	
 12219                           ; 1 bytes @ 0x0
 12220                           
 12221  0070                     ??i1_SetInterrupt:	
 12222                           ; 1 bytes @ 0x0
 12223                           
 12224  0070                     ?i1_ClearInterrupt:	
 12225                           ; 1 bytes @ 0x0
 12226                           
 12227  0070                     ??i1_ClearInterrupt:	
 12228                           ; 1 bytes @ 0x0
 12229                           
 12230  0070                     ?i1_NavKeyStatusUpdate:	
 12231                           ; 1 bytes @ 0x0
 12232                           
 12233  0070                     ?i1_PWM_GP1:	
 12234                           ; 1 bytes @ 0x0
 12235                           
 12236  0070                     ?i1_PWM_GP2:	
 12237                           ; 1 bytes @ 0x0
 12238                           
 12239  0070                     ?i1_PWM_GP3:	
 12240                           ; 1 bytes @ 0x0
 12241                           
 12242  0070                     ?i1___wmul:	
 12243                           ; 1 bytes @ 0x0
 12244                           
 12245  0070                     ?___fladd:	
 12246                           ; 2 bytes @ 0x0
 12247                           
 12248  0070                     eeprom_read@addr:	
 12249                           ; 4 bytes @ 0x0
 12250                           
 12251  0070                     eeprom_write@value:	
 12252                           ; 1 bytes @ 0x0
 12253                           
 12254  0070                     TMR3_WriteTimer@timerVal:	
 12255                           ; 1 bytes @ 0x0
 12256                           
 12257  0070                     i1NavKeyStatusUpdate@stat:	
 12258                           ; 2 bytes @ 0x0
 12259                           
 12260  0070                     i1___wmul@multiplier:	
 12261                           ; 2 bytes @ 0x0
 12262                           
 12263  0070                     ___flge@ff1:	
 12264                           ; 2 bytes @ 0x0
 12265                           
 12266  0070                     ___fladd@b:	
 12267                           ; 4 bytes @ 0x0
 12268                           
 12269                           
 12270                           ; 4 bytes @ 0x0
 12271  0070                     	ds	1
 12272  0071                     ??_RegisterRead:	
 12273  0071                     ??_eeprom_write:	
 12274                           ; 1 bytes @ 0x1
 12275                           
 12276  0071                     RegisterRead@add:	
 12277                           ; 1 bytes @ 0x1
 12278                           
 12279  0071                     eeprom_write@addr:	
 12280                           ; 1 bytes @ 0x1
 12281                           
 12282                           
 12283                           ; 1 bytes @ 0x1
 12284  0071                     	ds	1
 12285  0072                     ??_TMR3_ISR:	
 12286  0072                     ??_TMR3_WriteTimer:	
 12287                           ; 1 bytes @ 0x2
 12288                           
 12289  0072                     ??i1_NavKeyStatusUpdate:	
 12290                           ; 1 bytes @ 0x2
 12291                           
 12292  0072                     RegisterRead@return_value:	
 12293                           ; 1 bytes @ 0x2
 12294                           
 12295  0072                     i1___wmul@multiplicand:	
 12296                           ; 1 bytes @ 0x2
 12297                           
 12298                           
 12299                           ; 2 bytes @ 0x2
 12300  0072                     	ds	2
 12301  0074                     ??i1___wmul:	
 12302  0074                     i1___wmul@product:	
 12303                           ; 1 bytes @ 0x4
 12304                           
 12305  0074                     ___flge@ff2:	
 12306                           ; 2 bytes @ 0x4
 12307                           
 12308  0074                     ___fladd@a:	
 12309                           ; 4 bytes @ 0x4
 12310                           
 12311                           
 12312                           ; 4 bytes @ 0x4
 12313  0074                     	ds	2
 12314  0076                     ??i1_PWM_GP1:	
 12315  0076                     ??i1_PWM_GP2:	
 12316                           ; 1 bytes @ 0x6
 12317                           
 12318  0076                     ??i1_PWM_GP3:	
 12319                           ; 1 bytes @ 0x6
 12320                           
 12321                           
 12322                           ; 1 bytes @ 0x6
 12323  0076                     	ds	2
 12324  0078                     ??___flge:	
 12325  0078                     ___fladd@signs:	
 12326                           ; 1 bytes @ 0x8
 12327                           
 12328                           
 12329                           ; 1 bytes @ 0x8
 12330  0078                     	ds	1
 12331  0079                     ___fladd@aexp:	
 12332                           
 12333                           ; 1 bytes @ 0x9
 12334  0079                     	ds	1
 12335  007A                     ___fladd@bexp:	
 12336                           
 12337                           ; 1 bytes @ 0xA
 12338  007A                     	ds	1
 12339  007B                     ___fladd@grs:	
 12340                           
 12341                           ; 1 bytes @ 0xB
 12342  007B                     	ds	1
 12343  007C                     ??_CLC2_ISR:	
 12344  007C                     ??_CLC1_ISR:	
 12345                           ; 1 bytes @ 0xC
 12346                           
 12347  007C                     ??___flsub:	
 12348                           ; 1 bytes @ 0xC
 12349                           
 12350                           
 12351                           ; 1 bytes @ 0xC
 12352  007C                     	ds	2
 12353  007E                     ??_I2C1_ISR:	
 12354  007E                     ??_I2C1_StatusCallback:	
 12355                           ; 1 bytes @ 0xE
 12356                           
 12357  007E                     ??_RegisterWrite:	
 12358                           ; 1 bytes @ 0xE
 12359                           
 12360  007E                     ??_INTERRUPT_InterruptManager:	
 12361                           ; 1 bytes @ 0xE
 12362                           
 12363                           
 12364                           	psect	cstackBANK0
 12365  004A                     __pcstackBANK0:	
 12366                           ; 1 bytes @ 0xE
 12367                           
 12368  004A                     ??___fladd:	
 12369  004A                     i1PWM_GP1@duty:	
 12370                           ; 1 bytes @ 0x0
 12371                           
 12372  004A                     i1PWM_GP2@duty:	
 12373                           ; 1 bytes @ 0x0
 12374                           
 12375  004A                     i1PWM_GP3@duty:	
 12376                           ; 1 bytes @ 0x0
 12377                           
 12378                           
 12379                           ; 1 bytes @ 0x0
 12380  004A                     	ds	1
 12381  004B                     ??_Config_GP1:	
 12382  004B                     ??_Config_GP2:	
 12383                           ; 1 bytes @ 0x1
 12384                           
 12385  004B                     ??_Config_GP3:	
 12386                           ; 1 bytes @ 0x1
 12387                           
 12388  004B                     ??_UpdateOut_GP1:	
 12389                           ; 1 bytes @ 0x1
 12390                           
 12391  004B                     ??_UpdateOut_GP2:	
 12392                           ; 1 bytes @ 0x1
 12393                           
 12394  004B                     ??_UpdateOut_GP3:	
 12395                           ; 1 bytes @ 0x1
 12396                           
 12397                           
 12398                           ; 1 bytes @ 0x1
 12399  004B                     	ds	2
 12400  004D                     ?_RegisterWrite:	
 12401  004D                     RegisterWrite@data:	
 12402                           ; 1 bytes @ 0x3
 12403                           
 12404                           
 12405                           ; 1 bytes @ 0x3
 12406  004D                     	ds	1
 12407  004E                     RegisterWrite@add:	
 12408                           
 12409                           ; 1 bytes @ 0x4
 12410  004E                     	ds	1
 12411  004F                     I2C1_StatusCallback@i2c_bus_state:	
 12412                           
 12413                           ; 1 bytes @ 0x5
 12414  004F                     	ds	1
 12415  0050                     I2C1_ISR@i2c_data:	
 12416                           
 12417                           ; 1 bytes @ 0x6
 12418  0050                     	ds	2
 12419  0052                     ??_CLC_1_Interrupt:	
 12420  0052                     ?___flsub:	
 12421                           ; 1 bytes @ 0x8
 12422                           
 12423  0052                     ___flsub@a:	
 12424                           ; 4 bytes @ 0x8
 12425                           
 12426                           
 12427                           ; 4 bytes @ 0x8
 12428  0052                     	ds	4
 12429  0056                     ___flsub@b:	
 12430                           
 12431                           ; 4 bytes @ 0xC
 12432  0056                     	ds	4
 12433  005A                     ??_CLC_2_Interrupt:	
 12434                           
 12435                           ; 1 bytes @ 0x10
 12436  005A                     	ds	4
 12437                           
 12438                           	psect	text2
 12439  143A                     __ptext2:	
 12440 ;; *************** function _SYSTEM_Initialize *****************
 12441 ;; Defined at:
 12442 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12443 ;; Parameters:    Size  Location     Type
 12444 ;;		None
 12445 ;; Auto vars:     Size  Location     Type
 12446 ;;		None
 12447 ;; Return value:  Size  Location     Type
 12448 ;;                  1    wreg      void 
 12449 ;; Registers used:
 12450 ;;		wreg, status,2, status,0, pclath, cstack
 12451 ;; Tracked objects:
 12452 ;;		On entry : B1F/0
 12453 ;;		On exit  : 1F/8
 12454 ;;		Unchanged: 0/0
 12455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12460 ;;Total ram usage:        0 bytes
 12461 ;; Hardware stack levels used:    1
 12462 ;; Hardware stack levels required when called:    9
 12463 ;; This function calls:
 12464 ;;		_CLC1_Initialize
 12465 ;;		_CLC2_Initialize
 12466 ;;		_I2C1_AddressSet
 12467 ;;		_I2C1_Initialize
 12468 ;;		_OSCILLATOR_Initialize
 12469 ;;		_PIN_MANAGER_Initialize
 12470 ;;		_PMD_Initialize
 12471 ;;		_TMR2_Initialize
 12472 ;;		_TMR3_Initialize
 12473 ;;		_WDT_Initialize
 12474 ;; This function is called by:
 12475 ;;		_main
 12476 ;; This function uses a non-reentrant model
 12477 ;;
 12478                           
 12479                           
 12480                           ;psect for function _SYSTEM_Initialize
 12481  143A                     _SYSTEM_Initialize:	
 12482                           
 12483                           ;mcc.c: 53: PMD_Initialize();
 12484                           
 12485                           ;incstack = 0
 12486                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12487  143A  24BB  3194         	fcall	_PMD_Initialize
 12488                           
 12489                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 12490  143C  2484  3194         	fcall	_PIN_MANAGER_Initialize
 12491                           
 12492                           ;mcc.c: 55: OSCILLATOR_Initialize();
 12493  143E  247B  3194         	fcall	_OSCILLATOR_Initialize
 12494                           
 12495                           ;mcc.c: 56: WDT_Initialize();
 12496  1440  24D1  3194         	fcall	_WDT_Initialize
 12497                           
 12498                           ;mcc.c: 57: I2C1_AddressSet();
 12499  1442  2462  3194         	fcall	_I2C1_AddressSet
 12500                           
 12501                           ;mcc.c: 58: I2C1_Initialize();
 12502  1444  2468  3194         	fcall	_I2C1_Initialize
 12503                           
 12504                           ;mcc.c: 59: CLC2_Initialize();
 12505  1446  244D  3194         	fcall	_CLC2_Initialize
 12506                           
 12507                           ;mcc.c: 60: TMR2_Initialize();
 12508  1448  24C9  3194         	fcall	_TMR2_Initialize
 12509                           
 12510                           ;mcc.c: 61: CLC1_Initialize();
 12511  144A  24D5  3194         	fcall	_CLC1_Initialize
 12512                           
 12513                           ;mcc.c: 62: TMR3_Initialize();
 12514  144C  2CEA               	ljmp	l6406
 12515  144D                     __end_of_SYSTEM_Initialize:	
 12516  144D                     __ptext12:	
 12517 ;; *************** function _CLC2_Initialize *****************
 12518 ;; Defined at:
 12519 ;;		line 58 in file "mcc_generated_files/clc2.c"
 12520 ;; Parameters:    Size  Location     Type
 12521 ;;		None
 12522 ;; Auto vars:     Size  Location     Type
 12523 ;;		None
 12524 ;; Return value:  Size  Location     Type
 12525 ;;                  1    wreg      void 
 12526 ;; Registers used:
 12527 ;;		wreg, status,2
 12528 ;; Tracked objects:
 12529 ;;		On entry : B1F/1
 12530 ;;		On exit  : B1F/1
 12531 ;;		Unchanged: B00/0
 12532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12537 ;;Total ram usage:        0 bytes
 12538 ;; Hardware stack levels used:    1
 12539 ;; Hardware stack levels required when called:    7
 12540 ;; This function calls:
 12541 ;;		Nothing
 12542 ;; This function is called by:
 12543 ;;		_SYSTEM_Initialize
 12544 ;; This function uses a non-reentrant model
 12545 ;;
 12546                           
 12547                           
 12548                           ;psect for function _CLC2_Initialize
 12549  144D                     _CLC2_Initialize:	
 12550                           
 12551                           ;clc2.c: 63: CLC2POL = 0x04;
 12552                           
 12553                           ;incstack = 0
 12554                           ; Regs used in _CLC2_Initialize: [wreg+status,2]
 12555  144D  3004               	movlw	4
 12556  144E  003E               	movlb	30	; select bank30
 12557  144F  009B               	movwf	27	;volatile
 12558                           
 12559                           ;clc2.c: 65: CLC2SEL0 = 0x01;
 12560  1450  3001               	movlw	1
 12561  1451  009C               	movwf	28	;volatile
 12562                           
 12563                           ;clc2.c: 67: CLC2SEL1 = 0x00;
 12564  1452  019D               	clrf	29	;volatile
 12565                           
 12566                           ;clc2.c: 69: CLC2SEL2 = 0x00;
 12567  1453  019E               	clrf	30	;volatile
 12568                           
 12569                           ;clc2.c: 71: CLC2SEL3 = 0x00;
 12570  1454  019F               	clrf	31	;volatile
 12571                           
 12572                           ;clc2.c: 73: CLC2GLS0 = 0x02;
 12573  1455  3002               	movlw	2
 12574  1456  00A0               	movwf	32	;volatile
 12575                           
 12576                           ;clc2.c: 75: CLC2GLS1 = 0xA8;
 12577  1457  30A8               	movlw	168
 12578  1458  00A1               	movwf	33	;volatile
 12579                           
 12580                           ;clc2.c: 77: CLC2GLS2 = 0xA8;
 12581  1459  00A2               	movwf	34	;volatile
 12582                           
 12583                           ;clc2.c: 79: CLC2GLS3 = 0xA8;
 12584  145A  00A3               	movwf	35	;volatile
 12585                           
 12586                           ;clc2.c: 81: CLC2CON = 0x9D;
 12587  145B  309D               	movlw	157
 12588  145C  009A               	movwf	26	;volatile
 12589                           
 12590                           ;clc2.c: 84: PIR3bits.CLC2IF = 0;
 12591  145D  0020               	movlb	0	; select bank0
 12592  145E  1093               	bcf	19,1	;volatile
 12593                           
 12594                           ;clc2.c: 86: PIE3bits.CLC2IE = 1;
 12595  145F  0021               	movlb	1	; select bank1
 12596  1460  1493               	bsf	19,1	;volatile
 12597  1461  0008               	return
 12598  1462                     __end_of_CLC2_Initialize:	
 12599  1462                     __ptext11:	
 12600 ;; *************** function _I2C1_AddressSet *****************
 12601 ;; Defined at:
 12602 ;;		line 20 in file "i2c_register.c"
 12603 ;; Parameters:    Size  Location     Type
 12604 ;;		None
 12605 ;; Auto vars:     Size  Location     Type
 12606 ;;		None
 12607 ;; Return value:  Size  Location     Type
 12608 ;;                  1    wreg      void 
 12609 ;; Registers used:
 12610 ;;		wreg, status,2, status,0
 12611 ;; Tracked objects:
 12612 ;;		On entry : B1F/1
 12613 ;;		On exit  : B1F/0
 12614 ;;		Unchanged: B00/0
 12615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12620 ;;Total ram usage:        0 bytes
 12621 ;; Hardware stack levels used:    1
 12622 ;; Hardware stack levels required when called:    7
 12623 ;; This function calls:
 12624 ;;		Nothing
 12625 ;; This function is called by:
 12626 ;;		_SYSTEM_Initialize
 12627 ;; This function uses a non-reentrant model
 12628 ;;
 12629                           
 12630                           
 12631                           ;psect for function _I2C1_AddressSet
 12632  1462                     _I2C1_AddressSet:	
 12633                           
 12634                           ;i2c_register.c: 22: i2c_address = 0b0010000;
 12635                           
 12636                           ;incstack = 0
 12637                           ; Regs used in _I2C1_AddressSet: [wreg+status,2+status,0]
 12638  1462  3010               	movlw	16
 12639  1463  0020               	movlb	0	; select bank0
 12640  1464  00DE               	movwf	_i2c_address	;volatile
 12641                           
 12642                           ;i2c_register.c: 58: i2c_address = (uint8_t) (i2c_address << 1);
 12643  1465  355E               	lslf	_i2c_address,w	;volatile
 12644  1466  00DE               	movwf	_i2c_address	;volatile
 12645  1467  0008               	return
 12646  1468                     __end_of_I2C1_AddressSet:	
 12647  1468                     __ptext10:	
 12648 ;; *************** function _I2C1_Initialize *****************
 12649 ;; Defined at:
 12650 ;;		line 75 in file "mcc_generated_files/i2c1.c"
 12651 ;; Parameters:    Size  Location     Type
 12652 ;;		None
 12653 ;; Auto vars:     Size  Location     Type
 12654 ;;		None
 12655 ;; Return value:  Size  Location     Type
 12656 ;;                  1    wreg      void 
 12657 ;; Registers used:
 12658 ;;		wreg, status,2
 12659 ;; Tracked objects:
 12660 ;;		On entry : B1F/0
 12661 ;;		On exit  : B1F/1
 12662 ;;		Unchanged: B00/0
 12663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12668 ;;Total ram usage:        0 bytes
 12669 ;; Hardware stack levels used:    1
 12670 ;; Hardware stack levels required when called:    7
 12671 ;; This function calls:
 12672 ;;		Nothing
 12673 ;; This function is called by:
 12674 ;;		_SYSTEM_Initialize
 12675 ;; This function uses a non-reentrant model
 12676 ;;
 12677                           
 12678                           
 12679                           ;psect for function _I2C1_Initialize
 12680  1468                     _I2C1_Initialize:	
 12681                           
 12682                           ;i2c1.c: 78: SSP1CON1 = 0x00;
 12683                           
 12684                           ;incstack = 0
 12685                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 12686  1468  0024               	movlb	4	; select bank4
 12687  1469  0195               	clrf	21	;volatile
 12688                           
 12689                           ;i2c1.c: 79: SSP1CON2 = 0x00;
 12690  146A  0196               	clrf	22	;volatile
 12691                           
 12692                           ;i2c1.c: 81: SSP1STAT = 0x00;
 12693  146B  0194               	clrf	20	;volatile
 12694                           
 12695                           ;i2c1.c: 83: SSP1CON1 = 0x26;
 12696  146C  3026               	movlw	38
 12697  146D  0095               	movwf	21	;volatile
 12698                           
 12699                           ;i2c1.c: 85: SSP1CON2 = 0x00;
 12700  146E  0196               	clrf	22	;volatile
 12701                           
 12702                           ;i2c1.c: 87: SSP1CON3 = 0x00;
 12703  146F  0197               	clrf	23	;volatile
 12704                           
 12705                           ;i2c1.c: 89: SSP1MSK = (0x7F << 1);
 12706  1470  30FE               	movlw	254
 12707  1471  0093               	movwf	19	;volatile
 12708                           
 12709                           ;i2c1.c: 91: SSP1ADD = i2c_address;
 12710  1472  0020               	movlb	0	; select bank0
 12711  1473  085E               	movf	_i2c_address,w	;volatile
 12712  1474  0024               	movlb	4	; select bank4
 12713  1475  0092               	movwf	18	;volatile
 12714                           
 12715                           ;i2c1.c: 94: PIR1bits.SSP1IF = 0;
 12716  1476  0020               	movlb	0	; select bank0
 12717  1477  1191               	bcf	17,3	;volatile
 12718                           
 12719                           ;i2c1.c: 96: PIE1bits.SSP1IE = 1;
 12720  1478  0021               	movlb	1	; select bank1
 12721  1479  1591               	bsf	17,3	;volatile
 12722  147A  0008               	return
 12723  147B                     __end_of_I2C1_Initialize:	
 12724  147B                     __ptext9:	
 12725 ;; *************** function _OSCILLATOR_Initialize *****************
 12726 ;; Defined at:
 12727 ;;		line 66 in file "mcc_generated_files/mcc.c"
 12728 ;; Parameters:    Size  Location     Type
 12729 ;;		None
 12730 ;; Auto vars:     Size  Location     Type
 12731 ;;		None
 12732 ;; Return value:  Size  Location     Type
 12733 ;;                  1    wreg      void 
 12734 ;; Registers used:
 12735 ;;		wreg, status,2
 12736 ;; Tracked objects:
 12737 ;;		On entry : B1F/1D
 12738 ;;		On exit  : B1F/12
 12739 ;;		Unchanged: B00/0
 12740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12745 ;;Total ram usage:        0 bytes
 12746 ;; Hardware stack levels used:    1
 12747 ;; Hardware stack levels required when called:    7
 12748 ;; This function calls:
 12749 ;;		Nothing
 12750 ;; This function is called by:
 12751 ;;		_SYSTEM_Initialize
 12752 ;; This function uses a non-reentrant model
 12753 ;;
 12754                           
 12755                           
 12756                           ;psect for function _OSCILLATOR_Initialize
 12757  147B                     _OSCILLATOR_Initialize:	
 12758                           
 12759                           ;mcc.c: 69: OSCCON1 = 0x60;
 12760                           
 12761                           ;incstack = 0
 12762                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12763  147B  3060               	movlw	96
 12764  147C  0032               	movlb	18	; select bank18
 12765  147D  0099               	movwf	25	;volatile
 12766                           
 12767                           ;mcc.c: 71: OSCCON3 = 0x00;
 12768  147E  019B               	clrf	27	;volatile
 12769                           
 12770                           ;mcc.c: 73: OSCEN = 0x00;
 12771  147F  019D               	clrf	29	;volatile
 12772                           
 12773                           ;mcc.c: 75: OSCFRQ = 0x07;
 12774  1480  3007               	movlw	7
 12775  1481  009F               	movwf	31	;volatile
 12776                           
 12777                           ;mcc.c: 77: OSCTUNE = 0x00;
 12778  1482  019E               	clrf	30	;volatile
 12779  1483  0008               	return
 12780  1484                     __end_of_OSCILLATOR_Initialize:	
 12781  1484                     __ptext8:	
 12782 ;; *************** function _PIN_MANAGER_Initialize *****************
 12783 ;; Defined at:
 12784 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 12785 ;; Parameters:    Size  Location     Type
 12786 ;;		None
 12787 ;; Auto vars:     Size  Location     Type
 12788 ;;		None
 12789 ;; Return value:  Size  Location     Type
 12790 ;;                  1    wreg      void 
 12791 ;; Registers used:
 12792 ;;		wreg, status,2, status,0
 12793 ;; Tracked objects:
 12794 ;;		On entry : B1F/12
 12795 ;;		On exit  : B1F/1D
 12796 ;;		Unchanged: B00/0
 12797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12802 ;;Total ram usage:        0 bytes
 12803 ;; Hardware stack levels used:    1
 12804 ;; Hardware stack levels required when called:    7
 12805 ;; This function calls:
 12806 ;;		Nothing
 12807 ;; This function is called by:
 12808 ;;		_SYSTEM_Initialize
 12809 ;; This function uses a non-reentrant model
 12810 ;;
 12811                           
 12812                           
 12813                           ;psect for function _PIN_MANAGER_Initialize
 12814  1484                     _PIN_MANAGER_Initialize:	
 12815                           
 12816                           ;pin_manager.c: 62: LATA = 0x00;
 12817                           
 12818                           ;incstack = 0
 12819                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
 12820  1484  0022               	movlb	2	; select bank2
 12821  1485  018C               	clrf	12	;volatile
 12822                           
 12823                           ;pin_manager.c: 63: LATB = 0x00;
 12824  1486  018D               	clrf	13	;volatile
 12825                           
 12826                           ;pin_manager.c: 64: LATC = 0x00;
 12827  1487  018E               	clrf	14	;volatile
 12828                           
 12829                           ;pin_manager.c: 69: TRISA = 0x37;
 12830  1488  3037               	movlw	55
 12831  1489  0021               	movlb	1	; select bank1
 12832  148A  008C               	movwf	12	;volatile
 12833                           
 12834                           ;pin_manager.c: 70: TRISB = 0xD0;
 12835  148B  30D0               	movlw	208
 12836  148C  008D               	movwf	13	;volatile
 12837                           
 12838                           ;pin_manager.c: 71: TRISC = 0xFF;
 12839  148D  30FF               	movlw	255
 12840  148E  008E               	movwf	14	;volatile
 12841                           
 12842                           ;pin_manager.c: 76: ANSELC = 0x00;
 12843  148F  0023               	movlb	3	; select bank3
 12844  1490  018E               	clrf	14	;volatile
 12845                           
 12846                           ;pin_manager.c: 77: ANSELB = 0x00;
 12847  1491  018D               	clrf	13	;volatile
 12848                           
 12849                           ;pin_manager.c: 78: ANSELA = 0x20;
 12850  1492  3020               	movlw	32
 12851  1493  008C               	movwf	12	;volatile
 12852                           
 12853                           ;pin_manager.c: 83: WPUB = 0x10;
 12854  1494  3010               	movlw	16
 12855  1495  0024               	movlb	4	; select bank4
 12856  1496  008D               	movwf	13	;volatile
 12857                           
 12858                           ;pin_manager.c: 84: WPUA = 0x3F;
 12859  1497  303F               	movlw	63
 12860  1498  008C               	movwf	12	;volatile
 12861                           
 12862                           ;pin_manager.c: 85: WPUC = 0xCC;
 12863  1499  30CC               	movlw	204
 12864  149A  008E               	movwf	14	;volatile
 12865                           
 12866                           ;pin_manager.c: 90: ODCONA = 0x00;
 12867  149B  0025               	movlb	5	; select bank5
 12868  149C  018C               	clrf	12	;volatile
 12869                           
 12870                           ;pin_manager.c: 91: ODCONB = 0x20;
 12871  149D  3020               	movlw	32
 12872  149E  008D               	movwf	13	;volatile
 12873                           
 12874                           ;pin_manager.c: 92: ODCONC = 0x00;
 12875  149F  018E               	clrf	14	;volatile
 12876                           
 12877                           ;pin_manager.c: 101: SSP1CLKPPSbits.SSP1CLKPPS = 0x0E;
 12878  14A0  003C               	movlb	28	; select bank28
 12879  14A1  0820               	movf	32,w	;volatile
 12880  14A2  39E0               	andlw	-32
 12881  14A3  380E               	iorlw	14
 12882  14A4  00A0               	movwf	32	;volatile
 12883                           
 12884                           ;pin_manager.c: 102: SSP1DATPPSbits.SSP1DATPPS = 0x0F;
 12885  14A5  0821               	movf	33,w	;volatile
 12886  14A6  39E0               	andlw	-32
 12887  14A7  380F               	iorlw	15
 12888  14A8  00A1               	movwf	33	;volatile
 12889                           
 12890                           ;pin_manager.c: 103: CLCIN1PPSbits.CLCIN1PPS = 0x15;
 12891  14A9  0829               	movf	41,w	;volatile
 12892  14AA  39E0               	andlw	-32
 12893  14AB  3815               	iorlw	21
 12894  14AC  00A9               	movwf	41	;volatile
 12895                           
 12896                           ;pin_manager.c: 104: CLCIN0PPSbits.CLCIN0PPS = 0x14;
 12897  14AD  0828               	movf	40,w	;volatile
 12898  14AE  39E0               	andlw	-32
 12899  14AF  3814               	iorlw	20
 12900  14B0  00A8               	movwf	40	;volatile
 12901                           
 12902                           ;pin_manager.c: 105: RB7PPSbits.RB7PPS = 0x19;
 12903  14B1  003D               	movlb	29	; select bank29
 12904  14B2  081F               	movf	31,w	;volatile
 12905  14B3  39E0               	andlw	-32
 12906  14B4  3819               	iorlw	25
 12907  14B5  009F               	movwf	31	;volatile
 12908                           
 12909                           ;pin_manager.c: 106: RB6PPSbits.RB6PPS = 0x18;
 12910  14B6  081E               	movf	30,w	;volatile
 12911  14B7  39E0               	andlw	-32
 12912  14B8  3818               	iorlw	24
 12913  14B9  009E               	movwf	30	;volatile
 12914  14BA  0008               	return
 12915  14BB                     __end_of_PIN_MANAGER_Initialize:	
 12916  14BB                     __ptext7:	
 12917 ;; *************** function _PMD_Initialize *****************
 12918 ;; Defined at:
 12919 ;;		line 86 in file "mcc_generated_files/mcc.c"
 12920 ;; Parameters:    Size  Location     Type
 12921 ;;		None
 12922 ;; Auto vars:     Size  Location     Type
 12923 ;;		None
 12924 ;; Return value:  Size  Location     Type
 12925 ;;                  1    wreg      void 
 12926 ;; Registers used:
 12927 ;;		wreg
 12928 ;; Tracked objects:
 12929 ;;		On entry : B1F/0
 12930 ;;		On exit  : B1F/12
 12931 ;;		Unchanged: B00/0
 12932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12937 ;;Total ram usage:        0 bytes
 12938 ;; Hardware stack levels used:    1
 12939 ;; Hardware stack levels required when called:    7
 12940 ;; This function calls:
 12941 ;;		Nothing
 12942 ;; This function is called by:
 12943 ;;		_SYSTEM_Initialize
 12944 ;; This function uses a non-reentrant model
 12945 ;;
 12946                           
 12947                           
 12948                           ;psect for function _PMD_Initialize
 12949  14BB                     _PMD_Initialize:	
 12950                           
 12951                           ;mcc.c: 89: PMD0 = 0x40;
 12952                           
 12953                           ;incstack = 0
 12954                           ; Regs used in _PMD_Initialize: [wreg]
 12955  14BB  3040               	movlw	64
 12956  14BC  0032               	movlb	18	; select bank18
 12957  14BD  0091               	movwf	17	;volatile
 12958                           
 12959                           ;mcc.c: 91: PMD1 = 0xF2;
 12960  14BE  30F2               	movlw	242
 12961  14BF  0092               	movwf	18	;volatile
 12962                           
 12963                           ;mcc.c: 93: PMD2 = 0x46;
 12964  14C0  3046               	movlw	70
 12965  14C1  0093               	movwf	19	;volatile
 12966                           
 12967                           ;mcc.c: 95: PMD3 = 0xF8;
 12968  14C2  30F8               	movlw	248
 12969  14C3  0094               	movwf	20	;volatile
 12970                           
 12971                           ;mcc.c: 97: PMD4 = 0x20;
 12972  14C4  3020               	movlw	32
 12973  14C5  0095               	movwf	21	;volatile
 12974                           
 12975                           ;mcc.c: 99: PMD5 = 0x19;
 12976  14C6  3019               	movlw	25
 12977  14C7  0096               	movwf	22	;volatile
 12978  14C8  0008               	return
 12979  14C9                     __end_of_PMD_Initialize:	
 12980  14C9                     __ptext6:	
 12981 ;; *************** function _TMR2_Initialize *****************
 12982 ;; Defined at:
 12983 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 12984 ;; Parameters:    Size  Location     Type
 12985 ;;		None
 12986 ;; Auto vars:     Size  Location     Type
 12987 ;;		None
 12988 ;; Return value:  Size  Location     Type
 12989 ;;                  1    wreg      void 
 12990 ;; Registers used:
 12991 ;;		wreg, status,2
 12992 ;; Tracked objects:
 12993 ;;		On entry : B1F/1
 12994 ;;		On exit  : B1F/0
 12995 ;;		Unchanged: B00/0
 12996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13001 ;;Total ram usage:        0 bytes
 13002 ;; Hardware stack levels used:    1
 13003 ;; Hardware stack levels required when called:    7
 13004 ;; This function calls:
 13005 ;;		Nothing
 13006 ;; This function is called by:
 13007 ;;		_SYSTEM_Initialize
 13008 ;; This function uses a non-reentrant model
 13009 ;;
 13010                           
 13011                           
 13012                           ;psect for function _TMR2_Initialize
 13013  14C9                     _TMR2_Initialize:	
 13014                           
 13015                           ;tmr2.c: 67: PR2 = 0xFF;
 13016                           
 13017                           ;incstack = 0
 13018                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 13019  14C9  30FF               	movlw	255
 13020  14CA  0020               	movlb	0	; select bank0
 13021  14CB  009E               	movwf	30	;volatile
 13022                           
 13023                           ;tmr2.c: 70: TMR2 = 0x00;
 13024  14CC  019D               	clrf	29	;volatile
 13025                           
 13026                           ;tmr2.c: 73: PIR1bits.TMR2IF = 0;
 13027  14CD  1091               	bcf	17,1	;volatile
 13028                           
 13029                           ;tmr2.c: 76: T2CON = 0x04;
 13030  14CE  3004               	movlw	4
 13031  14CF  009F               	movwf	31	;volatile
 13032  14D0  0008               	return
 13033  14D1                     __end_of_TMR2_Initialize:	
 13034  14D1                     __ptext3:	
 13035 ;; *************** function _WDT_Initialize *****************
 13036 ;; Defined at:
 13037 ;;		line 80 in file "mcc_generated_files/mcc.c"
 13038 ;; Parameters:    Size  Location     Type
 13039 ;;		None
 13040 ;; Auto vars:     Size  Location     Type
 13041 ;;		None
 13042 ;; Return value:  Size  Location     Type
 13043 ;;                  1    wreg      void 
 13044 ;; Registers used:
 13045 ;;		wreg
 13046 ;; Tracked objects:
 13047 ;;		On entry : B1F/12
 13048 ;;		On exit  : B1F/1
 13049 ;;		Unchanged: B00/0
 13050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13055 ;;Total ram usage:        0 bytes
 13056 ;; Hardware stack levels used:    1
 13057 ;; Hardware stack levels required when called:    7
 13058 ;; This function calls:
 13059 ;;		Nothing
 13060 ;; This function is called by:
 13061 ;;		_SYSTEM_Initialize
 13062 ;; This function uses a non-reentrant model
 13063 ;;
 13064                           
 13065                           
 13066                           ;psect for function _WDT_Initialize
 13067  14D1                     _WDT_Initialize:	
 13068                           
 13069                           ;mcc.c: 83: WDTCON = 0x16;
 13070                           
 13071                           ;incstack = 0
 13072                           ; Regs used in _WDT_Initialize: [wreg]
 13073  14D1  3016               	movlw	22
 13074  14D2  0021               	movlb	1	; select bank1
 13075  14D3  0097               	movwf	23	;volatile
 13076  14D4  0008               	return
 13077  14D5                     __end_of_WDT_Initialize:	
 13078  14D5                     __ptext13:	
 13079 ;; *************** function _CLC1_Initialize *****************
 13080 ;; Defined at:
 13081 ;;		line 58 in file "mcc_generated_files/clc1.c"
 13082 ;; Parameters:    Size  Location     Type
 13083 ;;		None
 13084 ;; Auto vars:     Size  Location     Type
 13085 ;;		None
 13086 ;; Return value:  Size  Location     Type
 13087 ;;                  1    wreg      void 
 13088 ;; Registers used:
 13089 ;;		wreg, status,2
 13090 ;; Tracked objects:
 13091 ;;		On entry : B1F/0
 13092 ;;		On exit  : B1F/1
 13093 ;;		Unchanged: B00/0
 13094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13099 ;;Total ram usage:        0 bytes
 13100 ;; Hardware stack levels used:    1
 13101 ;; Hardware stack levels required when called:    7
 13102 ;; This function calls:
 13103 ;;		Nothing
 13104 ;; This function is called by:
 13105 ;;		_SYSTEM_Initialize
 13106 ;; This function uses a non-reentrant model
 13107 ;;
 13108                           
 13109                           
 13110                           ;psect for function _CLC1_Initialize
 13111  14D5                     _CLC1_Initialize:	
 13112                           
 13113                           ;clc1.c: 63: CLC1POL = 0x04;
 13114                           
 13115                           ;incstack = 0
 13116                           ; Regs used in _CLC1_Initialize: [wreg+status,2]
 13117  14D5  3004               	movlw	4
 13118  14D6  003E               	movlb	30	; select bank30
 13119  14D7  0091               	movwf	17	;volatile
 13120                           
 13121                           ;clc1.c: 65: CLC1SEL0 = 0x00;
 13122  14D8  0192               	clrf	18	;volatile
 13123                           
 13124                           ;clc1.c: 67: CLC1SEL1 = 0x01;
 13125  14D9  3001               	movlw	1
 13126  14DA  0093               	movwf	19	;volatile
 13127                           
 13128                           ;clc1.c: 69: CLC1SEL2 = 0x01;
 13129  14DB  0094               	movwf	20	;volatile
 13130                           
 13131                           ;clc1.c: 71: CLC1SEL3 = 0x01;
 13132  14DC  0095               	movwf	21	;volatile
 13133                           
 13134                           ;clc1.c: 73: CLC1GLS0 = 0x02;
 13135  14DD  3002               	movlw	2
 13136  14DE  0096               	movwf	22	;volatile
 13137                           
 13138                           ;clc1.c: 75: CLC1GLS1 = 0xA8;
 13139  14DF  30A8               	movlw	168
 13140  14E0  0097               	movwf	23	;volatile
 13141                           
 13142                           ;clc1.c: 77: CLC1GLS2 = 0xA8;
 13143  14E1  0098               	movwf	24	;volatile
 13144                           
 13145                           ;clc1.c: 79: CLC1GLS3 = 0xA8;
 13146  14E2  0099               	movwf	25	;volatile
 13147                           
 13148                           ;clc1.c: 81: CLC1CON = 0x9D;
 13149  14E3  309D               	movlw	157
 13150  14E4  0090               	movwf	16	;volatile
 13151                           
 13152                           ;clc1.c: 84: PIR3bits.CLC1IF = 0;
 13153  14E5  0020               	movlb	0	; select bank0
 13154  14E6  1013               	bcf	19,0	;volatile
 13155                           
 13156                           ;clc1.c: 86: PIE3bits.CLC1IE = 1;
 13157  14E7  0021               	movlb	1	; select bank1
 13158  14E8  1413               	bsf	19,0	;volatile
 13159  14E9  0008               	return
 13160  14EA                     __end_of_CLC1_Initialize:	
 13161  14EA                     __ptext4:	
 13162 ;; *************** function _TMR3_Initialize *****************
 13163 ;; Defined at:
 13164 ;;		line 64 in file "mcc_generated_files/tmr3.c"
 13165 ;; Parameters:    Size  Location     Type
 13166 ;;		None
 13167 ;; Auto vars:     Size  Location     Type
 13168 ;;		None
 13169 ;; Return value:  Size  Location     Type
 13170 ;;                  1    wreg      void 
 13171 ;; Registers used:
 13172 ;;		wreg, status,2, status,0, pclath, cstack
 13173 ;; Tracked objects:
 13174 ;;		On entry : B1F/1
 13175 ;;		On exit  : 1F/8
 13176 ;;		Unchanged: 0/0
 13177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13182 ;;Total ram usage:        0 bytes
 13183 ;; Hardware stack levels used:    1
 13184 ;; Hardware stack levels required when called:    8
 13185 ;; This function calls:
 13186 ;;		_TMR3_SetInterruptHandler
 13187 ;; This function is called by:
 13188 ;;		_SYSTEM_Initialize
 13189 ;; This function uses a non-reentrant model
 13190 ;;
 13191                           
 13192                           
 13193                           ;psect for function _TMR3_Initialize
 13194  14EA                     _TMR3_Initialize:	
 13195  14EA                     l6406:	
 13196                           ;incstack = 0
 13197                           ; Regs used in _TMR3_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13198                           
 13199                           
 13200                           ;tmr3.c: 69: T3GCON = 0x00;
 13201  14EA  0028               	movlb	8	; select bank8
 13202  14EB  0194               	clrf	20	;volatile
 13203                           
 13204                           ;tmr3.c: 72: TMR3H = 0xE0;
 13205  14EC  30E0               	movlw	224
 13206  14ED  0092               	movwf	18	;volatile
 13207                           
 13208                           ;tmr3.c: 75: TMR3L = 0xC0;
 13209  14EE  30C0               	movlw	192
 13210  14EF  0091               	movwf	17	;volatile
 13211                           
 13212                           ;tmr3.c: 78: timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 13213  14F0  0812               	movf	18,w	;volatile
 13214  14F1  0021               	movlb	1	; select bank1
 13215  14F2  00DA               	movwf	(_timer3ReloadVal+1)^(0+128)	;volatile
 13216  14F3  01D9               	clrf	_timer3ReloadVal^(0+128)	;volatile
 13217  14F4  0028               	movlb	8	; select bank8
 13218  14F5  0811               	movf	17,w	;volatile
 13219  14F6  0021               	movlb	1	; select bank1
 13220  14F7  04D9               	iorwf	_timer3ReloadVal^(0+128),f	;volatile
 13221                           
 13222                           ;tmr3.c: 81: PIR3bits.TMR3IF = 0;
 13223  14F8  0020               	movlb	0	; select bank0
 13224  14F9  1213               	bcf	19,4	;volatile
 13225                           
 13226                           ;tmr3.c: 84: PIE3bits.TMR3IE = 1;
 13227  14FA  0021               	movlb	1	; select bank1
 13228  14FB  1613               	bsf	19,4	;volatile
 13229                           
 13230                           ;tmr3.c: 87: TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler);
 13231  14FC  3003               	movlw	low _TMR3_DefaultInterruptHandler
 13232  14FD  00C7               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
 13233  14FE  3000               	movlw	high _TMR3_DefaultInterruptHandler
 13234  14FF  00C8               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
 13235  1500  3184  2416         	fcall	_TMR3_SetInterruptHandler
 13236                           
 13237                           ;tmr3.c: 90: T3CON = 0x01;
 13238  1502  3001               	movlw	1
 13239  1503  0028               	movlb	8	; select bank8
 13240  1504  0093               	movwf	19	;volatile
 13241  1505  0008               	return
 13242  1506                     __end_of_TMR3_Initialize:	
 13243                           
 13244                           	psect	text15
 13245  0AE4                     __ptext15:	
 13246 ;; *************** function _NavKey_UPButton_FSM *****************
 13247 ;; Defined at:
 13248 ;;		line 202 in file "NavKey.c"
 13249 ;; Parameters:    Size  Location     Type
 13250 ;;		None
 13251 ;; Auto vars:     Size  Location     Type
 13252 ;;		None
 13253 ;; Return value:  Size  Location     Type
 13254 ;;                  1    wreg      void 
 13255 ;; Registers used:
 13256 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13257 ;; Tracked objects:
 13258 ;;		On entry : 1C/1
 13259 ;;		On exit  : 1C/0
 13260 ;;		Unchanged: 0/0
 13261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13266 ;;Total ram usage:        0 bytes
 13267 ;; Hardware stack levels used:    1
 13268 ;; Hardware stack levels required when called:    8
 13269 ;; This function calls:
 13270 ;;		_NavKeyStatusUpdate
 13271 ;;		_SetInterrupt
 13272 ;; This function is called by:
 13273 ;;		_NavKey_FSM
 13274 ;; This function uses a non-reentrant model
 13275 ;;
 13276                           
 13277                           
 13278                           ;psect for function _NavKey_UPButton_FSM
 13279  0AE4                     _NavKey_UPButton_FSM:	
 13280                           
 13281                           ;NavKey.c: 203: static uint8_t up_fsm;;NavKey.c: 205: switch (up_fsm) {
 13282                           
 13283                           ;incstack = 0
 13284                           ; Regs used in _NavKey_UPButton_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13285  0AE4  2AFD               	goto	l6764
 13286  0AE5                     l6746:	
 13287                           
 13288                           ;NavKey.c: 208: if (NavKey_PBstatus[3] == 1) {
 13289  0AE5  0B23               	decfsz	(_NavKey_PBstatus^(0+128)+3),w
 13290  0AE6  0008               	return
 13291  0AE7  3002               	movlw	2
 13292                           
 13293                           ;NavKey.c: 209: up_fsm = NavKey_WAITRELEASE;
 13294  0AE8  01B8               	clrf	NavKey_UPButton_FSM@up_fsm^(0+128)
 13295  0AE9  0AB8               	incf	NavKey_UPButton_FSM@up_fsm^(0+128),f
 13296                           
 13297                           ;NavKey.c: 210: NavKeyStatusUpdate(S_UPP);
 13298  0AEA  00C7               	movwf	NavKeyStatusUpdate@stat^(0+128)
 13299  0AEB  01C8               	clrf	(NavKeyStatusUpdate@stat+1)^(0+128)
 13300  0AEC  3183  23ED         	fcall	_NavKeyStatusUpdate
 13301                           
 13302                           ;NavKey.c: 211: SetInterrupt();
 13303  0AEE  3181  29D4         	ljmp	l6196
 13304  0AF0                     l6752:	
 13305                           
 13306                           ;NavKey.c: 216: if (NavKey_PBstatus[3] == 0) {
 13307  0AF0  0823               	movf	(_NavKey_PBstatus^(0+128)+3),w
 13308  0AF1  1D03               	btfss	3,2
 13309  0AF2  0008               	return
 13310                           
 13311                           ;NavKey.c: 217: up_fsm = NavKey_WAITPUSH;
 13312  0AF3  01B8               	clrf	NavKey_UPButton_FSM@up_fsm^(0+128)
 13313                           
 13314                           ;NavKey.c: 218: NavKeyStatusUpdate(S_UPR);
 13315  0AF4  01C7               	clrf	NavKeyStatusUpdate@stat^(0+128)
 13316  0AF5  0AC7               	incf	NavKeyStatusUpdate@stat^(0+128),f
 13317  0AF6  01C8               	clrf	(NavKeyStatusUpdate@stat+1)^(0+128)
 13318  0AF7  3183  23ED         	fcall	_NavKeyStatusUpdate
 13319                           
 13320                           ;NavKey.c: 219: SetInterrupt();
 13321  0AF9  3181  29D4         	ljmp	l6196
 13322  0AFB                     l6760:	
 13323                           
 13324                           ;NavKey.c: 224: up_fsm = NavKey_WAITPUSH;
 13325  0AFB  01B8               	clrf	NavKey_UPButton_FSM@up_fsm^(0+128)
 13326                           
 13327                           ;NavKey.c: 225: break;
 13328  0AFC  0008               	return
 13329  0AFD                     l6764:	
 13330  0AFD  0021               	movlb	1	; select bank1
 13331  0AFE  0838               	movf	NavKey_UPButton_FSM@up_fsm^(0+128),w
 13332                           
 13333                           ; Switch size 1, requested type "speed"
 13334                           ; Number of cases is 2, Range of values is 0 to 1
 13335                           ; switch strategies available:
 13336                           ; Name         Instructions Cycles
 13337                           ; simple_byte            7     4 (average)
 13338                           ; direct_byte           10     6 (fixed)
 13339                           ; jumptable            260     6 (fixed)
 13340                           ;	Chosen strategy is simple_byte
 13341  0AFF  3A00               	xorlw	0	; case 0
 13342  0B00  1903               	skipnz
 13343  0B01  2AE5               	goto	l6746
 13344  0B02  3A01               	xorlw	1	; case 1
 13345  0B03  1903               	skipnz
 13346  0B04  2AF0               	goto	l6752
 13347  0B05  2AFB               	goto	l6760
 13348  0B06  0008               	return
 13349  0B07                     __end_of_NavKey_UPButton_FSM:	
 13350                           
 13351                           	psect	text16
 13352  0B07                     __ptext16:	
 13353 ;; *************** function _NavKey_RTButton_FSM *****************
 13354 ;; Defined at:
 13355 ;;		line 264 in file "NavKey.c"
 13356 ;; Parameters:    Size  Location     Type
 13357 ;;		None
 13358 ;; Auto vars:     Size  Location     Type
 13359 ;;		None
 13360 ;; Return value:  Size  Location     Type
 13361 ;;                  1    wreg      void 
 13362 ;; Registers used:
 13363 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13364 ;; Tracked objects:
 13365 ;;		On entry : 1C/1
 13366 ;;		On exit  : 1C/0
 13367 ;;		Unchanged: 0/0
 13368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13373 ;;Total ram usage:        0 bytes
 13374 ;; Hardware stack levels used:    1
 13375 ;; Hardware stack levels required when called:    8
 13376 ;; This function calls:
 13377 ;;		_NavKeyStatusUpdate
 13378 ;;		_SetInterrupt
 13379 ;; This function is called by:
 13380 ;;		_NavKey_FSM
 13381 ;; This function uses a non-reentrant model
 13382 ;;
 13383                           
 13384                           
 13385                           ;psect for function _NavKey_RTButton_FSM
 13386  0B07                     _NavKey_RTButton_FSM:	
 13387                           
 13388                           ;NavKey.c: 265: static uint8_t rt_fsm;;NavKey.c: 267: switch (rt_fsm) {
 13389                           
 13390                           ;incstack = 0
 13391                           ; Regs used in _NavKey_RTButton_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13392  0B07  2B20               	goto	l6808
 13393  0B08                     l6790:	
 13394                           
 13395                           ;NavKey.c: 270: if (NavKey_PBstatus[2] == 1) {
 13396  0B08  0B22               	decfsz	(_NavKey_PBstatus^(0+128)+2),w
 13397  0B09  0008               	return
 13398  0B0A  3020               	movlw	32
 13399                           
 13400                           ;NavKey.c: 271: rt_fsm = NavKey_WAITRELEASE;
 13401  0B0B  01B6               	clrf	NavKey_RTButton_FSM@rt_fsm^(0+128)
 13402  0B0C  0AB6               	incf	NavKey_RTButton_FSM@rt_fsm^(0+128),f
 13403                           
 13404                           ;NavKey.c: 272: NavKeyStatusUpdate(S_RTP);
 13405  0B0D  00C7               	movwf	NavKeyStatusUpdate@stat^(0+128)
 13406  0B0E  01C8               	clrf	(NavKeyStatusUpdate@stat+1)^(0+128)
 13407  0B0F  3183  23ED         	fcall	_NavKeyStatusUpdate
 13408                           
 13409                           ;NavKey.c: 273: SetInterrupt();
 13410  0B11  3181  29D4         	ljmp	l6196
 13411  0B13                     l6796:	
 13412                           
 13413                           ;NavKey.c: 278: if (NavKey_PBstatus[2] == 0) {
 13414  0B13  0822               	movf	(_NavKey_PBstatus^(0+128)+2),w
 13415  0B14  1D03               	btfss	3,2
 13416  0B15  0008               	return
 13417  0B16  3010               	movlw	16
 13418                           
 13419                           ;NavKey.c: 279: rt_fsm = NavKey_WAITPUSH;
 13420  0B17  01B6               	clrf	NavKey_RTButton_FSM@rt_fsm^(0+128)
 13421                           
 13422                           ;NavKey.c: 280: NavKeyStatusUpdate(S_RTR);
 13423  0B18  00C7               	movwf	NavKeyStatusUpdate@stat^(0+128)
 13424  0B19  01C8               	clrf	(NavKeyStatusUpdate@stat+1)^(0+128)
 13425  0B1A  3183  23ED         	fcall	_NavKeyStatusUpdate
 13426                           
 13427                           ;NavKey.c: 281: SetInterrupt();
 13428  0B1C  3181  29D4         	ljmp	l6196
 13429  0B1E                     l6804:	
 13430                           
 13431                           ;NavKey.c: 286: rt_fsm = NavKey_WAITPUSH;
 13432  0B1E  01B6               	clrf	NavKey_RTButton_FSM@rt_fsm^(0+128)
 13433                           
 13434                           ;NavKey.c: 287: break;
 13435  0B1F  0008               	return
 13436  0B20                     l6808:	
 13437  0B20  0021               	movlb	1	; select bank1
 13438  0B21  0836               	movf	NavKey_RTButton_FSM@rt_fsm^(0+128),w
 13439                           
 13440                           ; Switch size 1, requested type "speed"
 13441                           ; Number of cases is 2, Range of values is 0 to 1
 13442                           ; switch strategies available:
 13443                           ; Name         Instructions Cycles
 13444                           ; simple_byte            7     4 (average)
 13445                           ; direct_byte           10     6 (fixed)
 13446                           ; jumptable            260     6 (fixed)
 13447                           ;	Chosen strategy is simple_byte
 13448  0B22  3A00               	xorlw	0	; case 0
 13449  0B23  1903               	skipnz
 13450  0B24  2B08               	goto	l6790
 13451  0B25  3A01               	xorlw	1	; case 1
 13452  0B26  1903               	skipnz
 13453  0B27  2B13               	goto	l6796
 13454  0B28  2B1E               	goto	l6804
 13455  0B29  0008               	return
 13456  0B2A                     __end_of_NavKey_RTButton_FSM:	
 13457                           
 13458                           	psect	text17
 13459  1417                     __ptext17:	
 13460 ;; *************** function _NavKey_LTButton_FSM *****************
 13461 ;; Defined at:
 13462 ;;		line 295 in file "NavKey.c"
 13463 ;; Parameters:    Size  Location     Type
 13464 ;;		None
 13465 ;; Auto vars:     Size  Location     Type
 13466 ;;		None
 13467 ;; Return value:  Size  Location     Type
 13468 ;;                  1    wreg      void 
 13469 ;; Registers used:
 13470 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13471 ;; Tracked objects:
 13472 ;;		On entry : 1C/1
 13473 ;;		On exit  : 1C/0
 13474 ;;		Unchanged: 0/0
 13475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13480 ;;Total ram usage:        0 bytes
 13481 ;; Hardware stack levels used:    1
 13482 ;; Hardware stack levels required when called:    8
 13483 ;; This function calls:
 13484 ;;		_NavKeyStatusUpdate
 13485 ;;		_SetInterrupt
 13486 ;; This function is called by:
 13487 ;;		_NavKey_FSM
 13488 ;; This function uses a non-reentrant model
 13489 ;;
 13490                           
 13491                           
 13492                           ;psect for function _NavKey_LTButton_FSM
 13493  1417                     _NavKey_LTButton_FSM:	
 13494  1417                     l6810:	
 13495                           ;incstack = 0
 13496                           ; Regs used in _NavKey_LTButton_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13497                           
 13498                           
 13499                           ;NavKey.c: 296: static uint8_t lt_fsm;;NavKey.c: 298: switch (lt_fsm) {
 13500  1417  2C30               	goto	l6830
 13501  1418                     l6812:	
 13502                           
 13503                           ;NavKey.c: 301: if (NavKey_PBstatus[4] == 1) {
 13504  1418  0B24               	decfsz	(_NavKey_PBstatus^(0+128)+4),w
 13505  1419  0008               	return
 13506  141A  3080               	movlw	128
 13507                           
 13508                           ;NavKey.c: 302: lt_fsm = NavKey_WAITRELEASE;
 13509  141B  01B5               	clrf	NavKey_LTButton_FSM@lt_fsm^(0+128)
 13510  141C  0AB5               	incf	NavKey_LTButton_FSM@lt_fsm^(0+128),f
 13511                           
 13512                           ;NavKey.c: 303: NavKeyStatusUpdate(S_LTP);
 13513  141D  00C7               	movwf	NavKeyStatusUpdate@stat^(0+128)
 13514  141E  01C8               	clrf	(NavKeyStatusUpdate@stat+1)^(0+128)
 13515  141F  3183  23ED         	fcall	_NavKeyStatusUpdate
 13516                           
 13517                           ;NavKey.c: 304: SetInterrupt();
 13518  1421  3181  29D4         	ljmp	l6196
 13519  1423                     l6818:	
 13520                           
 13521                           ;NavKey.c: 309: if (NavKey_PBstatus[4] == 0) {
 13522  1423  0824               	movf	(_NavKey_PBstatus^(0+128)+4),w
 13523  1424  1D03               	btfss	3,2
 13524  1425  0008               	return
 13525  1426  3040               	movlw	64
 13526                           
 13527                           ;NavKey.c: 310: lt_fsm = NavKey_WAITPUSH;
 13528  1427  01B5               	clrf	NavKey_LTButton_FSM@lt_fsm^(0+128)
 13529                           
 13530                           ;NavKey.c: 311: NavKeyStatusUpdate(S_LTR);
 13531  1428  00C7               	movwf	NavKeyStatusUpdate@stat^(0+128)
 13532  1429  01C8               	clrf	(NavKeyStatusUpdate@stat+1)^(0+128)
 13533  142A  3183  23ED         	fcall	_NavKeyStatusUpdate
 13534                           
 13535                           ;NavKey.c: 312: SetInterrupt();
 13536  142C  3181  29D4         	ljmp	l6196
 13537  142E                     l6826:	
 13538                           
 13539                           ;NavKey.c: 317: lt_fsm = NavKey_WAITPUSH;
 13540  142E  01B5               	clrf	NavKey_LTButton_FSM@lt_fsm^(0+128)
 13541                           
 13542                           ;NavKey.c: 318: break;
 13543  142F  0008               	return
 13544  1430                     l6830:	
 13545  1430  0021               	movlb	1	; select bank1
 13546  1431  0835               	movf	NavKey_LTButton_FSM@lt_fsm^(0+128),w
 13547                           
 13548                           ; Switch size 1, requested type "speed"
 13549                           ; Number of cases is 2, Range of values is 0 to 1
 13550                           ; switch strategies available:
 13551                           ; Name         Instructions Cycles
 13552                           ; simple_byte            7     4 (average)
 13553                           ; direct_byte           10     6 (fixed)
 13554                           ; jumptable            260     6 (fixed)
 13555                           ;	Chosen strategy is simple_byte
 13556  1432  3A00               	xorlw	0	; case 0
 13557  1433  1903               	skipnz
 13558  1434  2C18               	goto	l6812
 13559  1435  3A01               	xorlw	1	; case 1
 13560  1436  1903               	skipnz
 13561  1437  2C23               	goto	l6818
 13562  1438  2C2E               	goto	l6826
 13563  1439  0008               	return
 13564  143A                     __end_of_NavKey_LTButton_FSM:	
 13565                           
 13566                           	psect	swtext1
 13567  0996                     __pswtext1:	
 13568  0996                     S7266:	
 13569  0996  3183  2BAF         	ljmp	l6690
 13570  0998  3183  2BB6         	ljmp	l6696
 13571  099A  3183  2BBC         	ljmp	l6700
 13572  099C  3183  2BC1         	ljmp	l6704
 13573  099E  3183  2BCD         	ljmp	l6712
 13574  09A0  3183  2BDC         	ljmp	l6726
 13575                           
 13576                           	psect	text20
 13577  09AE                     __ptext20:	
 13578 ;; *************** function _NavKeySwitch_KeyFilter *****************
 13579 ;; Defined at:
 13580 ;;		line 108 in file "NavKey.c"
 13581 ;; Parameters:    Size  Location     Type
 13582 ;;		None
 13583 ;; Auto vars:     Size  Location     Type
 13584 ;;  i               1    0[BANK1 ] unsigned char 
 13585 ;; Return value:  Size  Location     Type
 13586 ;;                  1    wreg      void 
 13587 ;; Registers used:
 13588 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13589 ;; Tracked objects:
 13590 ;;		On entry : 1F/1
 13591 ;;		On exit  : 1F/1
 13592 ;;		Unchanged: 0/0
 13593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13595 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13597 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13598 ;;Total ram usage:        1 bytes
 13599 ;; Hardware stack levels used:    1
 13600 ;; Hardware stack levels required when called:    7
 13601 ;; This function calls:
 13602 ;;		Nothing
 13603 ;; This function is called by:
 13604 ;;		_NavKey_FSM
 13605 ;; This function uses a non-reentrant model
 13606 ;;
 13607                           
 13608                           
 13609                           ;psect for function _NavKeySwitch_KeyFilter
 13610  09AE                     _NavKeySwitch_KeyFilter:	
 13611                           
 13612                           ;NavKey.c: 109: uint8_t i;;NavKey.c: 111: NavKey_PBtemp[0] = PORTBbits.RB4;
 13613                           
 13614                           ;incstack = 0
 13615                           ; Regs used in _NavKeySwitch_KeyFilter: [wreg+fsr1l+fsr1h+status,2+status,0]
 13616  09AE  3000               	movlw	0
 13617  09AF  0020               	movlb	0	; select bank0
 13618  09B0  1A0D               	btfsc	13,4	;volatile
 13619  09B1  3001               	movlw	1
 13620  09B2  0021               	movlb	1	; select bank1
 13621  09B3  00A5               	movwf	_NavKey_PBtemp^(0+128)
 13622                           
 13623                           ;NavKey.c: 112: NavKey_PBtemp[1] = PORTCbits.RC7;
 13624  09B4  3000               	movlw	0
 13625  09B5  0020               	movlb	0	; select bank0
 13626  09B6  1B8E               	btfsc	14,7	;volatile
 13627  09B7  3001               	movlw	1
 13628  09B8  0021               	movlb	1	; select bank1
 13629  09B9  00A6               	movwf	(_NavKey_PBtemp^(0+128)+1)
 13630                           
 13631                           ;NavKey.c: 113: NavKey_PBtemp[2] = PORTAbits.RA4;
 13632  09BA  3000               	movlw	0
 13633  09BB  0020               	movlb	0	; select bank0
 13634  09BC  1A0C               	btfsc	12,4	;volatile
 13635  09BD  3001               	movlw	1
 13636  09BE  0021               	movlb	1	; select bank1
 13637  09BF  00A7               	movwf	(_NavKey_PBtemp^(0+128)+2)
 13638                           
 13639                           ;NavKey.c: 114: NavKey_PBtemp[3] = PORTCbits.RC6;
 13640  09C0  3000               	movlw	0
 13641  09C1  0020               	movlb	0	; select bank0
 13642  09C2  1B0E               	btfsc	14,6	;volatile
 13643  09C3  3001               	movlw	1
 13644  09C4  0021               	movlb	1	; select bank1
 13645  09C5  00A8               	movwf	(_NavKey_PBtemp^(0+128)+3)
 13646                           
 13647                           ;NavKey.c: 115: NavKey_PBtemp[4] = PORTCbits.RC3;
 13648  09C6  3000               	movlw	0
 13649  09C7  0020               	movlb	0	; select bank0
 13650  09C8  198E               	btfsc	14,3	;volatile
 13651  09C9  3001               	movlw	1
 13652  09CA  0021               	movlb	1	; select bank1
 13653  09CB  00A9               	movwf	(_NavKey_PBtemp^(0+128)+4)
 13654                           
 13655                           ;NavKey.c: 117: for (i = 0; i < 5; i++) {
 13656  09CC  01C7               	clrf	NavKeySwitch_KeyFilter@i^(0+128)
 13657  09CD                     l6670:	
 13658                           
 13659                           ;NavKey.c: 118: if (NavKey_PBtemp[i] == 0) {
 13660  09CD  0847               	movf	NavKeySwitch_KeyFilter@i^(0+128),w
 13661  09CE  3EA5               	addlw	(low (_NavKey_PBtemp| 0))& (0+255)
 13662  09CF  0086               	movwf	6
 13663  09D0  0187               	clrf	7
 13664  09D1  0801               	movf	1,w
 13665  09D2  1D03               	btfss	3,2
 13666  09D3  29E8               	goto	l6676
 13667                           
 13668                           ;NavKey.c: 119: if (pb_cnt[i]++ >= 5) {
 13669  09D4  0847               	movf	NavKeySwitch_KeyFilter@i^(0+128),w
 13670  09D5  3EAA               	addlw	(low (_pb_cnt| 0))& (0+255)
 13671  09D6  0086               	movwf	6
 13672  09D7  0801               	movf	1,w
 13673  09D8  0A81               	incf	1,f
 13674  09D9  3A80               	xorlw	128
 13675  09DA  3E7B               	addlw	-133
 13676  09DB  1C03               	skipc
 13677  09DC  29FA               	goto	l6680
 13678                           
 13679                           ;NavKey.c: 120: pb_cnt[i] = 5;
 13680  09DD  0847               	movf	NavKeySwitch_KeyFilter@i^(0+128),w
 13681  09DE  3EAA               	addlw	(low (_pb_cnt| 0))& (0+255)
 13682  09DF  0086               	movwf	6
 13683  09E0  3005               	movlw	5
 13684  09E1  0081               	movwf	1
 13685                           
 13686                           ;NavKey.c: 121: NavKey_PBstatus[i] = 1;
 13687  09E2  0847               	movf	NavKeySwitch_KeyFilter@i^(0+128),w
 13688  09E3  3EA0               	addlw	(low (_NavKey_PBstatus| 0))& (0+255)
 13689  09E4  0086               	movwf	6
 13690  09E5  0181               	clrf	1
 13691  09E6  0A81               	incf	1,f
 13692  09E7  29FA               	goto	l6680
 13693  09E8                     l6676:	
 13694                           
 13695                           ;NavKey.c: 124: if (pb_cnt[i]-- <= 0) {
 13696  09E8  0847               	movf	NavKeySwitch_KeyFilter@i^(0+128),w
 13697  09E9  3EAA               	addlw	(low (_pb_cnt| 0))& (0+255)
 13698  09EA  0086               	movwf	6
 13699  09EB  0187               	clrf	7
 13700  09EC  0801               	movf	1,w
 13701  09ED  0381               	decf	1,f
 13702  09EE  3A80               	xorlw	128
 13703  09EF  3E7F               	addlw	-129
 13704  09F0  1803               	skipnc
 13705  09F1  29FA               	goto	l6680
 13706                           
 13707                           ;NavKey.c: 125: pb_cnt[i] = 0;
 13708  09F2  0847               	movf	NavKeySwitch_KeyFilter@i^(0+128),w
 13709  09F3  3EAA               	addlw	(low (_pb_cnt| 0))& (0+255)
 13710  09F4  0086               	movwf	6
 13711  09F5  0181               	clrf	1
 13712                           
 13713                           ;NavKey.c: 126: NavKey_PBstatus[i] = 0;
 13714  09F6  0847               	movf	NavKeySwitch_KeyFilter@i^(0+128),w
 13715  09F7  3EA0               	addlw	(low (_NavKey_PBstatus| 0))& (0+255)
 13716  09F8  0086               	movwf	6
 13717  09F9  0181               	clrf	1
 13718  09FA                     l6680:	
 13719  09FA  3005               	movlw	5
 13720  09FB  0AC7               	incf	NavKeySwitch_KeyFilter@i^(0+128),f
 13721  09FC  0247               	subwf	NavKeySwitch_KeyFilter@i^(0+128),w
 13722  09FD  1803               	btfsc	3,0
 13723  09FE  0008               	return
 13724  09FF  29CD               	goto	l6670
 13725  0A00                     __end_of_NavKeySwitch_KeyFilter:	
 13726                           
 13727                           	psect	swtext2
 13728  09A2                     __pswtext2:	
 13729  09A2                     S7268:	
 13730  09A2  3181  2932         	ljmp	l6620
 13731  09A4  3181  2949         	ljmp	l6634
 13732  09A6  3181  2957         	ljmp	l1136
 13733  09A8  3181  2966         	ljmp	l1139
 13734                           
 13735                           	psect	swtext3
 13736  1044                     __pswtext3:	
 13737  1044                     S7270:	
 13738  1044  3181  297F         	ljmp	l6574
 13739  1046  3181  2996         	ljmp	l6588
 13740  1048  3181  29A4         	ljmp	l1121
 13741  104A  3181  29B3         	ljmp	l1124
 13742                           
 13743                           	psect	swtext4
 13744  104C                     __pswtext4:	
 13745  104C                     S7272:	
 13746  104C  3180  28E7         	ljmp	l6528
 13747  104E  3180  28FE         	ljmp	l6542
 13748  1050  3181  290C         	ljmp	l1106
 13749  1052  3181  291A         	ljmp	l1109
 13750                           
 13751                           	psect	intentry
 13752  0004                     __pintentry:	
 13753 ;; *************** function _INTERRUPT_InterruptManager *****************
 13754 ;; Defined at:
 13755 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 13756 ;; Parameters:    Size  Location     Type
 13757 ;;		None
 13758 ;; Auto vars:     Size  Location     Type
 13759 ;;		None
 13760 ;; Return value:  Size  Location     Type
 13761 ;;                  1    wreg      void 
 13762 ;; Registers used:
 13763 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13764 ;; Tracked objects:
 13765 ;;		On entry : 0/0
 13766 ;;		On exit  : 0/0
 13767 ;;		Unchanged: 0/0
 13768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13773 ;;Total ram usage:        0 bytes
 13774 ;; Hardware stack levels used:    1
 13775 ;; Hardware stack levels required when called:    6
 13776 ;; This function calls:
 13777 ;;		_CLC1_ISR
 13778 ;;		_CLC2_ISR
 13779 ;;		_I2C1_ISR
 13780 ;;		_TMR3_ISR
 13781 ;; This function is called by:
 13782 ;;		Interrupt level 1
 13783 ;; This function uses a non-reentrant model
 13784 ;;
 13785                           
 13786  0004                     _INTERRUPT_InterruptManager:	
 13787                           
 13788                           ;incstack = 0
 13789  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 13790                           
 13791                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13792  0005  3180               	pagesel	$
 13793                           
 13794                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
 13795  0006  1F0B               	btfss	11,6	;volatile
 13796  0007  282E               	goto	i1l89
 13797                           
 13798                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: if(PIE3bits.CLC2IE == 1 && PIR3bits
      +                          .CLC2IF == 1)
 13799  0008  0021               	movlb	1	; select bank1
 13800  0009  1C93               	btfss	19,1	;volatile
 13801  000A  2812               	goto	i1l80
 13802  000B  0020               	movlb	0	; select bank0
 13803  000C  1C93               	btfss	19,1	;volatile
 13804  000D  2812               	goto	i1l80
 13805                           
 13806                           ;interrupt_manager.c: 58: {;interrupt_manager.c: 59: CLC2_ISR();
 13807  000E  3195  2506  3180   	fcall	_CLC2_ISR
 13808                           
 13809                           ;interrupt_manager.c: 60: }
 13810  0011  282E               	goto	i1l89
 13811  0012                     i1l80:	
 13812                           
 13813                           ;interrupt_manager.c: 61: else if(PIE3bits.CLC1IE == 1 && PIR3bits.CLC1IF == 1)
 13814  0012  0021               	movlb	1	; select bank1
 13815  0013  1C13               	btfss	19,0	;volatile
 13816  0014  281C               	goto	i1l82
 13817  0015  0020               	movlb	0	; select bank0
 13818  0016  1C13               	btfss	19,0	;volatile
 13819  0017  281C               	goto	i1l82
 13820                           
 13821                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: CLC1_ISR();
 13822  0018  3195  250A  3180   	fcall	_CLC1_ISR
 13823                           
 13824                           ;interrupt_manager.c: 64: }
 13825  001B  282E               	goto	i1l89
 13826  001C                     i1l82:	
 13827                           
 13828                           ;interrupt_manager.c: 65: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
 13829  001C  0021               	movlb	1	; select bank1
 13830  001D  1D91               	btfss	17,3	;volatile
 13831  001E  2826               	goto	i1l84
 13832  001F  0020               	movlb	0	; select bank0
 13833  0020  1D91               	btfss	17,3	;volatile
 13834  0021  2826               	goto	i1l84
 13835                           
 13836                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: I2C1_ISR();
 13837  0022  318B  2330  3180   	fcall	_I2C1_ISR
 13838                           
 13839                           ;interrupt_manager.c: 68: }
 13840  0025  282E               	goto	i1l89
 13841  0026                     i1l84:	
 13842                           
 13843                           ;interrupt_manager.c: 69: else if(PIE3bits.TMR3IE == 1 && PIR3bits.TMR3IF == 1)
 13844  0026  0021               	movlb	1	; select bank1
 13845  0027  1E13               	btfss	19,4	;volatile
 13846  0028  282E               	goto	i1l89
 13847  0029  0020               	movlb	0	; select bank0
 13848  002A  1E13               	btfss	19,4	;volatile
 13849  002B  282E               	goto	i1l89
 13850                           
 13851                           ;interrupt_manager.c: 70: {;interrupt_manager.c: 71: TMR3_ISR();
 13852  002C  3193  23F4         	fcall	_TMR3_ISR
 13853  002E                     i1l89:	
 13854                           ;interrupt_manager.c: 72: }
 13855                           
 13856  002E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 13857  002F  0009               	retfie
 13858  0030                     __end_of_INTERRUPT_InterruptManager:	
 13859                           
 13860                           	psect	text42
 13861  13F4                     __ptext42:	
 13862 ;; *************** function _TMR3_ISR *****************
 13863 ;; Defined at:
 13864 ;;		line 157 in file "mcc_generated_files/tmr3.c"
 13865 ;; Parameters:    Size  Location     Type
 13866 ;;		None
 13867 ;; Auto vars:     Size  Location     Type
 13868 ;;		None
 13869 ;; Return value:  Size  Location     Type
 13870 ;;                  1    wreg      void 
 13871 ;; Registers used:
 13872 ;;		wreg, status,2, status,0, pclath, cstack
 13873 ;; Tracked objects:
 13874 ;;		On entry : 1F/0
 13875 ;;		On exit  : 0/0
 13876 ;;		Unchanged: 0/0
 13877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13882 ;;Total ram usage:        0 bytes
 13883 ;; Hardware stack levels used:    1
 13884 ;; Hardware stack levels required when called:    2
 13885 ;; This function calls:
 13886 ;;		_TMR3_CallBack
 13887 ;;		_TMR3_WriteTimer
 13888 ;; This function is called by:
 13889 ;;		_INTERRUPT_InterruptManager
 13890 ;; This function uses a non-reentrant model
 13891 ;;
 13892                           
 13893                           
 13894                           ;psect for function _TMR3_ISR
 13895  13F4                     _TMR3_ISR:	
 13896                           
 13897                           ;tmr3.c: 161: PIR3bits.TMR3IF = 0;
 13898                           
 13899                           ;incstack = 0
 13900                           ; Regs used in _TMR3_ISR: [wreg+status,2+status,0+pclath+cstack]
 13901  13F4  1213               	bcf	19,4	;volatile
 13902                           
 13903                           ;tmr3.c: 162: TMR3_WriteTimer(timer3ReloadVal);
 13904  13F5  0021               	movlb	1	; select bank1
 13905  13F6  085A               	movf	(_timer3ReloadVal+1)^(0+128),w	;volatile
 13906  13F7  00F1               	movwf	TMR3_WriteTimer@timerVal+1
 13907  13F8  0859               	movf	_timer3ReloadVal^(0+128),w	;volatile
 13908  13F9  00F0               	movwf	TMR3_WriteTimer@timerVal
 13909  13FA  2408  3193         	fcall	_TMR3_WriteTimer
 13910                           
 13911                           ;tmr3.c: 166: TMR3_CallBack();
 13912  13FC  2BFD               	ljmp	i1l5294
 13913  13FD                     __end_of_TMR3_ISR:	
 13914  13FD                     __ptext44:	
 13915 ;; *************** function _TMR3_CallBack *****************
 13916 ;; Defined at:
 13917 ;;		line 169 in file "mcc_generated_files/tmr3.c"
 13918 ;; Parameters:    Size  Location     Type
 13919 ;;		None
 13920 ;; Auto vars:     Size  Location     Type
 13921 ;;		None
 13922 ;; Return value:  Size  Location     Type
 13923 ;;                  1    wreg      void 
 13924 ;; Registers used:
 13925 ;;		wreg, status,2, status,0, pclath, cstack
 13926 ;; Tracked objects:
 13927 ;;		On entry : 1F/8
 13928 ;;		On exit  : 0/0
 13929 ;;		Unchanged: 0/0
 13930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13935 ;;Total ram usage:        0 bytes
 13936 ;; Hardware stack levels used:    1
 13937 ;; Hardware stack levels required when called:    1
 13938 ;; This function calls:
 13939 ;;		Absolute function
 13940 ;;		_TMR3_DefaultInterruptHandler
 13941 ;;		_TimerInt
 13942 ;; This function is called by:
 13943 ;;		_TMR3_ISR
 13944 ;; This function uses a non-reentrant model
 13945 ;;
 13946                           
 13947                           
 13948                           ;psect for function _TMR3_CallBack
 13949  13FD                     _TMR3_CallBack:	
 13950  13FD                     i1l5294:	
 13951                           ;incstack = 0
 13952                           ; Regs used in _TMR3_CallBack: [wreg+status,2+status,0+pclath+cstack]
 13953                           
 13954                           
 13955                           ;tmr3.c: 172: if(TMR3_InterruptHandler)
 13956  13FD  0021               	movlb	1	; select bank1
 13957  13FE  0857               	movf	_TMR3_InterruptHandler^(0+128),w
 13958  13FF  0458               	iorwf	(_TMR3_InterruptHandler+1)^(0+128),w
 13959  1400  1903               	btfsc	3,2
 13960  1401  0008               	return
 13961                           
 13962                           ;tmr3.c: 173: {;tmr3.c: 174: TMR3_InterruptHandler();
 13963  1402  0858               	movf	(_TMR3_InterruptHandler+1)^(0+128),w
 13964  1403  008A               	movwf	10
 13965  1404  0857               	movf	_TMR3_InterruptHandler^(0+128),w
 13966  1405  000A               	callw
 13967  1406  3193               	pagesel	$
 13968  1407  0008               	return
 13969  1408                     __end_of_TMR3_CallBack:	
 13970  1408                     __ptext43:	
 13971 ;; *************** function _TMR3_WriteTimer *****************
 13972 ;; Defined at:
 13973 ;;		line 120 in file "mcc_generated_files/tmr3.c"
 13974 ;; Parameters:    Size  Location     Type
 13975 ;;  timerVal        2    0[COMMON] unsigned int 
 13976 ;; Auto vars:     Size  Location     Type
 13977 ;;		None
 13978 ;; Return value:  Size  Location     Type
 13979 ;;                  1    wreg      void 
 13980 ;; Registers used:
 13981 ;;		wreg
 13982 ;; Tracked objects:
 13983 ;;		On entry : 1F/1
 13984 ;;		On exit  : 1F/8
 13985 ;;		Unchanged: 0/0
 13986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13987 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13990 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13991 ;;Total ram usage:        2 bytes
 13992 ;; Hardware stack levels used:    1
 13993 ;; This function calls:
 13994 ;;		Nothing
 13995 ;; This function is called by:
 13996 ;;		_TMR3_ISR
 13997 ;; This function uses a non-reentrant model
 13998 ;;
 13999                           
 14000                           
 14001                           ;psect for function _TMR3_WriteTimer
 14002  1408                     _TMR3_WriteTimer:	
 14003                           
 14004                           ;tmr3.c: 122: if (T3CONbits.T3SYNC == 1)
 14005                           
 14006                           ;incstack = 0
 14007                           ; Regs used in _TMR3_WriteTimer: [wreg]
 14008  1408  0028               	movlb	8	; select bank8
 14009  1409  1D13               	btfss	19,2	;volatile
 14010  140A  2C12               	goto	i1l5292
 14011                           
 14012                           ;tmr3.c: 123: {;tmr3.c: 125: T3CONbits.TMR3ON = 0;
 14013  140B  1013               	bcf	19,0	;volatile
 14014                           
 14015                           ;tmr3.c: 128: TMR3H = (timerVal >> 8);
 14016  140C  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 14017  140D  0092               	movwf	18	;volatile
 14018                           
 14019                           ;tmr3.c: 129: TMR3L = timerVal;
 14020  140E  0870               	movf	TMR3_WriteTimer@timerVal,w
 14021  140F  0091               	movwf	17	;volatile
 14022                           
 14023                           ;tmr3.c: 132: T3CONbits.TMR3ON =1;
 14024  1410  1413               	bsf	19,0	;volatile
 14025                           
 14026                           ;tmr3.c: 133: }
 14027  1411  0008               	return
 14028  1412                     i1l5292:	
 14029                           
 14030                           ;tmr3.c: 134: else;tmr3.c: 135: {;tmr3.c: 137: TMR3H = (timerVal >> 8);
 14031  1412  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 14032  1413  0092               	movwf	18	;volatile
 14033                           
 14034                           ;tmr3.c: 138: TMR3L = timerVal;
 14035  1414  0870               	movf	TMR3_WriteTimer@timerVal,w
 14036  1415  0091               	movwf	17	;volatile
 14037  1416  0008               	return
 14038  1417                     __end_of_TMR3_WriteTimer:	
 14039                           
 14040                           	psect	text45
 14041  0003                     __ptext45:	
 14042 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 14043 ;; Defined at:
 14044 ;;		line 182 in file "mcc_generated_files/tmr3.c"
 14045 ;; Parameters:    Size  Location     Type
 14046 ;;		None
 14047 ;; Auto vars:     Size  Location     Type
 14048 ;;		None
 14049 ;; Return value:  Size  Location     Type
 14050 ;;                  1    wreg      void 
 14051 ;; Registers used:
 14052 ;;		None
 14053 ;; Tracked objects:
 14054 ;;		On entry : 1F/1
 14055 ;;		On exit  : 1F/1
 14056 ;;		Unchanged: 1F/0
 14057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14062 ;;Total ram usage:        0 bytes
 14063 ;; Hardware stack levels used:    1
 14064 ;; This function calls:
 14065 ;;		Nothing
 14066 ;; This function is called by:
 14067 ;;		_TMR3_Initialize
 14068 ;;		_TMR3_CallBack
 14069 ;; This function uses a non-reentrant model
 14070 ;;
 14071                           
 14072                           
 14073                           ;psect for function _TMR3_DefaultInterruptHandler
 14074  0003                     _TMR3_DefaultInterruptHandler:	
 14075                           
 14076                           ;incstack = 0
 14077                           ; Regs used in _TMR3_DefaultInterruptHandler: []
 14078  0003  0008               	return
 14079  0004                     __end_of_TMR3_DefaultInterruptHandler:	
 14080                           
 14081                           	psect	text46
 14082  09AB                     __ptext46:	
 14083 ;; *************** function _TimerInt *****************
 14084 ;; Defined at:
 14085 ;;		line 73 in file "main.c"
 14086 ;; Parameters:    Size  Location     Type
 14087 ;;		None
 14088 ;; Auto vars:     Size  Location     Type
 14089 ;;		None
 14090 ;; Return value:  Size  Location     Type
 14091 ;;                  1    wreg      void 
 14092 ;; Registers used:
 14093 ;;		None
 14094 ;; Tracked objects:
 14095 ;;		On entry : 1F/1
 14096 ;;		On exit  : 1F/1
 14097 ;;		Unchanged: 0/0
 14098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14103 ;;Total ram usage:        0 bytes
 14104 ;; Hardware stack levels used:    1
 14105 ;; This function calls:
 14106 ;;		Nothing
 14107 ;; This function is called by:
 14108 ;;		_main
 14109 ;;		_TMR3_CallBack
 14110 ;; This function uses a non-reentrant model
 14111 ;;
 14112                           
 14113                           
 14114                           ;psect for function _TimerInt
 14115  09AB                     _TimerInt:	
 14116                           
 14117                           ;main.c: 74: fsm_tmr = 1;
 14118                           
 14119                           ;incstack = 0
 14120                           ; Regs used in _TimerInt: []
 14121  09AB  01C6               	clrf	_fsm_tmr^(0+128)
 14122  09AC  0AC6               	incf	_fsm_tmr^(0+128),f
 14123  09AD  0008               	return
 14124  09AE                     __end_of_TimerInt:	
 14125                           
 14126                           	psect	text47
 14127  0B30                     __ptext47:	
 14128 ;; *************** function _I2C1_ISR *****************
 14129 ;; Defined at:
 14130 ;;		line 125 in file "mcc_generated_files/i2c1.c"
 14131 ;; Parameters:    Size  Location     Type
 14132 ;;		None
 14133 ;; Auto vars:     Size  Location     Type
 14134 ;;  i2c_data        1    6[BANK0 ] unsigned char 
 14135 ;; Return value:  Size  Location     Type
 14136 ;;                  1    wreg      void 
 14137 ;; Registers used:
 14138 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14139 ;; Tracked objects:
 14140 ;;		On entry : 1F/0
 14141 ;;		On exit  : 1F/4
 14142 ;;		Unchanged: 0/0
 14143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14145 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14147 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14148 ;;Total ram usage:        1 bytes
 14149 ;; Hardware stack levels used:    1
 14150 ;; Hardware stack levels required when called:    5
 14151 ;; This function calls:
 14152 ;;		_I2C1_StatusCallback
 14153 ;; This function is called by:
 14154 ;;		_INTERRUPT_InterruptManager
 14155 ;; This function uses a non-reentrant model
 14156 ;;
 14157                           
 14158                           
 14159                           ;psect for function _I2C1_ISR
 14160  0B30                     _I2C1_ISR:	
 14161                           
 14162                           ;i2c1.c: 132: PIR1bits.SSP1IF = 0;
 14163                           
 14164                           ;incstack = 0
 14165                           ; Regs used in _I2C1_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14166  0B30  1191               	bcf	17,3	;volatile
 14167                           
 14168                           ;i2c1.c: 133: i2c_data = SSP1BUF;
 14169  0B31  0024               	movlb	4	; select bank4
 14170  0B32  0811               	movf	17,w	;volatile
 14171  0B33  0020               	movlb	0	; select bank0
 14172  0B34  00D0               	movwf	I2C1_ISR@i2c_data
 14173                           
 14174                           ;i2c1.c: 134: if (1 == SSP1STATbits.R_nW) {
 14175  0B35  0024               	movlb	4	; select bank4
 14176  0B36  1D14               	btfss	20,2	;volatile
 14177  0B37  2B3F               	goto	i1l165
 14178                           
 14179                           ;i2c1.c: 135: if ((1 == SSP1STATbits.D_nA) && (1 == SSP1CON2bits.ACKSTAT)) {
 14180  0B38  1A94               	btfsc	20,5	;volatile
 14181  0B39  1F16               	btfss	22,6	;volatile
 14182  0B3A  2B3D               	goto	i1l5728
 14183                           
 14184                           ;i2c1.c: 137: I2C1_StatusCallback(I2C1_SLAVE_READ_COMPLETED);
 14185  0B3B  3003               	movlw	3
 14186  0B3C  2B47               	goto	L6
 14187  0B3D                     i1l5728:	
 14188                           ;i2c1.c: 138: } else {
 14189                           
 14190                           
 14191                           ;i2c1.c: 140: I2C1_StatusCallback(I2C1_SLAVE_READ_REQUEST);
 14192  0B3D  3001               	movlw	1
 14193  0B3E  2B47               	goto	L6
 14194  0B3F                     i1l165:	
 14195  0B3F  1A94               	btfsc	20,5	;volatile
 14196  0B40  2B43               	goto	i1l5732
 14197                           
 14198                           ;i2c1.c: 146: I2C1_StatusCallback(I2C1_SLAVE_WRITE_REQUEST);
 14199  0B41  3000               	movlw	0
 14200  0B42  2B47               	goto	L6
 14201  0B43                     i1l5732:	
 14202                           ;i2c1.c: 147: } else {
 14203                           
 14204                           
 14205                           ;i2c1.c: 148: I2C1_slaveWriteData = i2c_data;
 14206  0B43  0020               	movlb	0	; select bank0
 14207  0B44  0850               	movf	I2C1_ISR@i2c_data,w
 14208  0B45  00DF               	movwf	_I2C1_slaveWriteData	;volatile
 14209                           
 14210                           ;i2c1.c: 151: I2C1_StatusCallback(I2C1_SLAVE_WRITE_COMPLETED);
 14211  0B46  3002               	movlw	2
 14212  0B47                     L6:	
 14213  0B47  234B               	fcall	_I2C1_StatusCallback
 14214                           
 14215                           ;i2c1.c: 152: };i2c1.c: 154: SSP1CON1bits.CKP = 1;
 14216  0B48  0024               	movlb	4	; select bank4
 14217  0B49  1615               	bsf	21,4	;volatile
 14218  0B4A  0008               	return
 14219  0B4B                     __end_of_I2C1_ISR:	
 14220  0B4B                     __ptext48:	
 14221 ;; *************** function _I2C1_StatusCallback *****************
 14222 ;; Defined at:
 14223 ;;		line 67 in file "i2c_register.c"
 14224 ;; Parameters:    Size  Location     Type
 14225 ;;  i2c_bus_stat    1    wreg     enum E68
 14226 ;; Auto vars:     Size  Location     Type
 14227 ;;  i2c_bus_stat    1    5[BANK0 ] enum E68
 14228 ;; Return value:  Size  Location     Type
 14229 ;;                  1    wreg      void 
 14230 ;; Registers used:
 14231 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14232 ;; Tracked objects:
 14233 ;;		On entry : 1B/4
 14234 ;;		On exit  : 1E/0
 14235 ;;		Unchanged: 0/0
 14236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14238 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14240 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14241 ;;Total ram usage:        1 bytes
 14242 ;; Hardware stack levels used:    1
 14243 ;; Hardware stack levels required when called:    4
 14244 ;; This function calls:
 14245 ;;		_Int2StatusClear
 14246 ;;		_RegisterRead
 14247 ;;		_RegisterWrite
 14248 ;;		_StatusClear
 14249 ;;		i1_ClearInterrupt
 14250 ;; This function is called by:
 14251 ;;		_I2C1_ISR
 14252 ;; This function uses a non-reentrant model
 14253 ;;
 14254                           
 14255                           
 14256                           ;psect for function _I2C1_StatusCallback
 14257  0B4B                     _I2C1_StatusCallback:	
 14258                           
 14259                           ;incstack = 0
 14260                           ; Regs used in _I2C1_StatusCallback: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14261                           ;I2C1_StatusCallback@i2c_bus_state stored from wreg
 14262  0B4B  0020               	movlb	0	; select bank0
 14263  0B4C  00CF               	movwf	I2C1_StatusCallback@i2c_bus_state
 14264                           
 14265                           ;i2c_register.c: 68: static uint8_t slaveWriteType = SLAVE_NORMAL_DATA;;i2c_register.c: 
      +                          70: switch (i2c_bus_state) {
 14266  0B4D  2B82               	goto	i1l5240
 14267  0B4E                     i1l710:	
 14268                           ;i2c_register.c: 71: case I2C1_SLAVE_WRITE_REQUEST:
 14269                           
 14270                           
 14271                           ;i2c_register.c: 73: slaveWriteType = SLAVE_DATA_ADDRESS;
 14272  0B4E  0021               	movlb	1	; select bank1
 14273  0B4F  01BF               	clrf	I2C1_StatusCallback@slaveWriteType^(0+128)
 14274  0B50  0ABF               	incf	I2C1_StatusCallback@slaveWriteType^(0+128),f
 14275                           
 14276                           ;i2c_register.c: 74: break;
 14277  0B51  0008               	return
 14278  0B52                     i1l5210:	
 14279                           
 14280                           ;i2c_register.c: 81: EncoderReg = I2C1_slaveWriteData;
 14281  0B52  0020               	movlb	0	; select bank0
 14282  0B53  085F               	movf	_I2C1_slaveWriteData,w	;volatile
 14283  0B54  00B8               	movwf	_EncoderReg	;volatile
 14284                           
 14285                           ;i2c_register.c: 82: break;
 14286  0B55  2B69               	goto	i1l5220
 14287  0B56                     i1l5212:	
 14288                           
 14289                           ;i2c_register.c: 86: RegisterWrite(EncoderReg, I2C1_slaveWriteData);
 14290  0B56  0020               	movlb	0	; select bank0
 14291  0B57  085F               	movf	_I2C1_slaveWriteData,w	;volatile
 14292  0B58  00CD               	movwf	RegisterWrite@data
 14293  0B59  0838               	movf	_EncoderReg,w	;volatile
 14294  0B5A  318C  2415  318B   	fcall	_RegisterWrite
 14295                           
 14296                           ;i2c_register.c: 87: EncoderReg++;
 14297  0B5D  0020               	movlb	0	; select bank0
 14298  0B5E  0AB8               	incf	_EncoderReg,f	;volatile
 14299                           
 14300                           ;i2c_register.c: 88: break;
 14301  0B5F  2B69               	goto	i1l5220
 14302  0B60                     i1l5218:	
 14303  0B60  0021               	movlb	1	; select bank1
 14304  0B61  083F               	movf	I2C1_StatusCallback@slaveWriteType^(0+128),w
 14305                           
 14306                           ; Switch size 1, requested type "speed"
 14307                           ; Number of cases is 2, Range of values is 0 to 1
 14308                           ; switch strategies available:
 14309                           ; Name         Instructions Cycles
 14310                           ; simple_byte            7     4 (average)
 14311                           ; direct_byte           10     6 (fixed)
 14312                           ; jumptable            260     6 (fixed)
 14313                           ;	Chosen strategy is simple_byte
 14314  0B62  3A00               	xorlw	0	; case 0
 14315  0B63  1903               	skipnz
 14316  0B64  2B56               	goto	i1l5212
 14317  0B65  3A01               	xorlw	1	; case 1
 14318  0B66  1903               	skipnz
 14319  0B67  2B52               	goto	i1l5210
 14320  0B68  2B56               	goto	i1l5212
 14321  0B69                     i1l5220:	
 14322                           
 14323                           ;i2c_register.c: 92: slaveWriteType = SLAVE_NORMAL_DATA;
 14324  0B69  0021               	movlb	1	; select bank1
 14325  0B6A  01BF               	clrf	I2C1_StatusCallback@slaveWriteType^(0+128)
 14326                           
 14327                           ;i2c_register.c: 93: break;
 14328  0B6B  0008               	return
 14329  0B6C                     i1l5222:	
 14330                           
 14331                           ;i2c_register.c: 96: SSP1BUF = RegisterRead(EncoderReg);
 14332  0B6C  0838               	movf	_EncoderReg,w	;volatile
 14333  0B6D  2397               	fcall	_RegisterRead
 14334  0B6E  0024               	movlb	4	; select bank4
 14335  0B6F  0091               	movwf	17	;volatile
 14336                           
 14337                           ;i2c_register.c: 97: EncoderReg++;
 14338  0B70  0020               	movlb	0	; select bank0
 14339  0B71  0AB8               	incf	_EncoderReg,f	;volatile
 14340                           
 14341                           ;i2c_register.c: 98: break;
 14342  0B72  0008               	return
 14343  0B73                     i1l5226:	
 14344                           
 14345                           ;i2c_register.c: 101: if (intclear == 1) {
 14346  0B73  0021               	movlb	1	; select bank1
 14347  0B74  0B41               	decfsz	_intclear^(0+128),w	;volatile
 14348  0B75  2B7C               	goto	i1l5232
 14349                           
 14350                           ;i2c_register.c: 102: StatusClear();
 14351  0B76  238D  318B         	fcall	_StatusClear
 14352                           
 14353                           ;i2c_register.c: 103: ClearInterrupt();
 14354  0B78  2391  318B         	fcall	i1_ClearInterrupt
 14355                           
 14356                           ;i2c_register.c: 104: intclear = 0;
 14357  0B7A  0021               	movlb	1	; select bank1
 14358  0B7B  01C1               	clrf	_intclear^(0+128)	;volatile
 14359  0B7C                     i1l5232:	
 14360                           
 14361                           ;i2c_register.c: 105: };i2c_register.c: 107: if (int2clear == 1) {
 14362  0B7C  0B40               	decfsz	_int2clear^(0+128),w	;volatile
 14363  0B7D  0008               	return
 14364                           
 14365                           ;i2c_register.c: 108: Int2StatusClear();
 14366  0B7E  2394               	fcall	_Int2StatusClear
 14367                           
 14368                           ;i2c_register.c: 109: int2clear = 0;
 14369  0B7F  0021               	movlb	1	; select bank1
 14370  0B80  01C0               	clrf	_int2clear^(0+128)	;volatile
 14371  0B81  0008               	return
 14372  0B82                     i1l5240:	
 14373  0B82  084F               	movf	I2C1_StatusCallback@i2c_bus_state,w
 14374                           
 14375                           ; Switch size 1, requested type "speed"
 14376                           ; Number of cases is 4, Range of values is 0 to 3
 14377                           ; switch strategies available:
 14378                           ; Name         Instructions Cycles
 14379                           ; direct_byte           14     6 (fixed)
 14380                           ; simple_byte           13     7 (average)
 14381                           ; jumptable            260     6 (fixed)
 14382                           ;	Chosen strategy is direct_byte
 14383  0B83  0084               	movwf	4
 14384  0B84  3004               	movlw	4
 14385  0B85  0204               	subwf	4,w
 14386  0B86  1803               	skipnc
 14387  0B87  0008               	return
 14388  0B88  3190               	movlp	high i1S7274
 14389  0B89  3504               	lslf	4,w
 14390  0B8A  3E54               	addlw	low i1S7274
 14391  0B8B  0082               	movwf	2
 14392  0B8C  0008               	return
 14393  0B8D                     __end_of_I2C1_StatusCallback:	
 14394  0B8D                     __ptext50:	
 14395 ;; *************** function _StatusClear *****************
 14396 ;; Defined at:
 14397 ;;		line 118 in file "DataVariable.c"
 14398 ;; Parameters:    Size  Location     Type
 14399 ;;		None
 14400 ;; Auto vars:     Size  Location     Type
 14401 ;;		None
 14402 ;; Return value:  Size  Location     Type
 14403 ;;                  1    wreg      void 
 14404 ;; Registers used:
 14405 ;;		status,2
 14406 ;; Tracked objects:
 14407 ;;		On entry : 1F/1
 14408 ;;		On exit  : 1F/0
 14409 ;;		Unchanged: 0/0
 14410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14415 ;;Total ram usage:        0 bytes
 14416 ;; Hardware stack levels used:    1
 14417 ;; This function calls:
 14418 ;;		Nothing
 14419 ;; This function is called by:
 14420 ;;		_I2C1_StatusCallback
 14421 ;; This function uses a non-reentrant model
 14422 ;;
 14423                           
 14424                           
 14425                           ;psect for function _StatusClear
 14426  0B8D                     _StatusClear:	
 14427                           
 14428                           ;DataVariable.c: 119: NSTATUS.val = 0;
 14429                           
 14430                           ;incstack = 0
 14431                           ; Regs used in _StatusClear: [status,2]
 14432  0B8D  0020               	movlb	0	; select bank0
 14433  0B8E  01B2               	clrf	_NSTATUS	;volatile
 14434  0B8F  01B3               	clrf	_NSTATUS+1	;volatile
 14435  0B90  0008               	return
 14436  0B91                     __end_of_StatusClear:	
 14437  0B91                     __ptext49:	
 14438 ;; *************** function i1_ClearInterrupt *****************
 14439 ;; Defined at:
 14440 ;;		line 66 in file "main.c"
 14441 ;; Parameters:    Size  Location     Type
 14442 ;;		None
 14443 ;; Auto vars:     Size  Location     Type
 14444 ;;		None
 14445 ;; Return value:  Size  Location     Type
 14446 ;;                  1    wreg      void 
 14447 ;; Registers used:
 14448 ;;		None
 14449 ;; Tracked objects:
 14450 ;;		On entry : 1F/0
 14451 ;;		On exit  : 1F/2
 14452 ;;		Unchanged: 0/0
 14453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14458 ;;Total ram usage:        0 bytes
 14459 ;; Hardware stack levels used:    1
 14460 ;; This function calls:
 14461 ;;		Nothing
 14462 ;; This function is called by:
 14463 ;;		_I2C1_StatusCallback
 14464 ;; This function uses a non-reentrant model
 14465 ;;
 14466                           
 14467                           
 14468                           ;psect for function i1_ClearInterrupt
 14469  0B91                     i1_ClearInterrupt:	
 14470                           
 14471                           ;incstack = 0
 14472                           ; Regs used in i1_ClearInterrupt: []
 14473                           ;main.c: 67: do { LATBbits.LATB5 = 1; } while(0);
 14474  0B91  0022               	movlb	2	; select bank2
 14475  0B92  168D               	bsf	13,5	;volatile
 14476  0B93  0008               	return
 14477  0B94                     __end_ofi1_ClearInterrupt:	
 14478  0B94                     __ptext72:	
 14479 ;; *************** function _Int2StatusClear *****************
 14480 ;; Defined at:
 14481 ;;		line 125 in file "DataVariable.c"
 14482 ;; Parameters:    Size  Location     Type
 14483 ;;		None
 14484 ;; Auto vars:     Size  Location     Type
 14485 ;;		None
 14486 ;; Return value:  Size  Location     Type
 14487 ;;                  1    wreg      void 
 14488 ;; Registers used:
 14489 ;;		status,2
 14490 ;; Tracked objects:
 14491 ;;		On entry : 1F/1
 14492 ;;		On exit  : 1F/0
 14493 ;;		Unchanged: 0/0
 14494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14499 ;;Total ram usage:        0 bytes
 14500 ;; Hardware stack levels used:    1
 14501 ;; This function calls:
 14502 ;;		Nothing
 14503 ;; This function is called by:
 14504 ;;		_I2C1_StatusCallback
 14505 ;; This function uses a non-reentrant model
 14506 ;;
 14507                           
 14508                           
 14509                           ;psect for function _Int2StatusClear
 14510  0B94                     _Int2StatusClear:	
 14511                           
 14512                           ;DataVariable.c: 126: SSTATUS = 0;
 14513                           
 14514                           ;incstack = 0
 14515                           ; Regs used in _Int2StatusClear: [status,2]
 14516  0B94  0020               	movlb	0	; select bank0
 14517  0B95  01C5               	clrf	_SSTATUS	;volatile
 14518  0B96  0008               	return
 14519  0B97                     __end_of_Int2StatusClear:	
 14520  0B97                     __ptext70:	
 14521 ;; *************** function _RegisterRead *****************
 14522 ;; Defined at:
 14523 ;;		line 288 in file "i2c_register.c"
 14524 ;; Parameters:    Size  Location     Type
 14525 ;;  add             1    wreg     unsigned char 
 14526 ;; Auto vars:     Size  Location     Type
 14527 ;;  add             1    1[COMMON] unsigned char 
 14528 ;;  return_value    1    2[COMMON] unsigned char 
 14529 ;; Return value:  Size  Location     Type
 14530 ;;                  1    wreg      unsigned char 
 14531 ;; Registers used:
 14532 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14533 ;; Tracked objects:
 14534 ;;		On entry : 1F/0
 14535 ;;		On exit  : E/0
 14536 ;;		Unchanged: 0/0
 14537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14539 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14541 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14542 ;;Total ram usage:        2 bytes
 14543 ;; Hardware stack levels used:    1
 14544 ;; Hardware stack levels required when called:    1
 14545 ;; This function calls:
 14546 ;;		_eeprom_read
 14547 ;; This function is called by:
 14548 ;;		_I2C1_StatusCallback
 14549 ;; This function uses a non-reentrant model
 14550 ;;
 14551                           
 14552                           
 14553                           ;psect for function _RegisterRead
 14554  0B97                     _RegisterRead:	
 14555                           
 14556                           ;incstack = 0
 14557                           ; Regs used in _RegisterRead: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14558                           ;RegisterRead@add stored from wreg
 14559  0B97  00F1               	movwf	RegisterRead@add
 14560                           
 14561                           ;i2c_register.c: 291: switch (add) {
 14562  0B98  2BEC               	goto	i1l4946
 14563  0B99                     i1l4870:	
 14564                           
 14565                           ;i2c_register.c: 293: return_value = GCONF;
 14566  0B99  0849               	movf	_GCONF,w	;volatile
 14567  0B9A  2BE8               	goto	L43
 14568  0B9B                     i1l4872:	
 14569                           ;i2c_register.c: 294: break;
 14570                           
 14571                           
 14572                           ;i2c_register.c: 297: return_value = GP1CONF;
 14573  0B9B  0848               	movf	_GP1CONF,w	;volatile
 14574  0B9C  2BE8               	goto	L43
 14575  0B9D                     i1l4874:	
 14576                           ;i2c_register.c: 298: break;
 14577                           
 14578                           
 14579                           ;i2c_register.c: 301: return_value = GP2CONF;
 14580  0B9D  0847               	movf	_GP2CONF,w	;volatile
 14581  0B9E  2BE8               	goto	L43
 14582  0B9F                     i1l4876:	
 14583                           ;i2c_register.c: 302: break;
 14584                           
 14585                           
 14586                           ;i2c_register.c: 305: return_value = GP3CONF;
 14587  0B9F  0846               	movf	_GP3CONF,w	;volatile
 14588  0BA0  2BE8               	goto	L43
 14589  0BA1                     i1l4878:	
 14590                           ;i2c_register.c: 306: break;
 14591                           
 14592                           
 14593                           ;i2c_register.c: 309: return_value = INTCONF.bval[1];
 14594  0BA1  0831               	movf	_INTCONF+1,w	;volatile
 14595  0BA2  2BE8               	goto	L43
 14596  0BA3                     i1l4880:	
 14597                           ;i2c_register.c: 310: break;
 14598                           
 14599                           
 14600                           ;i2c_register.c: 313: return_value = INTCONF.bval[0];
 14601  0BA3  0830               	movf	_INTCONF,w	;volatile
 14602  0BA4  2BE8               	goto	L43
 14603  0BA5                     i1l4882:	
 14604                           ;i2c_register.c: 314: break;
 14605                           
 14606                           
 14607                           ;i2c_register.c: 317: return_value = NSTATUS.bval[1];
 14608  0BA5  0833               	movf	_NSTATUS+1,w	;volatile
 14609  0BA6  2BA8               	goto	L17
 14610  0BA7                     i1l4884:	
 14611                           ;i2c_register.c: 319: break;
 14612                           
 14613                           ;i2c_register.c: 318: intclear = 1;
 14614                           
 14615                           
 14616                           ;i2c_register.c: 322: return_value = NSTATUS.bval[0];
 14617  0BA7  0832               	movf	_NSTATUS,w	;volatile
 14618  0BA8                     L17:	
 14619  0BA8  00F2               	movwf	RegisterRead@return_value
 14620                           
 14621                           ;i2c_register.c: 323: intclear = 1;
 14622  0BA9  3001               	movlw	1
 14623  0BAA  0021               	movlb	1	; select bank1
 14624  0BAB  00C1               	movwf	_intclear^(0+128)	;volatile
 14625                           
 14626                           ;i2c_register.c: 324: break;
 14627  0BAC  2BF6               	goto	i1l4948
 14628  0BAD                     i1l4886:	
 14629                           
 14630                           ;i2c_register.c: 327: return_value = SSTATUS;
 14631  0BAD  0845               	movf	_SSTATUS,w	;volatile
 14632  0BAE  00F2               	movwf	RegisterRead@return_value
 14633                           
 14634                           ;i2c_register.c: 328: int2clear = 1;
 14635  0BAF  3001               	movlw	1
 14636  0BB0  0021               	movlb	1	; select bank1
 14637  0BB1  00C0               	movwf	_int2clear^(0+128)	;volatile
 14638                           
 14639                           ;i2c_register.c: 329: break;
 14640  0BB2  2BF6               	goto	i1l4948
 14641  0BB3                     i1l4888:	
 14642                           
 14643                           ;i2c_register.c: 332: return_value = FSTATUS;
 14644  0BB3  0844               	movf	_FSTATUS,w	;volatile
 14645  0BB4  2BE8               	goto	L43
 14646  0BB5                     i1l4890:	
 14647                           ;i2c_register.c: 333: break;
 14648                           
 14649                           
 14650                           ;i2c_register.c: 337: return_value = CVAL.bval[3];
 14651  0BB5  082F               	movf	_CVAL+3,w	;volatile
 14652  0BB6  2BE8               	goto	L43
 14653  0BB7                     i1l4892:	
 14654                           ;i2c_register.c: 338: break;
 14655                           
 14656                           
 14657                           ;i2c_register.c: 340: return_value = CVAL.bval[2];
 14658  0BB7  082E               	movf	_CVAL+2,w	;volatile
 14659  0BB8  2BE8               	goto	L43
 14660  0BB9                     i1l4894:	
 14661                           ;i2c_register.c: 341: break;
 14662                           
 14663                           
 14664                           ;i2c_register.c: 343: return_value = CVAL.bval[1];
 14665  0BB9  082D               	movf	_CVAL+1,w	;volatile
 14666  0BBA  2BE8               	goto	L43
 14667  0BBB                     i1l4896:	
 14668                           ;i2c_register.c: 344: break;
 14669                           
 14670                           
 14671                           ;i2c_register.c: 346: return_value = CVAL.bval[0];
 14672  0BBB  082C               	movf	_CVAL,w	;volatile
 14673  0BBC  2BE8               	goto	L43
 14674  0BBD                     i1l4898:	
 14675                           ;i2c_register.c: 347: break;
 14676                           
 14677                           
 14678                           ;i2c_register.c: 351: return_value = CMAX.bval[3];
 14679  0BBD  082B               	movf	_CMAX+3,w	;volatile
 14680  0BBE  2BE8               	goto	L43
 14681  0BBF                     i1l4900:	
 14682                           ;i2c_register.c: 352: break;
 14683                           
 14684                           
 14685                           ;i2c_register.c: 354: return_value = CMAX.bval[2];
 14686  0BBF  082A               	movf	_CMAX+2,w	;volatile
 14687  0BC0  2BE8               	goto	L43
 14688  0BC1                     i1l4902:	
 14689                           ;i2c_register.c: 355: break;
 14690                           
 14691                           
 14692                           ;i2c_register.c: 357: return_value = CMAX.bval[1];
 14693  0BC1  0829               	movf	_CMAX+1,w	;volatile
 14694  0BC2  2BE8               	goto	L43
 14695  0BC3                     i1l4904:	
 14696                           ;i2c_register.c: 358: break;
 14697                           
 14698                           
 14699                           ;i2c_register.c: 360: return_value = CMAX.bval[0];
 14700  0BC3  0828               	movf	_CMAX,w	;volatile
 14701  0BC4  2BE8               	goto	L43
 14702  0BC5                     i1l4906:	
 14703                           ;i2c_register.c: 361: break;
 14704                           
 14705                           
 14706                           ;i2c_register.c: 365: return_value = CMIN.bval[3];
 14707  0BC5  0827               	movf	_CMIN+3,w	;volatile
 14708  0BC6  2BE8               	goto	L43
 14709  0BC7                     i1l4908:	
 14710                           ;i2c_register.c: 366: break;
 14711                           
 14712                           
 14713                           ;i2c_register.c: 368: return_value = CMIN.bval[2];
 14714  0BC7  0826               	movf	_CMIN+2,w	;volatile
 14715  0BC8  2BE8               	goto	L43
 14716  0BC9                     i1l4910:	
 14717                           ;i2c_register.c: 369: break;
 14718                           
 14719                           
 14720                           ;i2c_register.c: 371: return_value = CMIN.bval[1];
 14721  0BC9  0825               	movf	_CMIN+1,w	;volatile
 14722  0BCA  2BE8               	goto	L43
 14723  0BCB                     i1l4912:	
 14724                           ;i2c_register.c: 372: break;
 14725                           
 14726                           
 14727                           ;i2c_register.c: 374: return_value = CMIN.bval[0];
 14728  0BCB  0824               	movf	_CMIN,w	;volatile
 14729  0BCC  2BE8               	goto	L43
 14730  0BCD                     i1l4914:	
 14731                           ;i2c_register.c: 375: break;
 14732                           
 14733                           
 14734                           ;i2c_register.c: 379: return_value = ISTEP.bval[3];
 14735  0BCD  0823               	movf	_ISTEP+3,w	;volatile
 14736  0BCE  2BE8               	goto	L43
 14737  0BCF                     i1l4916:	
 14738                           ;i2c_register.c: 380: break;
 14739                           
 14740                           
 14741                           ;i2c_register.c: 382: return_value = ISTEP.bval[2];
 14742  0BCF  0822               	movf	_ISTEP+2,w	;volatile
 14743  0BD0  2BE8               	goto	L43
 14744  0BD1                     i1l4918:	
 14745                           ;i2c_register.c: 383: break;
 14746                           
 14747                           
 14748                           ;i2c_register.c: 385: return_value = ISTEP.bval[1];
 14749  0BD1  0821               	movf	_ISTEP+1,w	;volatile
 14750  0BD2  2BE8               	goto	L43
 14751  0BD3                     i1l4920:	
 14752                           ;i2c_register.c: 386: break;
 14753                           
 14754                           
 14755                           ;i2c_register.c: 388: return_value = ISTEP.bval[0];
 14756  0BD3  0820               	movf	_ISTEP,w	;volatile
 14757  0BD4  2BE8               	goto	L43
 14758  0BD5                     i1l4922:	
 14759                           ;i2c_register.c: 389: break;
 14760                           
 14761                           
 14762                           ;i2c_register.c: 392: return_value = GP1REG;
 14763  0BD5  0843               	movf	_GP1REG,w	;volatile
 14764  0BD6  2BE8               	goto	L43
 14765  0BD7                     i1l4924:	
 14766                           ;i2c_register.c: 393: break;
 14767                           
 14768                           
 14769                           ;i2c_register.c: 396: return_value = GP2REG;
 14770  0BD7  0842               	movf	_GP2REG,w	;volatile
 14771  0BD8  2BE8               	goto	L43
 14772  0BD9                     i1l4926:	
 14773                           ;i2c_register.c: 397: break;
 14774                           
 14775                           
 14776                           ;i2c_register.c: 400: return_value = GP3REG;
 14777  0BD9  0841               	movf	_GP3REG,w	;volatile
 14778  0BDA  2BE8               	goto	L43
 14779  0BDB                     i1l4928:	
 14780                           ;i2c_register.c: 401: break;
 14781                           
 14782                           
 14783                           ;i2c_register.c: 404: return_value = DPPERIOD;
 14784  0BDB  0840               	movf	_DPPERIOD,w	;volatile
 14785  0BDC  2BE8               	goto	L43
 14786  0BDD                     i1l4930:	
 14787                           ;i2c_register.c: 405: break;
 14788                           
 14789                           
 14790                           ;i2c_register.c: 408: return_value = FADEGP;
 14791  0BDD  083F               	movf	_FADEGP,w	;volatile
 14792  0BDE  2BE8               	goto	L43
 14793  0BDF                     i1l4932:	
 14794                           ;i2c_register.c: 409: break;
 14795                           
 14796                           
 14797                           ;i2c_register.c: 412: return_value = GAMMAGP1;
 14798  0BDF  083E               	movf	_GAMMAGP1,w	;volatile
 14799  0BE0  2BE8               	goto	L43
 14800  0BE1                     i1l4934:	
 14801                           ;i2c_register.c: 413: break;
 14802                           
 14803                           
 14804                           ;i2c_register.c: 416: return_value = GAMMAGP2;
 14805  0BE1  083D               	movf	_GAMMAGP2,w	;volatile
 14806  0BE2  2BE8               	goto	L43
 14807  0BE3                     i1l4936:	
 14808                           ;i2c_register.c: 417: break;
 14809                           
 14810                           
 14811                           ;i2c_register.c: 420: return_value = GAMMAGP3;
 14812  0BE3  083C               	movf	_GAMMAGP3,w	;volatile
 14813  0BE4  2BE8               	goto	L43
 14814  0BE5                     i1l4938:	
 14815                           ;i2c_register.c: 421: break;
 14816                           
 14817                           
 14818                           ;i2c_register.c: 424: return_value = 0x5B;
 14819  0BE5  305B               	movlw	91
 14820  0BE6  2BE8               	goto	L43
 14821  0BE7                     i1l4940:	
 14822                           ;i2c_register.c: 425: break;
 14823                           
 14824                           
 14825                           ;i2c_register.c: 428: return_value = 0x11;
 14826  0BE7  3011               	movlw	17
 14827  0BE8                     L43:	
 14828  0BE8  00F2               	movwf	RegisterRead@return_value
 14829                           
 14830                           ;i2c_register.c: 429: break;
 14831  0BE9  2BF6               	goto	i1l4948
 14832  0BEA                     i1l4942:	
 14833                           
 14834                           ;i2c_register.c: 432: return_value = 0;
 14835  0BEA  01F2               	clrf	RegisterRead@return_value
 14836                           
 14837                           ;i2c_register.c: 433: break;
 14838  0BEB  2BF6               	goto	i1l4948
 14839  0BEC                     i1l4946:	
 14840  0BEC  0871               	movf	RegisterRead@add,w
 14841                           
 14842                           ; Switch size 1, requested type "speed"
 14843                           ; Number of cases is 36, Range of values is 0 to 113
 14844                           ; switch strategies available:
 14845                           ; Name         Instructions Cycles
 14846                           ; direct_byte          234     6 (fixed)
 14847                           ; simple_byte          109    55 (average)
 14848                           ; jumptable            260     6 (fixed)
 14849                           ;	Chosen strategy is direct_byte
 14850  0BED  0084               	movwf	4
 14851  0BEE  3072               	movlw	114
 14852  0BEF  0204               	subwf	4,w
 14853  0BF0  1803               	skipnc
 14854  0BF1  2BEA               	goto	i1l4942
 14855  0BF2  318A               	movlp	high i1S7296
 14856  0BF3  3504               	lslf	4,w
 14857  0BF4  3E00               	addlw	low i1S7296
 14858  0BF5  0082               	movwf	2
 14859  0BF6                     i1l4948:	
 14860                           
 14861                           ;i2c_register.c: 436: if (add >= REG_EEPROMS) {
 14862  0BF6  3080               	movlw	128
 14863  0BF7  0271               	subwf	RegisterRead@add,w
 14864  0BF8  1C03               	skipc
 14865  0BF9  2C04               	goto	i1l4956
 14866                           
 14867                           ;i2c_register.c: 437: if (C_MBANK == 0) {
 14868  0BFA  0020               	movlb	0	; select bank0
 14869  0BFB  083B               	movf	_C_MBANK,w	;volatile
 14870  0BFC  1D03               	btfss	3,2
 14871  0BFD  2C01               	goto	i1l4954
 14872                           
 14873                           ;i2c_register.c: 438: return_value = eeprom_read((uint8_t) (add - REG_EEPROMS));
 14874  0BFE  0871               	movf	RegisterRead@add,w
 14875  0BFF  3E80               	addlw	128
 14876  0C00  2C02               	goto	L44
 14877  0C01                     i1l4954:	
 14878                           ;i2c_register.c: 439: } else {
 14879                           
 14880                           
 14881                           ;i2c_register.c: 440: return_value = eeprom_read(add);
 14882  0C01  0871               	movf	RegisterRead@add,w
 14883  0C02                     L44:	
 14884  0C02  2406               	fcall	_eeprom_read
 14885  0C03  00F2               	movwf	RegisterRead@return_value
 14886  0C04                     i1l4956:	
 14887                           
 14888                           ;i2c_register.c: 441: };i2c_register.c: 442: };i2c_register.c: 443: return return_value;
 14889  0C04  0872               	movf	RegisterRead@return_value,w
 14890  0C05  0008               	return
 14891  0C06                     __end_of_RegisterRead:	
 14892  0C06                     __ptext71:	
 14893 ;; *************** function _eeprom_read *****************
 14894 ;; Defined at:
 14895 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\pic\__eeread.c"
 14896 ;; Parameters:    Size  Location     Type
 14897 ;;  addr            1    wreg     unsigned char 
 14898 ;; Auto vars:     Size  Location     Type
 14899 ;;  addr            1    0[COMMON] unsigned char 
 14900 ;; Return value:  Size  Location     Type
 14901 ;;                  1    wreg      unsigned char 
 14902 ;; Registers used:
 14903 ;;		wreg
 14904 ;; Tracked objects:
 14905 ;;		On entry : 1F/0
 14906 ;;		On exit  : 1F/11
 14907 ;;		Unchanged: 0/0
 14908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14910 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14912 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14913 ;;Total ram usage:        1 bytes
 14914 ;; Hardware stack levels used:    1
 14915 ;; This function calls:
 14916 ;;		Nothing
 14917 ;; This function is called by:
 14918 ;;		_RegisterRead
 14919 ;; This function uses a non-reentrant model
 14920 ;;
 14921                           
 14922                           
 14923                           ;psect for function _eeprom_read
 14924  0C06                     _eeprom_read:	
 14925                           
 14926                           ;incstack = 0
 14927                           ; Regs used in _eeprom_read: [wreg]
 14928                           ;eeprom_read@addr stored from wreg
 14929  0C06  00F0               	movwf	eeprom_read@addr
 14930  0C07  2C09               	goto	i1l1503
 14931  0C08                     u224_21:	
 14932  0C08  0020               	movlb	0	; select bank0
 14933  0C09                     i1l1503:	
 14934                           ;__eeread.c: 8: do
 14935                           
 14936  0C09  0064               	clrwdt	;# 
 14937                           
 14938                           ;__eeread.c: 14: while (NVMCON1bits.WR);
 14939  0C0A  0031               	movlb	17	; select bank17
 14940  0C0B  1895               	btfsc	21,1	;volsfr
 14941  0C0C  2C08               	goto	u224_21
 14942                           
 14943                           ;__eeread.c: 18: return ( NVMCON1bits.NVMREGS = 1, NVMADRL = (addr) & 0xFFU, NVMADRH = 0
      +                          x70, NVMCON1bits.RD = 1, NVMDATL);
 14944  0C0D  1715               	bsf	21,6	;volsfr
 14945  0C0E  0870               	movf	eeprom_read@addr,w
 14946  0C0F  0091               	movwf	17	;volatile
 14947  0C10  3070               	movlw	112
 14948  0C11  0092               	movwf	18	;volatile
 14949  0C12  1415               	bsf	21,0	;volsfr
 14950  0C13  0813               	movf	19,w	;volatile
 14951  0C14  0008               	return
 14952  0C15                     __end_of_eeprom_read:	
 14953                           
 14954                           	psect	swtext5
 14955  1054                     __pswtext5:	
 14956  1054                     i1S7274:	
 14957  1054  318B  2B4E         	ljmp	i1l710
 14958  1056  318B  2B6C         	ljmp	i1l5222
 14959  1058  318B  2B60         	ljmp	i1l5218
 14960  105A  318B  2B73         	ljmp	i1l5226
 14961                           
 14962                           	psect	text51
 14963  0C15                     __ptext51:	
 14964 ;; *************** function _RegisterWrite *****************
 14965 ;; Defined at:
 14966 ;;		line 126 in file "i2c_register.c"
 14967 ;; Parameters:    Size  Location     Type
 14968 ;;  add             1    wreg     unsigned char 
 14969 ;;  data            1    3[BANK0 ] unsigned char 
 14970 ;; Auto vars:     Size  Location     Type
 14971 ;;  add             1    4[BANK0 ] unsigned char 
 14972 ;; Return value:  Size  Location     Type
 14973 ;;                  1    wreg      void 
 14974 ;; Registers used:
 14975 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14976 ;; Tracked objects:
 14977 ;;		On entry : 1F/0
 14978 ;;		On exit  : E/0
 14979 ;;		Unchanged: 0/0
 14980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14981 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14982 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14984 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14985 ;;Total ram usage:        2 bytes
 14986 ;; Hardware stack levels used:    1
 14987 ;; Hardware stack levels required when called:    3
 14988 ;; This function calls:
 14989 ;;		_Config_GP1
 14990 ;;		_Config_GP2
 14991 ;;		_Config_GP3
 14992 ;;		_GeneralDataSet
 14993 ;;		_GeneralDataSplit
 14994 ;;		_UpdateOut_GP1
 14995 ;;		_UpdateOut_GP2
 14996 ;;		_UpdateOut_GP3
 14997 ;;		_eeprom_write
 14998 ;;		i1___wmul
 14999 ;; This function is called by:
 15000 ;;		_I2C1_StatusCallback
 15001 ;; This function uses a non-reentrant model
 15002 ;;
 15003                           
 15004                           
 15005                           ;psect for function _RegisterWrite
 15006  0C15                     _RegisterWrite:	
 15007                           
 15008                           ;incstack = 0
 15009                           ; Regs used in _RegisterWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15010                           ;RegisterWrite@add stored from wreg
 15011  0C15  00CE               	movwf	RegisterWrite@add
 15012                           
 15013                           ;i2c_register.c: 128: switch (add) {
 15014  0C16  2CC0               	goto	i1l4852
 15015  0C17                     i1l4756:	
 15016                           
 15017                           ;i2c_register.c: 130: GCONF = data;
 15018  0C17  084D               	movf	RegisterWrite@data,w
 15019  0C18  00C9               	movwf	_GCONF	;volatile
 15020                           
 15021                           ;i2c_register.c: 131: GeneralDataSplit();
 15022  0C19  27C6  318C         	fcall	_GeneralDataSplit
 15023                           
 15024                           ;i2c_register.c: 132: GeneralDataSet();
 15025  0C1B  2760  318C         	fcall	_GeneralDataSet
 15026                           
 15027                           ;i2c_register.c: 133: break;
 15028  0C1D  2CCA               	goto	i1l4854
 15029  0C1E                     i1l4762:	
 15030                           
 15031                           ;i2c_register.c: 136: GP1CONF = data;
 15032  0C1E  084D               	movf	RegisterWrite@data,w
 15033  0C1F  00C8               	movwf	_GP1CONF	;volatile
 15034                           
 15035                           ;i2c_register.c: 137: Config_GP1();
 15036  0C20  24DD  318C         	fcall	_Config_GP1
 15037                           
 15038                           ;i2c_register.c: 138: break;
 15039  0C22  2CCA               	goto	i1l4854
 15040  0C23                     i1l4766:	
 15041                           
 15042                           ;i2c_register.c: 141: GP2CONF = data;
 15043  0C23  084D               	movf	RegisterWrite@data,w
 15044  0C24  00C7               	movwf	_GP2CONF	;volatile
 15045                           
 15046                           ;i2c_register.c: 142: Config_GP2();
 15047  0C25  266F  318C         	fcall	_Config_GP2
 15048                           
 15049                           ;i2c_register.c: 143: break;
 15050  0C27  2CCA               	goto	i1l4854
 15051  0C28                     i1l4770:	
 15052                           
 15053                           ;i2c_register.c: 146: GP3CONF = data;
 15054  0C28  084D               	movf	RegisterWrite@data,w
 15055  0C29  00C6               	movwf	_GP3CONF	;volatile
 15056                           
 15057                           ;i2c_register.c: 147: Config_GP3();
 15058  0C2A  26E7  318C         	fcall	_Config_GP3
 15059                           
 15060                           ;i2c_register.c: 148: break;
 15061  0C2C  2CCA               	goto	i1l4854
 15062  0C2D                     i1l4774:	
 15063                           
 15064                           ;i2c_register.c: 151: INTCONF.bval[1] = data;
 15065  0C2D  084D               	movf	RegisterWrite@data,w
 15066  0C2E  00B1               	movwf	_INTCONF+1	;volatile
 15067                           
 15068                           ;i2c_register.c: 152: break;
 15069  0C2F  2CCA               	goto	i1l4854
 15070  0C30                     i1l4776:	
 15071                           
 15072                           ;i2c_register.c: 155: INTCONF.bval[0] = data;
 15073  0C30  084D               	movf	RegisterWrite@data,w
 15074  0C31  00B0               	movwf	_INTCONF	;volatile
 15075                           
 15076                           ;i2c_register.c: 156: break;
 15077  0C32  2CCA               	goto	i1l4854
 15078  0C33                     i1l4778:	
 15079                           
 15080                           ;i2c_register.c: 160: CVAL.bval[3] = data;
 15081  0C33  084D               	movf	RegisterWrite@data,w
 15082  0C34  00AF               	movwf	_CVAL+3	;volatile
 15083                           
 15084                           ;i2c_register.c: 161: break;
 15085  0C35  2CCA               	goto	i1l4854
 15086  0C36                     i1l4780:	
 15087                           
 15088                           ;i2c_register.c: 163: CVAL.bval[2] = data;
 15089  0C36  084D               	movf	RegisterWrite@data,w
 15090  0C37  00AE               	movwf	_CVAL+2	;volatile
 15091                           
 15092                           ;i2c_register.c: 164: break;
 15093  0C38  2CCA               	goto	i1l4854
 15094  0C39                     i1l4782:	
 15095                           
 15096                           ;i2c_register.c: 166: CVAL.bval[1] = data;
 15097  0C39  084D               	movf	RegisterWrite@data,w
 15098  0C3A  00AD               	movwf	_CVAL+1	;volatile
 15099                           
 15100                           ;i2c_register.c: 167: break;
 15101  0C3B  2CCA               	goto	i1l4854
 15102  0C3C                     i1l4784:	
 15103                           
 15104                           ;i2c_register.c: 169: CVAL.bval[0] = data;
 15105  0C3C  084D               	movf	RegisterWrite@data,w
 15106  0C3D  00AC               	movwf	_CVAL	;volatile
 15107                           
 15108                           ;i2c_register.c: 170: break;
 15109  0C3E  2CCA               	goto	i1l4854
 15110  0C3F                     i1l4786:	
 15111                           
 15112                           ;i2c_register.c: 174: CMAX.bval[3] = data;
 15113  0C3F  084D               	movf	RegisterWrite@data,w
 15114  0C40  00AB               	movwf	_CMAX+3	;volatile
 15115                           
 15116                           ;i2c_register.c: 175: break;
 15117  0C41  2CCA               	goto	i1l4854
 15118  0C42                     i1l4788:	
 15119                           
 15120                           ;i2c_register.c: 177: CMAX.bval[2] = data;
 15121  0C42  084D               	movf	RegisterWrite@data,w
 15122  0C43  00AA               	movwf	_CMAX+2	;volatile
 15123                           
 15124                           ;i2c_register.c: 178: break;
 15125  0C44  2CCA               	goto	i1l4854
 15126  0C45                     i1l4790:	
 15127                           
 15128                           ;i2c_register.c: 180: CMAX.bval[1] = data;
 15129  0C45  084D               	movf	RegisterWrite@data,w
 15130  0C46  00A9               	movwf	_CMAX+1	;volatile
 15131                           
 15132                           ;i2c_register.c: 181: break;
 15133  0C47  2CCA               	goto	i1l4854
 15134  0C48                     i1l4792:	
 15135                           
 15136                           ;i2c_register.c: 183: CMAX.bval[0] = data;
 15137  0C48  084D               	movf	RegisterWrite@data,w
 15138  0C49  00A8               	movwf	_CMAX	;volatile
 15139                           
 15140                           ;i2c_register.c: 184: break;
 15141  0C4A  2CCA               	goto	i1l4854
 15142  0C4B                     i1l4794:	
 15143                           
 15144                           ;i2c_register.c: 188: CMIN.bval[3] = data;
 15145  0C4B  084D               	movf	RegisterWrite@data,w
 15146  0C4C  00A7               	movwf	_CMIN+3	;volatile
 15147                           
 15148                           ;i2c_register.c: 189: break;
 15149  0C4D  2CCA               	goto	i1l4854
 15150  0C4E                     i1l4796:	
 15151                           
 15152                           ;i2c_register.c: 191: CMIN.bval[2] = data;
 15153  0C4E  084D               	movf	RegisterWrite@data,w
 15154  0C4F  00A6               	movwf	_CMIN+2	;volatile
 15155                           
 15156                           ;i2c_register.c: 192: break;
 15157  0C50  2CCA               	goto	i1l4854
 15158  0C51                     i1l4798:	
 15159                           
 15160                           ;i2c_register.c: 194: CMIN.bval[1] = data;
 15161  0C51  084D               	movf	RegisterWrite@data,w
 15162  0C52  00A5               	movwf	_CMIN+1	;volatile
 15163                           
 15164                           ;i2c_register.c: 195: break;
 15165  0C53  2CCA               	goto	i1l4854
 15166  0C54                     i1l4800:	
 15167                           
 15168                           ;i2c_register.c: 197: CMIN.bval[0] = data;
 15169  0C54  084D               	movf	RegisterWrite@data,w
 15170  0C55  00A4               	movwf	_CMIN	;volatile
 15171                           
 15172                           ;i2c_register.c: 198: break;
 15173  0C56  2CCA               	goto	i1l4854
 15174  0C57                     i1l4802:	
 15175                           
 15176                           ;i2c_register.c: 202: ISTEP.bval[3] = data;
 15177  0C57  084D               	movf	RegisterWrite@data,w
 15178  0C58  00A3               	movwf	_ISTEP+3	;volatile
 15179                           
 15180                           ;i2c_register.c: 203: break;
 15181  0C59  2CCA               	goto	i1l4854
 15182  0C5A                     i1l4804:	
 15183                           
 15184                           ;i2c_register.c: 205: ISTEP.bval[2] = data;
 15185  0C5A  084D               	movf	RegisterWrite@data,w
 15186  0C5B  00A2               	movwf	_ISTEP+2	;volatile
 15187                           
 15188                           ;i2c_register.c: 206: break;
 15189  0C5C  2CCA               	goto	i1l4854
 15190  0C5D                     i1l4806:	
 15191                           
 15192                           ;i2c_register.c: 208: ISTEP.bval[1] = data;
 15193  0C5D  084D               	movf	RegisterWrite@data,w
 15194  0C5E  00A1               	movwf	_ISTEP+1	;volatile
 15195                           
 15196                           ;i2c_register.c: 209: break;
 15197  0C5F  2CCA               	goto	i1l4854
 15198  0C60                     i1l4808:	
 15199                           
 15200                           ;i2c_register.c: 211: ISTEP.bval[0] = data;
 15201  0C60  084D               	movf	RegisterWrite@data,w
 15202  0C61  00A0               	movwf	_ISTEP	;volatile
 15203                           
 15204                           ;i2c_register.c: 212: break;
 15205  0C62  2CCA               	goto	i1l4854
 15206  0C63                     i1l4810:	
 15207                           
 15208                           ;i2c_register.c: 216: GP1REG = data;
 15209  0C63  084D               	movf	RegisterWrite@data,w
 15210  0C64  00C3               	movwf	_GP1REG	;volatile
 15211                           
 15212                           ;i2c_register.c: 217: if (GP1REG > 100)
 15213  0C65  3065               	movlw	101
 15214  0C66  0243               	subwf	_GP1REG,w	;volatile
 15215  0C67  1C03               	skipc
 15216  0C68  2C6B               	goto	i1l4814
 15217                           
 15218                           ;i2c_register.c: 218: GP1REG = 100;
 15219  0C69  3064               	movlw	100
 15220  0C6A  00C3               	movwf	_GP1REG	;volatile
 15221  0C6B                     i1l4814:	
 15222                           
 15223                           ;i2c_register.c: 219: UpdateOut_GP1();
 15224  0C6B  3193  2384  318C   	fcall	_UpdateOut_GP1
 15225                           
 15226                           ;i2c_register.c: 220: break;
 15227  0C6E  2CCA               	goto	i1l4854
 15228  0C6F                     i1l4816:	
 15229                           
 15230                           ;i2c_register.c: 223: GP2REG = data;
 15231  0C6F  084D               	movf	RegisterWrite@data,w
 15232  0C70  00C2               	movwf	_GP2REG	;volatile
 15233                           
 15234                           ;i2c_register.c: 224: if (GP2REG > 100)
 15235  0C71  3065               	movlw	101
 15236  0C72  0242               	subwf	_GP2REG,w	;volatile
 15237  0C73  1C03               	skipc
 15238  0C74  2C77               	goto	i1l4820
 15239                           
 15240                           ;i2c_register.c: 225: GP2REG = 100;
 15241  0C75  3064               	movlw	100
 15242  0C76  00C2               	movwf	_GP2REG	;volatile
 15243  0C77                     i1l4820:	
 15244                           
 15245                           ;i2c_register.c: 226: UpdateOut_GP2();
 15246  0C77  3193  23A0  318C   	fcall	_UpdateOut_GP2
 15247                           
 15248                           ;i2c_register.c: 227: break;
 15249  0C7A  2CCA               	goto	i1l4854
 15250  0C7B                     i1l4822:	
 15251                           
 15252                           ;i2c_register.c: 230: GP3REG = data;
 15253  0C7B  084D               	movf	RegisterWrite@data,w
 15254  0C7C  00C1               	movwf	_GP3REG	;volatile
 15255                           
 15256                           ;i2c_register.c: 231: if (GP3REG > 100)
 15257  0C7D  3065               	movlw	101
 15258  0C7E  0241               	subwf	_GP3REG,w	;volatile
 15259  0C7F  1C03               	skipc
 15260  0C80  2C83               	goto	i1l4826
 15261                           
 15262                           ;i2c_register.c: 232: GP3REG = 100;
 15263  0C81  3064               	movlw	100
 15264  0C82  00C1               	movwf	_GP3REG	;volatile
 15265  0C83                     i1l4826:	
 15266                           
 15267                           ;i2c_register.c: 233: UpdateOut_GP3();
 15268  0C83  3193  23BC  318C   	fcall	_UpdateOut_GP3
 15269                           
 15270                           ;i2c_register.c: 234: break;
 15271  0C86  2CCA               	goto	i1l4854
 15272  0C87                     i1l4828:	
 15273                           
 15274                           ;i2c_register.c: 239: DPPERIOD = data;
 15275  0C87  084D               	movf	RegisterWrite@data,w
 15276  0C88  00C0               	movwf	_DPPERIOD	;volatile
 15277                           
 15278                           ;i2c_register.c: 240: DoublePush = ((uint16_t) DPPERIOD * 10);
 15279  0C89  0840               	movf	_DPPERIOD,w	;volatile
 15280  0C8A  00F0               	movwf	i1___wmul@multiplier
 15281  0C8B  300A               	movlw	10
 15282  0C8C  01F1               	clrf	i1___wmul@multiplier+1
 15283  0C8D  00F2               	movwf	i1___wmul@multiplicand
 15284  0C8E  01F3               	clrf	i1___wmul@multiplicand+1
 15285  0C8F  264E  318C         	fcall	i1___wmul
 15286  0C91  0871               	movf	?i1___wmul+1,w
 15287  0C92  0021               	movlb	1	; select bank1
 15288  0C93  00B4               	movwf	(_DoublePush+1)^(0+128)	;volatile
 15289  0C94  0870               	movf	?i1___wmul,w
 15290  0C95  00B3               	movwf	_DoublePush^(0+128)	;volatile
 15291                           
 15292                           ;i2c_register.c: 241: if (DoublePush > 5) {
 15293  0C96  3000               	movlw	0
 15294  0C97  0234               	subwf	(_DoublePush+1)^(0+128),w	;volatile
 15295  0C98  3006               	movlw	6
 15296  0C99  1903               	skipnz
 15297  0C9A  0233               	subwf	_DoublePush^(0+128),w	;volatile
 15298  0C9B  1C03               	skipc
 15299  0C9C  2CCA               	goto	i1l4854
 15300                           
 15301                           ;i2c_register.c: 242: DoublePush = DoublePush - 5;
 15302  0C9D  30FB               	movlw	251
 15303  0C9E  07B3               	addwf	_DoublePush^(0+128),f	;volatile
 15304  0C9F  30FF               	movlw	255
 15305  0CA0  3DB4               	addwfc	(_DoublePush+1)^(0+128),f	;volatile
 15306  0CA1  2CCA               	goto	i1l4854
 15307  0CA2                     i1l4836:	
 15308                           
 15309                           ;i2c_register.c: 247: FADEGP = data;
 15310  0CA2  084D               	movf	RegisterWrite@data,w
 15311  0CA3  00BF               	movwf	_FADEGP	;volatile
 15312                           
 15313                           ;i2c_register.c: 248: break;
 15314  0CA4  2CCA               	goto	i1l4854
 15315  0CA5                     i1l4838:	
 15316                           
 15317                           ;i2c_register.c: 251: GAMMAGP1 = data;
 15318  0CA5  084D               	movf	RegisterWrite@data,w
 15319  0CA6  00BE               	movwf	_GAMMAGP1	;volatile
 15320                           
 15321                           ;i2c_register.c: 252: if (GAMMAGP1 > 7) {
 15322  0CA7  3008               	movlw	8
 15323  0CA8  023E               	subwf	_GAMMAGP1,w	;volatile
 15324  0CA9  1C03               	skipc
 15325  0CAA  2CCA               	goto	i1l4854
 15326                           
 15327                           ;i2c_register.c: 253: GAMMAGP1 = 7;
 15328  0CAB  3007               	movlw	7
 15329  0CAC  00BE               	movwf	_GAMMAGP1	;volatile
 15330  0CAD  2CCA               	goto	i1l4854
 15331  0CAE                     i1l4842:	
 15332                           
 15333                           ;i2c_register.c: 257: GAMMAGP2 = data;
 15334  0CAE  084D               	movf	RegisterWrite@data,w
 15335  0CAF  00BD               	movwf	_GAMMAGP2	;volatile
 15336                           
 15337                           ;i2c_register.c: 258: if (GAMMAGP2 > 7) {
 15338  0CB0  3008               	movlw	8
 15339  0CB1  023D               	subwf	_GAMMAGP2,w	;volatile
 15340  0CB2  1C03               	skipc
 15341  0CB3  2CCA               	goto	i1l4854
 15342                           
 15343                           ;i2c_register.c: 259: GAMMAGP2 = 7;
 15344  0CB4  3007               	movlw	7
 15345  0CB5  00BD               	movwf	_GAMMAGP2	;volatile
 15346  0CB6  2CCA               	goto	i1l4854
 15347  0CB7                     i1l4846:	
 15348                           
 15349                           ;i2c_register.c: 263: GAMMAGP3 = data;
 15350  0CB7  084D               	movf	RegisterWrite@data,w
 15351  0CB8  00BC               	movwf	_GAMMAGP3	;volatile
 15352                           
 15353                           ;i2c_register.c: 264: if (GAMMAGP3 > 7) {
 15354  0CB9  3008               	movlw	8
 15355  0CBA  023C               	subwf	_GAMMAGP3,w	;volatile
 15356  0CBB  1C03               	skipc
 15357  0CBC  2CCA               	goto	i1l4854
 15358                           
 15359                           ;i2c_register.c: 265: GAMMAGP3 = 7;
 15360  0CBD  3007               	movlw	7
 15361  0CBE  00BC               	movwf	_GAMMAGP3	;volatile
 15362  0CBF  2CCA               	goto	i1l4854
 15363  0CC0                     i1l4852:	
 15364  0CC0  084E               	movf	RegisterWrite@add,w
 15365                           
 15366                           ; Switch size 1, requested type "speed"
 15367                           ; Number of cases is 30, Range of values is 0 to 33
 15368                           ; switch strategies available:
 15369                           ; Name         Instructions Cycles
 15370                           ; direct_byte           74     6 (fixed)
 15371                           ; simple_byte           91    46 (average)
 15372                           ; jumptable            260     6 (fixed)
 15373                           ;	Chosen strategy is direct_byte
 15374  0CC1  0084               	movwf	4
 15375  0CC2  3022               	movlw	34
 15376  0CC3  0204               	subwf	4,w
 15377  0CC4  1803               	skipnc
 15378  0CC5  2CCA               	goto	i1l4854
 15379  0CC6  3190               	movlp	high i1S7276
 15380  0CC7  3504               	lslf	4,w
 15381  0CC8  3E00               	addlw	low i1S7276
 15382  0CC9  0082               	movwf	2
 15383  0CCA                     i1l4854:	
 15384                           
 15385                           ;i2c_register.c: 271: if (add >= REG_EEPROMS) {
 15386  0CCA  3080               	movlw	128
 15387  0CCB  0020               	movlb	0	; select bank0
 15388  0CCC  024E               	subwf	RegisterWrite@add,w
 15389  0CCD  1C03               	skipc
 15390  0CCE  0008               	return
 15391                           
 15392                           ;i2c_register.c: 273: if (C_MBANK == 0) {
 15393  0CCF  083B               	movf	_C_MBANK,w	;volatile
 15394  0CD0  1D03               	btfss	3,2
 15395  0CD1  2CD8               	goto	i1l4860
 15396                           
 15397                           ;i2c_register.c: 274: eeprom_write((uint8_t) (add - REG_EEPROMS), (uint8_t) data);
 15398  0CD2  084D               	movf	RegisterWrite@data,w
 15399  0CD3  00F0               	movwf	eeprom_write@value
 15400  0CD4  084E               	movf	RegisterWrite@add,w
 15401  0CD5  3E80               	addlw	128
 15402  0CD6  3193  2BD8         	ljmp	_eeprom_write
 15403  0CD8                     i1l4860:	
 15404                           ;i2c_register.c: 276: } else {
 15405                           
 15406                           
 15407                           ;i2c_register.c: 277: eeprom_write((uint8_t) add, (uint8_t) data);
 15408  0CD8  084D               	movf	RegisterWrite@data,w
 15409  0CD9  00F0               	movwf	eeprom_write@value
 15410  0CDA  084E               	movf	RegisterWrite@add,w
 15411  0CDB  3193  2BD8         	ljmp	_eeprom_write
 15412  0CDD                     __end_of_RegisterWrite:	
 15413  0CDD                     __ptext66:	
 15414 ;; *************** function _Config_GP1 *****************
 15415 ;; Defined at:
 15416 ;;		line 138 in file "GPports.c"
 15417 ;; Parameters:    Size  Location     Type
 15418 ;;		None
 15419 ;; Auto vars:     Size  Location     Type
 15420 ;;		None
 15421 ;; Return value:  Size  Location     Type
 15422 ;;                  1    wreg      void 
 15423 ;; Registers used:
 15424 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15425 ;; Tracked objects:
 15426 ;;		On entry : 1F/0
 15427 ;;		On exit  : 1B/0
 15428 ;;		Unchanged: 0/0
 15429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15432 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15433 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15434 ;;Total ram usage:        2 bytes
 15435 ;; Hardware stack levels used:    1
 15436 ;; Hardware stack levels required when called:    2
 15437 ;; This function calls:
 15438 ;;		_PWM1_Initialize
 15439 ;;		i1_PWM_GP1
 15440 ;; This function is called by:
 15441 ;;		_RegisterWrite
 15442 ;; This function uses a non-reentrant model
 15443 ;;
 15444                           
 15445                           
 15446                           ;psect for function _Config_GP1
 15447  0CDD                     _Config_GP1:	
 15448                           
 15449                           ;GPports.c: 140: CCP1CON = 0;
 15450                           
 15451                           ;incstack = 0
 15452                           ; Regs used in _Config_GP1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15453  0CDD  0025               	movlb	5	; select bank5
 15454  0CDE  0193               	clrf	19	;volatile
 15455                           
 15456                           ;GPports.c: 141: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 15457  0CDF  3055               	movlw	85
 15458  0CE0  003C               	movlb	28	; select bank28
 15459  0CE1  008F               	movwf	15	;volsfr
 15460  0CE2  30AA               	movlw	170
 15461  0CE3  008F               	movwf	15	;volsfr
 15462  0CE4  100F               	bcf	15,0	;volsfr
 15463                           
 15464                           ;GPports.c: 142: RC2PPSbits.RC2PPS = 0x00;
 15465  0CE5  30E0               	movlw	-32
 15466  0CE6  003D               	movlb	29	; select bank29
 15467  0CE7  05A2               	andwf	34,f	;volatile
 15468                           
 15469                           ;GPports.c: 143: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 15470  0CE8  3055               	movlw	85
 15471  0CE9  003C               	movlb	28	; select bank28
 15472  0CEA  008F               	movwf	15	;volsfr
 15473  0CEB  30AA               	movlw	170
 15474  0CEC  008F               	movwf	15	;volsfr
 15475  0CED  140F               	bsf	15,0	;volsfr
 15476                           
 15477                           ;GPports.c: 145: switch (GP1CONF & 0x03) {
 15478  0CEE  2D1C               	goto	i1l4338
 15479  0CEF                     i1l954:	
 15480                           ;GPports.c: 147: do { ANSELCbits.ANSC2 = 0; } while(0);
 15481                           
 15482  0CEF  0023               	movlb	3	; select bank3
 15483  0CF0  110E               	bcf	14,2	;volatile
 15484                           
 15485                           ;GPports.c: 148: do { LATCbits.LATC2 = 1; } while(0);
 15486  0CF1  0022               	movlb	2	; select bank2
 15487  0CF2  150E               	bsf	14,2	;volatile
 15488                           
 15489                           ;GPports.c: 149: do { TRISCbits.TRISC2 = 0; } while(0);
 15490  0CF3  0021               	movlb	1	; select bank1
 15491  0CF4  110E               	bcf	14,2	;volatile
 15492                           
 15493                           ;GPports.c: 150: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 15494  0CF5  3055               	movlw	85
 15495  0CF6  003C               	movlb	28	; select bank28
 15496  0CF7  008F               	movwf	15	;volsfr
 15497  0CF8  30AA               	movlw	170
 15498  0CF9  008F               	movwf	15	;volsfr
 15499  0CFA  100F               	bcf	15,0	;volsfr
 15500                           
 15501                           ;GPports.c: 151: RC2PPSbits.RC2PPS = 0x0C;
 15502  0CFB  003D               	movlb	29	; select bank29
 15503  0CFC  0822               	movf	34,w	;volatile
 15504  0CFD  39E0               	andlw	-32
 15505  0CFE  380C               	iorlw	12
 15506  0CFF  00A2               	movwf	34	;volatile
 15507                           
 15508                           ;GPports.c: 152: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 15509  0D00  3055               	movlw	85
 15510  0D01  003C               	movlb	28	; select bank28
 15511  0D02  008F               	movwf	15	;volsfr
 15512  0D03  30AA               	movlw	170
 15513  0D04  008F               	movwf	15	;volsfr
 15514  0D05  140F               	bsf	15,0	;volsfr
 15515                           
 15516                           ;GPports.c: 153: PWM1_Initialize();
 15517  0D06  2663  318C         	fcall	_PWM1_Initialize
 15518                           
 15519                           ;GPports.c: 154: PWM_GP1(0);
 15520  0D08  3000               	movlw	0
 15521  0D09  25F7  318C         	fcall	i1_PWM_GP1
 15522                           
 15523                           ;GPports.c: 155: break;
 15524  0D0B  2D36               	goto	i1l4342
 15525  0D0C                     i1l962:	
 15526                           ;GPports.c: 158: do { ANSELCbits.ANSC2 = 0; } while(0);
 15527                           
 15528  0D0C  0023               	movlb	3	; select bank3
 15529  0D0D  110E               	bcf	14,2	;volatile
 15530                           
 15531                           ;GPports.c: 159: do { TRISCbits.TRISC2 = 0; } while(0);
 15532  0D0E  0021               	movlb	1	; select bank1
 15533  0D0F  110E               	bcf	14,2	;volatile
 15534                           
 15535                           ;GPports.c: 160: do { ODCONCbits.ODCC2 = 0; } while(0);
 15536  0D10  0025               	movlb	5	; select bank5
 15537  0D11  110E               	bcf	14,2	;volatile
 15538  0D12  2D36               	goto	i1l4342
 15539  0D13                     i1l969:	
 15540                           ;GPports.c: 164: do { TRISCbits.TRISC2 = 1; } while(0);
 15541                           
 15542  0D13  0021               	movlb	1	; select bank1
 15543  0D14  150E               	bsf	14,2	;volatile
 15544                           
 15545                           ;GPports.c: 165: do { ANSELCbits.ANSC2 = 1; } while(0);
 15546  0D15  0023               	movlb	3	; select bank3
 15547  0D16  2D1A               	goto	L10
 15548  0D17                     i1l974:	
 15549                           ;GPports.c: 168: do { ANSELCbits.ANSC2 = 0; } while(0);
 15550                           
 15551  0D17  0023               	movlb	3	; select bank3
 15552  0D18  110E               	bcf	14,2	;volatile
 15553                           
 15554                           ;GPports.c: 169: do { TRISCbits.TRISC2 = 1; } while(0);
 15555  0D19  0021               	movlb	1	; select bank1
 15556  0D1A                     L10:	
 15557  0D1A  150E               	bsf	14,2	;volatile
 15558  0D1B  2D36               	goto	i1l4342
 15559  0D1C                     i1l4338:	
 15560  0D1C  0020               	movlb	0	; select bank0
 15561  0D1D  0848               	movf	_GP1CONF,w	;volatile
 15562  0D1E  3903               	andlw	3
 15563  0D1F  00CB               	movwf	??_Config_GP1
 15564  0D20  01CC               	clrf	??_Config_GP1+1
 15565                           
 15566                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15567                           ; Switch size 1, requested type "speed"
 15568                           ; Number of cases is 1, Range of values is 0 to 0
 15569                           ; switch strategies available:
 15570                           ; Name         Instructions Cycles
 15571                           ; simple_byte            4     3 (average)
 15572                           ; direct_byte            8     6 (fixed)
 15573                           ; jumptable            260     6 (fixed)
 15574                           ;	Chosen strategy is simple_byte
 15575  0D21  084C               	movf	??_Config_GP1+1,w
 15576  0D22  3A00               	xorlw	0	; case 0
 15577  0D23  1903               	skipnz
 15578  0D24  2D26               	goto	i1l7290
 15579  0D25  2D36               	goto	i1l4342
 15580  0D26                     i1l7290:	
 15581                           
 15582                           ; Switch size 1, requested type "speed"
 15583                           ; Number of cases is 4, Range of values is 0 to 3
 15584                           ; switch strategies available:
 15585                           ; Name         Instructions Cycles
 15586                           ; direct_byte           14     6 (fixed)
 15587                           ; simple_byte           13     7 (average)
 15588                           ; jumptable            260     6 (fixed)
 15589                           ;	Chosen strategy is direct_byte
 15590  0D26  084B               	movf	??_Config_GP1,w
 15591  0D27  0084               	movwf	4
 15592  0D28  3004               	movlw	4
 15593  0D29  0204               	subwf	4,w
 15594  0D2A  1803               	skipnc
 15595  0D2B  2D36               	goto	i1l4342
 15596  0D2C  3190               	movlp	high i1S7292
 15597  0D2D  3504               	lslf	4,w
 15598  0D2E  3E6C               	addlw	low i1S7292
 15599  0D2F  0082               	movwf	2
 15600  0D30                     i1l980:	
 15601                           ;GPports.c: 175: do { WPUCbits.WPUC2 = 0; } while(0);
 15602                           
 15603  0D30  0024               	movlb	4	; select bank4
 15604  0D31  110E               	bcf	14,2	;volatile
 15605  0D32  0008               	return
 15606  0D33                     i1l984:	
 15607                           ;GPports.c: 178: do { WPUCbits.WPUC2 = 1; } while(0);
 15608                           
 15609  0D33  0024               	movlb	4	; select bank4
 15610  0D34  150E               	bsf	14,2	;volatile
 15611  0D35  0008               	return
 15612  0D36                     i1l4342:	
 15613  0D36  0020               	movlb	0	; select bank0
 15614  0D37  0848               	movf	_GP1CONF,w	;volatile
 15615  0D38  3904               	andlw	4
 15616  0D39  00CB               	movwf	??_Config_GP1
 15617  0D3A  01CC               	clrf	??_Config_GP1+1
 15618                           
 15619                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15620                           ; Switch size 1, requested type "speed"
 15621                           ; Number of cases is 1, Range of values is 0 to 0
 15622                           ; switch strategies available:
 15623                           ; Name         Instructions Cycles
 15624                           ; simple_byte            4     3 (average)
 15625                           ; direct_byte            8     6 (fixed)
 15626                           ; jumptable            260     6 (fixed)
 15627                           ;	Chosen strategy is simple_byte
 15628  0D3B  084C               	movf	??_Config_GP1+1,w
 15629  0D3C  3A00               	xorlw	0	; case 0
 15630  0D3D  1903               	skipnz
 15631  0D3E  2D40               	goto	i1l7294
 15632  0D3F  2D48               	goto	i1l986
 15633  0D40                     i1l7294:	
 15634                           
 15635                           ; Switch size 1, requested type "speed"
 15636                           ; Number of cases is 2, Range of values is 0 to 4
 15637                           ; switch strategies available:
 15638                           ; Name         Instructions Cycles
 15639                           ; simple_byte            7     4 (average)
 15640                           ; direct_byte           16     6 (fixed)
 15641                           ; jumptable            260     6 (fixed)
 15642                           ;	Chosen strategy is simple_byte
 15643  0D40  084B               	movf	??_Config_GP1,w
 15644  0D41  3A00               	xorlw	0	; case 0
 15645  0D42  1903               	skipnz
 15646  0D43  2D30               	goto	i1l980
 15647  0D44  3A04               	xorlw	4	; case 4
 15648  0D45  1903               	skipnz
 15649  0D46  2D33               	goto	i1l984
 15650  0D47  2D48               	goto	i1l986
 15651  0D48                     i1l986:	
 15652  0D48  0008               	return
 15653  0D49                     __end_of_Config_GP1:	
 15654  0D49                     __ptext61:	
 15655 ;; *************** function i1_PWM_GP3 *****************
 15656 ;; Defined at:
 15657 ;;		line 70 in file "PWM.c"
 15658 ;; Parameters:    Size  Location     Type
 15659 ;;  duty            1    wreg     unsigned char 
 15660 ;; Auto vars:     Size  Location     Type
 15661 ;;  duty            1    0[BANK0 ] unsigned char 
 15662 ;; Return value:  Size  Location     Type
 15663 ;;                  1    wreg      void 
 15664 ;; Registers used:
 15665 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15666 ;; Tracked objects:
 15667 ;;		On entry : 1A/0
 15668 ;;		On exit  : 18/0
 15669 ;;		Unchanged: 0/0
 15670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15672 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15673 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15674 ;;      Totals:         8       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15675 ;;Total ram usage:        9 bytes
 15676 ;; Hardware stack levels used:    1
 15677 ;; Hardware stack levels required when called:    1
 15678 ;; This function calls:
 15679 ;;		i1___wmul
 15680 ;; This function is called by:
 15681 ;;		_Config_GP3
 15682 ;;		_UpdateOut_GP3
 15683 ;; This function uses a non-reentrant model
 15684 ;;
 15685                           
 15686                           
 15687                           ;psect for function i1_PWM_GP3
 15688  0D49                     i1_PWM_GP3:	
 15689                           
 15690                           ;incstack = 0
 15691                           ; Regs used in i1_PWM_GP3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15692                           ;i1PWM_GP3@duty stored from wreg
 15693  0D49  0020               	movlb	0	; select bank0
 15694  0D4A  00CA               	movwf	i1PWM_GP3@duty
 15695                           
 15696                           ;PWM.c: 72: if (duty == 0) {
 15697  0D4B  084A               	movf	i1PWM_GP3@duty,w
 15698  0D4C  1D03               	btfss	3,2
 15699  0D4D  2D51               	goto	i1l1342
 15700                           
 15701                           ;PWM.c: 73: do { TRISCbits.TRISC0 = 1; } while(0);
 15702  0D4E  0021               	movlb	1	; select bank1
 15703  0D4F  140E               	bsf	14,0	;volatile
 15704  0D50  0008               	return
 15705  0D51                     i1l1342:	
 15706                           ;PWM.c: 76: do { TRISCbits.TRISC0 = 0; } while(0);
 15707                           
 15708  0D51  0021               	movlb	1	; select bank1
 15709  0D52  100E               	bcf	14,0	;volatile
 15710                           
 15711                           ;PWM.c: 77: };PWM.c: 79: if (duty > 100)
 15712  0D53  3065               	movlw	101
 15713  0D54  0020               	movlb	0	; select bank0
 15714  0D55  024A               	subwf	i1PWM_GP3@duty,w
 15715  0D56  1C03               	skipc
 15716  0D57  2D5A               	goto	i1l4232
 15717                           
 15718                           ;PWM.c: 80: duty = 100;
 15719  0D58  3064               	movlw	100
 15720  0D59  00CA               	movwf	i1PWM_GP3@duty
 15721  0D5A                     i1l4232:	
 15722                           
 15723                           ;PWM.c: 82: CCPR3H = gamma_table[GAMMAGP3][(uint8_t)(duty - 1)] >> 8;
 15724  0D5A  084A               	movf	i1PWM_GP3@duty,w
 15725  0D5B  3EFF               	addlw	255
 15726  0D5C  00F6               	movwf	??i1_PWM_GP3
 15727  0D5D  01F7               	clrf	??i1_PWM_GP3+1
 15728  0D5E  35F6               	lslf	??i1_PWM_GP3,f
 15729  0D5F  0DF7               	rlf	??i1_PWM_GP3+1,f
 15730  0D60  083C               	movf	_GAMMAGP3,w	;volatile
 15731  0D61  00F0               	movwf	i1___wmul@multiplier
 15732  0D62  30C8               	movlw	200
 15733  0D63  01F1               	clrf	i1___wmul@multiplier+1
 15734  0D64  00F2               	movwf	i1___wmul@multiplicand
 15735  0D65  01F3               	clrf	i1___wmul@multiplicand+1
 15736  0D66  264E  318C         	fcall	i1___wmul
 15737  0D68  301E               	movlw	low (_gamma_table| (0+32768))
 15738  0D69  00F8               	movwf	??i1_PWM_GP3+2
 15739  0D6A  3084               	movlw	high (_gamma_table| (0+32768))
 15740  0D6B  00F9               	movwf	??i1_PWM_GP3+3
 15741  0D6C  0870               	movf	?i1___wmul,w
 15742  0D6D  0778               	addwf	??i1_PWM_GP3+2,w
 15743  0D6E  00FA               	movwf	??i1_PWM_GP3+4
 15744  0D6F  0871               	movf	?i1___wmul+1,w
 15745  0D70  3D79               	addwfc	??i1_PWM_GP3+3,w
 15746  0D71  00FB               	movwf	??i1_PWM_GP3+5
 15747  0D72  087A               	movf	??i1_PWM_GP3+4,w
 15748  0D73  0776               	addwf	??i1_PWM_GP3,w
 15749  0D74  0084               	movwf	4
 15750  0D75  087B               	movf	??i1_PWM_GP3+5,w
 15751  0D76  3D77               	addwfc	??i1_PWM_GP3+1,w
 15752  0D77  0085               	movwf	5
 15753  0D78  3F00               	moviw [0]fsr0
 15754  0D79  00FC               	movwf	??i1_PWM_GP3+6
 15755  0D7A  3F01               	moviw [1]fsr0
 15756  0D7B  00FD               	movwf	??i1_PWM_GP3+7
 15757  0D7C  0026               	movlb	6	; select bank6
 15758  0D7D  0092               	movwf	18	;volatile
 15759                           
 15760                           ;PWM.c: 83: CCPR3L = gamma_table[GAMMAGP3][(uint8_t)(duty - 1)];
 15761  0D7E  0020               	movlb	0	; select bank0
 15762  0D7F  084A               	movf	i1PWM_GP3@duty,w
 15763  0D80  3EFF               	addlw	255
 15764  0D81  00F6               	movwf	??i1_PWM_GP3
 15765  0D82  01F7               	clrf	??i1_PWM_GP3+1
 15766  0D83  35F6               	lslf	??i1_PWM_GP3,f
 15767  0D84  0DF7               	rlf	??i1_PWM_GP3+1,f
 15768  0D85  083C               	movf	_GAMMAGP3,w	;volatile
 15769  0D86  00F0               	movwf	i1___wmul@multiplier
 15770  0D87  30C8               	movlw	200
 15771  0D88  01F1               	clrf	i1___wmul@multiplier+1
 15772  0D89  00F2               	movwf	i1___wmul@multiplicand
 15773  0D8A  01F3               	clrf	i1___wmul@multiplicand+1
 15774  0D8B  264E               	fcall	i1___wmul
 15775  0D8C  301E               	movlw	low (_gamma_table| (0+32768))
 15776  0D8D  00F8               	movwf	??i1_PWM_GP3+2
 15777  0D8E  3084               	movlw	high (_gamma_table| (0+32768))
 15778  0D8F  00F9               	movwf	??i1_PWM_GP3+3
 15779  0D90  0870               	movf	?i1___wmul,w
 15780  0D91  0778               	addwf	??i1_PWM_GP3+2,w
 15781  0D92  00FA               	movwf	??i1_PWM_GP3+4
 15782  0D93  0871               	movf	?i1___wmul+1,w
 15783  0D94  3D79               	addwfc	??i1_PWM_GP3+3,w
 15784  0D95  00FB               	movwf	??i1_PWM_GP3+5
 15785  0D96  087A               	movf	??i1_PWM_GP3+4,w
 15786  0D97  0776               	addwf	??i1_PWM_GP3,w
 15787  0D98  0084               	movwf	4
 15788  0D99  087B               	movf	??i1_PWM_GP3+5,w
 15789  0D9A  3D77               	addwfc	??i1_PWM_GP3+1,w
 15790  0D9B  0085               	movwf	5
 15791  0D9C  0800               	movf	0,w	;code access
 15792  0D9D  0026               	movlb	6	; select bank6
 15793  0D9E  0091               	movwf	17	;volatile
 15794  0D9F  0008               	return
 15795  0DA0                     __end_ofi1_PWM_GP3:	
 15796  0DA0                     __ptext64:	
 15797 ;; *************** function i1_PWM_GP2 *****************
 15798 ;; Defined at:
 15799 ;;		line 52 in file "PWM.c"
 15800 ;; Parameters:    Size  Location     Type
 15801 ;;  duty            1    wreg     unsigned char 
 15802 ;; Auto vars:     Size  Location     Type
 15803 ;;  duty            1    0[BANK0 ] unsigned char 
 15804 ;; Return value:  Size  Location     Type
 15805 ;;                  1    wreg      void 
 15806 ;; Registers used:
 15807 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15808 ;; Tracked objects:
 15809 ;;		On entry : 1A/0
 15810 ;;		On exit  : 1B/1
 15811 ;;		Unchanged: 0/0
 15812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15814 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15815 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15816 ;;      Totals:         8       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15817 ;;Total ram usage:        9 bytes
 15818 ;; Hardware stack levels used:    1
 15819 ;; Hardware stack levels required when called:    1
 15820 ;; This function calls:
 15821 ;;		i1___wmul
 15822 ;; This function is called by:
 15823 ;;		_Config_GP2
 15824 ;;		_UpdateOut_GP2
 15825 ;; This function uses a non-reentrant model
 15826 ;;
 15827                           
 15828                           
 15829                           ;psect for function i1_PWM_GP2
 15830  0DA0                     i1_PWM_GP2:	
 15831                           
 15832                           ;incstack = 0
 15833                           ; Regs used in i1_PWM_GP2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15834                           ;i1PWM_GP2@duty stored from wreg
 15835  0DA0  0020               	movlb	0	; select bank0
 15836  0DA1  00CA               	movwf	i1PWM_GP2@duty
 15837                           
 15838                           ;PWM.c: 54: if (duty == 0) {
 15839  0DA2  084A               	movf	i1PWM_GP2@duty,w
 15840  0DA3  1D03               	btfss	3,2
 15841  0DA4  2DA8               	goto	i1l1332
 15842                           
 15843                           ;PWM.c: 55: do { TRISCbits.TRISC1 = 1; } while(0);
 15844  0DA5  0021               	movlb	1	; select bank1
 15845  0DA6  148E               	bsf	14,1	;volatile
 15846  0DA7  0008               	return
 15847  0DA8                     i1l1332:	
 15848                           ;PWM.c: 58: do { TRISCbits.TRISC1 = 0; } while(0);
 15849                           
 15850  0DA8  0021               	movlb	1	; select bank1
 15851  0DA9  108E               	bcf	14,1	;volatile
 15852                           
 15853                           ;PWM.c: 59: };PWM.c: 61: if (duty > 100)
 15854  0DAA  3065               	movlw	101
 15855  0DAB  0020               	movlb	0	; select bank0
 15856  0DAC  024A               	subwf	i1PWM_GP2@duty,w
 15857  0DAD  1C03               	skipc
 15858  0DAE  2DB1               	goto	i1l4220
 15859                           
 15860                           ;PWM.c: 62: duty = 100;
 15861  0DAF  3064               	movlw	100
 15862  0DB0  00CA               	movwf	i1PWM_GP2@duty
 15863  0DB1                     i1l4220:	
 15864                           
 15865                           ;PWM.c: 63: CCPR2H = gamma_table[GAMMAGP2][(uint8_t)(duty - 1)] >> 8;
 15866  0DB1  084A               	movf	i1PWM_GP2@duty,w
 15867  0DB2  3EFF               	addlw	255
 15868  0DB3  00F6               	movwf	??i1_PWM_GP2
 15869  0DB4  01F7               	clrf	??i1_PWM_GP2+1
 15870  0DB5  35F6               	lslf	??i1_PWM_GP2,f
 15871  0DB6  0DF7               	rlf	??i1_PWM_GP2+1,f
 15872  0DB7  083D               	movf	_GAMMAGP2,w	;volatile
 15873  0DB8  00F0               	movwf	i1___wmul@multiplier
 15874  0DB9  30C8               	movlw	200
 15875  0DBA  01F1               	clrf	i1___wmul@multiplier+1
 15876  0DBB  00F2               	movwf	i1___wmul@multiplicand
 15877  0DBC  01F3               	clrf	i1___wmul@multiplicand+1
 15878  0DBD  264E  318C         	fcall	i1___wmul
 15879  0DBF  301E               	movlw	low (_gamma_table| (0+32768))
 15880  0DC0  00F8               	movwf	??i1_PWM_GP2+2
 15881  0DC1  3084               	movlw	high (_gamma_table| (0+32768))
 15882  0DC2  00F9               	movwf	??i1_PWM_GP2+3
 15883  0DC3  0870               	movf	?i1___wmul,w
 15884  0DC4  0778               	addwf	??i1_PWM_GP2+2,w
 15885  0DC5  00FA               	movwf	??i1_PWM_GP2+4
 15886  0DC6  0871               	movf	?i1___wmul+1,w
 15887  0DC7  3D79               	addwfc	??i1_PWM_GP2+3,w
 15888  0DC8  00FB               	movwf	??i1_PWM_GP2+5
 15889  0DC9  087A               	movf	??i1_PWM_GP2+4,w
 15890  0DCA  0776               	addwf	??i1_PWM_GP2,w
 15891  0DCB  0084               	movwf	4
 15892  0DCC  087B               	movf	??i1_PWM_GP2+5,w
 15893  0DCD  3D77               	addwfc	??i1_PWM_GP2+1,w
 15894  0DCE  0085               	movwf	5
 15895  0DCF  3F00               	moviw [0]fsr0
 15896  0DD0  00FC               	movwf	??i1_PWM_GP2+6
 15897  0DD1  3F01               	moviw [1]fsr0
 15898  0DD2  00FD               	movwf	??i1_PWM_GP2+7
 15899  0DD3  0025               	movlb	5	; select bank5
 15900  0DD4  0096               	movwf	22	;volatile
 15901                           
 15902                           ;PWM.c: 64: CCPR2L = gamma_table[GAMMAGP2][(uint8_t)(duty - 1)];
 15903  0DD5  0020               	movlb	0	; select bank0
 15904  0DD6  084A               	movf	i1PWM_GP2@duty,w
 15905  0DD7  3EFF               	addlw	255
 15906  0DD8  00F6               	movwf	??i1_PWM_GP2
 15907  0DD9  01F7               	clrf	??i1_PWM_GP2+1
 15908  0DDA  35F6               	lslf	??i1_PWM_GP2,f
 15909  0DDB  0DF7               	rlf	??i1_PWM_GP2+1,f
 15910  0DDC  083D               	movf	_GAMMAGP2,w	;volatile
 15911  0DDD  00F0               	movwf	i1___wmul@multiplier
 15912  0DDE  30C8               	movlw	200
 15913  0DDF  01F1               	clrf	i1___wmul@multiplier+1
 15914  0DE0  00F2               	movwf	i1___wmul@multiplicand
 15915  0DE1  01F3               	clrf	i1___wmul@multiplicand+1
 15916  0DE2  264E               	fcall	i1___wmul
 15917  0DE3  301E               	movlw	low (_gamma_table| (0+32768))
 15918  0DE4  00F8               	movwf	??i1_PWM_GP2+2
 15919  0DE5  3084               	movlw	high (_gamma_table| (0+32768))
 15920  0DE6  00F9               	movwf	??i1_PWM_GP2+3
 15921  0DE7  0870               	movf	?i1___wmul,w
 15922  0DE8  0778               	addwf	??i1_PWM_GP2+2,w
 15923  0DE9  00FA               	movwf	??i1_PWM_GP2+4
 15924  0DEA  0871               	movf	?i1___wmul+1,w
 15925  0DEB  3D79               	addwfc	??i1_PWM_GP2+3,w
 15926  0DEC  00FB               	movwf	??i1_PWM_GP2+5
 15927  0DED  087A               	movf	??i1_PWM_GP2+4,w
 15928  0DEE  0776               	addwf	??i1_PWM_GP2,w
 15929  0DEF  0084               	movwf	4
 15930  0DF0  087B               	movf	??i1_PWM_GP2+5,w
 15931  0DF1  3D77               	addwfc	??i1_PWM_GP2+1,w
 15932  0DF2  0085               	movwf	5
 15933  0DF3  0800               	movf	0,w	;code access
 15934  0DF4  0025               	movlb	5	; select bank5
 15935  0DF5  0095               	movwf	21	;volatile
 15936  0DF6  0008               	return
 15937  0DF7                     __end_ofi1_PWM_GP2:	
 15938  0DF7                     __ptext67:	
 15939 ;; *************** function i1_PWM_GP1 *****************
 15940 ;; Defined at:
 15941 ;;		line 31 in file "PWM.c"
 15942 ;; Parameters:    Size  Location     Type
 15943 ;;  duty            1    wreg     unsigned char 
 15944 ;; Auto vars:     Size  Location     Type
 15945 ;;  duty            1    0[BANK0 ] unsigned char 
 15946 ;; Return value:  Size  Location     Type
 15947 ;;                  1    wreg      void 
 15948 ;; Registers used:
 15949 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15950 ;; Tracked objects:
 15951 ;;		On entry : 1A/0
 15952 ;;		On exit  : 1B/1
 15953 ;;		Unchanged: 0/0
 15954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15956 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15957 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15958 ;;      Totals:         8       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15959 ;;Total ram usage:        9 bytes
 15960 ;; Hardware stack levels used:    1
 15961 ;; Hardware stack levels required when called:    1
 15962 ;; This function calls:
 15963 ;;		i1___wmul
 15964 ;; This function is called by:
 15965 ;;		_Config_GP1
 15966 ;;		_UpdateOut_GP1
 15967 ;; This function uses a non-reentrant model
 15968 ;;
 15969                           
 15970                           
 15971                           ;psect for function i1_PWM_GP1
 15972  0DF7                     i1_PWM_GP1:	
 15973                           
 15974                           ;incstack = 0
 15975                           ; Regs used in i1_PWM_GP1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15976                           ;i1PWM_GP1@duty stored from wreg
 15977  0DF7  0020               	movlb	0	; select bank0
 15978  0DF8  00CA               	movwf	i1PWM_GP1@duty
 15979                           
 15980                           ;PWM.c: 33: if (duty == 0) {
 15981  0DF9  084A               	movf	i1PWM_GP1@duty,w
 15982  0DFA  1D03               	btfss	3,2
 15983  0DFB  2DFF               	goto	i1l1322
 15984                           
 15985                           ;PWM.c: 34: do { TRISCbits.TRISC2 = 1; } while(0);
 15986  0DFC  0021               	movlb	1	; select bank1
 15987  0DFD  150E               	bsf	14,2	;volatile
 15988  0DFE  0008               	return
 15989  0DFF                     i1l1322:	
 15990                           ;PWM.c: 37: do { TRISCbits.TRISC2 = 0; } while(0);
 15991                           
 15992  0DFF  0021               	movlb	1	; select bank1
 15993  0E00  110E               	bcf	14,2	;volatile
 15994                           
 15995                           ;PWM.c: 38: };PWM.c: 40: if (duty > 100)
 15996  0E01  3065               	movlw	101
 15997  0E02  0020               	movlb	0	; select bank0
 15998  0E03  024A               	subwf	i1PWM_GP1@duty,w
 15999  0E04  1C03               	skipc
 16000  0E05  2E08               	goto	i1l4208
 16001                           
 16002                           ;PWM.c: 41: duty = 100;
 16003  0E06  3064               	movlw	100
 16004  0E07  00CA               	movwf	i1PWM_GP1@duty
 16005  0E08                     i1l4208:	
 16006                           
 16007                           ;PWM.c: 43: CCPR1H = gamma_table[GAMMAGP1][(uint8_t)(duty - 1)] >> 8;
 16008  0E08  084A               	movf	i1PWM_GP1@duty,w
 16009  0E09  3EFF               	addlw	255
 16010  0E0A  00F6               	movwf	??i1_PWM_GP1
 16011  0E0B  01F7               	clrf	??i1_PWM_GP1+1
 16012  0E0C  35F6               	lslf	??i1_PWM_GP1,f
 16013  0E0D  0DF7               	rlf	??i1_PWM_GP1+1,f
 16014  0E0E  083E               	movf	_GAMMAGP1,w	;volatile
 16015  0E0F  00F0               	movwf	i1___wmul@multiplier
 16016  0E10  30C8               	movlw	200
 16017  0E11  01F1               	clrf	i1___wmul@multiplier+1
 16018  0E12  00F2               	movwf	i1___wmul@multiplicand
 16019  0E13  01F3               	clrf	i1___wmul@multiplicand+1
 16020  0E14  264E  318C         	fcall	i1___wmul
 16021  0E16  301E               	movlw	low (_gamma_table| (0+32768))
 16022  0E17  00F8               	movwf	??i1_PWM_GP1+2
 16023  0E18  3084               	movlw	high (_gamma_table| (0+32768))
 16024  0E19  00F9               	movwf	??i1_PWM_GP1+3
 16025  0E1A  0870               	movf	?i1___wmul,w
 16026  0E1B  0778               	addwf	??i1_PWM_GP1+2,w
 16027  0E1C  00FA               	movwf	??i1_PWM_GP1+4
 16028  0E1D  0871               	movf	?i1___wmul+1,w
 16029  0E1E  3D79               	addwfc	??i1_PWM_GP1+3,w
 16030  0E1F  00FB               	movwf	??i1_PWM_GP1+5
 16031  0E20  087A               	movf	??i1_PWM_GP1+4,w
 16032  0E21  0776               	addwf	??i1_PWM_GP1,w
 16033  0E22  0084               	movwf	4
 16034  0E23  087B               	movf	??i1_PWM_GP1+5,w
 16035  0E24  3D77               	addwfc	??i1_PWM_GP1+1,w
 16036  0E25  0085               	movwf	5
 16037  0E26  3F00               	moviw [0]fsr0
 16038  0E27  00FC               	movwf	??i1_PWM_GP1+6
 16039  0E28  3F01               	moviw [1]fsr0
 16040  0E29  00FD               	movwf	??i1_PWM_GP1+7
 16041  0E2A  0025               	movlb	5	; select bank5
 16042  0E2B  0092               	movwf	18	;volatile
 16043                           
 16044                           ;PWM.c: 44: CCPR1L = gamma_table[GAMMAGP1][(uint8_t)(duty - 1)];
 16045  0E2C  0020               	movlb	0	; select bank0
 16046  0E2D  084A               	movf	i1PWM_GP1@duty,w
 16047  0E2E  3EFF               	addlw	255
 16048  0E2F  00F6               	movwf	??i1_PWM_GP1
 16049  0E30  01F7               	clrf	??i1_PWM_GP1+1
 16050  0E31  35F6               	lslf	??i1_PWM_GP1,f
 16051  0E32  0DF7               	rlf	??i1_PWM_GP1+1,f
 16052  0E33  083E               	movf	_GAMMAGP1,w	;volatile
 16053  0E34  00F0               	movwf	i1___wmul@multiplier
 16054  0E35  30C8               	movlw	200
 16055  0E36  01F1               	clrf	i1___wmul@multiplier+1
 16056  0E37  00F2               	movwf	i1___wmul@multiplicand
 16057  0E38  01F3               	clrf	i1___wmul@multiplicand+1
 16058  0E39  264E               	fcall	i1___wmul
 16059  0E3A  301E               	movlw	low (_gamma_table| (0+32768))
 16060  0E3B  00F8               	movwf	??i1_PWM_GP1+2
 16061  0E3C  3084               	movlw	high (_gamma_table| (0+32768))
 16062  0E3D  00F9               	movwf	??i1_PWM_GP1+3
 16063  0E3E  0870               	movf	?i1___wmul,w
 16064  0E3F  0778               	addwf	??i1_PWM_GP1+2,w
 16065  0E40  00FA               	movwf	??i1_PWM_GP1+4
 16066  0E41  0871               	movf	?i1___wmul+1,w
 16067  0E42  3D79               	addwfc	??i1_PWM_GP1+3,w
 16068  0E43  00FB               	movwf	??i1_PWM_GP1+5
 16069  0E44  087A               	movf	??i1_PWM_GP1+4,w
 16070  0E45  0776               	addwf	??i1_PWM_GP1,w
 16071  0E46  0084               	movwf	4
 16072  0E47  087B               	movf	??i1_PWM_GP1+5,w
 16073  0E48  3D77               	addwfc	??i1_PWM_GP1+1,w
 16074  0E49  0085               	movwf	5
 16075  0E4A  0800               	movf	0,w	;code access
 16076  0E4B  0025               	movlb	5	; select bank5
 16077  0E4C  0091               	movwf	17	;volatile
 16078  0E4D  0008               	return
 16079  0E4E                     __end_ofi1_PWM_GP1:	
 16080  0E4E                     __ptext68:	
 16081 ;; *************** function i1___wmul *****************
 16082 ;; Defined at:
 16083 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
 16084 ;; Parameters:    Size  Location     Type
 16085 ;;  multiplier      2    0[COMMON] unsigned int 
 16086 ;;  multiplicand    2    2[COMMON] unsigned int 
 16087 ;; Auto vars:     Size  Location     Type
 16088 ;;  __wmul          2    4[COMMON] unsigned int 
 16089 ;; Return value:  Size  Location     Type
 16090 ;;                  2    0[COMMON] unsigned int 
 16091 ;; Registers used:
 16092 ;;		wreg, status,2, status,0
 16093 ;; Tracked objects:
 16094 ;;		On entry : 1F/0
 16095 ;;		On exit  : 1F/0
 16096 ;;		Unchanged: 1F/0
 16097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16098 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16099 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16101 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16102 ;;Total ram usage:        6 bytes
 16103 ;; Hardware stack levels used:    1
 16104 ;; This function calls:
 16105 ;;		Nothing
 16106 ;; This function is called by:
 16107 ;;		_RegisterWrite
 16108 ;;		i1_PWM_GP1
 16109 ;;		i1_PWM_GP2
 16110 ;;		i1_PWM_GP3
 16111 ;; This function uses a non-reentrant model
 16112 ;;
 16113                           
 16114                           
 16115                           ;psect for function i1___wmul
 16116  0E4E                     i1___wmul:	
 16117                           
 16118                           ;incstack = 0
 16119                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
 16120  0E4E  01F4               	clrf	i1___wmul@product
 16121  0E4F  01F5               	clrf	i1___wmul@product+1
 16122  0E50                     i1l4142:	
 16123  0E50  1C70               	btfss	i1___wmul@multiplier,0
 16124  0E51  2E56               	goto	i1l4146
 16125  0E52  0872               	movf	i1___wmul@multiplicand,w
 16126  0E53  07F4               	addwf	i1___wmul@product,f
 16127  0E54  0873               	movf	i1___wmul@multiplicand+1,w
 16128  0E55  3DF5               	addwfc	i1___wmul@product+1,f
 16129  0E56                     i1l4146:	
 16130  0E56  35F2               	lslf	i1___wmul@multiplicand,f
 16131  0E57  0DF3               	rlf	i1___wmul@multiplicand+1,f
 16132  0E58  36F1               	lsrf	i1___wmul@multiplier+1,f
 16133  0E59  0CF0               	rrf	i1___wmul@multiplier,f
 16134  0E5A  0870               	movf	i1___wmul@multiplier,w
 16135  0E5B  0471               	iorwf	i1___wmul@multiplier+1,w
 16136  0E5C  1D03               	btfss	3,2
 16137  0E5D  2E50               	goto	i1l4142
 16138  0E5E  0875               	movf	i1___wmul@product+1,w
 16139  0E5F  00F1               	movwf	?i1___wmul+1
 16140  0E60  0874               	movf	i1___wmul@product,w
 16141  0E61  00F0               	movwf	?i1___wmul
 16142  0E62  0008               	return
 16143  0E63                     __end_ofi1___wmul:	
 16144  0E63                     __ptext69:	
 16145 ;; *************** function _PWM1_Initialize *****************
 16146 ;; Defined at:
 16147 ;;		line 64 in file "mcc_generated_files/pwm1.c"
 16148 ;; Parameters:    Size  Location     Type
 16149 ;;		None
 16150 ;; Auto vars:     Size  Location     Type
 16151 ;;		None
 16152 ;; Return value:  Size  Location     Type
 16153 ;;                  1    wreg      void 
 16154 ;; Registers used:
 16155 ;;		wreg, status,2, status,0
 16156 ;; Tracked objects:
 16157 ;;		On entry : 1F/1C
 16158 ;;		On exit  : 1F/5
 16159 ;;		Unchanged: 0/0
 16160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16165 ;;Total ram usage:        0 bytes
 16166 ;; Hardware stack levels used:    1
 16167 ;; This function calls:
 16168 ;;		Nothing
 16169 ;; This function is called by:
 16170 ;;		_Config_GP1
 16171 ;; This function uses a non-reentrant model
 16172 ;;
 16173                           
 16174                           
 16175                           ;psect for function _PWM1_Initialize
 16176  0E63                     _PWM1_Initialize:	
 16177                           
 16178                           ;pwm1.c: 69: CCP1CON = 0x8F;
 16179                           
 16180                           ;incstack = 0
 16181                           ; Regs used in _PWM1_Initialize: [wreg+status,2+status,0]
 16182  0E63  308F               	movlw	143
 16183  0E64  0025               	movlb	5	; select bank5
 16184  0E65  0093               	movwf	19	;volatile
 16185                           
 16186                           ;pwm1.c: 72: CCPR1H = 0x03;
 16187  0E66  3003               	movlw	3
 16188  0E67  0092               	movwf	18	;volatile
 16189                           
 16190                           ;pwm1.c: 75: CCPR1L = 0xFF;
 16191  0E68  30FF               	movlw	255
 16192  0E69  0091               	movwf	17	;volatile
 16193                           
 16194                           ;pwm1.c: 78: CCPTMRSbits.C1TSEL = 0x1;
 16195  0E6A  081F               	movf	31,w	;volatile
 16196  0E6B  39FC               	andlw	-4
 16197  0E6C  3801               	iorlw	1
 16198  0E6D  009F               	movwf	31	;volatile
 16199  0E6E  0008               	return
 16200  0E6F                     __end_of_PWM1_Initialize:	
 16201  0E6F                     __ptext63:	
 16202 ;; *************** function _Config_GP2 *****************
 16203 ;; Defined at:
 16204 ;;		line 188 in file "GPports.c"
 16205 ;; Parameters:    Size  Location     Type
 16206 ;;		None
 16207 ;; Auto vars:     Size  Location     Type
 16208 ;;		None
 16209 ;; Return value:  Size  Location     Type
 16210 ;;                  1    wreg      void 
 16211 ;; Registers used:
 16212 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16213 ;; Tracked objects:
 16214 ;;		On entry : 1F/0
 16215 ;;		On exit  : 1B/0
 16216 ;;		Unchanged: 0/0
 16217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16220 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16221 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16222 ;;Total ram usage:        2 bytes
 16223 ;; Hardware stack levels used:    1
 16224 ;; Hardware stack levels required when called:    2
 16225 ;; This function calls:
 16226 ;;		_PWM2_Initialize
 16227 ;;		i1_PWM_GP2
 16228 ;; This function is called by:
 16229 ;;		_RegisterWrite
 16230 ;; This function uses a non-reentrant model
 16231 ;;
 16232                           
 16233                           
 16234                           ;psect for function _Config_GP2
 16235  0E6F                     _Config_GP2:	
 16236                           
 16237                           ;GPports.c: 190: CCP2CON = 0;
 16238                           
 16239                           ;incstack = 0
 16240                           ; Regs used in _Config_GP2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 16241  0E6F  0025               	movlb	5	; select bank5
 16242  0E70  0197               	clrf	23	;volatile
 16243                           
 16244                           ;GPports.c: 191: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 16245  0E71  3055               	movlw	85
 16246  0E72  003C               	movlb	28	; select bank28
 16247  0E73  008F               	movwf	15	;volsfr
 16248  0E74  30AA               	movlw	170
 16249  0E75  008F               	movwf	15	;volsfr
 16250  0E76  100F               	bcf	15,0	;volsfr
 16251                           
 16252                           ;GPports.c: 192: RC1PPSbits.RC1PPS = 0x00;
 16253  0E77  30E0               	movlw	-32
 16254  0E78  003D               	movlb	29	; select bank29
 16255  0E79  05A1               	andwf	33,f	;volatile
 16256                           
 16257                           ;GPports.c: 193: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 16258  0E7A  3055               	movlw	85
 16259  0E7B  003C               	movlb	28	; select bank28
 16260  0E7C  008F               	movwf	15	;volsfr
 16261  0E7D  30AA               	movlw	170
 16262  0E7E  008F               	movwf	15	;volsfr
 16263  0E7F  140F               	bsf	15,0	;volsfr
 16264                           
 16265                           ;GPports.c: 195: switch (GP2CONF & 0x03) {
 16266  0E80  2EAE               	goto	i1l4390
 16267  0E81                     i1l991:	
 16268                           ;GPports.c: 197: do { ANSELCbits.ANSC1 = 0; } while(0);
 16269                           
 16270  0E81  0023               	movlb	3	; select bank3
 16271  0E82  108E               	bcf	14,1	;volatile
 16272                           
 16273                           ;GPports.c: 198: do { LATCbits.LATC1 = 1; } while(0);
 16274  0E83  0022               	movlb	2	; select bank2
 16275  0E84  148E               	bsf	14,1	;volatile
 16276                           
 16277                           ;GPports.c: 199: do { TRISCbits.TRISC1 = 0; } while(0);
 16278  0E85  0021               	movlb	1	; select bank1
 16279  0E86  108E               	bcf	14,1	;volatile
 16280                           
 16281                           ;GPports.c: 200: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 16282  0E87  3055               	movlw	85
 16283  0E88  003C               	movlb	28	; select bank28
 16284  0E89  008F               	movwf	15	;volsfr
 16285  0E8A  30AA               	movlw	170
 16286  0E8B  008F               	movwf	15	;volsfr
 16287  0E8C  100F               	bcf	15,0	;volsfr
 16288                           
 16289                           ;GPports.c: 201: RC1PPSbits.RC1PPS = 0x0C;
 16290  0E8D  003D               	movlb	29	; select bank29
 16291  0E8E  0821               	movf	33,w	;volatile
 16292  0E8F  39E0               	andlw	-32
 16293  0E90  380C               	iorlw	12
 16294  0E91  00A1               	movwf	33	;volatile
 16295                           
 16296                           ;GPports.c: 202: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 16297  0E92  3055               	movlw	85
 16298  0E93  003C               	movlb	28	; select bank28
 16299  0E94  008F               	movwf	15	;volsfr
 16300  0E95  30AA               	movlw	170
 16301  0E96  008F               	movwf	15	;volsfr
 16302  0E97  140F               	bsf	15,0	;volsfr
 16303                           
 16304                           ;GPports.c: 203: PWM2_Initialize();
 16305  0E98  26DB  318C         	fcall	_PWM2_Initialize
 16306                           
 16307                           ;GPports.c: 204: PWM_GP2(0);
 16308  0E9A  3000               	movlw	0
 16309  0E9B  25A0  318C         	fcall	i1_PWM_GP2
 16310                           
 16311                           ;GPports.c: 205: break;
 16312  0E9D  2EC8               	goto	i1l4394
 16313  0E9E                     i1l999:	
 16314                           ;GPports.c: 208: do { ANSELCbits.ANSC1 = 0; } while(0);
 16315                           
 16316  0E9E  0023               	movlb	3	; select bank3
 16317  0E9F  108E               	bcf	14,1	;volatile
 16318                           
 16319                           ;GPports.c: 209: do { TRISCbits.TRISC1 = 0; } while(0);
 16320  0EA0  0021               	movlb	1	; select bank1
 16321  0EA1  108E               	bcf	14,1	;volatile
 16322                           
 16323                           ;GPports.c: 210: do { ODCONCbits.ODCC1 = 0; } while(0);
 16324  0EA2  0025               	movlb	5	; select bank5
 16325  0EA3  108E               	bcf	14,1	;volatile
 16326  0EA4  2EC8               	goto	i1l4394
 16327  0EA5                     i1l1006:	
 16328                           ;GPports.c: 214: do { TRISCbits.TRISC1 = 1; } while(0);
 16329                           
 16330  0EA5  0021               	movlb	1	; select bank1
 16331  0EA6  148E               	bsf	14,1	;volatile
 16332                           
 16333                           ;GPports.c: 215: do { ANSELCbits.ANSC1 = 1; } while(0);
 16334  0EA7  0023               	movlb	3	; select bank3
 16335  0EA8  2EAC               	goto	L9
 16336  0EA9                     i1l1011:	
 16337                           ;GPports.c: 219: do { ANSELCbits.ANSC1 = 0; } while(0);
 16338                           
 16339  0EA9  0023               	movlb	3	; select bank3
 16340  0EAA  108E               	bcf	14,1	;volatile
 16341                           
 16342                           ;GPports.c: 220: do { TRISCbits.TRISC1 = 1; } while(0);
 16343  0EAB  0021               	movlb	1	; select bank1
 16344  0EAC                     L9:	
 16345  0EAC  148E               	bsf	14,1	;volatile
 16346  0EAD  2EC8               	goto	i1l4394
 16347  0EAE                     i1l4390:	
 16348  0EAE  0020               	movlb	0	; select bank0
 16349  0EAF  0847               	movf	_GP2CONF,w	;volatile
 16350  0EB0  3903               	andlw	3
 16351  0EB1  00CB               	movwf	??_Config_GP2
 16352  0EB2  01CC               	clrf	??_Config_GP2+1
 16353                           
 16354                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16355                           ; Switch size 1, requested type "speed"
 16356                           ; Number of cases is 1, Range of values is 0 to 0
 16357                           ; switch strategies available:
 16358                           ; Name         Instructions Cycles
 16359                           ; simple_byte            4     3 (average)
 16360                           ; direct_byte            8     6 (fixed)
 16361                           ; jumptable            260     6 (fixed)
 16362                           ;	Chosen strategy is simple_byte
 16363  0EB3  084C               	movf	??_Config_GP2+1,w
 16364  0EB4  3A00               	xorlw	0	; case 0
 16365  0EB5  1903               	skipnz
 16366  0EB6  2EB8               	goto	i1l7284
 16367  0EB7  2EC8               	goto	i1l4394
 16368  0EB8                     i1l7284:	
 16369                           
 16370                           ; Switch size 1, requested type "speed"
 16371                           ; Number of cases is 4, Range of values is 0 to 3
 16372                           ; switch strategies available:
 16373                           ; Name         Instructions Cycles
 16374                           ; direct_byte           14     6 (fixed)
 16375                           ; simple_byte           13     7 (average)
 16376                           ; jumptable            260     6 (fixed)
 16377                           ;	Chosen strategy is direct_byte
 16378  0EB8  084B               	movf	??_Config_GP2,w
 16379  0EB9  0084               	movwf	4
 16380  0EBA  3004               	movlw	4
 16381  0EBB  0204               	subwf	4,w
 16382  0EBC  1803               	skipnc
 16383  0EBD  2EC8               	goto	i1l4394
 16384  0EBE  3190               	movlp	high i1S7286
 16385  0EBF  3504               	lslf	4,w
 16386  0EC0  3E64               	addlw	low i1S7286
 16387  0EC1  0082               	movwf	2
 16388  0EC2                     i1l1017:	
 16389                           ;GPports.c: 226: do { WPUCbits.WPUC1 = 0; } while(0);
 16390                           
 16391  0EC2  0024               	movlb	4	; select bank4
 16392  0EC3  108E               	bcf	14,1	;volatile
 16393  0EC4  0008               	return
 16394  0EC5                     i1l1021:	
 16395                           ;GPports.c: 229: do { WPUCbits.WPUC1 = 1; } while(0);
 16396                           
 16397  0EC5  0024               	movlb	4	; select bank4
 16398  0EC6  148E               	bsf	14,1	;volatile
 16399  0EC7  0008               	return
 16400  0EC8                     i1l4394:	
 16401  0EC8  0020               	movlb	0	; select bank0
 16402  0EC9  0847               	movf	_GP2CONF,w	;volatile
 16403  0ECA  3904               	andlw	4
 16404  0ECB  00CB               	movwf	??_Config_GP2
 16405  0ECC  01CC               	clrf	??_Config_GP2+1
 16406                           
 16407                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16408                           ; Switch size 1, requested type "speed"
 16409                           ; Number of cases is 1, Range of values is 0 to 0
 16410                           ; switch strategies available:
 16411                           ; Name         Instructions Cycles
 16412                           ; simple_byte            4     3 (average)
 16413                           ; direct_byte            8     6 (fixed)
 16414                           ; jumptable            260     6 (fixed)
 16415                           ;	Chosen strategy is simple_byte
 16416  0ECD  084C               	movf	??_Config_GP2+1,w
 16417  0ECE  3A00               	xorlw	0	; case 0
 16418  0ECF  1903               	skipnz
 16419  0ED0  2ED2               	goto	i1l7288
 16420  0ED1  2EDA               	goto	i1l1023
 16421  0ED2                     i1l7288:	
 16422                           
 16423                           ; Switch size 1, requested type "speed"
 16424                           ; Number of cases is 2, Range of values is 0 to 4
 16425                           ; switch strategies available:
 16426                           ; Name         Instructions Cycles
 16427                           ; simple_byte            7     4 (average)
 16428                           ; direct_byte           16     6 (fixed)
 16429                           ; jumptable            260     6 (fixed)
 16430                           ;	Chosen strategy is simple_byte
 16431  0ED2  084B               	movf	??_Config_GP2,w
 16432  0ED3  3A00               	xorlw	0	; case 0
 16433  0ED4  1903               	skipnz
 16434  0ED5  2EC2               	goto	i1l1017
 16435  0ED6  3A04               	xorlw	4	; case 4
 16436  0ED7  1903               	skipnz
 16437  0ED8  2EC5               	goto	i1l1021
 16438  0ED9  2EDA               	goto	i1l1023
 16439  0EDA                     i1l1023:	
 16440  0EDA  0008               	return
 16441  0EDB                     __end_of_Config_GP2:	
 16442  0EDB                     __ptext65:	
 16443 ;; *************** function _PWM2_Initialize *****************
 16444 ;; Defined at:
 16445 ;;		line 64 in file "mcc_generated_files/pwm2.c"
 16446 ;; Parameters:    Size  Location     Type
 16447 ;;		None
 16448 ;; Auto vars:     Size  Location     Type
 16449 ;;		None
 16450 ;; Return value:  Size  Location     Type
 16451 ;;                  1    wreg      void 
 16452 ;; Registers used:
 16453 ;;		wreg, status,2, status,0
 16454 ;; Tracked objects:
 16455 ;;		On entry : 1F/1C
 16456 ;;		On exit  : 1F/5
 16457 ;;		Unchanged: 0/0
 16458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16463 ;;Total ram usage:        0 bytes
 16464 ;; Hardware stack levels used:    1
 16465 ;; This function calls:
 16466 ;;		Nothing
 16467 ;; This function is called by:
 16468 ;;		_Config_GP2
 16469 ;; This function uses a non-reentrant model
 16470 ;;
 16471                           
 16472                           
 16473                           ;psect for function _PWM2_Initialize
 16474  0EDB                     _PWM2_Initialize:	
 16475                           
 16476                           ;pwm2.c: 69: CCP2CON = 0x8F;
 16477                           
 16478                           ;incstack = 0
 16479                           ; Regs used in _PWM2_Initialize: [wreg+status,2+status,0]
 16480  0EDB  308F               	movlw	143
 16481  0EDC  0025               	movlb	5	; select bank5
 16482  0EDD  0097               	movwf	23	;volatile
 16483                           
 16484                           ;pwm2.c: 72: CCPR2H = 0x03;
 16485  0EDE  3003               	movlw	3
 16486  0EDF  0096               	movwf	22	;volatile
 16487                           
 16488                           ;pwm2.c: 75: CCPR2L = 0xFF;
 16489  0EE0  30FF               	movlw	255
 16490  0EE1  0095               	movwf	21	;volatile
 16491                           
 16492                           ;pwm2.c: 78: CCPTMRSbits.C2TSEL = 0x1;
 16493  0EE2  081F               	movf	31,w	;volatile
 16494  0EE3  39F3               	andlw	-13
 16495  0EE4  3804               	iorlw	4
 16496  0EE5  009F               	movwf	31	;volatile
 16497  0EE6  0008               	return
 16498  0EE7                     __end_of_PWM2_Initialize:	
 16499  0EE7                     __ptext60:	
 16500 ;; *************** function _Config_GP3 *****************
 16501 ;; Defined at:
 16502 ;;		line 239 in file "GPports.c"
 16503 ;; Parameters:    Size  Location     Type
 16504 ;;		None
 16505 ;; Auto vars:     Size  Location     Type
 16506 ;;		None
 16507 ;; Return value:  Size  Location     Type
 16508 ;;                  1    wreg      void 
 16509 ;; Registers used:
 16510 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16511 ;; Tracked objects:
 16512 ;;		On entry : 1F/0
 16513 ;;		On exit  : 1B/0
 16514 ;;		Unchanged: 0/0
 16515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16518 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16519 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16520 ;;Total ram usage:        2 bytes
 16521 ;; Hardware stack levels used:    1
 16522 ;; Hardware stack levels required when called:    2
 16523 ;; This function calls:
 16524 ;;		_PWM3_Initialize
 16525 ;;		i1_PWM_GP3
 16526 ;; This function is called by:
 16527 ;;		_RegisterWrite
 16528 ;; This function uses a non-reentrant model
 16529 ;;
 16530                           
 16531                           
 16532                           ;psect for function _Config_GP3
 16533  0EE7                     _Config_GP3:	
 16534                           
 16535                           ;GPports.c: 240: CCP3CON = 0;
 16536                           
 16537                           ;incstack = 0
 16538                           ; Regs used in _Config_GP3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 16539  0EE7  0026               	movlb	6	; select bank6
 16540  0EE8  0193               	clrf	19	;volatile
 16541                           
 16542                           ;GPports.c: 241: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 16543  0EE9  3055               	movlw	85
 16544  0EEA  003C               	movlb	28	; select bank28
 16545  0EEB  008F               	movwf	15	;volsfr
 16546  0EEC  30AA               	movlw	170
 16547  0EED  008F               	movwf	15	;volsfr
 16548  0EEE  100F               	bcf	15,0	;volsfr
 16549                           
 16550                           ;GPports.c: 242: RC0PPSbits.RC0PPS = 0x00;
 16551  0EEF  30E0               	movlw	-32
 16552  0EF0  003D               	movlb	29	; select bank29
 16553  0EF1  05A0               	andwf	32,f	;volatile
 16554                           
 16555                           ;GPports.c: 243: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 16556  0EF2  3055               	movlw	85
 16557  0EF3  003C               	movlb	28	; select bank28
 16558  0EF4  008F               	movwf	15	;volsfr
 16559  0EF5  30AA               	movlw	170
 16560  0EF6  008F               	movwf	15	;volsfr
 16561  0EF7  140F               	bsf	15,0	;volsfr
 16562                           
 16563                           ;GPports.c: 245: switch (GP3CONF & 0x03) {
 16564  0EF8  2F26               	goto	i1l4442
 16565  0EF9                     i1l1028:	
 16566                           ;GPports.c: 247: do { ANSELCbits.ANSC0 = 0; } while(0);
 16567                           
 16568  0EF9  0023               	movlb	3	; select bank3
 16569  0EFA  100E               	bcf	14,0	;volatile
 16570                           
 16571                           ;GPports.c: 248: do { LATCbits.LATC0 = 1; } while(0);
 16572  0EFB  0022               	movlb	2	; select bank2
 16573  0EFC  140E               	bsf	14,0	;volatile
 16574                           
 16575                           ;GPports.c: 249: do { TRISCbits.TRISC0 = 0; } while(0);
 16576  0EFD  0021               	movlb	1	; select bank1
 16577  0EFE  100E               	bcf	14,0	;volatile
 16578                           
 16579                           ;GPports.c: 250: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 16580  0EFF  3055               	movlw	85
 16581  0F00  003C               	movlb	28	; select bank28
 16582  0F01  008F               	movwf	15	;volsfr
 16583  0F02  30AA               	movlw	170
 16584  0F03  008F               	movwf	15	;volsfr
 16585  0F04  100F               	bcf	15,0	;volsfr
 16586                           
 16587                           ;GPports.c: 251: RC0PPSbits.RC0PPS = 0x0D;
 16588  0F05  003D               	movlb	29	; select bank29
 16589  0F06  0820               	movf	32,w	;volatile
 16590  0F07  39E0               	andlw	-32
 16591  0F08  380D               	iorlw	13
 16592  0F09  00A0               	movwf	32	;volatile
 16593                           
 16594                           ;GPports.c: 252: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 16595  0F0A  3055               	movlw	85
 16596  0F0B  003C               	movlb	28	; select bank28
 16597  0F0C  008F               	movwf	15	;volsfr
 16598  0F0D  30AA               	movlw	170
 16599  0F0E  008F               	movwf	15	;volsfr
 16600  0F0F  140F               	bsf	15,0	;volsfr
 16601                           
 16602                           ;GPports.c: 253: PWM3_Initialize();
 16603  0F10  2753  318C         	fcall	_PWM3_Initialize
 16604                           
 16605                           ;GPports.c: 254: PWM_GP3(0);
 16606  0F12  3000               	movlw	0
 16607  0F13  2549  318C         	fcall	i1_PWM_GP3
 16608                           
 16609                           ;GPports.c: 255: break;
 16610  0F15  2F40               	goto	i1l4446
 16611  0F16                     i1l1036:	
 16612                           ;GPports.c: 258: do { ANSELCbits.ANSC0 = 0; } while(0);
 16613                           
 16614  0F16  0023               	movlb	3	; select bank3
 16615  0F17  100E               	bcf	14,0	;volatile
 16616                           
 16617                           ;GPports.c: 259: do { TRISCbits.TRISC0 = 0; } while(0);
 16618  0F18  0021               	movlb	1	; select bank1
 16619  0F19  100E               	bcf	14,0	;volatile
 16620                           
 16621                           ;GPports.c: 260: do { ODCONCbits.ODCC0 = 0; } while(0);
 16622  0F1A  0025               	movlb	5	; select bank5
 16623  0F1B  100E               	bcf	14,0	;volatile
 16624  0F1C  2F40               	goto	i1l4446
 16625  0F1D                     i1l1043:	
 16626                           ;GPports.c: 264: do { TRISCbits.TRISC0 = 1; } while(0);
 16627                           
 16628  0F1D  0021               	movlb	1	; select bank1
 16629  0F1E  140E               	bsf	14,0	;volatile
 16630                           
 16631                           ;GPports.c: 265: do { ANSELCbits.ANSC0 = 1; } while(0);
 16632  0F1F  0023               	movlb	3	; select bank3
 16633  0F20  2F24               	goto	L8
 16634  0F21                     i1l1048:	
 16635                           ;GPports.c: 269: do { ANSELCbits.ANSC0 = 0; } while(0);
 16636                           
 16637  0F21  0023               	movlb	3	; select bank3
 16638  0F22  100E               	bcf	14,0	;volatile
 16639                           
 16640                           ;GPports.c: 270: do { TRISCbits.TRISC0 = 1; } while(0);
 16641  0F23  0021               	movlb	1	; select bank1
 16642  0F24                     L8:	
 16643  0F24  140E               	bsf	14,0	;volatile
 16644  0F25  2F40               	goto	i1l4446
 16645  0F26                     i1l4442:	
 16646  0F26  0020               	movlb	0	; select bank0
 16647  0F27  0846               	movf	_GP3CONF,w	;volatile
 16648  0F28  3903               	andlw	3
 16649  0F29  00CB               	movwf	??_Config_GP3
 16650  0F2A  01CC               	clrf	??_Config_GP3+1
 16651                           
 16652                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16653                           ; Switch size 1, requested type "speed"
 16654                           ; Number of cases is 1, Range of values is 0 to 0
 16655                           ; switch strategies available:
 16656                           ; Name         Instructions Cycles
 16657                           ; simple_byte            4     3 (average)
 16658                           ; direct_byte            8     6 (fixed)
 16659                           ; jumptable            260     6 (fixed)
 16660                           ;	Chosen strategy is simple_byte
 16661  0F2B  084C               	movf	??_Config_GP3+1,w
 16662  0F2C  3A00               	xorlw	0	; case 0
 16663  0F2D  1903               	skipnz
 16664  0F2E  2F30               	goto	i1l7278
 16665  0F2F  2F40               	goto	i1l4446
 16666  0F30                     i1l7278:	
 16667                           
 16668                           ; Switch size 1, requested type "speed"
 16669                           ; Number of cases is 4, Range of values is 0 to 3
 16670                           ; switch strategies available:
 16671                           ; Name         Instructions Cycles
 16672                           ; direct_byte           14     6 (fixed)
 16673                           ; simple_byte           13     7 (average)
 16674                           ; jumptable            260     6 (fixed)
 16675                           ;	Chosen strategy is direct_byte
 16676  0F30  084B               	movf	??_Config_GP3,w
 16677  0F31  0084               	movwf	4
 16678  0F32  3004               	movlw	4
 16679  0F33  0204               	subwf	4,w
 16680  0F34  1803               	skipnc
 16681  0F35  2F40               	goto	i1l4446
 16682  0F36  3190               	movlp	high i1S7280
 16683  0F37  3504               	lslf	4,w
 16684  0F38  3E5C               	addlw	low i1S7280
 16685  0F39  0082               	movwf	2
 16686  0F3A                     i1l1054:	
 16687                           ;GPports.c: 276: do { WPUCbits.WPUC0 = 0; } while(0);
 16688                           
 16689  0F3A  0024               	movlb	4	; select bank4
 16690  0F3B  100E               	bcf	14,0	;volatile
 16691  0F3C  0008               	return
 16692  0F3D                     i1l1058:	
 16693                           ;GPports.c: 279: do { WPUCbits.WPUC0 = 1; } while(0);
 16694                           
 16695  0F3D  0024               	movlb	4	; select bank4
 16696  0F3E  140E               	bsf	14,0	;volatile
 16697  0F3F  0008               	return
 16698  0F40                     i1l4446:	
 16699  0F40  0020               	movlb	0	; select bank0
 16700  0F41  0846               	movf	_GP3CONF,w	;volatile
 16701  0F42  3904               	andlw	4
 16702  0F43  00CB               	movwf	??_Config_GP3
 16703  0F44  01CC               	clrf	??_Config_GP3+1
 16704                           
 16705                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16706                           ; Switch size 1, requested type "speed"
 16707                           ; Number of cases is 1, Range of values is 0 to 0
 16708                           ; switch strategies available:
 16709                           ; Name         Instructions Cycles
 16710                           ; simple_byte            4     3 (average)
 16711                           ; direct_byte            8     6 (fixed)
 16712                           ; jumptable            260     6 (fixed)
 16713                           ;	Chosen strategy is simple_byte
 16714  0F45  084C               	movf	??_Config_GP3+1,w
 16715  0F46  3A00               	xorlw	0	; case 0
 16716  0F47  1903               	skipnz
 16717  0F48  2F4A               	goto	i1l7282
 16718  0F49  2F52               	goto	i1l1060
 16719  0F4A                     i1l7282:	
 16720                           
 16721                           ; Switch size 1, requested type "speed"
 16722                           ; Number of cases is 2, Range of values is 0 to 4
 16723                           ; switch strategies available:
 16724                           ; Name         Instructions Cycles
 16725                           ; simple_byte            7     4 (average)
 16726                           ; direct_byte           16     6 (fixed)
 16727                           ; jumptable            260     6 (fixed)
 16728                           ;	Chosen strategy is simple_byte
 16729  0F4A  084B               	movf	??_Config_GP3,w
 16730  0F4B  3A00               	xorlw	0	; case 0
 16731  0F4C  1903               	skipnz
 16732  0F4D  2F3A               	goto	i1l1054
 16733  0F4E  3A04               	xorlw	4	; case 4
 16734  0F4F  1903               	skipnz
 16735  0F50  2F3D               	goto	i1l1058
 16736  0F51  2F52               	goto	i1l1060
 16737  0F52                     i1l1060:	
 16738  0F52  0008               	return
 16739  0F53                     __end_of_Config_GP3:	
 16740  0F53                     __ptext62:	
 16741 ;; *************** function _PWM3_Initialize *****************
 16742 ;; Defined at:
 16743 ;;		line 64 in file "mcc_generated_files/pwm3.c"
 16744 ;; Parameters:    Size  Location     Type
 16745 ;;		None
 16746 ;; Auto vars:     Size  Location     Type
 16747 ;;		None
 16748 ;; Return value:  Size  Location     Type
 16749 ;;                  1    wreg      void 
 16750 ;; Registers used:
 16751 ;;		wreg, status,2, status,0
 16752 ;; Tracked objects:
 16753 ;;		On entry : 1F/1C
 16754 ;;		On exit  : 1F/5
 16755 ;;		Unchanged: 0/0
 16756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16761 ;;Total ram usage:        0 bytes
 16762 ;; Hardware stack levels used:    1
 16763 ;; This function calls:
 16764 ;;		Nothing
 16765 ;; This function is called by:
 16766 ;;		_Config_GP3
 16767 ;; This function uses a non-reentrant model
 16768 ;;
 16769                           
 16770                           
 16771                           ;psect for function _PWM3_Initialize
 16772  0F53                     _PWM3_Initialize:	
 16773                           
 16774                           ;pwm3.c: 69: CCP3CON = 0x8F;
 16775                           
 16776                           ;incstack = 0
 16777                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
 16778  0F53  308F               	movlw	143
 16779  0F54  0026               	movlb	6	; select bank6
 16780  0F55  0093               	movwf	19	;volatile
 16781                           
 16782                           ;pwm3.c: 72: CCPR3H = 0x03;
 16783  0F56  3003               	movlw	3
 16784  0F57  0092               	movwf	18	;volatile
 16785                           
 16786                           ;pwm3.c: 75: CCPR3L = 0xFF;
 16787  0F58  30FF               	movlw	255
 16788  0F59  0091               	movwf	17	;volatile
 16789                           
 16790                           ;pwm3.c: 78: CCPTMRSbits.C3TSEL = 0x1;
 16791  0F5A  0025               	movlb	5	; select bank5
 16792  0F5B  081F               	movf	31,w	;volatile
 16793  0F5C  39CF               	andlw	-49
 16794  0F5D  3810               	iorlw	16
 16795  0F5E  009F               	movwf	31	;volatile
 16796  0F5F  0008               	return
 16797  0F60                     __end_of_PWM3_Initialize:	
 16798  0F60                     __ptext57:	
 16799 ;; *************** function _GeneralDataSet *****************
 16800 ;; Defined at:
 16801 ;;		line 449 in file "i2c_register.c"
 16802 ;; Parameters:    Size  Location     Type
 16803 ;;		None
 16804 ;; Auto vars:     Size  Location     Type
 16805 ;;		None
 16806 ;; Return value:  Size  Location     Type
 16807 ;;                  1    wreg      void 
 16808 ;; Registers used:
 16809 ;;		wreg, status,2, status,0, pclath, cstack
 16810 ;; Tracked objects:
 16811 ;;		On entry : 1F/1
 16812 ;;		On exit  : 0/0
 16813 ;;		Unchanged: 0/0
 16814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16819 ;;Total ram usage:        0 bytes
 16820 ;; Hardware stack levels used:    1
 16821 ;; Hardware stack levels required when called:    1
 16822 ;; This function calls:
 16823 ;;		_I2C1_Initialize_ClockStreach
 16824 ;;		i1_I2C1_Initialize
 16825 ;; This function is called by:
 16826 ;;		_RegisterWrite
 16827 ;; This function uses a non-reentrant model
 16828 ;;
 16829                           
 16830                           
 16831                           ;psect for function _GeneralDataSet
 16832  0F60                     _GeneralDataSet:	
 16833                           
 16834                           ;i2c_register.c: 451: if (C_DIRE == 0) {
 16835                           
 16836                           ;incstack = 0
 16837                           ; Regs used in _GeneralDataSet: [wreg+status,2+status,0+pclath+cstack]
 16838  0F60  0842               	movf	_C_DIRE^(0+128),w	;volatile
 16839                           
 16840                           ;i2c_register.c: 452: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 16841  0F61  3055               	movlw	85
 16842  0F62  1D03               	btfss	3,2
 16843  0F63  2F77               	goto	L7
 16844  0F64  003C               	movlb	28	; select bank28
 16845  0F65  008F               	movwf	15	;volsfr
 16846  0F66  30AA               	movlw	170
 16847  0F67  008F               	movwf	15	;volsfr
 16848  0F68  100F               	bcf	15,0	;volsfr
 16849                           
 16850                           ;i2c_register.c: 453: CLCIN1PPSbits.CLCIN1PPS = 0x14;
 16851  0F69  0829               	movf	41,w	;volatile
 16852  0F6A  39E0               	andlw	-32
 16853  0F6B  3814               	iorlw	20
 16854  0F6C  00A9               	movwf	41	;volatile
 16855                           
 16856                           ;i2c_register.c: 454: CLCIN0PPSbits.CLCIN0PPS = 0x15;
 16857  0F6D  0828               	movf	40,w	;volatile
 16858  0F6E  39E0               	andlw	-32
 16859  0F6F  3815               	iorlw	21
 16860  0F70  00A8               	movwf	40	;volatile
 16861                           
 16862                           ;i2c_register.c: 455: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 16863  0F71  3055               	movlw	85
 16864  0F72  008F               	movwf	15	;volsfr
 16865  0F73  30AA               	movlw	170
 16866  0F74  008F               	movwf	15	;volsfr
 16867  0F75  140F               	bsf	15,0	;volsfr
 16868                           
 16869                           ;i2c_register.c: 456: } else {
 16870  0F76  2F89               	goto	i1l4292
 16871  0F77                     L7:	
 16872                           ;i2c_register.c: 457: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 16873                           
 16874  0F77  003C               	movlb	28	; select bank28
 16875  0F78  008F               	movwf	15	;volsfr
 16876  0F79  30AA               	movlw	170
 16877  0F7A  008F               	movwf	15	;volsfr
 16878  0F7B  100F               	bcf	15,0	;volsfr
 16879                           
 16880                           ;i2c_register.c: 458: CLCIN1PPSbits.CLCIN1PPS = 0x15;
 16881  0F7C  0829               	movf	41,w	;volatile
 16882  0F7D  39E0               	andlw	-32
 16883  0F7E  3815               	iorlw	21
 16884  0F7F  00A9               	movwf	41	;volatile
 16885                           
 16886                           ;i2c_register.c: 459: CLCIN0PPSbits.CLCIN0PPS = 0x14;
 16887  0F80  0828               	movf	40,w	;volatile
 16888  0F81  39E0               	andlw	-32
 16889  0F82  3814               	iorlw	20
 16890  0F83  00A8               	movwf	40	;volatile
 16891                           
 16892                           ;i2c_register.c: 460: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 16893  0F84  3055               	movlw	85
 16894  0F85  008F               	movwf	15	;volsfr
 16895  0F86  30AA               	movlw	170
 16896  0F87  008F               	movwf	15	;volsfr
 16897  0F88  140F               	bsf	15,0	;volsfr
 16898  0F89                     i1l4292:	
 16899                           
 16900                           ;i2c_register.c: 461: };i2c_register.c: 463: if (C_IPUD == 1) {
 16901  0F89  0021               	movlb	1	; select bank1
 16902  0F8A  0B43               	decfsz	_C_IPUD^(0+128),w	;volatile
 16903  0F8B  2F8F               	goto	i1l824
 16904                           
 16905                           ;i2c_register.c: 464: do { WPUBbits.WPUB5 = 0; } while(0);
 16906  0F8C  0024               	movlb	4	; select bank4
 16907  0F8D  128D               	bcf	13,5	;volatile
 16908  0F8E  2F91               	goto	i1l826
 16909  0F8F                     i1l824:	
 16910                           ;i2c_register.c: 467: do { WPUBbits.WPUB5 = 1; } while(0);
 16911                           
 16912                           ;i2c_register.c: 465: do { LATBbits.LATB5 = 1; } while(0);
 16913                           
 16914  0F8F  0024               	movlb	4	; select bank4
 16915  0F90  168D               	bsf	13,5	;volatile
 16916  0F91                     i1l826:	
 16917                           ;i2c_register.c: 468: do { LATBbits.LATB5 = 1; } while(0);
 16918                           
 16919  0F91  0022               	movlb	2	; select bank2
 16920  0F92  168D               	bsf	13,5	;volatile
 16921                           
 16922                           ;i2c_register.c: 470: };i2c_register.c: 473: if (C_CKSRC == 1) {
 16923  0F93  0021               	movlb	1	; select bank1
 16924  0F94  0B44               	decfsz	_C_CKSRC^(0+128),w	;volatile
 16925  0F95  2F99               	goto	i1l4298
 16926                           
 16927                           ;i2c_register.c: 474: I2C1_Initialize_ClockStreach();
 16928  0F96  279F  318C         	fcall	_I2C1_Initialize_ClockStreach
 16929                           
 16930                           ;i2c_register.c: 475: } else {
 16931  0F98  2F9B               	goto	i1l4300
 16932  0F99                     i1l4298:	
 16933                           
 16934                           ;i2c_register.c: 476: I2C1_Initialize();
 16935  0F99  27B3  318C         	fcall	i1_I2C1_Initialize
 16936  0F9B                     i1l4300:	
 16937                           
 16938                           ;i2c_register.c: 477: };i2c_register.c: 479: if (C_RESET == 1) {
 16939  0F9B  0B45               	decfsz	_C_RESET^(0+128),w	;volatile
 16940  0F9C  0008               	return
 16941  0F9D  0001               	reset	;# 
 16942  0F9E  0008               	return
 16943  0F9F                     __end_of_GeneralDataSet:	
 16944  0F9F                     __ptext59:	
 16945 ;; *************** function _I2C1_Initialize_ClockStreach *****************
 16946 ;; Defined at:
 16947 ;;		line 100 in file "mcc_generated_files/i2c1.c"
 16948 ;; Parameters:    Size  Location     Type
 16949 ;;		None
 16950 ;; Auto vars:     Size  Location     Type
 16951 ;;		None
 16952 ;; Return value:  Size  Location     Type
 16953 ;;                  1    wreg      void 
 16954 ;; Registers used:
 16955 ;;		wreg, status,2
 16956 ;; Tracked objects:
 16957 ;;		On entry : 1F/1
 16958 ;;		On exit  : 1F/1
 16959 ;;		Unchanged: 0/0
 16960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16965 ;;Total ram usage:        0 bytes
 16966 ;; Hardware stack levels used:    1
 16967 ;; This function calls:
 16968 ;;		Nothing
 16969 ;; This function is called by:
 16970 ;;		_GeneralDataSet
 16971 ;; This function uses a non-reentrant model
 16972 ;;
 16973                           
 16974                           
 16975                           ;psect for function _I2C1_Initialize_ClockStreach
 16976  0F9F                     _I2C1_Initialize_ClockStreach:	
 16977                           
 16978                           ;i2c1.c: 103: SSP1CON1 = 0x00;
 16979                           
 16980                           ;incstack = 0
 16981                           ; Regs used in _I2C1_Initialize_ClockStreach: [wreg+status,2]
 16982  0F9F  0024               	movlb	4	; select bank4
 16983  0FA0  0195               	clrf	21	;volatile
 16984                           
 16985                           ;i2c1.c: 104: SSP1CON2 = 0x00;
 16986  0FA1  0196               	clrf	22	;volatile
 16987                           
 16988                           ;i2c1.c: 106: SSP1STAT = 0x00;
 16989  0FA2  0194               	clrf	20	;volatile
 16990                           
 16991                           ;i2c1.c: 108: SSP1CON1 = 0x26;
 16992  0FA3  3026               	movlw	38
 16993  0FA4  0095               	movwf	21	;volatile
 16994                           
 16995                           ;i2c1.c: 110: SSP1CON2 = 0x01;
 16996  0FA5  3001               	movlw	1
 16997  0FA6  0096               	movwf	22	;volatile
 16998                           
 16999                           ;i2c1.c: 112: SSP1CON3 = 0x00;
 17000  0FA7  0197               	clrf	23	;volatile
 17001                           
 17002                           ;i2c1.c: 114: SSP1MSK = (0x7F << 1);
 17003  0FA8  30FE               	movlw	254
 17004  0FA9  0093               	movwf	19	;volatile
 17005                           
 17006                           ;i2c1.c: 116: SSP1ADD = i2c_address;
 17007  0FAA  0020               	movlb	0	; select bank0
 17008  0FAB  085E               	movf	_i2c_address,w	;volatile
 17009  0FAC  0024               	movlb	4	; select bank4
 17010  0FAD  0092               	movwf	18	;volatile
 17011                           
 17012                           ;i2c1.c: 119: PIR1bits.SSP1IF = 0;
 17013  0FAE  0020               	movlb	0	; select bank0
 17014  0FAF  1191               	bcf	17,3	;volatile
 17015                           
 17016                           ;i2c1.c: 121: PIE1bits.SSP1IE = 1;
 17017  0FB0  0021               	movlb	1	; select bank1
 17018  0FB1  1591               	bsf	17,3	;volatile
 17019  0FB2  0008               	return
 17020  0FB3                     __end_of_I2C1_Initialize_ClockStreach:	
 17021  0FB3                     __ptext58:	
 17022 ;; *************** function i1_I2C1_Initialize *****************
 17023 ;; Defined at:
 17024 ;;		line 75 in file "mcc_generated_files/i2c1.c"
 17025 ;; Parameters:    Size  Location     Type
 17026 ;;		None
 17027 ;; Auto vars:     Size  Location     Type
 17028 ;;		None
 17029 ;; Return value:  Size  Location     Type
 17030 ;;                  1    wreg      void 
 17031 ;; Registers used:
 17032 ;;		wreg, status,2
 17033 ;; Tracked objects:
 17034 ;;		On entry : 1F/1
 17035 ;;		On exit  : 1F/1
 17036 ;;		Unchanged: 0/0
 17037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17042 ;;Total ram usage:        0 bytes
 17043 ;; Hardware stack levels used:    1
 17044 ;; This function calls:
 17045 ;;		Nothing
 17046 ;; This function is called by:
 17047 ;;		_GeneralDataSet
 17048 ;; This function uses a non-reentrant model
 17049 ;;
 17050                           
 17051                           
 17052                           ;psect for function i1_I2C1_Initialize
 17053  0FB3                     i1_I2C1_Initialize:	
 17054                           
 17055                           ;i2c1.c: 78: SSP1CON1 = 0x00;
 17056                           
 17057                           ;incstack = 0
 17058                           ; Regs used in i1_I2C1_Initialize: [wreg+status,2]
 17059  0FB3  0024               	movlb	4	; select bank4
 17060  0FB4  0195               	clrf	21	;volatile
 17061                           
 17062                           ;i2c1.c: 79: SSP1CON2 = 0x00;
 17063  0FB5  0196               	clrf	22	;volatile
 17064                           
 17065                           ;i2c1.c: 81: SSP1STAT = 0x00;
 17066  0FB6  0194               	clrf	20	;volatile
 17067                           
 17068                           ;i2c1.c: 83: SSP1CON1 = 0x26;
 17069  0FB7  3026               	movlw	38
 17070  0FB8  0095               	movwf	21	;volatile
 17071                           
 17072                           ;i2c1.c: 85: SSP1CON2 = 0x00;
 17073  0FB9  0196               	clrf	22	;volatile
 17074                           
 17075                           ;i2c1.c: 87: SSP1CON3 = 0x00;
 17076  0FBA  0197               	clrf	23	;volatile
 17077                           
 17078                           ;i2c1.c: 89: SSP1MSK = (0x7F << 1);
 17079  0FBB  30FE               	movlw	254
 17080  0FBC  0093               	movwf	19	;volatile
 17081                           
 17082                           ;i2c1.c: 91: SSP1ADD = i2c_address;
 17083  0FBD  0020               	movlb	0	; select bank0
 17084  0FBE  085E               	movf	_i2c_address,w	;volatile
 17085  0FBF  0024               	movlb	4	; select bank4
 17086  0FC0  0092               	movwf	18	;volatile
 17087                           
 17088                           ;i2c1.c: 94: PIR1bits.SSP1IF = 0;
 17089  0FC1  0020               	movlb	0	; select bank0
 17090  0FC2  1191               	bcf	17,3	;volatile
 17091                           
 17092                           ;i2c1.c: 96: PIE1bits.SSP1IE = 1;
 17093  0FC3  0021               	movlb	1	; select bank1
 17094  0FC4  1591               	bsf	17,3	;volatile
 17095  0FC5  0008               	return
 17096  0FC6                     __end_ofi1_I2C1_Initialize:	
 17097  0FC6                     __ptext56:	
 17098 ;; *************** function _GeneralDataSplit *****************
 17099 ;; Defined at:
 17100 ;;		line 86 in file "DataVariable.c"
 17101 ;; Parameters:    Size  Location     Type
 17102 ;;		None
 17103 ;; Auto vars:     Size  Location     Type
 17104 ;;		None
 17105 ;; Return value:  Size  Location     Type
 17106 ;;                  1    wreg      void 
 17107 ;; Registers used:
 17108 ;;		wreg, status,2, status,0
 17109 ;; Tracked objects:
 17110 ;;		On entry : 1F/0
 17111 ;;		On exit  : 1F/1
 17112 ;;		Unchanged: 0/0
 17113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17116 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17117 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17118 ;;Total ram usage:        1 bytes
 17119 ;; Hardware stack levels used:    1
 17120 ;; This function calls:
 17121 ;;		Nothing
 17122 ;; This function is called by:
 17123 ;;		_RegisterWrite
 17124 ;; This function uses a non-reentrant model
 17125 ;;
 17126                           
 17127                           
 17128                           ;psect for function _GeneralDataSplit
 17129  0FC6                     _GeneralDataSplit:	
 17130                           
 17131                           ;DataVariable.c: 88: C_DTYPE = GCONF & 0x01U;
 17132                           
 17133                           ;incstack = 0
 17134                           ; Regs used in _GeneralDataSplit: [wreg+status,2+status,0]
 17135  0FC6  0849               	movf	_GCONF,w	;volatile
 17136  0FC7  00B9               	movwf	_C_DTYPE	;volatile
 17137  0FC8  3001               	movlw	1
 17138  0FC9  05B9               	andwf	_C_DTYPE,f	;volatile
 17139                           
 17140                           ;DataVariable.c: 89: C_WRAPE = (bool) (GCONF >> 1) & 0x01U;
 17141  0FCA  3649               	lsrf	_GCONF,w	;volatile
 17142  0FCB  00BA               	movwf	_C_WRAPE	;volatile
 17143  0FCC  3001               	movlw	1
 17144  0FCD  05BA               	andwf	_C_WRAPE,f	;volatile
 17145                           
 17146                           ;DataVariable.c: 90: C_DIRE = (bool) (GCONF >> 2) & 0x01U;
 17147  0FCE  0849               	movf	_GCONF,w	;volatile
 17148  0FCF  00F0               	movwf	??_GeneralDataSplit
 17149  0FD0  36F0               	lsrf	??_GeneralDataSplit,f
 17150  0FD1  36F0               	lsrf	??_GeneralDataSplit,f
 17151  0FD2  0870               	movf	??_GeneralDataSplit,w
 17152  0FD3  0021               	movlb	1	; select bank1
 17153  0FD4  00C2               	movwf	_C_DIRE^(0+128)	;volatile
 17154  0FD5  3001               	movlw	1
 17155  0FD6  05C2               	andwf	_C_DIRE^(0+128),f	;volatile
 17156                           
 17157                           ;DataVariable.c: 91: C_IPUD = (bool) (GCONF >> 3) & 0x01U;
 17158  0FD7  0020               	movlb	0	; select bank0
 17159  0FD8  0849               	movf	_GCONF,w	;volatile
 17160  0FD9  00F0               	movwf	??_GeneralDataSplit
 17161  0FDA  36F0               	lsrf	??_GeneralDataSplit,f
 17162  0FDB  36F0               	lsrf	??_GeneralDataSplit,f
 17163  0FDC  36F0               	lsrf	??_GeneralDataSplit,f
 17164  0FDD  0870               	movf	??_GeneralDataSplit,w
 17165  0FDE  0021               	movlb	1	; select bank1
 17166  0FDF  00C3               	movwf	_C_IPUD^(0+128)	;volatile
 17167  0FE0  3001               	movlw	1
 17168  0FE1  05C3               	andwf	_C_IPUD^(0+128),f	;volatile
 17169                           
 17170                           ;DataVariable.c: 92: C_CKSRC = (bool) (GCONF >> 4) & 0x01U;
 17171  0FE2  0020               	movlb	0	; select bank0
 17172  0FE3  0E49               	swapf	_GCONF,w	;volatile
 17173  0FE4  390F               	andlw	15
 17174  0FE5  0021               	movlb	1	; select bank1
 17175  0FE6  00C4               	movwf	_C_CKSRC^(0+128)	;volatile
 17176  0FE7  3001               	movlw	1
 17177  0FE8  05C4               	andwf	_C_CKSRC^(0+128),f	;volatile
 17178                           
 17179                           ;DataVariable.c: 93: C_MBANK = (bool) (GCONF >> 5) & 0x01U;
 17180  0FE9  0020               	movlb	0	; select bank0
 17181  0FEA  0849               	movf	_GCONF,w	;volatile
 17182  0FEB  00F0               	movwf	??_GeneralDataSplit
 17183  0FEC  3005               	movlw	5
 17184  0FED                     u202_25:	
 17185  0FED  36F0               	lsrf	??_GeneralDataSplit,f
 17186  0FEE  0B89               	decfsz	9,f
 17187  0FEF  2FED               	goto	u202_25
 17188  0FF0  0870               	movf	??_GeneralDataSplit,w
 17189  0FF1  00BB               	movwf	_C_MBANK	;volatile
 17190  0FF2  3001               	movlw	1
 17191  0FF3  05BB               	andwf	_C_MBANK,f	;volatile
 17192                           
 17193                           ;DataVariable.c: 94: C_RESET = (bool) (GCONF >> 7) & 0x01U;
 17194  0FF4  0849               	movf	_GCONF,w	;volatile
 17195  0FF5  00F0               	movwf	??_GeneralDataSplit
 17196  0FF6  3007               	movlw	7
 17197  0FF7                     u203_25:	
 17198  0FF7  36F0               	lsrf	??_GeneralDataSplit,f
 17199  0FF8  0B89               	decfsz	9,f
 17200  0FF9  2FF7               	goto	u203_25
 17201  0FFA  0870               	movf	??_GeneralDataSplit,w
 17202  0FFB  0021               	movlb	1	; select bank1
 17203  0FFC  00C5               	movwf	_C_RESET^(0+128)	;volatile
 17204  0FFD  3001               	movlw	1
 17205  0FFE  05C5               	andwf	_C_RESET^(0+128),f	;volatile
 17206  0FFF  0008               	return
 17207  1000                     __end_of_GeneralDataSplit:	
 17208                           
 17209                           	psect	swtext6
 17210  1000                     __pswtext6:	
 17211  1000                     i1S7276:	
 17212  1000  318C  2C17         	ljmp	i1l4756
 17213  1002  318C  2C1E         	ljmp	i1l4762
 17214  1004  318C  2C23         	ljmp	i1l4766
 17215  1006  318C  2C28         	ljmp	i1l4770
 17216  1008  318C  2C2D         	ljmp	i1l4774
 17217  100A  318C  2C30         	ljmp	i1l4776
 17218  100C  318C  2CCA         	ljmp	i1l4854
 17219  100E  318C  2CCA         	ljmp	i1l4854
 17220  1010  318C  2CCA         	ljmp	i1l4854
 17221  1012  318C  2CCA         	ljmp	i1l4854
 17222  1014  318C  2C33         	ljmp	i1l4778
 17223  1016  318C  2C36         	ljmp	i1l4780
 17224  1018  318C  2C39         	ljmp	i1l4782
 17225  101A  318C  2C3C         	ljmp	i1l4784
 17226  101C  318C  2C3F         	ljmp	i1l4786
 17227  101E  318C  2C42         	ljmp	i1l4788
 17228  1020  318C  2C45         	ljmp	i1l4790
 17229  1022  318C  2C48         	ljmp	i1l4792
 17230  1024  318C  2C4B         	ljmp	i1l4794
 17231  1026  318C  2C4E         	ljmp	i1l4796
 17232  1028  318C  2C51         	ljmp	i1l4798
 17233  102A  318C  2C54         	ljmp	i1l4800
 17234  102C  318C  2C57         	ljmp	i1l4802
 17235  102E  318C  2C5A         	ljmp	i1l4804
 17236  1030  318C  2C5D         	ljmp	i1l4806
 17237  1032  318C  2C60         	ljmp	i1l4808
 17238  1034  318C  2C63         	ljmp	i1l4810
 17239  1036  318C  2C6F         	ljmp	i1l4816
 17240  1038  318C  2C7B         	ljmp	i1l4822
 17241  103A  318C  2C87         	ljmp	i1l4828
 17242  103C  318C  2CA2         	ljmp	i1l4836
 17243  103E  318C  2CA5         	ljmp	i1l4838
 17244  1040  318C  2CAE         	ljmp	i1l4842
 17245  1042  318C  2CB7         	ljmp	i1l4846
 17246                           
 17247                           	psect	text52
 17248  13D8                     __ptext52:	
 17249 ;; *************** function _eeprom_write *****************
 17250 ;; Defined at:
 17251 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\pic\__eewrite.c"
 17252 ;; Parameters:    Size  Location     Type
 17253 ;;  addr            1    wreg     unsigned char 
 17254 ;;  value           1    0[COMMON] unsigned char 
 17255 ;; Auto vars:     Size  Location     Type
 17256 ;;  addr            1    1[COMMON] unsigned char 
 17257 ;; Return value:  Size  Location     Type
 17258 ;;                  1    wreg      void 
 17259 ;; Registers used:
 17260 ;;		wreg, status,2
 17261 ;; Tracked objects:
 17262 ;;		On entry : 1F/0
 17263 ;;		On exit  : 1F/11
 17264 ;;		Unchanged: 0/0
 17265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17266 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17267 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17269 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17270 ;;Total ram usage:        2 bytes
 17271 ;; Hardware stack levels used:    1
 17272 ;; This function calls:
 17273 ;;		Nothing
 17274 ;; This function is called by:
 17275 ;;		_RegisterWrite
 17276 ;; This function uses a non-reentrant model
 17277 ;;
 17278                           
 17279                           
 17280                           ;psect for function _eeprom_write
 17281  13D8                     _eeprom_write:	
 17282                           
 17283                           ;incstack = 0
 17284                           ; Regs used in _eeprom_write: [wreg+status,2]
 17285                           ;eeprom_write@addr stored from wreg
 17286  13D8  00F1               	movwf	eeprom_write@addr
 17287  13D9                     i1l1525:	
 17288                           ;__eewrite.c: 8: do { while (NVMCON1bits.WR) { continue; } NVMCON1bits.NVMREGS = 1; NVMA
      +                          DRL = (addr) & 0xFFU; NVMADRH = 0x70; NVMDATH = 0; NVMDATL = (value) & 0xFFU; STATUSbits
      +                          .CARRY = 0; if (INTCONbits.GIE) { STATUSbits.CARRY = 1; } INTCONbits.GIE = 0; NVMCON1bit
      +                          s.W
 17289                           
 17290  13D9  0031               	movlb	17	; select bank17
 17291  13DA  1895               	btfsc	21,1	;volsfr
 17292  13DB  2BD9               	goto	i1l1525
 17293  13DC  1715               	bsf	21,6	;volsfr
 17294  13DD  0871               	movf	eeprom_write@addr,w
 17295  13DE  0091               	movwf	17	;volatile
 17296  13DF  3070               	movlw	112
 17297  13E0  0092               	movwf	18	;volatile
 17298  13E1  0194               	clrf	20	;volatile
 17299  13E2  0870               	movf	eeprom_write@value,w
 17300  13E3  0093               	movwf	19	;volatile
 17301  13E4  1003               	bcf	3,0	;volatile
 17302  13E5  1B8B               	btfsc	11,7	;volatile
 17303  13E6  1403               	bsf	3,0	;volatile
 17304  13E7  138B               	bcf	11,7	;volatile
 17305  13E8  1515               	bsf	21,2	;volsfr
 17306  13E9  3055               	movlw	85
 17307  13EA  0096               	movwf	22	;volsfr
 17308  13EB  30AA               	movlw	170
 17309  13EC  0096               	movwf	22	;volsfr
 17310  13ED  1495               	bsf	21,1	;volsfr
 17311  13EE                     i1l1529:	
 17312  13EE  1895               	btfsc	21,1	;volsfr
 17313  13EF  2BEE               	goto	i1l1529
 17314  13F0  1115               	bcf	21,2	;volsfr
 17315  13F1  1803               	btfsc	3,0	;volatile
 17316  13F2  178B               	bsf	11,7	;volatile
 17317  13F3  0008               	return
 17318  13F4                     __end_of_eeprom_write:	
 17319                           
 17320                           	psect	text53
 17321  13BC                     __ptext53:	
 17322 ;; *************** function _UpdateOut_GP3 *****************
 17323 ;; Defined at:
 17324 ;;		line 329 in file "GPports.c"
 17325 ;; Parameters:    Size  Location     Type
 17326 ;;		None
 17327 ;; Auto vars:     Size  Location     Type
 17328 ;;		None
 17329 ;; Return value:  Size  Location     Type
 17330 ;;                  1    wreg      void 
 17331 ;; Registers used:
 17332 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17333 ;; Tracked objects:
 17334 ;;		On entry : 1F/0
 17335 ;;		On exit  : 18/0
 17336 ;;		Unchanged: 0/0
 17337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17340 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17341 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17342 ;;Total ram usage:        1 bytes
 17343 ;; Hardware stack levels used:    1
 17344 ;; Hardware stack levels required when called:    2
 17345 ;; This function calls:
 17346 ;;		i1_PWM_GP3
 17347 ;; This function is called by:
 17348 ;;		_RegisterWrite
 17349 ;; This function uses a non-reentrant model
 17350 ;;
 17351                           
 17352                           
 17353                           ;psect for function _UpdateOut_GP3
 17354  13BC                     _UpdateOut_GP3:	
 17355                           
 17356                           ;GPports.c: 330: if ((GP3CONF & 0x03) == 0x01) {
 17357                           
 17358                           ;incstack = 0
 17359                           ; Regs used in _UpdateOut_GP3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17360  13BC  3003               	movlw	3
 17361  13BD  0546               	andwf	_GP3CONF,w	;volatile
 17362  13BE  00CB               	movwf	??_UpdateOut_GP3
 17363  13BF  0B4B               	decfsz	??_UpdateOut_GP3,w
 17364  13C0  2BCD               	goto	i1l4496
 17365                           
 17366                           ;GPports.c: 331: if (GP3REG == 0) {
 17367  13C1  0841               	movf	_GP3REG,w	;volatile
 17368  13C2  1D03               	btfss	3,2
 17369  13C3  2BC7               	goto	i1l1092
 17370                           
 17371                           ;GPports.c: 332: do { LATCbits.LATC0 = 0; } while(0);
 17372  13C4  0022               	movlb	2	; select bank2
 17373  13C5  100E               	bcf	14,0	;volatile
 17374  13C6  0008               	return
 17375  13C7                     i1l1092:	
 17376                           ;GPports.c: 334: do { LATCbits.LATC0 = 1; } while(0);
 17377                           
 17378  13C7  0022               	movlb	2	; select bank2
 17379  13C8  140E               	bsf	14,0	;volatile
 17380                           
 17381                           ;GPports.c: 335: GP3REG = 1;
 17382  13C9  3001               	movlw	1
 17383  13CA  0020               	movlb	0	; select bank0
 17384  13CB  00C1               	movwf	_GP3REG	;volatile
 17385  13CC  0008               	return
 17386  13CD                     i1l4496:	
 17387                           
 17388                           ;GPports.c: 338: };GPports.c: 339: if ((GP3CONF & 0x03) == 0x00) {
 17389  13CD  0846               	movf	_GP3CONF,w	;volatile
 17390  13CE  3903               	andlw	3
 17391  13CF  1D03               	btfss	3,2
 17392  13D0  0008               	return
 17393                           
 17394                           ;GPports.c: 340: if (FADEGP == 0) {
 17395  13D1  083F               	movf	_FADEGP,w	;volatile
 17396  13D2  1D03               	btfss	3,2
 17397  13D3  0008               	return
 17398                           
 17399                           ;GPports.c: 341: PWM_GP3(GP3REG);
 17400  13D4  0841               	movf	_GP3REG,w	;volatile
 17401  13D5  318D  2549         	fcall	i1_PWM_GP3
 17402  13D7  0008               	return
 17403  13D8                     __end_of_UpdateOut_GP3:	
 17404                           
 17405                           	psect	text54
 17406  13A0                     __ptext54:	
 17407 ;; *************** function _UpdateOut_GP2 *****************
 17408 ;; Defined at:
 17409 ;;		line 308 in file "GPports.c"
 17410 ;; Parameters:    Size  Location     Type
 17411 ;;		None
 17412 ;; Auto vars:     Size  Location     Type
 17413 ;;		None
 17414 ;; Return value:  Size  Location     Type
 17415 ;;                  1    wreg      void 
 17416 ;; Registers used:
 17417 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17418 ;; Tracked objects:
 17419 ;;		On entry : 1F/0
 17420 ;;		On exit  : 18/0
 17421 ;;		Unchanged: 0/0
 17422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17425 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17426 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17427 ;;Total ram usage:        1 bytes
 17428 ;; Hardware stack levels used:    1
 17429 ;; Hardware stack levels required when called:    2
 17430 ;; This function calls:
 17431 ;;		i1_PWM_GP2
 17432 ;; This function is called by:
 17433 ;;		_RegisterWrite
 17434 ;; This function uses a non-reentrant model
 17435 ;;
 17436                           
 17437                           
 17438                           ;psect for function _UpdateOut_GP2
 17439  13A0                     _UpdateOut_GP2:	
 17440                           
 17441                           ;GPports.c: 309: if ((GP2CONF & 0x03) == 0x01) {
 17442                           
 17443                           ;incstack = 0
 17444                           ; Regs used in _UpdateOut_GP2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17445  13A0  3003               	movlw	3
 17446  13A1  0547               	andwf	_GP2CONF,w	;volatile
 17447  13A2  00CB               	movwf	??_UpdateOut_GP2
 17448  13A3  0B4B               	decfsz	??_UpdateOut_GP2,w
 17449  13A4  2BB1               	goto	i1l4482
 17450                           
 17451                           ;GPports.c: 310: if (GP2REG == 0) {
 17452  13A5  0842               	movf	_GP2REG,w	;volatile
 17453  13A6  1D03               	btfss	3,2
 17454  13A7  2BAB               	goto	i1l1080
 17455                           
 17456                           ;GPports.c: 311: do { LATCbits.LATC1 = 0; } while(0);
 17457  13A8  0022               	movlb	2	; select bank2
 17458  13A9  108E               	bcf	14,1	;volatile
 17459  13AA  0008               	return
 17460  13AB                     i1l1080:	
 17461                           ;GPports.c: 313: do { LATCbits.LATC1 = 1; } while(0);
 17462                           
 17463  13AB  0022               	movlb	2	; select bank2
 17464  13AC  148E               	bsf	14,1	;volatile
 17465                           
 17466                           ;GPports.c: 314: GP2REG = 1;
 17467  13AD  3001               	movlw	1
 17468  13AE  0020               	movlb	0	; select bank0
 17469  13AF  00C2               	movwf	_GP2REG	;volatile
 17470  13B0  0008               	return
 17471  13B1                     i1l4482:	
 17472                           
 17473                           ;GPports.c: 317: };GPports.c: 319: if ((GP2CONF & 0x03) == 0x00) {
 17474  13B1  0847               	movf	_GP2CONF,w	;volatile
 17475  13B2  3903               	andlw	3
 17476  13B3  1D03               	btfss	3,2
 17477  13B4  0008               	return
 17478                           
 17479                           ;GPports.c: 320: if (FADEGP == 0) {
 17480  13B5  083F               	movf	_FADEGP,w	;volatile
 17481  13B6  1D03               	btfss	3,2
 17482  13B7  0008               	return
 17483                           
 17484                           ;GPports.c: 321: PWM_GP2(GP2REG);
 17485  13B8  0842               	movf	_GP2REG,w	;volatile
 17486  13B9  318D  25A0         	fcall	i1_PWM_GP2
 17487  13BB  0008               	return
 17488  13BC                     __end_of_UpdateOut_GP2:	
 17489                           
 17490                           	psect	text55
 17491  1384                     __ptext55:	
 17492 ;; *************** function _UpdateOut_GP1 *****************
 17493 ;; Defined at:
 17494 ;;		line 288 in file "GPports.c"
 17495 ;; Parameters:    Size  Location     Type
 17496 ;;		None
 17497 ;; Auto vars:     Size  Location     Type
 17498 ;;		None
 17499 ;; Return value:  Size  Location     Type
 17500 ;;                  1    wreg      void 
 17501 ;; Registers used:
 17502 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17503 ;; Tracked objects:
 17504 ;;		On entry : 1F/0
 17505 ;;		On exit  : 18/0
 17506 ;;		Unchanged: 0/0
 17507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17510 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17511 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17512 ;;Total ram usage:        1 bytes
 17513 ;; Hardware stack levels used:    1
 17514 ;; Hardware stack levels required when called:    2
 17515 ;; This function calls:
 17516 ;;		i1_PWM_GP1
 17517 ;; This function is called by:
 17518 ;;		_RegisterWrite
 17519 ;; This function uses a non-reentrant model
 17520 ;;
 17521                           
 17522                           
 17523                           ;psect for function _UpdateOut_GP1
 17524  1384                     _UpdateOut_GP1:	
 17525                           
 17526                           ;GPports.c: 289: if ((GP1CONF & 0x03) == 0x01) {
 17527                           
 17528                           ;incstack = 0
 17529                           ; Regs used in _UpdateOut_GP1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17530  1384  3003               	movlw	3
 17531  1385  0548               	andwf	_GP1CONF,w	;volatile
 17532  1386  00CB               	movwf	??_UpdateOut_GP1
 17533  1387  0B4B               	decfsz	??_UpdateOut_GP1,w
 17534  1388  2B95               	goto	i1l4468
 17535                           
 17536                           ;GPports.c: 290: if (GP1REG == 0) {
 17537  1389  0843               	movf	_GP1REG,w	;volatile
 17538  138A  1D03               	btfss	3,2
 17539  138B  2B8F               	goto	i1l1068
 17540                           
 17541                           ;GPports.c: 291: do { LATCbits.LATC2 = 0; } while(0);
 17542  138C  0022               	movlb	2	; select bank2
 17543  138D  110E               	bcf	14,2	;volatile
 17544  138E  0008               	return
 17545  138F                     i1l1068:	
 17546                           ;GPports.c: 293: do { LATCbits.LATC2 = 1; } while(0);
 17547                           
 17548  138F  0022               	movlb	2	; select bank2
 17549  1390  150E               	bsf	14,2	;volatile
 17550                           
 17551                           ;GPports.c: 294: GP1REG = 1;
 17552  1391  3001               	movlw	1
 17553  1392  0020               	movlb	0	; select bank0
 17554  1393  00C3               	movwf	_GP1REG	;volatile
 17555  1394  0008               	return
 17556  1395                     i1l4468:	
 17557                           
 17558                           ;GPports.c: 297: };GPports.c: 298: if ((GP1CONF & 0x03) == 0x00) {
 17559  1395  0848               	movf	_GP1CONF,w	;volatile
 17560  1396  3903               	andlw	3
 17561  1397  1D03               	btfss	3,2
 17562  1398  0008               	return
 17563                           
 17564                           ;GPports.c: 299: if (FADEGP == 0) {
 17565  1399  083F               	movf	_FADEGP,w	;volatile
 17566  139A  1D03               	btfss	3,2
 17567  139B  0008               	return
 17568                           
 17569                           ;GPports.c: 300: PWM_GP1(GP1REG);
 17570  139C  0843               	movf	_GP1REG,w	;volatile
 17571  139D  318D  25F7         	fcall	i1_PWM_GP1
 17572  139F  0008               	return
 17573  13A0                     __end_of_UpdateOut_GP1:	
 17574                           
 17575                           	psect	swtext7
 17576  105C                     __pswtext7:	
 17577  105C                     i1S7280:	
 17578  105C  318E  2EF9         	ljmp	i1l1028
 17579  105E  318F  2F16         	ljmp	i1l1036
 17580  1060  318F  2F1D         	ljmp	i1l1043
 17581  1062  318F  2F21         	ljmp	i1l1048
 17582                           
 17583                           	psect	swtext8
 17584  1064                     __pswtext8:	
 17585  1064                     i1S7286:	
 17586  1064  318E  2E81         	ljmp	i1l991
 17587  1066  318E  2E9E         	ljmp	i1l999
 17588  1068  318E  2EA5         	ljmp	i1l1006
 17589  106A  318E  2EA9         	ljmp	i1l1011
 17590                           
 17591                           	psect	swtext9
 17592  106C                     __pswtext9:	
 17593  106C                     i1S7292:	
 17594  106C  318C  2CEF         	ljmp	i1l954
 17595  106E  318D  2D0C         	ljmp	i1l962
 17596  1070  318D  2D13         	ljmp	i1l969
 17597  1072  318D  2D17         	ljmp	i1l974
 17598                           
 17599                           	psect	swtext10
 17600  0A00                     __pswtext10:	
 17601  0A00                     i1S7296:	
 17602  0A00  318B  2B99         	ljmp	i1l4870
 17603  0A02  318B  2B9B         	ljmp	i1l4872
 17604  0A04  318B  2B9D         	ljmp	i1l4874
 17605  0A06  318B  2B9F         	ljmp	i1l4876
 17606  0A08  318B  2BA1         	ljmp	i1l4878
 17607  0A0A  318B  2BA3         	ljmp	i1l4880
 17608  0A0C  318B  2BA5         	ljmp	i1l4882
 17609  0A0E  318B  2BA7         	ljmp	i1l4884
 17610  0A10  318B  2BAD         	ljmp	i1l4886
 17611  0A12  318B  2BB3         	ljmp	i1l4888
 17612  0A14  318B  2BB5         	ljmp	i1l4890
 17613  0A16  318B  2BB7         	ljmp	i1l4892
 17614  0A18  318B  2BB9         	ljmp	i1l4894
 17615  0A1A  318B  2BBB         	ljmp	i1l4896
 17616  0A1C  318B  2BBD         	ljmp	i1l4898
 17617  0A1E  318B  2BBF         	ljmp	i1l4900
 17618  0A20  318B  2BC1         	ljmp	i1l4902
 17619  0A22  318B  2BC3         	ljmp	i1l4904
 17620  0A24  318B  2BC5         	ljmp	i1l4906
 17621  0A26  318B  2BC7         	ljmp	i1l4908
 17622  0A28  318B  2BC9         	ljmp	i1l4910
 17623  0A2A  318B  2BCB         	ljmp	i1l4912
 17624  0A2C  318B  2BCD         	ljmp	i1l4914
 17625  0A2E  318B  2BCF         	ljmp	i1l4916
 17626  0A30  318B  2BD1         	ljmp	i1l4918
 17627  0A32  318B  2BD3         	ljmp	i1l4920
 17628  0A34  318B  2BD5         	ljmp	i1l4922
 17629  0A36  318B  2BD7         	ljmp	i1l4924
 17630  0A38  318B  2BD9         	ljmp	i1l4926
 17631  0A3A  318B  2BDB         	ljmp	i1l4928
 17632  0A3C  318B  2BDD         	ljmp	i1l4930
 17633  0A3E  318B  2BDF         	ljmp	i1l4932
 17634  0A40  318B  2BE1         	ljmp	i1l4934
 17635  0A42  318B  2BE3         	ljmp	i1l4936
 17636  0A44  318B  2BEA         	ljmp	i1l4942
 17637  0A46  318B  2BEA         	ljmp	i1l4942
 17638  0A48  318B  2BEA         	ljmp	i1l4942
 17639  0A4A  318B  2BEA         	ljmp	i1l4942
 17640  0A4C  318B  2BEA         	ljmp	i1l4942
 17641  0A4E  318B  2BEA         	ljmp	i1l4942
 17642  0A50  318B  2BEA         	ljmp	i1l4942
 17643  0A52  318B  2BEA         	ljmp	i1l4942
 17644  0A54  318B  2BEA         	ljmp	i1l4942
 17645  0A56  318B  2BEA         	ljmp	i1l4942
 17646  0A58  318B  2BEA         	ljmp	i1l4942
 17647  0A5A  318B  2BEA         	ljmp	i1l4942
 17648  0A5C  318B  2BEA         	ljmp	i1l4942
 17649  0A5E  318B  2BEA         	ljmp	i1l4942
 17650  0A60  318B  2BEA         	ljmp	i1l4942
 17651  0A62  318B  2BEA         	ljmp	i1l4942
 17652  0A64  318B  2BEA         	ljmp	i1l4942
 17653  0A66  318B  2BEA         	ljmp	i1l4942
 17654  0A68  318B  2BEA         	ljmp	i1l4942
 17655  0A6A  318B  2BEA         	ljmp	i1l4942
 17656  0A6C  318B  2BEA         	ljmp	i1l4942
 17657  0A6E  318B  2BEA         	ljmp	i1l4942
 17658  0A70  318B  2BEA         	ljmp	i1l4942
 17659  0A72  318B  2BEA         	ljmp	i1l4942
 17660  0A74  318B  2BEA         	ljmp	i1l4942
 17661  0A76  318B  2BEA         	ljmp	i1l4942
 17662  0A78  318B  2BEA         	ljmp	i1l4942
 17663  0A7A  318B  2BEA         	ljmp	i1l4942
 17664  0A7C  318B  2BEA         	ljmp	i1l4942
 17665  0A7E  318B  2BEA         	ljmp	i1l4942
 17666  0A80  318B  2BEA         	ljmp	i1l4942
 17667  0A82  318B  2BEA         	ljmp	i1l4942
 17668  0A84  318B  2BEA         	ljmp	i1l4942
 17669  0A86  318B  2BEA         	ljmp	i1l4942
 17670  0A88  318B  2BEA         	ljmp	i1l4942
 17671  0A8A  318B  2BEA         	ljmp	i1l4942
 17672  0A8C  318B  2BEA         	ljmp	i1l4942
 17673  0A8E  318B  2BEA         	ljmp	i1l4942
 17674  0A90  318B  2BEA         	ljmp	i1l4942
 17675  0A92  318B  2BEA         	ljmp	i1l4942
 17676  0A94  318B  2BEA         	ljmp	i1l4942
 17677  0A96  318B  2BEA         	ljmp	i1l4942
 17678  0A98  318B  2BEA         	ljmp	i1l4942
 17679  0A9A  318B  2BEA         	ljmp	i1l4942
 17680  0A9C  318B  2BEA         	ljmp	i1l4942
 17681  0A9E  318B  2BEA         	ljmp	i1l4942
 17682  0AA0  318B  2BEA         	ljmp	i1l4942
 17683  0AA2  318B  2BEA         	ljmp	i1l4942
 17684  0AA4  318B  2BEA         	ljmp	i1l4942
 17685  0AA6  318B  2BEA         	ljmp	i1l4942
 17686  0AA8  318B  2BEA         	ljmp	i1l4942
 17687  0AAA  318B  2BEA         	ljmp	i1l4942
 17688  0AAC  318B  2BEA         	ljmp	i1l4942
 17689  0AAE  318B  2BEA         	ljmp	i1l4942
 17690  0AB0  318B  2BEA         	ljmp	i1l4942
 17691  0AB2  318B  2BEA         	ljmp	i1l4942
 17692  0AB4  318B  2BEA         	ljmp	i1l4942
 17693  0AB6  318B  2BEA         	ljmp	i1l4942
 17694  0AB8  318B  2BEA         	ljmp	i1l4942
 17695  0ABA  318B  2BEA         	ljmp	i1l4942
 17696  0ABC  318B  2BEA         	ljmp	i1l4942
 17697  0ABE  318B  2BEA         	ljmp	i1l4942
 17698  0AC0  318B  2BEA         	ljmp	i1l4942
 17699  0AC2  318B  2BEA         	ljmp	i1l4942
 17700  0AC4  318B  2BEA         	ljmp	i1l4942
 17701  0AC6  318B  2BEA         	ljmp	i1l4942
 17702  0AC8  318B  2BEA         	ljmp	i1l4942
 17703  0ACA  318B  2BEA         	ljmp	i1l4942
 17704  0ACC  318B  2BEA         	ljmp	i1l4942
 17705  0ACE  318B  2BEA         	ljmp	i1l4942
 17706  0AD0  318B  2BEA         	ljmp	i1l4942
 17707  0AD2  318B  2BEA         	ljmp	i1l4942
 17708  0AD4  318B  2BEA         	ljmp	i1l4942
 17709  0AD6  318B  2BEA         	ljmp	i1l4942
 17710  0AD8  318B  2BEA         	ljmp	i1l4942
 17711  0ADA  318B  2BEA         	ljmp	i1l4942
 17712  0ADC  318B  2BEA         	ljmp	i1l4942
 17713  0ADE  318B  2BEA         	ljmp	i1l4942
 17714  0AE0  318B  2BE5         	ljmp	i1l4938
 17715  0AE2  318B  2BE7         	ljmp	i1l4940
 17716                           
 17717                           	psect	text73
 17718  1506                     __ptext73:	
 17719 ;; *************** function _CLC2_ISR *****************
 17720 ;; Defined at:
 17721 ;;		line 89 in file "mcc_generated_files/clc2.c"
 17722 ;; Parameters:    Size  Location     Type
 17723 ;;		None
 17724 ;; Auto vars:     Size  Location     Type
 17725 ;;		None
 17726 ;; Return value:  Size  Location     Type
 17727 ;;                  1    wreg      void 
 17728 ;; Registers used:
 17729 ;;		wreg, status,2, status,0, pclath, cstack
 17730 ;; Tracked objects:
 17731 ;;		On entry : 1F/0
 17732 ;;		On exit  : 1F/0
 17733 ;;		Unchanged: 0/0
 17734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17739 ;;Total ram usage:        0 bytes
 17740 ;; Hardware stack levels used:    1
 17741 ;; Hardware stack levels required when called:    3
 17742 ;; This function calls:
 17743 ;;		_CLC_2_Interrupt
 17744 ;; This function is called by:
 17745 ;;		_INTERRUPT_InterruptManager
 17746 ;; This function uses a non-reentrant model
 17747 ;;
 17748                           
 17749                           
 17750                           ;psect for function _CLC2_ISR
 17751  1506                     _CLC2_ISR:	
 17752                           
 17753                           ;clc2.c: 91: CLC_2_Interrupt();
 17754                           
 17755                           ;incstack = 0
 17756                           ; Regs used in _CLC2_ISR: [wreg+status,2+status,0+pclath+cstack]
 17757  1506  2597               	fcall	_CLC_2_Interrupt
 17758                           
 17759                           ;clc2.c: 93: PIR3bits.CLC2IF = 0;
 17760  1507  0020               	movlb	0	; select bank0
 17761  1508  1093               	bcf	19,1	;volatile
 17762  1509  0008               	return
 17763  150A                     __end_of_CLC2_ISR:	
 17764  150A                     __ptext76:	
 17765 ;; *************** function _CLC1_ISR *****************
 17766 ;; Defined at:
 17767 ;;		line 89 in file "mcc_generated_files/clc1.c"
 17768 ;; Parameters:    Size  Location     Type
 17769 ;;		None
 17770 ;; Auto vars:     Size  Location     Type
 17771 ;;		None
 17772 ;; Return value:  Size  Location     Type
 17773 ;;                  1    wreg      void 
 17774 ;; Registers used:
 17775 ;;		wreg, status,2, status,0, pclath, cstack
 17776 ;; Tracked objects:
 17777 ;;		On entry : 1F/0
 17778 ;;		On exit  : 1F/0
 17779 ;;		Unchanged: 0/0
 17780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17785 ;;Total ram usage:        0 bytes
 17786 ;; Hardware stack levels used:    1
 17787 ;; Hardware stack levels required when called:    2
 17788 ;; This function calls:
 17789 ;;		_CLC_1_Interrupt
 17790 ;; This function is called by:
 17791 ;;		_INTERRUPT_InterruptManager
 17792 ;; This function uses a non-reentrant model
 17793 ;;
 17794                           
 17795                           
 17796                           ;psect for function _CLC1_ISR
 17797  150A                     _CLC1_ISR:	
 17798                           
 17799                           ;clc1.c: 91: CLC_1_Interrupt();
 17800                           
 17801                           ;incstack = 0
 17802                           ; Regs used in _CLC1_ISR: [wreg+status,2+status,0+pclath+cstack]
 17803  150A  250E               	fcall	_CLC_1_Interrupt
 17804                           
 17805                           ;clc1.c: 93: PIR3bits.CLC1IF = 0;
 17806  150B  0020               	movlb	0	; select bank0
 17807  150C  1013               	bcf	19,0	;volatile
 17808  150D  0008               	return
 17809  150E                     __end_of_CLC1_ISR:	
 17810  150E                     __ptext77:	
 17811 ;; *************** function _CLC_1_Interrupt *****************
 17812 ;; Defined at:
 17813 ;;		line 24 in file "NavKey.c"
 17814 ;; Parameters:    Size  Location     Type
 17815 ;;		None
 17816 ;; Auto vars:     Size  Location     Type
 17817 ;;		None
 17818 ;; Return value:  Size  Location     Type
 17819 ;;                  1    wreg      void 
 17820 ;; Registers used:
 17821 ;;		wreg, status,2, status,0, pclath, cstack
 17822 ;; Tracked objects:
 17823 ;;		On entry : 1F/0
 17824 ;;		On exit  : 1C/0
 17825 ;;		Unchanged: 0/0
 17826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17829 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17830 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17831 ;;Total ram usage:        4 bytes
 17832 ;; Hardware stack levels used:    1
 17833 ;; Hardware stack levels required when called:    1
 17834 ;; This function calls:
 17835 ;;		___fladd
 17836 ;;		___flge
 17837 ;;		i1_NavKeyStatusUpdate
 17838 ;;		i1_SetInterrupt
 17839 ;; This function is called by:
 17840 ;;		_CLC1_ISR
 17841 ;; This function uses a non-reentrant model
 17842 ;;
 17843                           
 17844                           
 17845                           ;psect for function _CLC_1_Interrupt
 17846  150E                     _CLC_1_Interrupt:	
 17847                           
 17848                           ;NavKey.c: 26: if (en_prev == 1)
 17849                           
 17850                           ;incstack = 0
 17851                           ; Regs used in _CLC_1_Interrupt: [wreg+status,2+status,0+pclath+cstack]
 17852  150E  0021               	movlb	1	; select bank1
 17853  150F  0B39               	decfsz	_en_prev^(0+128),w
 17854  1510  2D18               	goto	i1l5254
 17855                           
 17856                           ;NavKey.c: 27: if (en_deb < 50)
 17857  1511  3000               	movlw	0
 17858  1512  0230               	subwf	(_en_deb+1)^(0+128),w
 17859  1513  3032               	movlw	50
 17860  1514  1903               	skipnz
 17861  1515  022F               	subwf	_en_deb^(0+128),w
 17862  1516  1C03               	btfss	3,0
 17863  1517  0008               	return
 17864  1518                     i1l5254:	
 17865                           
 17866                           ;NavKey.c: 31: en_deb = 0;
 17867  1518  01AF               	clrf	_en_deb^(0+128)
 17868  1519  01B0               	clrf	(_en_deb+1)^(0+128)
 17869                           
 17870                           ;NavKey.c: 32: en_prev = 0;
 17871  151A  01B9               	clrf	_en_prev^(0+128)
 17872                           
 17873                           ;NavKey.c: 34: if (C_DTYPE == 0) {
 17874  151B  0020               	movlb	0	; select bank0
 17875  151C  0839               	movf	_C_DTYPE,w	;volatile
 17876  151D  1D03               	btfss	3,2
 17877  151E  2D4A               	goto	i1l5272
 17878                           
 17879                           ;NavKey.c: 35: CVAL.val = CVAL.val + ISTEP.val;
 17880  151F  082C               	movf	_CVAL,w	;volatile
 17881  1520  0720               	addwf	_ISTEP,w	;volatile
 17882  1521  00D2               	movwf	??_CLC_1_Interrupt
 17883  1522  082D               	movf	_CVAL+1,w	;volatile
 17884  1523  3D21               	addwfc	_ISTEP+1,w	;volatile
 17885  1524  00D3               	movwf	??_CLC_1_Interrupt+1
 17886  1525  082E               	movf	_CVAL+2,w	;volatile
 17887  1526  3D22               	addwfc	_ISTEP+2,w	;volatile
 17888  1527  00D4               	movwf	??_CLC_1_Interrupt+2
 17889  1528  082F               	movf	_CVAL+3,w	;volatile
 17890  1529  3D23               	addwfc	_ISTEP+3,w	;volatile
 17891  152A  00D5               	movwf	??_CLC_1_Interrupt+3
 17892  152B  00AF               	movwf	_CVAL+3	;volatile
 17893  152C  0854               	movf	??_CLC_1_Interrupt+2,w
 17894  152D  00AE               	movwf	_CVAL+2	;volatile
 17895  152E  0853               	movf	??_CLC_1_Interrupt+1,w
 17896  152F  00AD               	movwf	_CVAL+1	;volatile
 17897  1530  0852               	movf	??_CLC_1_Interrupt,w
 17898  1531  00AC               	movwf	_CVAL	;volatile
 17899                           
 17900                           ;NavKey.c: 36: NavKeyStatusUpdate(S_RINC);
 17901  1532  3008               	movlw	8
 17902  1533  01F0               	clrf	i1NavKeyStatusUpdate@stat
 17903  1534  00F1               	movwf	i1NavKeyStatusUpdate@stat+1
 17904  1535  2621  3195         	fcall	i1_NavKeyStatusUpdate
 17905                           
 17906                           ;NavKey.c: 37: if (CVAL.val > CMAX.val) {
 17907  1537  082B               	movf	_CMAX+3,w	;volatile
 17908  1538  3A80               	xorlw	128
 17909  1539  00D2               	movwf	??_CLC_1_Interrupt
 17910  153A  082F               	movf	_CVAL+3,w	;volatile
 17911  153B  3A80               	xorlw	128
 17912  153C  0252               	subwf	??_CLC_1_Interrupt,w
 17913  153D  1D03               	skipz
 17914  153E  2D7C               	goto	L48
 17915  153F  082E               	movf	_CVAL+2,w	;volatile
 17916  1540  022A               	subwf	_CMAX+2,w	;volatile
 17917  1541  1D03               	skipz
 17918  1542  2D7C               	goto	L48
 17919  1543  082D               	movf	_CVAL+1,w	;volatile
 17920  1544  0229               	subwf	_CMAX+1,w	;volatile
 17921  1545  1D03               	skipz
 17922  1546  2D7C               	goto	L48
 17923  1547  082C               	movf	_CVAL,w	;volatile
 17924  1548  0228               	subwf	_CMAX,w	;volatile
 17925  1549  2D7C               	goto	L48
 17926  154A                     i1l5272:	
 17927                           ;NavKey.c: 42: CVAL.val = CMAX.val;
 17928                           
 17929                           ;NavKey.c: 41: } else {
 17930                           
 17931                           ;NavKey.c: 40: CVAL.val = CMIN.val;
 17932                           
 17933                           ;NavKey.c: 39: if (C_WRAPE == 1) {
 17934                           
 17935                           ;NavKey.c: 38: NavKeyStatusUpdate(S_RMAX);
 17936                           
 17937                           
 17938                           ;NavKey.c: 46: CVAL.fval = CVAL.fval + ISTEP.fval;
 17939  154A  0823               	movf	_ISTEP+3,w	;volatile
 17940  154B  00F3               	movwf	___fladd@b+3
 17941  154C  0822               	movf	_ISTEP+2,w	;volatile
 17942  154D  00F2               	movwf	___fladd@b+2
 17943  154E  0821               	movf	_ISTEP+1,w	;volatile
 17944  154F  00F1               	movwf	___fladd@b+1
 17945  1550  0820               	movf	_ISTEP,w	;volatile
 17946  1551  00F0               	movwf	___fladd@b
 17947  1552  082F               	movf	_CVAL+3,w	;volatile
 17948  1553  00F7               	movwf	___fladd@a+3
 17949  1554  082E               	movf	_CVAL+2,w	;volatile
 17950  1555  00F6               	movwf	___fladd@a+2
 17951  1556  082D               	movf	_CVAL+1,w	;volatile
 17952  1557  00F5               	movwf	___fladd@a+1
 17953  1558  082C               	movf	_CVAL,w	;volatile
 17954  1559  00F4               	movwf	___fladd@a
 17955  155A  2688  3195         	fcall	___fladd
 17956  155C  0873               	movf	?___fladd+3,w
 17957  155D  0020               	movlb	0	; select bank0
 17958  155E  00AF               	movwf	_CVAL+3	;volatile
 17959  155F  0872               	movf	?___fladd+2,w
 17960  1560  00AE               	movwf	_CVAL+2	;volatile
 17961  1561  0871               	movf	?___fladd+1,w
 17962  1562  00AD               	movwf	_CVAL+1	;volatile
 17963  1563  0870               	movf	?___fladd,w
 17964  1564  00AC               	movwf	_CVAL	;volatile
 17965                           
 17966                           ;NavKey.c: 47: NavKeyStatusUpdate(S_RINC);
 17967  1565  3008               	movlw	8
 17968  1566  01F0               	clrf	i1NavKeyStatusUpdate@stat
 17969  1567  00F1               	movwf	i1NavKeyStatusUpdate@stat+1
 17970  1568  2621  3195         	fcall	i1_NavKeyStatusUpdate
 17971                           
 17972                           ;NavKey.c: 48: if (CVAL.fval > CMAX.fval) {
 17973  156A  082B               	movf	_CMAX+3,w	;volatile
 17974  156B  00F3               	movwf	___flge@ff1+3
 17975  156C  082A               	movf	_CMAX+2,w	;volatile
 17976  156D  00F2               	movwf	___flge@ff1+2
 17977  156E  0829               	movf	_CMAX+1,w	;volatile
 17978  156F  00F1               	movwf	___flge@ff1+1
 17979  1570  0828               	movf	_CMAX,w	;volatile
 17980  1571  00F0               	movwf	___flge@ff1
 17981  1572  082F               	movf	_CVAL+3,w	;volatile
 17982  1573  00F7               	movwf	___flge@ff2+3
 17983  1574  082E               	movf	_CVAL+2,w	;volatile
 17984  1575  00F6               	movwf	___flge@ff2+2
 17985  1576  082D               	movf	_CVAL+1,w	;volatile
 17986  1577  00F5               	movwf	___flge@ff2+1
 17987  1578  082C               	movf	_CVAL,w	;volatile
 17988  1579  00F4               	movwf	___flge@ff2
 17989  157A  2626  3195         	fcall	___flge
 17990  157C                     L48:	
 17991  157C  1803               	btfsc	3,0
 17992  157D  2D95               	goto	i1l5282
 17993                           
 17994                           ;NavKey.c: 49: NavKeyStatusUpdate(S_RMAX);
 17995  157E  3020               	movlw	32
 17996  157F  01F0               	clrf	i1NavKeyStatusUpdate@stat
 17997  1580  00F1               	movwf	i1NavKeyStatusUpdate@stat+1
 17998  1581  2621  3195         	fcall	i1_NavKeyStatusUpdate
 17999                           
 18000                           ;NavKey.c: 50: if (C_WRAPE == 1) {
 18001  1583  0B3A               	decfsz	_C_WRAPE,w	;volatile
 18002  1584  2D8D               	goto	i1l5280
 18003                           
 18004                           ;NavKey.c: 51: CVAL.fval = CMIN.fval;
 18005  1585  0827               	movf	_CMIN+3,w	;volatile
 18006  1586  00AF               	movwf	_CVAL+3	;volatile
 18007  1587  0826               	movf	_CMIN+2,w	;volatile
 18008  1588  00AE               	movwf	_CVAL+2	;volatile
 18009  1589  0825               	movf	_CMIN+1,w	;volatile
 18010  158A  00AD               	movwf	_CVAL+1	;volatile
 18011  158B  0824               	movf	_CMIN,w	;volatile
 18012  158C  2D94               	goto	L47
 18013  158D                     i1l5280:	
 18014                           ;NavKey.c: 52: } else {
 18015                           
 18016                           
 18017                           ;NavKey.c: 53: CVAL.fval = CMAX.fval;
 18018  158D  082B               	movf	_CMAX+3,w	;volatile
 18019  158E  00AF               	movwf	_CVAL+3	;volatile
 18020  158F  082A               	movf	_CMAX+2,w	;volatile
 18021  1590  00AE               	movwf	_CVAL+2	;volatile
 18022  1591  0829               	movf	_CMAX+1,w	;volatile
 18023  1592  00AD               	movwf	_CVAL+1	;volatile
 18024  1593  0828               	movf	_CMAX,w	;volatile
 18025  1594                     L47:	
 18026  1594  00AC               	movwf	_CVAL	;volatile
 18027  1595                     i1l5282:	
 18028                           
 18029                           ;NavKey.c: 54: };NavKey.c: 55: };NavKey.c: 56: };NavKey.c: 59: SetInterrupt();
 18030  1595  27D7               	fcall	i1_SetInterrupt
 18031  1596  0008               	return
 18032  1597                     __end_of_CLC_1_Interrupt:	
 18033  1597                     __ptext74:	
 18034 ;; *************** function _CLC_2_Interrupt *****************
 18035 ;; Defined at:
 18036 ;;		line 66 in file "NavKey.c"
 18037 ;; Parameters:    Size  Location     Type
 18038 ;;		None
 18039 ;; Auto vars:     Size  Location     Type
 18040 ;;		None
 18041 ;; Return value:  Size  Location     Type
 18042 ;;                  1    wreg      void 
 18043 ;; Registers used:
 18044 ;;		wreg, status,2, status,0, pclath, cstack
 18045 ;; Tracked objects:
 18046 ;;		On entry : 1F/0
 18047 ;;		On exit  : 1C/0
 18048 ;;		Unchanged: 0/0
 18049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18052 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18053 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18054 ;;Total ram usage:        4 bytes
 18055 ;; Hardware stack levels used:    1
 18056 ;; Hardware stack levels required when called:    2
 18057 ;; This function calls:
 18058 ;;		___flge
 18059 ;;		___flsub
 18060 ;;		i1_NavKeyStatusUpdate
 18061 ;;		i1_SetInterrupt
 18062 ;; This function is called by:
 18063 ;;		_CLC2_ISR
 18064 ;; This function uses a non-reentrant model
 18065 ;;
 18066                           
 18067                           
 18068                           ;psect for function _CLC_2_Interrupt
 18069  1597                     _CLC_2_Interrupt:	
 18070                           
 18071                           ;NavKey.c: 68: if (en_prev == 0)
 18072                           
 18073                           ;incstack = 0
 18074                           ; Regs used in _CLC_2_Interrupt: [wreg+status,2+status,0+pclath+cstack]
 18075  1597  0021               	movlb	1	; select bank1
 18076  1598  0839               	movf	_en_prev^(0+128),w
 18077  1599  1D03               	btfss	3,2
 18078  159A  2DA2               	goto	i1l5176
 18079                           
 18080                           ;NavKey.c: 69: if (en_deb < 50)
 18081  159B  3000               	movlw	0
 18082  159C  0230               	subwf	(_en_deb+1)^(0+128),w
 18083  159D  3032               	movlw	50
 18084  159E  1903               	skipnz
 18085  159F  022F               	subwf	_en_deb^(0+128),w
 18086  15A0  1C03               	btfss	3,0
 18087  15A1  0008               	return
 18088  15A2                     i1l5176:	
 18089                           
 18090                           ;NavKey.c: 72: en_deb = 0;
 18091  15A2  01AF               	clrf	_en_deb^(0+128)
 18092  15A3  01B0               	clrf	(_en_deb+1)^(0+128)
 18093                           
 18094                           ;NavKey.c: 73: en_prev = 1;
 18095  15A4  01B9               	clrf	_en_prev^(0+128)
 18096  15A5  0AB9               	incf	_en_prev^(0+128),f
 18097                           
 18098                           ;NavKey.c: 75: if (C_DTYPE == 0) {
 18099  15A6  0020               	movlb	0	; select bank0
 18100  15A7  0839               	movf	_C_DTYPE,w	;volatile
 18101  15A8  1D03               	btfss	3,2
 18102  15A9  2DD5               	goto	i1l5196
 18103                           
 18104                           ;NavKey.c: 77: CVAL.val = CVAL.val - ISTEP.val;
 18105  15AA  0820               	movf	_ISTEP,w	;volatile
 18106  15AB  022C               	subwf	_CVAL,w	;volatile
 18107  15AC  00DA               	movwf	??_CLC_2_Interrupt
 18108  15AD  0821               	movf	_ISTEP+1,w	;volatile
 18109  15AE  3B2D               	subwfb	_CVAL+1,w	;volatile
 18110  15AF  00DB               	movwf	??_CLC_2_Interrupt+1
 18111  15B0  0822               	movf	_ISTEP+2,w	;volatile
 18112  15B1  3B2E               	subwfb	_CVAL+2,w	;volatile
 18113  15B2  00DC               	movwf	??_CLC_2_Interrupt+2
 18114  15B3  0823               	movf	_ISTEP+3,w	;volatile
 18115  15B4  3B2F               	subwfb	_CVAL+3,w	;volatile
 18116  15B5  00DD               	movwf	??_CLC_2_Interrupt+3
 18117  15B6  00AF               	movwf	_CVAL+3	;volatile
 18118  15B7  085C               	movf	??_CLC_2_Interrupt+2,w
 18119  15B8  00AE               	movwf	_CVAL+2	;volatile
 18120  15B9  085B               	movf	??_CLC_2_Interrupt+1,w
 18121  15BA  00AD               	movwf	_CVAL+1	;volatile
 18122  15BB  085A               	movf	??_CLC_2_Interrupt,w
 18123  15BC  00AC               	movwf	_CVAL	;volatile
 18124                           
 18125                           ;NavKey.c: 78: NavKeyStatusUpdate(S_RDEC);
 18126  15BD  3010               	movlw	16
 18127  15BE  01F0               	clrf	i1NavKeyStatusUpdate@stat
 18128  15BF  00F1               	movwf	i1NavKeyStatusUpdate@stat+1
 18129  15C0  2621  3195         	fcall	i1_NavKeyStatusUpdate
 18130                           
 18131                           ;NavKey.c: 79: if (CVAL.val < CMIN.val) {
 18132  15C2  082F               	movf	_CVAL+3,w	;volatile
 18133  15C3  3A80               	xorlw	128
 18134  15C4  00DA               	movwf	??_CLC_2_Interrupt
 18135  15C5  0827               	movf	_CMIN+3,w	;volatile
 18136  15C6  3A80               	xorlw	128
 18137  15C7  025A               	subwf	??_CLC_2_Interrupt,w
 18138  15C8  1D03               	skipz
 18139  15C9  2E06               	goto	L46
 18140  15CA  0826               	movf	_CMIN+2,w	;volatile
 18141  15CB  022E               	subwf	_CVAL+2,w	;volatile
 18142  15CC  1D03               	skipz
 18143  15CD  2E06               	goto	L46
 18144  15CE  0825               	movf	_CMIN+1,w	;volatile
 18145  15CF  022D               	subwf	_CVAL+1,w	;volatile
 18146  15D0  1D03               	skipz
 18147  15D1  2E06               	goto	L46
 18148  15D2  0824               	movf	_CMIN,w	;volatile
 18149  15D3  022C               	subwf	_CVAL,w	;volatile
 18150  15D4  2E06               	goto	L46
 18151  15D5                     i1l5196:	
 18152                           ;NavKey.c: 84: CVAL.val = CMIN.val;
 18153                           
 18154                           ;NavKey.c: 83: } else {
 18155                           
 18156                           ;NavKey.c: 82: CVAL.val = CMAX.val;
 18157                           
 18158                           ;NavKey.c: 81: if (C_WRAPE == 1) {
 18159                           
 18160                           ;NavKey.c: 80: NavKeyStatusUpdate(S_RMIN);
 18161                           
 18162                           
 18163                           ;NavKey.c: 88: CVAL.fval = CVAL.fval - ISTEP.fval;
 18164  15D5  0823               	movf	_ISTEP+3,w	;volatile
 18165  15D6  00D5               	movwf	___flsub@a+3
 18166  15D7  0822               	movf	_ISTEP+2,w	;volatile
 18167  15D8  00D4               	movwf	___flsub@a+2
 18168  15D9  0821               	movf	_ISTEP+1,w	;volatile
 18169  15DA  00D3               	movwf	___flsub@a+1
 18170  15DB  0820               	movf	_ISTEP,w	;volatile
 18171  15DC  00D2               	movwf	___flsub@a
 18172  15DD  082F               	movf	_CVAL+3,w	;volatile
 18173  15DE  00D9               	movwf	___flsub@b+3
 18174  15DF  082E               	movf	_CVAL+2,w	;volatile
 18175  15E0  00D8               	movwf	___flsub@b+2
 18176  15E1  082D               	movf	_CVAL+1,w	;volatile
 18177  15E2  00D7               	movwf	___flsub@b+1
 18178  15E3  082C               	movf	_CVAL,w	;volatile
 18179  15E4  00D6               	movwf	___flsub@b
 18180  15E5  27E3  3195         	fcall	___flsub
 18181  15E7  0855               	movf	?___flsub+3,w
 18182  15E8  00AF               	movwf	_CVAL+3	;volatile
 18183  15E9  0854               	movf	?___flsub+2,w
 18184  15EA  00AE               	movwf	_CVAL+2	;volatile
 18185  15EB  0853               	movf	?___flsub+1,w
 18186  15EC  00AD               	movwf	_CVAL+1	;volatile
 18187  15ED  0852               	movf	?___flsub,w
 18188  15EE  00AC               	movwf	_CVAL	;volatile
 18189                           
 18190                           ;NavKey.c: 89: NavKeyStatusUpdate(S_RDEC);
 18191  15EF  3010               	movlw	16
 18192  15F0  01F0               	clrf	i1NavKeyStatusUpdate@stat
 18193  15F1  00F1               	movwf	i1NavKeyStatusUpdate@stat+1
 18194  15F2  2621  3195         	fcall	i1_NavKeyStatusUpdate
 18195                           
 18196                           ;NavKey.c: 90: if (CVAL.fval < CMIN.fval) {
 18197  15F4  082F               	movf	_CVAL+3,w	;volatile
 18198  15F5  00F3               	movwf	___flge@ff1+3
 18199  15F6  082E               	movf	_CVAL+2,w	;volatile
 18200  15F7  00F2               	movwf	___flge@ff1+2
 18201  15F8  082D               	movf	_CVAL+1,w	;volatile
 18202  15F9  00F1               	movwf	___flge@ff1+1
 18203  15FA  082C               	movf	_CVAL,w	;volatile
 18204  15FB  00F0               	movwf	___flge@ff1
 18205  15FC  0827               	movf	_CMIN+3,w	;volatile
 18206  15FD  00F7               	movwf	___flge@ff2+3
 18207  15FE  0826               	movf	_CMIN+2,w	;volatile
 18208  15FF  00F6               	movwf	___flge@ff2+2
 18209  1600  0825               	movf	_CMIN+1,w	;volatile
 18210  1601  00F5               	movwf	___flge@ff2+1
 18211  1602  0824               	movf	_CMIN,w	;volatile
 18212  1603  00F4               	movwf	___flge@ff2
 18213  1604  2626  3195         	fcall	___flge
 18214  1606                     L46:	
 18215  1606  1803               	btfsc	3,0
 18216  1607  2E1F               	goto	i1l5206
 18217                           
 18218                           ;NavKey.c: 91: NavKeyStatusUpdate(S_RMIN);
 18219  1608  3040               	movlw	64
 18220  1609  01F0               	clrf	i1NavKeyStatusUpdate@stat
 18221  160A  00F1               	movwf	i1NavKeyStatusUpdate@stat+1
 18222  160B  2621  3195         	fcall	i1_NavKeyStatusUpdate
 18223                           
 18224                           ;NavKey.c: 92: if (C_WRAPE == 1) {
 18225  160D  0B3A               	decfsz	_C_WRAPE,w	;volatile
 18226  160E  2E17               	goto	i1l5204
 18227                           
 18228                           ;NavKey.c: 93: CVAL.fval = CMAX.fval;
 18229  160F  082B               	movf	_CMAX+3,w	;volatile
 18230  1610  00AF               	movwf	_CVAL+3	;volatile
 18231  1611  082A               	movf	_CMAX+2,w	;volatile
 18232  1612  00AE               	movwf	_CVAL+2	;volatile
 18233  1613  0829               	movf	_CMAX+1,w	;volatile
 18234  1614  00AD               	movwf	_CVAL+1	;volatile
 18235  1615  0828               	movf	_CMAX,w	;volatile
 18236  1616  2E1E               	goto	L45
 18237  1617                     i1l5204:	
 18238                           ;NavKey.c: 94: } else {
 18239                           
 18240                           
 18241                           ;NavKey.c: 96: CVAL.fval = CMIN.fval;
 18242  1617  0827               	movf	_CMIN+3,w	;volatile
 18243  1618  00AF               	movwf	_CVAL+3	;volatile
 18244  1619  0826               	movf	_CMIN+2,w	;volatile
 18245  161A  00AE               	movwf	_CVAL+2	;volatile
 18246  161B  0825               	movf	_CMIN+1,w	;volatile
 18247  161C  00AD               	movwf	_CVAL+1	;volatile
 18248  161D  0824               	movf	_CMIN,w	;volatile
 18249  161E                     L45:	
 18250  161E  00AC               	movwf	_CVAL	;volatile
 18251  161F                     i1l5206:	
 18252                           
 18253                           ;NavKey.c: 97: };NavKey.c: 98: };NavKey.c: 99: };NavKey.c: 101: SetInterrupt();
 18254  161F  27D7               	fcall	i1_SetInterrupt
 18255  1620  0008               	return
 18256  1621                     __end_of_CLC_2_Interrupt:	
 18257  1621                     __ptext79:	
 18258 ;; *************** function i1_NavKeyStatusUpdate *****************
 18259 ;; Defined at:
 18260 ;;		line 102 in file "DataVariable.c"
 18261 ;; Parameters:    Size  Location     Type
 18262 ;;  stat            2    0[COMMON] enum E68
 18263 ;; Auto vars:     Size  Location     Type
 18264 ;;		None
 18265 ;; Return value:  Size  Location     Type
 18266 ;;                  1    wreg      void 
 18267 ;; Registers used:
 18268 ;;		wreg
 18269 ;; Tracked objects:
 18270 ;;		On entry : 1F/0
 18271 ;;		On exit  : 1F/0
 18272 ;;		Unchanged: 0/0
 18273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18274 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18277 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18278 ;;Total ram usage:        2 bytes
 18279 ;; Hardware stack levels used:    1
 18280 ;; This function calls:
 18281 ;;		Nothing
 18282 ;; This function is called by:
 18283 ;;		_CLC_1_Interrupt
 18284 ;;		_CLC_2_Interrupt
 18285 ;; This function uses a non-reentrant model
 18286 ;;
 18287                           
 18288                           
 18289                           ;psect for function i1_NavKeyStatusUpdate
 18290  1621                     i1_NavKeyStatusUpdate:	
 18291                           
 18292                           ;DataVariable.c: 103: NSTATUS.val |= (uint16_t) stat;
 18293                           
 18294                           ;incstack = 0
 18295                           ; Regs used in i1_NavKeyStatusUpdate: [wreg]
 18296  1621  0870               	movf	i1NavKeyStatusUpdate@stat,w
 18297  1622  04B2               	iorwf	_NSTATUS,f	;volatile
 18298  1623  0871               	movf	i1NavKeyStatusUpdate@stat+1,w
 18299  1624  04B3               	iorwf	_NSTATUS+1,f	;volatile
 18300  1625  0008               	return
 18301  1626                     __end_ofi1_NavKeyStatusUpdate:	
 18302  1626                     __ptext80:	
 18303 ;; *************** function ___flge *****************
 18304 ;; Defined at:
 18305 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
 18306 ;; Parameters:    Size  Location     Type
 18307 ;;  ff1             4    0[COMMON] void 
 18308 ;;  ff2             4    4[COMMON] void 
 18309 ;; Auto vars:     Size  Location     Type
 18310 ;;		None
 18311 ;; Return value:  Size  Location     Type
 18312 ;;		None               void
 18313 ;; Registers used:
 18314 ;;		wreg, status,2, status,0
 18315 ;; Tracked objects:
 18316 ;;		On entry : 1F/0
 18317 ;;		On exit  : 1F/0
 18318 ;;		Unchanged: 1F/0
 18319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18320 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18322 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18323 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18324 ;;Total ram usage:       12 bytes
 18325 ;; Hardware stack levels used:    1
 18326 ;; This function calls:
 18327 ;;		Nothing
 18328 ;; This function is called by:
 18329 ;;		_CLC_1_Interrupt
 18330 ;;		_CLC_2_Interrupt
 18331 ;; This function uses a non-reentrant model
 18332 ;;
 18333                           
 18334                           
 18335                           ;psect for function ___flge
 18336  1626                     ___flge:	
 18337                           
 18338                           ;incstack = 0
 18339                           ; Regs used in ___flge: [wreg+status,2+status,0]
 18340  1626  3080               	movlw	128
 18341  1627  01F8               	clrf	??___flge
 18342  1628  01F9               	clrf	??___flge+1
 18343  1629  0572               	andwf	___flge@ff1+2,w
 18344  162A  00FA               	movwf	??___flge+2
 18345  162B  307F               	movlw	127
 18346  162C  0573               	andwf	___flge@ff1+3,w
 18347  162D  00FB               	movwf	??___flge+3
 18348  162E  047A               	iorwf	??___flge+2,w
 18349  162F  0479               	iorwf	??___flge+1,w
 18350  1630  0478               	iorwf	??___flge,w
 18351  1631  1D03               	skipz
 18352  1632  2E37               	goto	i1l5004
 18353  1633  01F0               	clrf	___flge@ff1
 18354  1634  01F1               	clrf	___flge@ff1+1
 18355  1635  01F2               	clrf	___flge@ff1+2
 18356  1636  01F3               	clrf	___flge@ff1+3
 18357  1637                     i1l5004:	
 18358  1637  3080               	movlw	128
 18359  1638  01F8               	clrf	??___flge
 18360  1639  01F9               	clrf	??___flge+1
 18361  163A  0576               	andwf	___flge@ff2+2,w
 18362  163B  00FA               	movwf	??___flge+2
 18363  163C  307F               	movlw	127
 18364  163D  0577               	andwf	___flge@ff2+3,w
 18365  163E  00FB               	movwf	??___flge+3
 18366  163F  047A               	iorwf	??___flge+2,w
 18367  1640  0479               	iorwf	??___flge+1,w
 18368  1641  0478               	iorwf	??___flge,w
 18369  1642  1D03               	skipz
 18370  1643  2E48               	goto	i1l1718
 18371  1644  01F4               	clrf	___flge@ff2
 18372  1645  01F5               	clrf	___flge@ff2+1
 18373  1646  01F6               	clrf	___flge@ff2+2
 18374  1647  01F7               	clrf	___flge@ff2+3
 18375  1648                     i1l1718:	
 18376  1648  1FF3               	btfss	___flge@ff1+3,7
 18377  1649  2E5F               	goto	i1l5010
 18378  164A  3080               	movlw	128
 18379  164B  01F8               	clrf	??___flge
 18380  164C  01F9               	clrf	??___flge+1
 18381  164D  01FA               	clrf	??___flge+2
 18382  164E  00FB               	movwf	??___flge+3
 18383  164F  0870               	movf	___flge@ff1,w
 18384  1650  02F8               	subwf	??___flge,f
 18385  1651  0871               	movf	___flge@ff1+1,w
 18386  1652  3BF9               	subwfb	??___flge+1,f
 18387  1653  0872               	movf	___flge@ff1+2,w
 18388  1654  3BFA               	subwfb	??___flge+2,f
 18389  1655  0873               	movf	___flge@ff1+3,w
 18390  1656  3BFB               	subwfb	??___flge+3,f
 18391  1657  087B               	movf	??___flge+3,w
 18392  1658  00F3               	movwf	___flge@ff1+3
 18393  1659  087A               	movf	??___flge+2,w
 18394  165A  00F2               	movwf	___flge@ff1+2
 18395  165B  0879               	movf	??___flge+1,w
 18396  165C  00F1               	movwf	___flge@ff1+1
 18397  165D  0878               	movf	??___flge,w
 18398  165E  00F0               	movwf	___flge@ff1
 18399  165F                     i1l5010:	
 18400  165F  1FF7               	btfss	___flge@ff2+3,7
 18401  1660  2E76               	goto	i1l1720
 18402  1661  3080               	movlw	128
 18403  1662  01F8               	clrf	??___flge
 18404  1663  01F9               	clrf	??___flge+1
 18405  1664  01FA               	clrf	??___flge+2
 18406  1665  00FB               	movwf	??___flge+3
 18407  1666  0874               	movf	___flge@ff2,w
 18408  1667  02F8               	subwf	??___flge,f
 18409  1668  0875               	movf	___flge@ff2+1,w
 18410  1669  3BF9               	subwfb	??___flge+1,f
 18411  166A  0876               	movf	___flge@ff2+2,w
 18412  166B  3BFA               	subwfb	??___flge+2,f
 18413  166C  0877               	movf	___flge@ff2+3,w
 18414  166D  3BFB               	subwfb	??___flge+3,f
 18415  166E  087B               	movf	??___flge+3,w
 18416  166F  00F7               	movwf	___flge@ff2+3
 18417  1670  087A               	movf	??___flge+2,w
 18418  1671  00F6               	movwf	___flge@ff2+2
 18419  1672  0879               	movf	??___flge+1,w
 18420  1673  00F5               	movwf	___flge@ff2+1
 18421  1674  0878               	movf	??___flge,w
 18422  1675  00F4               	movwf	___flge@ff2
 18423  1676                     i1l1720:	
 18424  1676  3080               	movlw	128
 18425  1677  06F3               	xorwf	___flge@ff1+3,f
 18426  1678  06F7               	xorwf	___flge@ff2+3,f
 18427  1679  0877               	movf	___flge@ff2+3,w
 18428  167A  0273               	subwf	___flge@ff1+3,w
 18429  167B  1D03               	skipz
 18430  167C  0008               	return
 18431  167D  0876               	movf	___flge@ff2+2,w
 18432  167E  0272               	subwf	___flge@ff1+2,w
 18433  167F  1D03               	skipz
 18434  1680  0008               	return
 18435  1681  0875               	movf	___flge@ff2+1,w
 18436  1682  0271               	subwf	___flge@ff1+1,w
 18437  1683  1D03               	skipz
 18438  1684  0008               	return
 18439  1685  0874               	movf	___flge@ff2,w
 18440  1686  0270               	subwf	___flge@ff1,w
 18441  1687  0008               	return
 18442  1688                     __end_of___flge:	
 18443  1688                     __ptext81:	
 18444 ;; *************** function ___fladd *****************
 18445 ;; Defined at:
 18446 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
 18447 ;; Parameters:    Size  Location     Type
 18448 ;;  b               4    0[COMMON] void 
 18449 ;;  a               4    4[COMMON] void 
 18450 ;; Auto vars:     Size  Location     Type
 18451 ;;  grs             1   11[COMMON] unsigned char 
 18452 ;;  bexp            1   10[COMMON] unsigned char 
 18453 ;;  aexp            1    9[COMMON] unsigned char 
 18454 ;;  signs           1    8[COMMON] unsigned char 
 18455 ;; Return value:  Size  Location     Type
 18456 ;;                  4    0[COMMON] unsigned char 
 18457 ;; Registers used:
 18458 ;;		wreg, status,2, status,0
 18459 ;; Tracked objects:
 18460 ;;		On entry : 1F/0
 18461 ;;		On exit  : 0/0
 18462 ;;		Unchanged: 0/0
 18463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18464 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18465 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18466 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18467 ;;      Totals:        12       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18468 ;;Total ram usage:       20 bytes
 18469 ;; Hardware stack levels used:    1
 18470 ;; This function calls:
 18471 ;;		Nothing
 18472 ;; This function is called by:
 18473 ;;		_CLC_1_Interrupt
 18474 ;;		___flsub
 18475 ;; This function uses a non-reentrant model
 18476 ;;
 18477                           
 18478                           
 18479                           ;psect for function ___fladd
 18480  1688                     ___fladd:	
 18481                           
 18482                           ;incstack = 0
 18483                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 18484  1688  0873               	movf	___fladd@b+3,w
 18485  1689  00F8               	movwf	___fladd@signs
 18486  168A  3080               	movlw	128
 18487  168B  05F8               	andwf	___fladd@signs,f
 18488  168C  3573               	lslf	___fladd@b+3,w
 18489  168D  00FA               	movwf	___fladd@bexp
 18490  168E  1BF2               	btfsc	___fladd@b+2,7
 18491  168F  147A               	bsf	___fladd@bexp,0
 18492  1690  087A               	movf	___fladd@bexp,w
 18493  1691  1903               	btfsc	3,2
 18494  1692  2E9B               	goto	i1l1829
 18495  1693  0F7A               	incfsz	___fladd@bexp,w
 18496  1694  2E99               	goto	i1l1830
 18497  1695  01F0               	clrf	___fladd@b
 18498  1696  01F1               	clrf	___fladd@b+1
 18499  1697  01F2               	clrf	___fladd@b+2
 18500  1698  01F3               	clrf	___fladd@b+3
 18501  1699                     i1l1830:	
 18502  1699  17F2               	bsf	___fladd@b+2,7
 18503  169A  2E9E               	goto	L50
 18504  169B                     i1l1829:	
 18505  169B  01F0               	clrf	___fladd@b
 18506  169C  01F1               	clrf	___fladd@b+1
 18507  169D  01F2               	clrf	___fladd@b+2
 18508  169E                     L50:	
 18509  169E  01F3               	clrf	___fladd@b+3
 18510  169F  0877               	movf	___fladd@a+3,w
 18511  16A0  00F9               	movwf	___fladd@aexp
 18512  16A1  3080               	movlw	128
 18513  16A2  05F9               	andwf	___fladd@aexp,f
 18514  16A3  0879               	movf	___fladd@aexp,w
 18515  16A4  0678               	xorwf	___fladd@signs,w
 18516  16A5  1D03               	btfss	3,2
 18517  16A6  1778               	bsf	___fladd@signs,6
 18518  16A7  3577               	lslf	___fladd@a+3,w
 18519  16A8  00F9               	movwf	___fladd@aexp
 18520  16A9  1BF6               	btfsc	___fladd@a+2,7
 18521  16AA  1479               	bsf	___fladd@aexp,0
 18522  16AB  0879               	movf	___fladd@aexp,w
 18523  16AC  1903               	btfsc	3,2
 18524  16AD  2EB6               	goto	i1l1834
 18525  16AE  0F79               	incfsz	___fladd@aexp,w
 18526  16AF  2EB4               	goto	i1l1835
 18527  16B0  01F4               	clrf	___fladd@a
 18528  16B1  01F5               	clrf	___fladd@a+1
 18529  16B2  01F6               	clrf	___fladd@a+2
 18530  16B3  01F7               	clrf	___fladd@a+3
 18531  16B4                     i1l1835:	
 18532  16B4  17F6               	bsf	___fladd@a+2,7
 18533  16B5  2EB9               	goto	L51
 18534  16B6                     i1l1834:	
 18535  16B6  01F4               	clrf	___fladd@a
 18536  16B7  01F5               	clrf	___fladd@a+1
 18537  16B8  01F6               	clrf	___fladd@a+2
 18538  16B9                     L51:	
 18539  16B9  01F7               	clrf	___fladd@a+3
 18540  16BA  087A               	movf	___fladd@bexp,w
 18541  16BB  0279               	subwf	___fladd@aexp,w
 18542  16BC  1803               	skipnc
 18543  16BD  2EE0               	goto	i1l4616
 18544  16BE  1F78               	btfss	___fladd@signs,6
 18545  16BF  2EC2               	goto	i1l4586
 18546  16C0  3080               	movlw	128
 18547  16C1  06F8               	xorwf	___fladd@signs,f
 18548  16C2                     i1l4586:	
 18549  16C2  087A               	movf	___fladd@bexp,w
 18550  16C3  00FB               	movwf	___fladd@grs
 18551  16C4  0879               	movf	___fladd@aexp,w
 18552  16C5  00FA               	movwf	___fladd@bexp
 18553  16C6  087B               	movf	___fladd@grs,w
 18554  16C7  00F9               	movwf	___fladd@aexp
 18555  16C8  0870               	movf	___fladd@b,w
 18556  16C9  00FB               	movwf	___fladd@grs
 18557  16CA  0874               	movf	___fladd@a,w
 18558  16CB  00F0               	movwf	___fladd@b
 18559  16CC  087B               	movf	___fladd@grs,w
 18560  16CD  00F4               	movwf	___fladd@a
 18561  16CE  0871               	movf	___fladd@b+1,w
 18562  16CF  00FB               	movwf	___fladd@grs
 18563  16D0  0875               	movf	___fladd@a+1,w
 18564  16D1  00F1               	movwf	___fladd@b+1
 18565  16D2  087B               	movf	___fladd@grs,w
 18566  16D3  00F5               	movwf	___fladd@a+1
 18567  16D4  0872               	movf	___fladd@b+2,w
 18568  16D5  00FB               	movwf	___fladd@grs
 18569  16D6  0876               	movf	___fladd@a+2,w
 18570  16D7  00F2               	movwf	___fladd@b+2
 18571  16D8  087B               	movf	___fladd@grs,w
 18572  16D9  00F6               	movwf	___fladd@a+2
 18573  16DA  0873               	movf	___fladd@b+3,w
 18574  16DB  00FB               	movwf	___fladd@grs
 18575  16DC  0877               	movf	___fladd@a+3,w
 18576  16DD  00F3               	movwf	___fladd@b+3
 18577  16DE  087B               	movf	___fladd@grs,w
 18578  16DF  00F7               	movwf	___fladd@a+3
 18579  16E0                     i1l4616:	
 18580  16E0  01FB               	clrf	___fladd@grs
 18581  16E1  0879               	movf	___fladd@aexp,w
 18582  16E2  00CA               	movwf	??___fladd
 18583  16E3  01CB               	clrf	??___fladd+1
 18584  16E4  084B               	movf	??___fladd+1,w
 18585  16E5  00CD               	movwf	??___fladd+3
 18586  16E6  087A               	movf	___fladd@bexp,w
 18587  16E7  024A               	subwf	??___fladd,w
 18588  16E8  00CC               	movwf	??___fladd+2
 18589  16E9  1C03               	skipc
 18590  16EA  03CD               	decf	??___fladd+3,f
 18591  16EB  084D               	movf	??___fladd+3,w
 18592  16EC  3A80               	xorlw	128
 18593  16ED  00CE               	movwf	??___fladd+4
 18594  16EE  3080               	movlw	128
 18595  16EF  024E               	subwf	??___fladd+4,w
 18596  16F0  1D03               	skipz
 18597  16F1  2EF4               	goto	u236_25
 18598  16F2  301A               	movlw	26
 18599  16F3  024C               	subwf	??___fladd+2,w
 18600  16F4                     u236_25:	
 18601  16F4  1C03               	skipc
 18602  16F5  2F15               	goto	i1l4630
 18603  16F6  0873               	movf	___fladd@b+3,w
 18604  16F7  0472               	iorwf	___fladd@b+2,w
 18605  16F8  0471               	iorwf	___fladd@b+1,w
 18606  16F9  0470               	iorwf	___fladd@b,w
 18607  16FA  1903               	btfsc	3,2
 18608  16FB  2EFE               	goto	u237_20
 18609  16FC  3001               	movlw	1
 18610  16FD  2EFF               	goto	u238_20
 18611  16FE                     u237_20:	
 18612  16FE  3000               	movlw	0
 18613  16FF                     u238_20:	
 18614  16FF  00FB               	movwf	___fladd@grs
 18615  1700  01F0               	clrf	___fladd@b
 18616  1701  01F1               	clrf	___fladd@b+1
 18617  1702  01F2               	clrf	___fladd@b+2
 18618  1703  01F3               	clrf	___fladd@b+3
 18619  1704  0879               	movf	___fladd@aexp,w
 18620  1705  00FA               	movwf	___fladd@bexp
 18621  1706  2F19               	goto	i1l1840
 18622  1707                     i1l1842:	
 18623  1707  1C7B               	btfss	___fladd@grs,0
 18624  1708  2F0D               	goto	i1l1843
 18625  1709  367B               	lsrf	___fladd@grs,w
 18626  170A  3801               	iorlw	1
 18627  170B  00FB               	movwf	___fladd@grs
 18628  170C  2F0E               	goto	i1l1844
 18629  170D                     i1l1843:	
 18630  170D  36FB               	lsrf	___fladd@grs,f
 18631  170E                     i1l1844:	
 18632  170E  1870               	btfsc	___fladd@b,0
 18633  170F  17FB               	bsf	___fladd@grs,7
 18634  1710  37F3               	asrf	___fladd@b+3,f
 18635  1711  0CF2               	rrf	___fladd@b+2,f
 18636  1712  0CF1               	rrf	___fladd@b+1,f
 18637  1713  0CF0               	rrf	___fladd@b,f
 18638  1714  0AFA               	incf	___fladd@bexp,f
 18639  1715                     i1l4630:	
 18640  1715  0879               	movf	___fladd@aexp,w
 18641  1716  027A               	subwf	___fladd@bexp,w
 18642  1717  1C03               	skipc
 18643  1718  2F07               	goto	i1l1842
 18644  1719                     i1l1840:	
 18645  1719  1B78               	btfsc	___fladd@signs,6
 18646  171A  2F3C               	goto	i1l4648
 18647  171B  087A               	movf	___fladd@bexp,w
 18648  171C  1D03               	btfss	3,2
 18649  171D  2F23               	goto	i1l4636
 18650  171E  01F0               	clrf	?___fladd
 18651  171F  01F1               	clrf	?___fladd+1
 18652  1720  01F2               	clrf	?___fladd+2
 18653  1721  01F3               	clrf	?___fladd+3
 18654  1722  0008               	return
 18655  1723                     i1l4636:	
 18656  1723  0874               	movf	___fladd@a,w
 18657  1724  07F0               	addwf	___fladd@b,f
 18658  1725  0875               	movf	___fladd@a+1,w
 18659  1726  3DF1               	addwfc	___fladd@b+1,f
 18660  1727  0876               	movf	___fladd@a+2,w
 18661  1728  3DF2               	addwfc	___fladd@b+2,f
 18662  1729  0877               	movf	___fladd@a+3,w
 18663  172A  3DF3               	addwfc	___fladd@b+3,f
 18664  172B  1C73               	btfss	___fladd@b+3,0
 18665  172C  2FA5               	goto	i1l4678
 18666  172D  1C7B               	btfss	___fladd@grs,0
 18667  172E  2F33               	goto	i1l1851
 18668  172F  367B               	lsrf	___fladd@grs,w
 18669  1730  3801               	iorlw	1
 18670  1731  00FB               	movwf	___fladd@grs
 18671  1732  2F34               	goto	i1l1852
 18672  1733                     i1l1851:	
 18673  1733  36FB               	lsrf	___fladd@grs,f
 18674  1734                     i1l1852:	
 18675  1734  1870               	btfsc	___fladd@b,0
 18676  1735  17FB               	bsf	___fladd@grs,7
 18677  1736  37F3               	asrf	___fladd@b+3,f
 18678  1737  0CF2               	rrf	___fladd@b+2,f
 18679  1738  0CF1               	rrf	___fladd@b+1,f
 18680  1739  0CF0               	rrf	___fladd@b,f
 18681  173A  0AFA               	incf	___fladd@bexp,f
 18682  173B  2FA5               	goto	i1l4678
 18683  173C                     i1l4648:	
 18684  173C  0873               	movf	___fladd@b+3,w
 18685  173D  3A80               	xorlw	128
 18686  173E  0020               	movlb	0	; select bank0
 18687  173F  00CA               	movwf	??___fladd
 18688  1740  0877               	movf	___fladd@a+3,w
 18689  1741  3A80               	xorlw	128
 18690  1742  024A               	subwf	??___fladd,w
 18691  1743  1D03               	skipz
 18692  1744  2F4F               	goto	u247_23
 18693  1745  0876               	movf	___fladd@a+2,w
 18694  1746  0272               	subwf	___fladd@b+2,w
 18695  1747  1D03               	skipz
 18696  1748  2F4F               	goto	u247_23
 18697  1749  0875               	movf	___fladd@a+1,w
 18698  174A  0271               	subwf	___fladd@b+1,w
 18699  174B  1D03               	skipz
 18700  174C  2F4F               	goto	u247_23
 18701  174D  0874               	movf	___fladd@a,w
 18702  174E  0270               	subwf	___fladd@b,w
 18703  174F                     u247_23:	
 18704  174F  1803               	skipnc
 18705  1750  2F7E               	goto	i1l4658
 18706  1751  30FF               	movlw	255
 18707  1752  00CA               	movwf	??___fladd
 18708  1753  00CB               	movwf	??___fladd+1
 18709  1754  00CC               	movwf	??___fladd+2
 18710  1755  00CD               	movwf	??___fladd+3
 18711  1756  0870               	movf	___fladd@b,w
 18712  1757  0274               	subwf	___fladd@a,w
 18713  1758  00CE               	movwf	??___fladd+4
 18714  1759  0871               	movf	___fladd@b+1,w
 18715  175A  3B75               	subwfb	___fladd@a+1,w
 18716  175B  00CF               	movwf	??___fladd+5
 18717  175C  0872               	movf	___fladd@b+2,w
 18718  175D  3B76               	subwfb	___fladd@a+2,w
 18719  175E  00D0               	movwf	??___fladd+6
 18720  175F  0873               	movf	___fladd@b+3,w
 18721  1760  3B77               	subwfb	___fladd@a+3,w
 18722  1761  00D1               	movwf	??___fladd+7
 18723  1762  084E               	movf	??___fladd+4,w
 18724  1763  07CA               	addwf	??___fladd,f
 18725  1764  084F               	movf	??___fladd+5,w
 18726  1765  3DCB               	addwfc	??___fladd+1,f
 18727  1766  0850               	movf	??___fladd+6,w
 18728  1767  3DCC               	addwfc	??___fladd+2,f
 18729  1768  0851               	movf	??___fladd+7,w
 18730  1769  3DCD               	addwfc	??___fladd+3,f
 18731  176A  084D               	movf	??___fladd+3,w
 18732  176B  00F3               	movwf	___fladd@b+3
 18733  176C  084C               	movf	??___fladd+2,w
 18734  176D  00F2               	movwf	___fladd@b+2
 18735  176E  084B               	movf	??___fladd+1,w
 18736  176F  00F1               	movwf	___fladd@b+1
 18737  1770  084A               	movf	??___fladd,w
 18738  1771  00F0               	movwf	___fladd@b
 18739  1772  3080               	movlw	128
 18740  1773  06F8               	xorwf	___fladd@signs,f
 18741  1774  09FB               	comf	___fladd@grs,f
 18742  1775  0FFB               	incfsz	___fladd@grs,f
 18743  1776  2F86               	goto	i1l1857
 18744  1777  3001               	movlw	1
 18745  1778  07F0               	addwf	___fladd@b,f
 18746  1779  3000               	movlw	0
 18747  177A  3DF1               	addwfc	___fladd@b+1,f
 18748  177B  3DF2               	addwfc	___fladd@b+2,f
 18749  177C  3DF3               	addwfc	___fladd@b+3,f
 18750  177D  2F86               	goto	i1l1857
 18751  177E                     i1l4658:	
 18752  177E  0874               	movf	___fladd@a,w
 18753  177F  02F0               	subwf	___fladd@b,f
 18754  1780  0875               	movf	___fladd@a+1,w
 18755  1781  3BF1               	subwfb	___fladd@b+1,f
 18756  1782  0876               	movf	___fladd@a+2,w
 18757  1783  3BF2               	subwfb	___fladd@b+2,f
 18758  1784  0877               	movf	___fladd@a+3,w
 18759  1785  3BF3               	subwfb	___fladd@b+3,f
 18760  1786                     i1l1857:	
 18761  1786  0873               	movf	___fladd@b+3,w
 18762  1787  0472               	iorwf	___fladd@b+2,w
 18763  1788  0471               	iorwf	___fladd@b+1,w
 18764  1789  0470               	iorwf	___fladd@b,w
 18765  178A  1D03               	skipz
 18766  178B  2FA3               	goto	i1l4676
 18767  178C  087B               	movf	___fladd@grs,w
 18768  178D  1D03               	btfss	3,2
 18769  178E  2FA3               	goto	i1l4676
 18770  178F  01F0               	clrf	?___fladd
 18771  1790  01F1               	clrf	?___fladd+1
 18772  1791  01F2               	clrf	?___fladd+2
 18773  1792  01F3               	clrf	?___fladd+3
 18774  1793  0008               	return
 18775  1794                     i1l4664:	
 18776  1794  35F0               	lslf	___fladd@b,f
 18777  1795  0DF1               	rlf	___fladd@b+1,f
 18778  1796  0DF2               	rlf	___fladd@b+2,f
 18779  1797  0DF3               	rlf	___fladd@b+3,f
 18780  1798  1BFB               	btfsc	___fladd@grs,7
 18781  1799  1470               	bsf	___fladd@b,0
 18782  179A  1C7B               	btfss	___fladd@grs,0
 18783  179B  2F9F               	goto	i1l1862
 18784  179C  1403               	setc
 18785  179D  0DFB               	rlf	___fladd@grs,f
 18786  179E  2FA0               	goto	i1l4672
 18787  179F                     i1l1862:	
 18788  179F  35FB               	lslf	___fladd@grs,f
 18789  17A0                     i1l4672:	
 18790  17A0  087A               	movf	___fladd@bexp,w
 18791  17A1  1D03               	btfss	3,2
 18792  17A2  03FA               	decf	___fladd@bexp,f
 18793  17A3                     i1l4676:	
 18794  17A3  1FF2               	btfss	___fladd@b+2,7
 18795  17A4  2F94               	goto	i1l4664
 18796  17A5                     i1l4678:	
 18797  17A5  01F9               	clrf	___fladd@aexp
 18798  17A6  1FFB               	btfss	___fladd@grs,7
 18799  17A7  2FB0               	goto	i1l4688
 18800  17A8  087B               	movf	___fladd@grs,w
 18801  17A9  397F               	andlw	127
 18802  17AA  1903               	btfsc	3,2
 18803  17AB  1870               	btfsc	___fladd@b,0
 18804  17AC  2FAE               	goto	i1l4684
 18805  17AD  2FB0               	goto	i1l4688
 18806  17AE                     i1l4684:	
 18807  17AE  01F9               	clrf	___fladd@aexp
 18808  17AF  0AF9               	incf	___fladd@aexp,f
 18809  17B0                     i1l4688:	
 18810  17B0  0879               	movf	___fladd@aexp,w
 18811  17B1  1903               	btfsc	3,2
 18812  17B2  2FC1               	goto	i1l4700
 18813  17B3  3001               	movlw	1
 18814  17B4  07F0               	addwf	___fladd@b,f
 18815  17B5  3000               	movlw	0
 18816  17B6  3DF1               	addwfc	___fladd@b+1,f
 18817  17B7  3DF2               	addwfc	___fladd@b+2,f
 18818  17B8  3DF3               	addwfc	___fladd@b+3,f
 18819  17B9  1C73               	btfss	___fladd@b+3,0
 18820  17BA  2FC1               	goto	i1l4700
 18821  17BB  37F3               	asrf	___fladd@b+3,f
 18822  17BC  0CF2               	rrf	___fladd@b+2,f
 18823  17BD  0CF1               	rrf	___fladd@b+1,f
 18824  17BE  0CF0               	rrf	___fladd@b,f
 18825  17BF  0F7A               	incfsz	___fladd@bexp,w
 18826  17C0  0AFA               	incf	___fladd@bexp,f
 18827  17C1                     i1l4700:	
 18828  17C1  0A7A               	incf	___fladd@bexp,w
 18829  17C2  1D03               	btfss	3,2
 18830  17C3  087A               	movf	___fladd@bexp,w
 18831  17C4  1D03               	btfss	3,2
 18832  17C5  2FCD               	goto	i1l4708
 18833  17C6  01F0               	clrf	___fladd@b
 18834  17C7  01F1               	clrf	___fladd@b+1
 18835  17C8  01F2               	clrf	___fladd@b+2
 18836  17C9  01F3               	clrf	___fladd@b+3
 18837  17CA  087A               	movf	___fladd@bexp,w
 18838  17CB  1903               	btfsc	3,2
 18839  17CC  01F8               	clrf	___fladd@signs
 18840  17CD                     i1l4708:	
 18841  17CD  1C7A               	btfss	___fladd@bexp,0
 18842  17CE  2FD1               	goto	i1l1877
 18843  17CF  17F2               	bsf	___fladd@b+2,7
 18844  17D0  2FD2               	goto	i1l4712
 18845  17D1                     i1l1877:	
 18846  17D1  13F2               	bcf	___fladd@b+2,7
 18847  17D2                     i1l4712:	
 18848  17D2  367A               	lsrf	___fladd@bexp,w
 18849  17D3  00F3               	movwf	___fladd@b+3
 18850  17D4  1BF8               	btfsc	___fladd@signs,7
 18851  17D5  17F3               	bsf	___fladd@b+3,7
 18852  17D6  0008               	return
 18853  17D7                     __end_of___fladd:	
 18854  007E                     btemp	set	126	;btemp
 18855  007E                     int$flags	set	126
 18856  007E                     wtemp0	set	126
 18857  17D7                     __ptext78:	
 18858 ;; *************** function i1_SetInterrupt *****************
 18859 ;; Defined at:
 18860 ;;		line 56 in file "main.c"
 18861 ;; Parameters:    Size  Location     Type
 18862 ;;		None
 18863 ;; Auto vars:     Size  Location     Type
 18864 ;;		None
 18865 ;; Return value:  Size  Location     Type
 18866 ;;                  1    wreg      void 
 18867 ;; Registers used:
 18868 ;;		wreg, status,2, status,0
 18869 ;; Tracked objects:
 18870 ;;		On entry : 1F/0
 18871 ;;		On exit  : 1D/0
 18872 ;;		Unchanged: 0/0
 18873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18876 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18877 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18878 ;;Total ram usage:        2 bytes
 18879 ;; Hardware stack levels used:    1
 18880 ;; This function calls:
 18881 ;;		Nothing
 18882 ;; This function is called by:
 18883 ;;		_CLC_1_Interrupt
 18884 ;;		_CLC_2_Interrupt
 18885 ;; This function uses a non-reentrant model
 18886 ;;
 18887                           
 18888                           
 18889                           ;psect for function i1_SetInterrupt
 18890  17D7                     i1_SetInterrupt:	
 18891                           
 18892                           ;main.c: 58: if ((NSTATUS.val & INTCONF.val) != 0) {
 18893                           
 18894                           ;incstack = 0
 18895                           ; Regs used in i1_SetInterrupt: [wreg+status,2+status,0]
 18896  17D7  0830               	movf	_INTCONF,w	;volatile
 18897  17D8  0532               	andwf	_NSTATUS,w	;volatile
 18898  17D9  00F0               	movwf	??i1_SetInterrupt
 18899  17DA  0831               	movf	_INTCONF+1,w	;volatile
 18900  17DB  0533               	andwf	_NSTATUS+1,w	;volatile
 18901  17DC  00F1               	movwf	??i1_SetInterrupt+1
 18902  17DD  0470               	iorwf	??i1_SetInterrupt,w
 18903  17DE  1903               	btfsc	3,2
 18904  17DF  0008               	return
 18905                           
 18906                           ;main.c: 59: do { LATBbits.LATB5 = 0; } while(0);
 18907  17E0  0022               	movlb	2	; select bank2
 18908  17E1  128D               	bcf	13,5	;volatile
 18909  17E2  0008               	return
 18910  17E3                     __end_ofi1_SetInterrupt:	
 18911  17E3                     __ptext75:	
 18912 ;; *************** function ___flsub *****************
 18913 ;; Defined at:
 18914 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
 18915 ;; Parameters:    Size  Location     Type
 18916 ;;  a               4    8[BANK0 ] void 
 18917 ;;  b               4   12[BANK0 ] void 
 18918 ;; Auto vars:     Size  Location     Type
 18919 ;;		None
 18920 ;; Return value:  Size  Location     Type
 18921 ;;                  4    8[BANK0 ] void 
 18922 ;; Registers used:
 18923 ;;		wreg, status,2, status,0, pclath, cstack
 18924 ;; Tracked objects:
 18925 ;;		On entry : 1F/0
 18926 ;;		On exit  : 1F/0
 18927 ;;		Unchanged: 0/0
 18928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18929 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18932 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18933 ;;Total ram usage:        8 bytes
 18934 ;; Hardware stack levels used:    1
 18935 ;; Hardware stack levels required when called:    1
 18936 ;; This function calls:
 18937 ;;		___fladd
 18938 ;; This function is called by:
 18939 ;;		_CLC_2_Interrupt
 18940 ;; This function uses a non-reentrant model
 18941 ;;
 18942                           
 18943                           
 18944                           ;psect for function ___flsub
 18945  17E3                     ___flsub:	
 18946                           
 18947                           ;incstack = 0
 18948                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 18949  17E3  3080               	movlw	128
 18950  17E4  06D5               	xorwf	___flsub@a+3,f
 18951  17E5  0859               	movf	___flsub@b+3,w
 18952  17E6  00F3               	movwf	___fladd@b+3
 18953  17E7  0858               	movf	___flsub@b+2,w
 18954  17E8  00F2               	movwf	___fladd@b+2
 18955  17E9  0857               	movf	___flsub@b+1,w
 18956  17EA  00F1               	movwf	___fladd@b+1
 18957  17EB  0856               	movf	___flsub@b,w
 18958  17EC  00F0               	movwf	___fladd@b
 18959  17ED  0855               	movf	___flsub@a+3,w
 18960  17EE  00F7               	movwf	___fladd@a+3
 18961  17EF  0854               	movf	___flsub@a+2,w
 18962  17F0  00F6               	movwf	___fladd@a+2
 18963  17F1  0853               	movf	___flsub@a+1,w
 18964  17F2  00F5               	movwf	___fladd@a+1
 18965  17F3  0852               	movf	___flsub@a,w
 18966  17F4  00F4               	movwf	___fladd@a
 18967  17F5  2688               	fcall	___fladd
 18968  17F6  0873               	movf	?___fladd+3,w
 18969  17F7  0020               	movlb	0	; select bank0
 18970  17F8  00D5               	movwf	?___flsub+3
 18971  17F9  0872               	movf	?___fladd+2,w
 18972  17FA  00D4               	movwf	?___flsub+2
 18973  17FB  0871               	movf	?___fladd+1,w
 18974  17FC  00D3               	movwf	?___flsub+1
 18975  17FD  0870               	movf	?___fladd,w
 18976  17FE  00D2               	movwf	?___flsub
 18977  17FF  0008               	return
 18978  1800                     __end_of___flsub:	


Data Sizes:
    Strings     0
    Constant    1400
    Data        1
    BSS         81
    Persistent  37
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     20      64
    BANK1            80     16      59
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TimerInt(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TimerInt(), Absolute function(), TMR3_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR3_ISR->_TMR3_WriteTimer
    _UpdateOut_GP3->i1_PWM_GP3
    _UpdateOut_GP2->i1_PWM_GP2
    _UpdateOut_GP1->i1_PWM_GP1
    _Config_GP3->i1_PWM_GP3
    i1_PWM_GP3->i1___wmul
    _Config_GP2->i1_PWM_GP2
    i1_PWM_GP2->i1___wmul
    _Config_GP1->i1_PWM_GP1
    i1_PWM_GP1->i1___wmul
    _RegisterRead->_eeprom_read
    _CLC_2_Interrupt->___flge
    ___flsub->___fladd
    _CLC_1_Interrupt->___fladd
    _CLC_1_Interrupt->___flge

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _I2C1_ISR->_I2C1_StatusCallback
    _I2C1_StatusCallback->_RegisterWrite
    _RegisterWrite->_Config_GP1
    _RegisterWrite->_Config_GP2
    _RegisterWrite->_Config_GP3
    _UpdateOut_GP3->i1_PWM_GP3
    _UpdateOut_GP2->i1_PWM_GP2
    _UpdateOut_GP1->i1_PWM_GP1
    _Config_GP3->i1_PWM_GP3
    _Config_GP2->i1_PWM_GP2
    _Config_GP1->i1_PWM_GP1
    _CLC2_ISR->_CLC_2_Interrupt
    _CLC_2_Interrupt->___flsub
    ___flsub->___fladd
    _CLC1_ISR->_CLC_1_Interrupt
    _CLC_1_Interrupt->___fladd

Critical Paths under _main in BANK1

    _main->_GP_Ports_FSM
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _NavKey_UPButton_FSM->_NavKeyStatusUpdate
    _NavKey_UPButton_FSM->_SetInterrupt
    _NavKey_RTButton_FSM->_NavKeyStatusUpdate
    _NavKey_RTButton_FSM->_SetInterrupt
    _NavKey_LTButton_FSM->_NavKeyStatusUpdate
    _NavKey_LTButton_FSM->_SetInterrupt
    _NavKey_DWButton_FSM->_NavKeyStatusUpdate
    _NavKey_DWButton_FSM->_SetInterrupt
    _NavKey_CentralButton_FSM->_NavKeyStatusUpdate
    _NavKey_CentralButton_FSM->_SetInterrupt
    _GP3_FSM->_ADC_GetConversion
    _GP2_FSM->_ADC_GetConversion
    _GP1_FSM->_ADC_GetConversion
    _FADE_GP3->_PWM_GP3
    _PWM_GP3->___wmul
    _FADE_GP2->_PWM_GP2
    _PWM_GP2->___wmul
    _FADE_GP1->_PWM_GP1
    _PWM_GP1->___wmul
    _FadeProcessClear->_Int2StatusUpdate
    _Int2StatusUpdate->_NavKeyStatusUpdate

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   23582
                     _ClearInterrupt
                        _DataInitSet
                       _GP_Ports_FSM
                         _NavKey_FSM
                  _SYSTEM_Initialize
           _TMR3_SetInterruptHandler
                    _TMR3_StartTimer
 ---------------------------------------------------------------------------------
 (1) _TMR3_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     211
                    _CLC1_Initialize
                    _CLC2_Initialize
                    _I2C1_AddressSet
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0     211
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR3_SetInterruptHandler                             2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_AddressSet                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _NavKey_FSM                                           0     0      0    8490
             _NavKeySwitch_KeyFilter
           _NavKey_CentralButton_FSM
                _NavKey_DWButton_FSM
                _NavKey_LTButton_FSM
                _NavKey_RTButton_FSM
                _NavKey_UPButton_FSM
 ---------------------------------------------------------------------------------
 (2) _NavKey_UPButton_FSM                                  0     0      0    1641
                 _NavKeyStatusUpdate
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (2) _NavKey_RTButton_FSM                                  0     0      0    1641
                 _NavKeyStatusUpdate
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (2) _NavKey_LTButton_FSM                                  0     0      0    1641
                 _NavKeyStatusUpdate
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (2) _NavKey_DWButton_FSM                                  0     0      0    1641
                 _NavKeyStatusUpdate
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (2) _NavKey_CentralButton_FSM                             0     0      0    1641
                 _NavKeyStatusUpdate
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (2) _NavKeySwitch_KeyFilter                               1     1      0     285
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _GP_Ports_FSM                                         1     1      0   14670
                                             15 BANK1      1     1      0
                           _FADE_GP1
                           _FADE_GP2
                           _FADE_GP3
                            _GP1_FSM
                            _GP2_FSM
                            _GP3_FSM
 ---------------------------------------------------------------------------------
 (2) _GP3_FSM                                              2     2      0    1703
                                              4 BANK1      2     2      0
                  _ADC_GetConversion
                     _ADC_Initialize
                   _Int2StatusUpdate
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (2) _GP2_FSM                                              2     2      0    1703
                                              4 BANK1      2     2      0
                  _ADC_GetConversion
                     _ADC_Initialize
                   _Int2StatusUpdate
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (2) _GP1_FSM                                              2     2      0    1703
                                              4 BANK1      2     2      0
                  _ADC_GetConversion
                     _ADC_Initialize
                   _Int2StatusUpdate
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (3) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ADC_GetConversion                                    4     2      2      31
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (2) _FADE_GP3                                             0     0      0    3187
                   _FadeProcessClear
                     _FadeProcessSet
                            _PWM_GP3
 ---------------------------------------------------------------------------------
 (3) _PWM_GP3                                              9     9      0    1453
                                              6 BANK1      9     9      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _FADE_GP2                                             0     0      0    3187
                   _FadeProcessClear
                     _FadeProcessSet
                            _PWM_GP2
 ---------------------------------------------------------------------------------
 (3) _PWM_GP2                                              9     9      0    1453
                                              6 BANK1      9     9      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _FADE_GP1                                             0     0      0    3187
                   _FadeProcessClear
                     _FadeProcessSet
                            _PWM_GP1
 ---------------------------------------------------------------------------------
 (3) _PWM_GP1                                              9     9      0    1453
                                              6 BANK1      9     9      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1326
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _FadeProcessSet                                       1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (3) _FadeProcessClear                                     1     1      0    1703
                                              3 BANK1      1     1      0
                   _Int2StatusUpdate
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (3) _SetInterrupt                                         2     2      0       0
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (3) _Int2StatusUpdate                                     1     1      0    1672
                                              2 BANK1      1     1      0
                 _NavKeyStatusUpdate
 ---------------------------------------------------------------------------------
 (3) _NavKeyStatusUpdate                                   2     0      2    1641
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _DataInitSet                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ClearInterrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0   11402
                           _CLC1_ISR
                           _CLC2_ISR
                           _I2C1_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR3_ISR                                             0     0      0     229
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (8) _TMR3_WriteTimer                                      2     0      2     229
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) _TMR3_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                           _TimerInt *
 ---------------------------------------------------------------------------------
 (9) _TimerInt                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _TMR3_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_ISR                                             1     1      0    5008
                                              6 BANK0      1     1      0
                _I2C1_StatusCallback
 ---------------------------------------------------------------------------------
 (8) _I2C1_StatusCallback                                  1     1      0    4984
                                              5 BANK0      1     1      0
                    _Int2StatusClear
                       _RegisterRead
                      _RegisterWrite
                        _StatusClear
                   i1_ClearInterrupt
 ---------------------------------------------------------------------------------
 (9) i1_ClearInterrupt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _StatusClear                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _RegisterWrite                                        2     1      1    4790
                                              3 BANK0      2     1      1
                         _Config_GP1
                         _Config_GP2
                         _Config_GP3
                     _GeneralDataSet
                   _GeneralDataSplit
                      _UpdateOut_GP1
                      _UpdateOut_GP2
                      _UpdateOut_GP3
                       _eeprom_write
                           i1___wmul
 ---------------------------------------------------------------------------------
 (10) _eeprom_write                                        2     1      1     196
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (10) _UpdateOut_GP3                                       1     1      0     545
                                              1 BANK0      1     1      0
                          i1_PWM_GP3
 ---------------------------------------------------------------------------------
 (10) _UpdateOut_GP2                                       1     1      0     545
                                              1 BANK0      1     1      0
                          i1_PWM_GP2
 ---------------------------------------------------------------------------------
 (10) _UpdateOut_GP1                                       1     1      0     545
                                              1 BANK0      1     1      0
                          i1_PWM_GP1
 ---------------------------------------------------------------------------------
 (10) _GeneralDataSplit                                    1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _GeneralDataSet                                      0     0      0       0
       _I2C1_Initialize_ClockStreach
                  i1_I2C1_Initialize
 ---------------------------------------------------------------------------------
 (11) i1_I2C1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_Initialize_ClockStreach                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _Config_GP3                                          2     2      0     545
                                              1 BANK0      2     2      0
                    _PWM3_Initialize
                          i1_PWM_GP3
 ---------------------------------------------------------------------------------
 (11) i1_PWM_GP3                                           9     9      0     545
                                              6 COMMON     8     8      0
                                              0 BANK0      1     1      0
                           i1___wmul
 ---------------------------------------------------------------------------------
 (11) _PWM3_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _Config_GP2                                          2     2      0     545
                                              1 BANK0      2     2      0
                    _PWM2_Initialize
                          i1_PWM_GP2
 ---------------------------------------------------------------------------------
 (11) i1_PWM_GP2                                           9     9      0     545
                                              6 COMMON     8     8      0
                                              0 BANK0      1     1      0
                           i1___wmul
 ---------------------------------------------------------------------------------
 (11) _PWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _Config_GP1                                          2     2      0     545
                                              1 BANK0      2     2      0
                    _PWM1_Initialize
                          i1_PWM_GP1
 ---------------------------------------------------------------------------------
 (11) i1_PWM_GP1                                           9     9      0     545
                                              6 COMMON     8     8      0
                                              0 BANK0      1     1      0
                           i1___wmul
 ---------------------------------------------------------------------------------
 (10) i1___wmul                                            6     2      4     456
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (11) _PWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _RegisterRead                                         2     2      0     172
                                              1 COMMON     2     2      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (10) _eeprom_read                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _Int2StatusClear                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _CLC2_ISR                                             0     0      0    3181
                    _CLC_2_Interrupt
 ---------------------------------------------------------------------------------
 (8) _CLC_2_Interrupt                                      4     4      0    3181
                                             16 BANK0      4     4      0
                             ___flge
                            ___flsub
               i1_NavKeyStatusUpdate
                     i1_SetInterrupt
 ---------------------------------------------------------------------------------
 (9) ___flsub                                              8     0      8    2465
                                              8 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (7) _CLC1_ISR                                             0     0      0    2984
                    _CLC_1_Interrupt
 ---------------------------------------------------------------------------------
 (8) _CLC_1_Interrupt                                      4     4      0    2984
                                              8 BANK0      4     4      0
                            ___fladd
                             ___flge
               i1_NavKeyStatusUpdate
                     i1_SetInterrupt
 ---------------------------------------------------------------------------------
 (9) i1_SetInterrupt                                       2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) i1_NavKeyStatusUpdate                                 2     0      2     230
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (9) ___flge                                              12     4      8     486
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (10) ___fladd                                            20    12      8    2268
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearInterrupt
   _DataInitSet
   _GP_Ports_FSM
     _FADE_GP1
       _FadeProcessClear
         _Int2StatusUpdate
           _NavKeyStatusUpdate
         _SetInterrupt
       _FadeProcessSet
       _PWM_GP1
         ___wmul
     _FADE_GP2
       _FadeProcessClear
         _Int2StatusUpdate
           _NavKeyStatusUpdate
         _SetInterrupt
       _FadeProcessSet
       _PWM_GP2
         ___wmul
     _FADE_GP3
       _FadeProcessClear
         _Int2StatusUpdate
           _NavKeyStatusUpdate
         _SetInterrupt
       _FadeProcessSet
       _PWM_GP3
         ___wmul
     _GP1_FSM
       _ADC_GetConversion
       _ADC_Initialize
       _Int2StatusUpdate
         _NavKeyStatusUpdate
       _SetInterrupt
     _GP2_FSM
       _ADC_GetConversion
       _ADC_Initialize
       _Int2StatusUpdate
         _NavKeyStatusUpdate
       _SetInterrupt
     _GP3_FSM
       _ADC_GetConversion
       _ADC_Initialize
       _Int2StatusUpdate
         _NavKeyStatusUpdate
       _SetInterrupt
   _NavKey_FSM
     _NavKeySwitch_KeyFilter
     _NavKey_CentralButton_FSM
       _NavKeyStatusUpdate
       _SetInterrupt
     _NavKey_DWButton_FSM
       _NavKeyStatusUpdate
       _SetInterrupt
     _NavKey_LTButton_FSM
       _NavKeyStatusUpdate
       _SetInterrupt
     _NavKey_RTButton_FSM
       _NavKeyStatusUpdate
       _SetInterrupt
     _NavKey_UPButton_FSM
       _NavKeyStatusUpdate
       _SetInterrupt
   _SYSTEM_Initialize
     _CLC1_Initialize
     _CLC2_Initialize
     _I2C1_AddressSet
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _WDT_Initialize
   _TMR3_SetInterruptHandler
   _TMR3_StartTimer

 _INTERRUPT_InterruptManager (ROOT)
   _CLC1_ISR
     _CLC_1_Interrupt
       ___fladd
       ___flge
       i1_NavKeyStatusUpdate
       i1_SetInterrupt
   _CLC2_ISR
     _CLC_2_Interrupt
       ___flge
       ___flsub
         ___fladd
       i1_NavKeyStatusUpdate
       i1_SetInterrupt
   _I2C1_ISR
     _I2C1_StatusCallback
       _Int2StatusClear
       _RegisterRead
         _eeprom_read
       _RegisterWrite
         _Config_GP1
           _PWM1_Initialize
           i1_PWM_GP1
             i1___wmul
         _Config_GP2
           _PWM2_Initialize
           i1_PWM_GP2
             i1___wmul
         _Config_GP3
           _PWM3_Initialize
           i1_PWM_GP3
             i1___wmul
         _GeneralDataSet
           _I2C1_Initialize_ClockStreach
           i1_I2C1_Initialize
         _GeneralDataSplit
         _UpdateOut_GP1
           i1_PWM_GP1
             i1___wmul
         _UpdateOut_GP2
           i1_PWM_GP2
             i1___wmul
         _UpdateOut_GP3
           i1_PWM_GP3
             i1___wmul
         _eeprom_write
         i1___wmul
       _StatusClear
       i1_ClearInterrupt
   _TMR3_ISR
     _TMR3_CallBack
       Absolute function(Fake) *
       _TMR3_DefaultInterruptHandler *
       _TimerInt *
     _TMR3_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      40       5       80.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     10      3B       7       73.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      89      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      89      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Apr 05 15:30:09 2019

                   ??_NavKey_RTButton_FSM 00C9                                         pc 0002  
                             __CFG_CP$OFF 0000                       ___wmul@multiplicand 00C9  
                        i1___wmul@product 0074                 __size_ofi1_ClearInterrupt 0003  
                         ??_UpdateOut_GP1 004B                           ??_UpdateOut_GP2 004B  
                         ??_UpdateOut_GP3 004B                                       l341 01F6  
                                     _PR2 001E                              __CFG_CPD$OFF 0000  
                 __size_of_PMD_Initialize 000E                           _TMR2_Initialize 14C9  
                       ??_CLC2_Initialize 00C7                                       wreg 0009  
                         __end_of_GP1_FSM 0131                           __end_of_GP2_FSM 01CB  
                         __end_of_GP3_FSM 017E                  RegisterRead@return_value 0072  
                                    S7270 1044                                      S7272 104C  
                                    S7266 0996                                      S7268 09A2  
                   ??_NavKey_UPButton_FSM 00C9                              __CFG_LVP$OFF 0000  
                        __end_of_I2C1_ISR 0B4B                                      l1121 01A4  
                                    l1106 010C                                      l1124 01B3  
                                    l1109 011A                                      l1136 0157  
                                    l1322 0315                                      l1139 0166  
                                    l1332 02BC                                      l1342 0263  
                         _timer3ReloadVal 00D9                                      l6204 0369  
                                    l6208 036F                                      l6218 0200  
                                    l6406 14EA                                      l6256 031C  
                                    l6280 026A                                      l6194 03ED  
                                    l6506 0217                                      l6196 01D4  
                                    l6268 02C3                                      l6612 01BF  
                                    l6620 0132                                      l6700 03BC  
                                    l6438 00A6                                      l6542 00FE  
                                    l6630 0145                                      l6710 03CC  
                                    l6472 0241                                      l6552 0116  
                                    l6536 00F2                                      l6528 00E7  
                                    l6720 03DA                                      l6712 03CD  
                                    l6704 03C1                                      l6538 00FA  
                                    l6634 0149                                      l6618 0131  
                                    l6810 1417                                      l6644 0162  
                                    l6628 013D                                      l6812 1418  
                                    l6804 0B1E                                      l6566 0126  
                                    l6582 018A                                      l6574 017F  
                                    l6902 00D8                                      l6670 09CD  
                                    l6726 03DC                                      l6830 1430  
                                    l6584 0192                                      l6680 09FA  
                                    l6808 0B20                                      l6760 0AFB  
                                    l6752 0AF0                                      l6912 0047  
                                    l6658 0172                                      l6690 03AF  
                                    l6738 03E2                                      l6826 142E  
                                    l6818 1423                                      l6746 0AE5  
                                    l6588 0196                                      l6676 09E8  
                                    l6764 0AFD                                      l6598 01AF  
                                    l6782 040A                                      l6774 0400  
                                    l6790 0B08                                      l6696 03B6  
                                    l6688 03AB                                      l6768 03F6  
                                    l6928 005C                                      l6786 040C  
                                    l6882 0394                                      l6796 0B13  
                                    _CMAX 0028                                      _CMIN 0024  
                 __end_of_PWM1_Initialize 0E6F                                      _CVAL 002C  
                                    _LATA 010C                                      _LATB 010D  
                                    _LATC 010E                                      u4435 03A6  
                                    _PMD0 0911                                      _PMD1 0912  
                                    _PMD2 0913                                      _PMD3 0914  
                                    _PMD4 0915                                      _PMD5 0916  
                                    u4637 01F1                                      i1l80 0012  
                                    i1l82 001C                                      i1l84 0026  
                                    i1l89 002E                           ?_ClearInterrupt 0070  
                                    _TMR2 001D                                      _WPUA 020C  
                                    _WPUB 020D                                      _WPUC 020E  
                          ??_eeprom_write 0071                              __CFG_WRT$OFF 0000  
                           __CFG_FCMEN$ON 0000                                      _main 0047  
                         __end_of_PWM_GP1 0367                           __end_of_PWM_GP2 030E  
                         __end_of_PWM_GP3 02B5                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
                        __end_of_FADE_GP1 00C1                          __end_of_FADE_GP2 025C  
                        __end_of_FADE_GP3 0232                          __end_of_CLC1_ISR 150E  
                        __end_of_CLC2_ISR 150A                             __CFG_BOREN$ON 0000  
                           __CFG_BORV$LOW 0000                                      start 0030  
              ??_NavKey_CentralButton_FSM 00C9                           _CLC_1_Interrupt 150E  
                         _TMR3_Initialize 14EA                   __end_of_Int2StatusClear 0B97  
                           __CFG_CSWEN$ON 0000                       _I2C1_StatusCallback 0B4B  
                             _DataInitSet 0068                             i1PWM_GP1@duty 004A  
                 __end_of_PWM2_Initialize 0EE7                             i1PWM_GP2@duty 004A  
                           i1PWM_GP3@duty 004A                           _CLC_2_Interrupt 1597  
          __size_of_OSCILLATOR_Initialize 0009             __end_of_OSCILLATOR_Initialize 1484  
                                   _ADACT 009F                           __end_of___fladd 17D7  
                                   ?_main 0070                             __CFG_WDTE$OFF 0000  
                         __end_of___flsub 1800                                     _GCONF 0049  
                                   _T2CON 001F                                     _T3CON 0413  
                      __size_ofi1_PWM_GP1 0057                        __size_ofi1_PWM_GP2 0057  
                      __size_ofi1_PWM_GP3 0057                            __CFG_DEBUG$OFF 0000  
                                   i1l165 0B3F                                     i1l710 0B4E  
                                   i1l824 0F8F                                     i1l826 0F91  
                              _Config_GP1 0CDD                                _Config_GP2 0E6F  
                              _Config_GP3 0EE7                                     i1l962 0D0C  
                                   i1l954 0CEF                                     i1l980 0D30  
                                   i1l974 0D17                                     i1l991 0E81  
                                   i1l984 0D33                                     i1l969 0D13  
                                   i1l986 0D48                                     i1l999 0E9E  
                              _EncoderReg 0038                                     _ISTEP 0020  
                                   _OSCEN 091D                                     _TMR3H 0412  
                                   _TMR3L 0411                                     _TRISA 008C  
                                   _TRISB 008D                                     _TRISC 008E  
                      FadeProcessSet@stat 00C7         __size_of_TMR3_SetInterruptHandler 0005  
               ?_TMR3_SetInterruptHandler 00C7                         ??_I2C1_Initialize 00C7  
                    ?_I2C1_StatusCallback 0070                          __end_of_TMR3_ISR 13FD  
          ??_TMR3_DefaultInterruptHandler 0070                            _WDT_Initialize 14D1  
                 NavKeySwitch_KeyFilter@i 00C7                         ?_GeneralDataSplit 0070  
                 __end_of_PWM3_Initialize 0F60                                     pclath 000A  
                              _DoublePush 00B3                          __end_ofi1___wmul 0E63  
                      ??_GeneralDataSplit 0070                                _NavKey_FSM 038A  
             __end_of_NavKey_LTButton_FSM 143A                                     status 0003  
                     i1___wmul@multiplier 0070                                     wtemp0 007E  
              __size_ofi1_I2C1_Initialize 0013                            __CFG_MCLRE$OFF 0000  
                         __initialization 0032                __end_of_NavKeyStatusUpdate 03F5  
                            __end_of_main 0065                  __end_of_Int2StatusUpdate 01D4  
                 ?_NavKeySwitch_KeyFilter 0070                   __end_of_TMR2_Initialize 14D1  
             ?_INTERRUPT_InterruptManager 0070                                    ??_main 00D7  
                               ??_GP1_FSM 00CB                                 ??_GP2_FSM 00CB  
                               ??_GP3_FSM 00CB                           _TMR3_StartTimer 041B  
                   _TMR3_InterruptHandler 00D7                      i1_NavKeyStatusUpdate 1621  
                __end_of_FadeProcessClear 0385                          __end_of_TimerInt 09AE  
                        ??i1_SetInterrupt 0070                    __end_of_WDT_Initialize 14D5  
                   ??_I2C1_StatusCallback 007E                                    _ADCON0 009D  
                                  _ADCON1 009E                                    _FADEGP 003F  
                                  i1S7280 105C                                    i1S7274 1054  
                                  _ADRESH 009C                                    i1S7292 106C  
                                  i1S7276 1000                                    i1S7286 1064  
                                  _ADRESL 009B                                    i1S7296 0A00  
                                  _CCPR1H 0292                                    _CCPR2H 0296  
                                  _CCPR3H 0312                                    _CCPR1L 0291  
                               ??_PWM_GP1 00CD                                    _CCPR2L 0295  
                               ??_PWM_GP2 00CD                                 ??_PWM_GP3 00CD  
                                  _CCPR3L 0311                                    _GP1REG 0043  
                                  _ANSELA 018C                                    _ANSELB 018D  
                                  _ANSELC 018E                                    _GP2REG 0042  
                                  _GP3REG 0041                                    _T3GCON 0414  
                                  i1l1011 0EA9                                    i1l1021 0EC5  
                                  i1l1006 0EA5                                    i1l1023 0EDA  
                                  i1l1017 0EC2                                    i1l1043 0F1D  
                                  i1l1060 0F52                                    i1l1036 0F16  
                                  i1l1028 0EF9                                    i1l1054 0F3A  
                        ?_PWM1_Initialize 0070                                    i1l1048 0F21  
                                  i1l1080 13AB                                    i1l1322 0DFF  
                                  i1l1058 0F3D                                    i1l1332 0DA8  
                                  i1l1068 138F                                    i1l1092 13C7  
                                  i1l1342 0D51                                    i1l1503 0C09  
                 __end_of_CLC_1_Interrupt 1597                                    _ODCONA 028C  
                                  _ODCONB 028D                                    _ODCONC 028E  
                                  i1l1525 13D9                                    i1l1720 1676  
                                  i1l1529 13EE                                    i1l5010 165F  
                                  i1l5004 1637                                    i1l4220 0DB1  
                                  i1l4300 0F9B                                    i1l1830 1699  
                                  i1l1718 1648                                    i1l4142 0E50  
                                  i1l1840 1719                                    i1l4208 0E08  
                                  i1l4232 0D5A                                    i1l1842 1707  
                                  i1l1834 16B6                                    i1l4146 0E56  
                                  i1l5210 0B52                                    i1l1851 1733  
                                  i1l1843 170D                                    i1l1835 16B4  
                                  i1l1852 1734                                    i1l1844 170E  
                                  i1l5204 1617                                    i1l5212 0B56  
                                  i1l5220 0B69                   __end_of_TMR3_Initialize 1506  
                                  i1l1829 169B                                    u202_25 0FED  
                                  i1l1862 179F                                    i1l5206 161F  
                                  i1l4342 0D36                                    i1l5222 0B6C  
                                  i1l5232 0B7C                                    i1l5240 0B82  
                                  i1l1857 1786                                    i1l4338 0D1C  
                                  i1l4442 0F26                                    i1l5226 0B73  
                                  i1l5218 0B60                                    i1l4700 17C1  
                                  i1l4292 0F89                                    i1l1877 17D1  
                                  u203_25 0FF7                                    i1l4630 1715  
                                  i1l5254 1518                                    i1l4390 0EAE  
                                  i1l4446 0F40                                    i1l4712 17D2  
                                  i1l4616 16E0                                    i1l5280 158D  
                                  i1l5272 154A                                    i1l5176 15A2  
                                  i1l4800 0C54                                    i1l5282 1595  
                                  i1l4394 0EC8                                    i1l4298 0F99  
                                  i1l4482 13B1                                    i1l4810 0C63  
                                  i1l4802 0C57                                    i1l4708 17CD  
                                  i1l4636 1723                                    i1l5196 15D5  
                                  i1l4900 0BBF                                    i1l4468 1395  
                                  i1l4820 0C77                                    i1l4804 0C5A  
                                  i1l5292 1412                                    i1l4910 0BC9  
                                  i1l4902 0BC1                                    i1l4822 0C7B  
                                  i1l4814 0C6B                                    i1l4806 0C5D  
                                  i1l5294 13FD                                    i1l4672 17A0  
                                  i1l4664 1794                                    i1l4648 173C  
                                  i1l4920 0BD3                                    i1l4912 0BCB  
                                  i1l4904 0BC3                                    i1l4496 13CD  
                                  i1l4816 0C6F                                    i1l4808 0C60  
                                  i1l4658 177E                                    i1l4586 16C2  
                                  i1l4930 0BDD                                    i1l4922 0BD5  
                                  i1l4914 0BCD                                    i1l4906 0BC5  
                                  i1l4842 0CAE                                    i1l4826 0C83  
                                  i1l4770 0C28                                    i1l4762 0C1E  
                                  i1l4684 17AE                                    i1l4676 17A3  
                                  i1l4940 0BE7                                    i1l4932 0BDF  
                                  i1l4924 0BD7                                    i1l4916 0BCF  
                                  i1l4908 0BC7                                    i1l4860 0CD8  
                                  i1l4836 0CA2                                    i1l4828 0C87  
                                  i1l4780 0C36                                    i1l4756 0C17  
                                  i1l4852 0CC0                                    i1l5732 0B43  
                                  _C_DIRE 00C2                                    i1l4678 17A5  
                                  i1l4942 0BEA                                    i1l4934 0BE1  
                                  i1l4926 0BD9                                    i1l4918 0BD1  
                                  i1l4870 0B99                                    i1l4846 0CB7  
                                  i1l4838 0CA5                                    i1l4790 0C45  
                                  i1l4782 0C39                                    i1l4774 0C2D  
                                  i1l4766 0C23                                    i1l4854 0CCA  
                                  i1l4688 17B0                                    i1l4936 0BE3  
                                  i1l4928 0BDB                                    i1l4880 0BA3  
                                  i1l4872 0B9B                                    i1l4792 0C48  
                                  i1l4784 0C3C                                    i1l4776 0C30  
                                  i1l5728 0B3D                                    i1l4954 0C01  
                                  i1l4938 0BE5                                    i1l4890 0BB5  
                                  i1l4882 0BA5                                    i1l4874 0B9D  
                                  i1l4946 0BEC                                    i1l7290 0D26  
                                  i1l7282 0F4A                                    i1l4794 0C4B  
                                  i1l4786 0C3F                                    i1l4778 0C33  
                                  i1l4956 0C04                                    i1l4892 0BB7  
                                  i1l4884 0BA7                                    i1l4876 0B9F  
                                  i1l4948 0BF6                                    i1l7284 0EB8  
                                  i1l4796 0C4E                                    i1l4788 0C42  
                                  i1l4894 0BB9                                    i1l4886 0BAD  
                                  i1l4878 0BA1                                    i1l7294 0D40  
                                  i1l7278 0F30                                    i1l4798 0C51  
                                  i1l4896 0BBB                                    i1l4888 0BB3  
                                  i1l7288 0ED2                                    i1l4898 0BBD  
                                  u224_21 0C08                                    u236_25 16F4  
                                  u237_20 16FE                                    u238_20 16FF  
                                  _C_IPUD 00C3                                    u247_23 174F  
                                  _OSCFRQ 091F                                    _WDTCON 0097  
                       __end_ofi1_PWM_GP1 0E4E                         __end_ofi1_PWM_GP2 0DF7  
                       __end_ofi1_PWM_GP3 0DA0                           _TMR3_WriteTimer 1408  
                          __CFG_PWRTE$OFF 0000                   __end_of_CLC_2_Interrupt 1621  
                        ?_Int2StatusClear 0070                      __size_of_eeprom_read 000F  
          __end_of_NavKeySwitch_KeyFilter 0A00                   __size_of_GeneralDataSet 003F  
                                  ___flge 1626                                 ??___fladd 004A  
                                  ___wmul 0367                            __CFG_STVREN$ON 0000  
                               ??___flsub 007C                                    _en_deb 00AF  
                                  _pb_cnt 00AA                                    _pb_fsm 00BA  
                        ?_PWM2_Initialize 0070                                 ?_I2C1_ISR 0070  
                        i1_ClearInterrupt 0B91                      __end_of_eeprom_write 13F4  
                         _I2C1_AddressSet 1462                               ?_Config_GP1 0070  
                             ?_Config_GP2 0070                               ?_Config_GP3 0070  
                   ?i1_NavKeyStatusUpdate 0070                            _PMD_Initialize 14BB  
                               ?_FADE_GP1 0070                                 ?_FADE_GP2 0070  
                               ?_FADE_GP3 0070                                 ?_CLC1_ISR 0070  
                               ?_CLC2_ISR 0070                           ?_WDT_Initialize 0070  
                ADC_GetConversion@channel 00CA  TMR3_SetInterruptHandler@InterruptHandler 00C7  
                           ?_RegisterRead 0070                           _CLC1_Initialize 14D5  
    __end_of_I2C1_Initialize_ClockStreach 0FB3     __size_of_I2C1_Initialize_ClockStreach 0014  
            _I2C1_Initialize_ClockStreach 0F9F                             ?_SetInterrupt 0070  
                              ___flge@ff1 0070                                ___flge@ff2 0074  
                        ?_PWM3_Initialize 0070                               _i2c_address 005E  
                       _SYSTEM_Initialize 143A                               ?_NavKey_FSM 0070  
            __size_of_NavKey_DWButton_FSM 0021                   __end_of__initialization 0044  
                         eeprom_read@addr 0070                        ?_SYSTEM_Initialize 0070  
                   __end_of_TMR3_CallBack 1408                      FadeProcessClear@stat 00CA  
                          __pcstackCOMMON 0070                              __pidataBANK0 0000  
                     ??_SYSTEM_Initialize 00C9                   __end_of_TMR3_StartTimer 041E  
                         _CLC2_Initialize 144D                                 ?_TMR3_ISR 0070  
                              ??_I2C1_ISR 007E                          ?_TMR2_Initialize 0070  
                  __end_of_PMD_Initialize 14C9                   __size_of_FadeProcessSet 0005  
                           ??_StatusClear 0070                                 ?i1___wmul 0070  
               NavKey_UPButton_FSM@up_fsm 00B8                                ??_FADE_GP1 00D6  
                              ??_FADE_GP2 00D6                                ??_FADE_GP3 00D6  
                              ??_CLC1_ISR 007C                                ??_CLC2_ISR 007C  
                        ??_ClearInterrupt 00C7                         eeprom_write@value 0070  
                          ??_RegisterRead 0071                            ??_SetInterrupt 00C7  
               __end_of_SYSTEM_Initialize 144D                   __end_of_TMR3_WriteTimer 1417  
                              __pbssBANK0 0020                                __pbssBANK1 00A0  
                        ?_CLC_1_Interrupt 0070                          ?_TMR3_Initialize 0070  
                  __size_of_RegisterWrite 00C8               __end_of_NavKey_RTButton_FSM 0B2A  
                     __size_of_Config_GP1 006C                       __size_of_Config_GP2 006C  
                     __size_of_Config_GP3 006C                          ?_CLC_2_Interrupt 0070  
                          _SSP1DATPPSbits 0E21                                __pmaintext 0047  
                           _CLCIN0PPSbits 0E28                             ?_GP_Ports_FSM 0070  
                               ?_TimerInt 0070                             _CLCIN1PPSbits 0E29  
                                 ?___flge 0070          __end_of_TMR3_SetInterruptHandler 041B  
                                 ?___wmul 00C7                   __end_of_I2C1_AddressSet 1468  
                              ??_TMR3_ISR 0072                              ?_DataInitSet 0070  
                              __pintentry 0004                           _I2C1_Initialize 1468  
                                 _CCP1CON 0293                                   _CCP2CON 0297  
                                 _CCP3CON 0313                                   _CLC1CON 0F10  
                                 _CLC2CON 0F1A                                   _CLC1POL 0F11  
                                 _CLC2POL 0F1B                                   _GP1CONF 0048  
                                 _GP2CONF 0047                            _SSP1CLKPPSbits 0E20  
                                 _GP3CONF 0046                           ?_PMD_Initialize 0070  
                  ??i1_NavKeyStatusUpdate 0072                       __CFG_RSTOSC$HFINT32 0000  
                 __size_of_ADC_Initialize 0008                       __size_of_NavKey_FSM 0016  
                              ??i1___wmul 0074                                   _GP1_FSM 00E6  
                                 _GP2_FSM 017E                                   _GP3_FSM 0131  
             __end_of_NavKey_UPButton_FSM 0B07                   __end_of_CLC1_Initialize 14EA  
                   __end_of_UpdateOut_GP1 13A0                     __end_of_UpdateOut_GP2 13BC  
                   __end_of_UpdateOut_GP3 13D8                                   _C_CKSRC 00C4  
                                 _C_MBANK 003B                                   _FSTATUS 0044  
                                 _INTCONF 0030         I2C1_StatusCallback@slaveWriteType 00BF  
                                 _C_DTYPE 0039                                   _C_RESET 00C5  
                                 _OSCCON1 0919                                   _OSCCON3 091B  
                                 _C_WRAPE 003A                                   _NVMADRH 0892  
                                 _NVMADRL 0891                                   _NVMDATH 0894  
                                 _OSCTUNE 091E                                   _NVMDATL 0893  
                                 _NVMCON2 0896                                   _NSTATUS 0032  
                                 _SSP1ADD 0212                                   _PPSLOCK 0E0F  
                                 _SSP1BUF 0211                                __pswtext10 0A00  
                                 _SSP1MSK 0213                       __end_of_StatusClear 0B91  
                                 _PWM_GP1 030E                                   _PWM_GP2 02B5  
                                 _PWM_GP3 025C                                   _SSTATUS 0045  
                         _double_push_cnt 00B1                   __end_of_CLC2_Initialize 1462  
                          ??_GP_Ports_FSM 00D6                            _GeneralDataSet 0F60  
                              ??_TimerInt 0070                 __size_of_GeneralDataSplit 003A  
                   __size_of_eeprom_write 001C                           RegisterRead@add 0071  
                         __size_of___flge 0062                                   ___fladd 1688  
                        ?_TMR3_StartTimer 0070                                   ___flsub 17E3  
                         __size_of___wmul 0015                                   _gp1_fsm 00BD  
                                 _gp2_fsm 00BC                                   _gp3_fsm 00BB  
                       ?_Int2StatusUpdate 0070                        ??_Int2StatusUpdate 00C9  
                                 __ptext1 041B                                   __ptext2 143A  
                                 __ptext3 14D1                                   __ptext4 14EA  
                                 __ptext5 0416                                   __ptext6 14C9  
                                 __ptext7 14BB                                   __ptext8 1484  
                                 __ptext9 147B                             _RegisterWrite 0C15  
                                 _en_prev 00B9                     _OSCILLATOR_Initialize 147B  
       __size_of_NavKey_CentralButton_FSM 004D                                   _fsm_tmr 00C6  
               ?_NavKey_CentralButton_FSM 0070                                 _T3CONbits 0413  
                      _NavKeyStatusUpdate 03ED                  ??_PIN_MANAGER_Initialize 00C7  
                       ?_FadeProcessClear 0070                        ??_FadeProcessClear 00CA  
              __size_of_SYSTEM_Initialize 0013                                   clrloop0 0B2B  
                    end_of_initialization 0044                          ?_TMR3_WriteTimer 0070  
                     ?_NavKeyStatusUpdate 00C7                  __end_ofi1_ClearInterrupt 0B94  
                            _eeprom_write 13D8                    __end_of_GeneralDataSet 0F9F  
                 __end_of_I2C1_Initialize 147B                                 i1_PWM_GP1 0DF7  
                               i1_PWM_GP2 0DA0                                 i1_PWM_GP3 0D49  
            __size_of_NavKey_LTButton_FSM 0023                      __end_of_RegisterRead 0C06  
                        ?_I2C1_AddressSet 0070                      ??_NavKeyStatusUpdate 00C9  
                    __end_of_SetInterrupt 01E5                     i1___wmul@multiplicand 0072  
                          _FadeProcessSet 0385                            ?_RegisterWrite 004D  
             __end_of_I2C1_StatusCallback 0B8D                          ??_WDT_Initialize 00C7  
                     _NavKey_DWButton_FSM 03F5                                 _PORTAbits 000C  
                               _PORTBbits 000D                                 _PORTCbits 000E  
                _TMR3_SetInterruptHandler 0416                               _StatusClear 0B8D  
                            ??_Config_GP1 004B                              ??_Config_GP2 004B  
                            ??_Config_GP3 004B                         __size_of_I2C1_ISR 001B  
                        ?_CLC1_Initialize 0070                               ___fladd@grs 007B  
                               _TRISCbits 008E                         __size_of_FADE_GP1 0029  
                       __size_of_FADE_GP2 002A                         __size_of_FADE_GP3 002A  
                       __size_of_CLC1_ISR 0004                         __size_of_CLC2_ISR 0004  
                        __CFG_FEXTOSC$OFF 0000                              ??_NavKey_FSM 00C9  
                    ?_NavKey_DWButton_FSM 0070                             ??_eeprom_read 0070  
                        ?_CLC2_Initialize 0070                           ?_GeneralDataSet 0070  
                      __end_of_Config_GP1 0D49                        __end_of_Config_GP2 0EDB  
                      __end_of_Config_GP3 0F53                  __size_of_PWM1_Initialize 000C  
                              ?i1_PWM_GP1 0070                                ?i1_PWM_GP2 0070  
                              ?i1_PWM_GP3 0070                      Int2StatusUpdate@stat 00C9  
                             PWM_GP1@duty 00D5                               PWM_GP2@duty 00D5  
                  __end_of_FadeProcessSet 038A                               PWM_GP3@duty 00D5  
                          __end_of___flge 1688                            __end_of___wmul 037C  
                       __size_of_TMR3_ISR 0009                      __size_of_DataInitSet 0030  
                          _ADC_Initialize 0200                  __size_of_Int2StatusClear 0003  
                  ?_OSCILLATOR_Initialize 0070                        __end_of_NavKey_FSM 03A0  
                     start_initialization 0032                         __size_ofi1___wmul 0015  
                     __end_of_gamma_table 0996                  __size_of_PWM2_Initialize 000C  
         __size_of_PIN_MANAGER_Initialize 0037                      __end_of_GP_Ports_FSM 00E6  
                   ??_NavKey_DWButton_FSM 00C9                   __size_ofi1_SetInterrupt 000C  
                        ?_I2C1_Initialize 0070                          __CFG_LPBOREN$OFF 0000  
                __size_of_PWM3_Initialize 000D                          _GeneralDataSplit 0FC6  
                                ??___flge 0078                          ??_PMD_Initialize 00C7  
                        I2C1_ISR@i2c_data 0050                                  ??___wmul 00CB  
                     __end_of_eeprom_read 0C15                               _CCPTMRSbits 029F  
                         ?_FadeProcessSet 0070                           ??_RegisterWrite 007E  
                  __end_of_ADC_Initialize 0208                               __pdataBANK0 005F  
                       __size_of_TimerInt 0003                                  ?_GP1_FSM 0070  
                                ?_GP2_FSM 0070                                  ?_GP3_FSM 0070  
                               ___fladd@a 0074                                 ___fladd@b 0070  
                               ___flsub@a 0052                                 ___flsub@b 0056  
                               ___latbits 0002                             __pcstackBANK0 004A  
                           __pcstackBANK1 00C7          I2C1_StatusCallback@i2c_bus_state 004F  
                __size_of_TMR2_Initialize 0008                    __size_of_TMR3_CallBack 000B  
                                ?_PWM_GP1 0070                                  ?_PWM_GP2 0070  
                                ?_PWM_GP3 0070                          eeprom_write@addr 0071  
                ??_NavKeySwitch_KeyFilter 00C7                                 __pnvBANK0 005E  
                               __pnvBANK1 00D7                     __size_of_RegisterRead 006F  
                   __size_of_SetInterrupt 0011                    _PIN_MANAGER_Initialize 1484  
        __end_of_NavKey_CentralButton_FSM 03ED                  __size_of_CLC_1_Interrupt 0089  
                __size_of_TMR3_Initialize 001C                               ??i1_PWM_GP1 0076  
                             ??i1_PWM_GP2 0076                               ??i1_PWM_GP3 0076  
                                ?___fladd 0070              __size_of_NavKey_RTButton_FSM 0023  
                                ?___flsub 0052                           ?_ADC_Initialize 0070  
                        __CFG_PPS1WAY$OFF 0000                                  _I2C1_ISR 0B30  
                             _gamma_table 041E                         ??_PWM1_Initialize 0070  
            ??_INTERRUPT_InterruptManager 007E                                 _int2clear 00C0  
                __size_of_CLC_2_Interrupt 008A                                 __pswtext1 0996  
                               __pswtext2 09A2                                 __pswtext3 1044  
                               __pswtext4 104C                                 __pswtext5 1054  
                               __pswtext6 1000                                 __pswtext7 105C  
                               __pswtext8 1064                                 __pswtext9 106C  
                                _CLC1GLS0 0F16                                  _CLC1GLS1 0F17  
                                _CLC1GLS2 0F18                                  _CLC1GLS3 0F19  
                                _CLC2GLS0 0F20                                  _CLC2GLS1 0F21  
                                _CLC2GLS2 0F22                                  _CLC2GLS3 0F23  
                                _CLC1SEL0 0F12                                  _CLC1SEL1 0F13  
                                _CLC1SEL2 0F14                                  _CLC1SEL3 0F15  
                                _CLC2SEL0 0F1C                                  _CLC2SEL1 0F1D  
                                _CLC2SEL2 0F1E                                  _CLC2SEL3 0F1F  
           __size_ofi1_NavKeyStatusUpdate 0005                  i1NavKeyStatusUpdate@stat 0070  
                                _FADE_GP1 0098                                  _FADE_GP2 0232  
                                _FADE_GP3 0208                                  _CLC1_ISR 150A  
                                _CLC2_ISR 1506                                  _GAMMAGP1 003E  
                                _GAMMAGP2 003D                                  _GAMMAGP3 003C  
                       ??_Int2StatusClear 0070                       _NavKey_LTButton_FSM 1417  
               __size_of_Int2StatusUpdate 0009              __size_of_NavKey_UPButton_FSM 0023  
                            _RegisterRead 0B97                              _SetInterrupt 01D4  
                                _DPPERIOD 0040                         ??_PWM2_Initialize 0070  
                       ?i1_ClearInterrupt 0070                            ___wmul@product 00CB  
                                _LATBbits 010D                                  _LATCbits 010E  
                 __size_of_ClearInterrupt 0003                                 clear_ram0 0B2A  
                             _eeprom_read 0C06             ?_I2C1_Initialize_ClockStreach 0070  
                                _PIE1bits 0091                                  _PIE3bits 0093  
                      ??i1_ClearInterrupt 0070                 __size_of_FadeProcessClear 0009  
                  __size_of_UpdateOut_GP1 001C                    __size_of_UpdateOut_GP2 001C  
                  __size_of_UpdateOut_GP3 001C       __size_of_INTERRUPT_InterruptManager 002C  
                                _PIR1bits 0011                                  _PIR3bits 0013  
              ??_TMR3_SetInterruptHandler 00C9                             _TMR3_CallBack 13FD  
                             _gp_fade_cnt 0034                      ?_NavKey_LTButton_FSM 0070  
                                _SSP1CON1 0215                                  _SSP1CON2 0216  
                                _SSP1CON3 0217                                  _TMR3_ISR 13F4  
                                _SSP1STAT 0214                           _NavKey_PBstatus 00A0  
                     _I2C1_slaveWriteData 005F                         ??_PWM3_Initialize 0070  
                              _ADCON0bits 009D                     __size_of_GP_Ports_FSM 0025  
                       ___wmul@multiplier 00C7                                  i1___wmul 0E4E  
                            ?_StatusClear 0070                          __size_of_GP1_FSM 004B  
                        __size_of_GP2_FSM 004D                          __size_of_GP3_FSM 004D  
                                _WPUBbits 020D                                  _WPUCbits 020E  
                __size_of_TMR3_StartTimer 0003                         RegisterWrite@data 004D  
               NavKey_DWButton_FSM@dn_fsm 00B7                          ??_GeneralDataSet 0070  
                        __size_of_PWM_GP1 0059                          __size_of_PWM_GP2 0059  
                        __size_of_PWM_GP3 0059                         ??_TMR2_Initialize 00C7  
                          i1_SetInterrupt 17D7           __size_of_NavKeySwitch_KeyFilter 0052  
                          ?_TMR3_CallBack 0070                  __size_of_TMR3_WriteTimer 000F  
                   ??_NavKey_LTButton_FSM 00C9                         _ADC_GetConversion 01E5  
                                _TimerInt 09AB                              _GP_Ports_FSM 00C1  
                 ??_OSCILLATOR_Initialize 00C7                        ?_ADC_GetConversion 00C7  
                        __size_of___fladd 014F               __size_of_NavKeyStatusUpdate 0008  
                        __size_of___flsub 001D                  _NavKey_CentralButton_FSM 03A0  
                       ??_CLC_1_Interrupt 0052                         ??_TMR3_Initialize 00C9  
                              _ANSELCbits 018E                       ??_ADC_GetConversion 00C9  
                __size_of_I2C1_AddressSet 0006                             _UpdateOut_GP1 1384  
                           _UpdateOut_GP2 13A0                             _UpdateOut_GP3 13BC  
                       ??_CLC_2_Interrupt 005A              __size_of_I2C1_StatusCallback 0042  
                __end_of_GeneralDataSplit 1000                                  __ptext10 1468  
                                __ptext11 1462                                  __ptext20 09AE  
                                __ptext12 144D                                  __ptext21 00C1  
                                __ptext13 14D5                                  __ptext30 02B5  
                                __ptext22 0131                                  __ptext14 038A  
                                __ptext31 0098                                  __ptext23 017E  
                                __ptext15 0AE4                                  __ptext40 0065  
                                __ptext32 030E                                  __ptext24 00E6  
                                __ptext16 0B07                                  __ptext33 0367  
                                __ptext25 0200                                  __ptext17 1417  
                                __ptext50 0B8D                                  __ptext42 13F4  
                                __ptext34 0385                                  __ptext26 01E5  
                                __ptext18 03F5                                  __ptext51 0C15  
                                __ptext43 1408                                  __ptext35 037C  
                                __ptext27 0208                                  __ptext19 03A0  
                                __ptext60 0EE7                                  __ptext52 13D8  
                                __ptext44 13FD                                  __ptext36 01D4  
                                __ptext28 025C                                  __ptext61 0D49  
                                __ptext53 13BC                                  __ptext45 0003  
                                __ptext37 01CB                                  __ptext29 0232  
                                __ptext70 0B97                                  __ptext62 0F53  
                                __ptext54 13A0                                  __ptext46 09AB  
                                __ptext38 03ED                                  __ptext71 0C06  
                                __ptext63 0E6F                                  __ptext55 1384  
                                __ptext47 0B30                                  __ptext39 0068  
                                __ptext80 1626                                  __ptext72 0B94  
                                __ptext64 0DA0                                  __ptext56 0FC6  
                                __ptext48 0B4B                                  __ptext81 1688  
                                __ptext73 1506                                  __ptext65 0EDB  
                                __ptext57 0F60                                  __ptext49 0B91  
                                __ptext74 1597                                  __ptext66 0CDD  
                                __ptext58 0FB3                                  __ptext75 17E3  
                                __ptext67 0DF7                                  __ptext59 0F9F  
                                __ptext76 150A                                  __ptext68 0E4E  
                                __ptext77 150E                                  __ptext69 0E63  
                                __ptext78 17D7                                  __ptext79 1621  
                            _SSP1CON1bits 0215                              _SSP1CON2bits 0216  
                  __end_ofi1_SetInterrupt 17E3                  __size_of_CLC1_Initialize 0015  
                 TMR3_WriteTimer@timerVal 0070                                  _gp_timer 00BE  
                           __size_of_main 001E                                  _intclear 00C1  
               __end_of_ADC_GetConversion 0200                          ??_FadeProcessSet 00C7  
                              _RC0PPSbits 0EA0                                _RC1PPSbits 0EA1  
                                _temp_gp1 0037                                  _temp_gp2 0036  
                                _temp_gp3 0035                                _RC2PPSbits 0EA2  
                              _RB6PPSbits 0E9E            ??_I2C1_Initialize_ClockStreach 0070  
                           ??_DataInitSet 00C7                                  int$flags 007E  
                              _RB7PPSbits 0E9F                                _ODCONCbits 028E  
      __end_of_INTERRUPT_InterruptManager 0030                _INTERRUPT_InterruptManager 0004  
                __size_of_CLC2_Initialize 0015                          RegisterWrite@add 004E  
                            _SSP1STATbits 0214      __end_of_TMR3_DefaultInterruptHandler 0004  
   __size_of_TMR3_DefaultInterruptHandler 0001              _TMR3_DefaultInterruptHandler 0003  
                  _NavKeySwitch_KeyFilter 09AE                            ?_UpdateOut_GP1 0070  
                          ?_UpdateOut_GP2 0070                            ?_UpdateOut_GP3 0070  
                              _INTCONbits 000B                               _NVMCON1bits 0895  
             __end_of_NavKey_DWButton_FSM 0416                          _Int2StatusUpdate 01CB  
                     _NavKey_RTButton_FSM 0B07                   __size_of_WDT_Initialize 0004  
                       ??_TMR3_StartTimer 00C7                           ?i1_SetInterrupt 0070  
                                intlevel1 0000                   ?_PIN_MANAGER_Initialize 0070  
                          _ClearInterrupt 0065                           ??_TMR3_CallBack 0070  
                       __CFG_CLKOUTEN$OFF 0000                               _PPSLOCKbits 0E0F  
                         _PWM1_Initialize 0E63                          _FadeProcessClear 037C  
                        ??_ADC_Initialize 00C7                             _NavKey_PBtemp 00A5  
                       i1_I2C1_Initialize 0FB3                      ?_NavKey_RTButton_FSM 0070  
                     _NavKey_UPButton_FSM 0AE4                        ?i1_I2C1_Initialize 0070  
                         _Int2StatusClear 0B94                         ??_TMR3_WriteTimer 0072  
                __size_of_I2C1_Initialize 0013                     __end_of_RegisterWrite 0CDD  
               NavKey_LTButton_FSM@lt_fsm 00B5                             __pstringtext1 041E  
               NavKey_RTButton_FSM@rt_fsm 00B6             ?_TMR3_DefaultInterruptHandler 0070  
                     __end_of_DataInitSet 0098                       ??i1_I2C1_Initialize 0070  
                         _PWM2_Initialize 0EDB                      __size_of_StatusClear 0004  
                    ?_NavKey_UPButton_FSM 0070                             ___fladd@signs 0078  
                  NavKeyStatusUpdate@stat 00C7                    __end_of_ClearInterrupt 0068  
                       ??_I2C1_AddressSet 00C7            __end_of_PIN_MANAGER_Initialize 14BB  
                           ?_eeprom_write 0070                              ___fladd@aexp 0079  
                            ___fladd@bexp 007A                                _STATUSbits 0003  
            __end_ofi1_NavKeyStatusUpdate 1626                              ?_eeprom_read 0070  
              __size_of_ADC_GetConversion 001B                 __end_ofi1_I2C1_Initialize 0FC6  
                         _PWM3_Initialize 0F53                         ??_CLC1_Initialize 00C7  
