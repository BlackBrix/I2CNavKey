

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Apr 11 16:23:15 2019

Microchip MPLAB XC8 C Compiler v2.05 (Pro license) build 20181220022703 Og9f 
     1                           	processor	16F18345
     2                           	opt	pw 120
     3                           	opt	plic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text15,local,class=CODE,merge=1,delta=2
    18                           	psect	swtext1,local,class=CONST,delta=2
    19                           	psect	text20,local,class=CODE,merge=1,delta=2
    20                           	psect	swtext2,local,class=CONST,delta=2
    21                           	psect	swtext3,local,class=CONST,delta=2
    22                           	psect	swtext4,local,class=CONST,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	psect	text42,local,class=CODE,merge=1,delta=2
    25                           	psect	text45,local,class=CODE,merge=1,delta=2
    26                           	psect	text46,local,class=CODE,merge=1,delta=2
    27                           	psect	text47,local,class=CODE,merge=1,delta=2
    28                           	psect	swtext5,local,class=CONST,delta=2
    29                           	psect	text51,local,class=CODE,merge=1,delta=2
    30                           	psect	swtext6,local,class=CONST,delta=2
    31                           	psect	text52,local,class=CODE,merge=1,delta=2
    32                           	psect	text53,local,class=CODE,merge=1,delta=2
    33                           	psect	text54,local,class=CODE,merge=1,delta=2
    34                           	psect	text55,local,class=CODE,merge=1,delta=2
    35                           	psect	text57,local,class=CODE,merge=1,delta=2
    36                           	psect	swtext7,local,class=CONST,delta=2
    37                           	psect	swtext8,local,class=CONST,delta=2
    38                           	psect	swtext9,local,class=CONST,delta=2
    39                           	psect	swtext10,local,class=CONST,delta=2
    40                           	psect	text73,local,class=CODE,merge=1,delta=2
    41                           	dabs	1,0x7E,2
    42  0000                     
    43                           ; Version 2.05
    44                           ; Generated 20/12/2018 GMT
    45                           ; 
    46                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F18345 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     	;# 
    78  0001                     	;# 
    79  0002                     	;# 
    80  0003                     	;# 
    81  0004                     	;# 
    82  0005                     	;# 
    83  0006                     	;# 
    84  0007                     	;# 
    85  0008                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  0010                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0014                     	;# 
    97  0015                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  001D                     	;# 
   109  001E                     	;# 
   110  001F                     	;# 
   111  008C                     	;# 
   112  008D                     	;# 
   113  008E                     	;# 
   114  0090                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0097                     	;# 
   120  009B                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  0111                     	;# 
   130  0112                     	;# 
   131  0113                     	;# 
   132  0114                     	;# 
   133  0115                     	;# 
   134  0116                     	;# 
   135  0117                     	;# 
   136  0118                     	;# 
   137  0119                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  018E                     	;# 
   141  0197                     	;# 
   142  0199                     	;# 
   143  0199                     	;# 
   144  0199                     	;# 
   145  019A                     	;# 
   146  019A                     	;# 
   147  019A                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019B                     	;# 
   152  019B                     	;# 
   153  019C                     	;# 
   154  019C                     	;# 
   155  019C                     	;# 
   156  019D                     	;# 
   157  019D                     	;# 
   158  019D                     	;# 
   159  019E                     	;# 
   160  019E                     	;# 
   161  019E                     	;# 
   162  019F                     	;# 
   163  019F                     	;# 
   164  019F                     	;# 
   165  019F                     	;# 
   166  019F                     	;# 
   167  020C                     	;# 
   168  020D                     	;# 
   169  020E                     	;# 
   170  0211                     	;# 
   171  0211                     	;# 
   172  0212                     	;# 
   173  0212                     	;# 
   174  0213                     	;# 
   175  0213                     	;# 
   176  0214                     	;# 
   177  0214                     	;# 
   178  0215                     	;# 
   179  0215                     	;# 
   180  0215                     	;# 
   181  0215                     	;# 
   182  0216                     	;# 
   183  0216                     	;# 
   184  0217                     	;# 
   185  0217                     	;# 
   186  0219                     	;# 
   187  021A                     	;# 
   188  021B                     	;# 
   189  021C                     	;# 
   190  021D                     	;# 
   191  021D                     	;# 
   192  021E                     	;# 
   193  021F                     	;# 
   194  028C                     	;# 
   195  028D                     	;# 
   196  028E                     	;# 
   197  0291                     	;# 
   198  0291                     	;# 
   199  0292                     	;# 
   200  0293                     	;# 
   201  0294                     	;# 
   202  0295                     	;# 
   203  0295                     	;# 
   204  0296                     	;# 
   205  0297                     	;# 
   206  0298                     	;# 
   207  029F                     	;# 
   208  030C                     	;# 
   209  030D                     	;# 
   210  030E                     	;# 
   211  0311                     	;# 
   212  0311                     	;# 
   213  0312                     	;# 
   214  0313                     	;# 
   215  0314                     	;# 
   216  0315                     	;# 
   217  0315                     	;# 
   218  0316                     	;# 
   219  0317                     	;# 
   220  0318                     	;# 
   221  038C                     	;# 
   222  038D                     	;# 
   223  038E                     	;# 
   224  0391                     	;# 
   225  0392                     	;# 
   226  0393                     	;# 
   227  0394                     	;# 
   228  0395                     	;# 
   229  0396                     	;# 
   230  0397                     	;# 
   231  0398                     	;# 
   232  0399                     	;# 
   233  039A                     	;# 
   234  039C                     	;# 
   235  039D                     	;# 
   236  039E                     	;# 
   237  039F                     	;# 
   238  0411                     	;# 
   239  0411                     	;# 
   240  0412                     	;# 
   241  0413                     	;# 
   242  0414                     	;# 
   243  0415                     	;# 
   244  0416                     	;# 
   245  0417                     	;# 
   246  0418                     	;# 
   247  0418                     	;# 
   248  0419                     	;# 
   249  041A                     	;# 
   250  041B                     	;# 
   251  041C                     	;# 
   252  041D                     	;# 
   253  041E                     	;# 
   254  041F                     	;# 
   255  0498                     	;# 
   256  0498                     	;# 
   257  0499                     	;# 
   258  049A                     	;# 
   259  049B                     	;# 
   260  049B                     	;# 
   261  049C                     	;# 
   262  049D                     	;# 
   263  049E                     	;# 
   264  049F                     	;# 
   265  0617                     	;# 
   266  0618                     	;# 
   267  0619                     	;# 
   268  0619                     	;# 
   269  061A                     	;# 
   270  061B                     	;# 
   271  061C                     	;# 
   272  061C                     	;# 
   273  061F                     	;# 
   274  0691                     	;# 
   275  0692                     	;# 
   276  0693                     	;# 
   277  0694                     	;# 
   278  0695                     	;# 
   279  0696                     	;# 
   280  0697                     	;# 
   281  0698                     	;# 
   282  0699                     	;# 
   283  0711                     	;# 
   284  0712                     	;# 
   285  0713                     	;# 
   286  0714                     	;# 
   287  0715                     	;# 
   288  0716                     	;# 
   289  0717                     	;# 
   290  0718                     	;# 
   291  0719                     	;# 
   292  0891                     	;# 
   293  0891                     	;# 
   294  0891                     	;# 
   295  0891                     	;# 
   296  0891                     	;# 
   297  0891                     	;# 
   298  0892                     	;# 
   299  0892                     	;# 
   300  0892                     	;# 
   301  0893                     	;# 
   302  0893                     	;# 
   303  0893                     	;# 
   304  0893                     	;# 
   305  0893                     	;# 
   306  0893                     	;# 
   307  0894                     	;# 
   308  0894                     	;# 
   309  0894                     	;# 
   310  0895                     	;# 
   311  0895                     	;# 
   312  0895                     	;# 
   313  0896                     	;# 
   314  0896                     	;# 
   315  0896                     	;# 
   316  089B                     	;# 
   317  0911                     	;# 
   318  0912                     	;# 
   319  0913                     	;# 
   320  0914                     	;# 
   321  0915                     	;# 
   322  0916                     	;# 
   323  0918                     	;# 
   324  0919                     	;# 
   325  091A                     	;# 
   326  091B                     	;# 
   327  091C                     	;# 
   328  091D                     	;# 
   329  091E                     	;# 
   330  091F                     	;# 
   331  0E0F                     	;# 
   332  0E10                     	;# 
   333  0E11                     	;# 
   334  0E12                     	;# 
   335  0E13                     	;# 
   336  0E14                     	;# 
   337  0E15                     	;# 
   338  0E16                     	;# 
   339  0E17                     	;# 
   340  0E18                     	;# 
   341  0E19                     	;# 
   342  0E1A                     	;# 
   343  0E1B                     	;# 
   344  0E1C                     	;# 
   345  0E1D                     	;# 
   346  0E1E                     	;# 
   347  0E1F                     	;# 
   348  0E20                     	;# 
   349  0E21                     	;# 
   350  0E22                     	;# 
   351  0E24                     	;# 
   352  0E25                     	;# 
   353  0E28                     	;# 
   354  0E29                     	;# 
   355  0E2A                     	;# 
   356  0E2B                     	;# 
   357  0E2C                     	;# 
   358  0E2D                     	;# 
   359  0E2E                     	;# 
   360  0E2F                     	;# 
   361  0E90                     	;# 
   362  0E91                     	;# 
   363  0E92                     	;# 
   364  0E94                     	;# 
   365  0E95                     	;# 
   366  0E9C                     	;# 
   367  0E9D                     	;# 
   368  0E9E                     	;# 
   369  0E9F                     	;# 
   370  0EA0                     	;# 
   371  0EA1                     	;# 
   372  0EA2                     	;# 
   373  0EA3                     	;# 
   374  0EA4                     	;# 
   375  0EA5                     	;# 
   376  0EA6                     	;# 
   377  0EA7                     	;# 
   378  0F0F                     	;# 
   379  0F10                     	;# 
   380  0F11                     	;# 
   381  0F12                     	;# 
   382  0F13                     	;# 
   383  0F14                     	;# 
   384  0F15                     	;# 
   385  0F16                     	;# 
   386  0F17                     	;# 
   387  0F18                     	;# 
   388  0F19                     	;# 
   389  0F1A                     	;# 
   390  0F1B                     	;# 
   391  0F1C                     	;# 
   392  0F1D                     	;# 
   393  0F1E                     	;# 
   394  0F1F                     	;# 
   395  0F20                     	;# 
   396  0F21                     	;# 
   397  0F22                     	;# 
   398  0F23                     	;# 
   399  0F24                     	;# 
   400  0F25                     	;# 
   401  0F26                     	;# 
   402  0F27                     	;# 
   403  0F28                     	;# 
   404  0F29                     	;# 
   405  0F2A                     	;# 
   406  0F2B                     	;# 
   407  0F2C                     	;# 
   408  0F2D                     	;# 
   409  0F2E                     	;# 
   410  0F2F                     	;# 
   411  0F30                     	;# 
   412  0F31                     	;# 
   413  0F32                     	;# 
   414  0F33                     	;# 
   415  0F34                     	;# 
   416  0F35                     	;# 
   417  0F36                     	;# 
   418  0F37                     	;# 
   419  0FE4                     	;# 
   420  0FE5                     	;# 
   421  0FE6                     	;# 
   422  0FE7                     	;# 
   423  0FE8                     	;# 
   424  0FE9                     	;# 
   425  0FEA                     	;# 
   426  0FEB                     	;# 
   427  0FED                     	;# 
   428  0FEE                     	;# 
   429  0FEF                     	;# 
   430  0000                     	;# 
   431  0001                     	;# 
   432  0002                     	;# 
   433  0003                     	;# 
   434  0004                     	;# 
   435  0005                     	;# 
   436  0006                     	;# 
   437  0007                     	;# 
   438  0008                     	;# 
   439  0009                     	;# 
   440  000A                     	;# 
   441  000B                     	;# 
   442  000C                     	;# 
   443  000D                     	;# 
   444  000E                     	;# 
   445  0010                     	;# 
   446  0011                     	;# 
   447  0012                     	;# 
   448  0013                     	;# 
   449  0014                     	;# 
   450  0015                     	;# 
   451  0015                     	;# 
   452  0016                     	;# 
   453  0016                     	;# 
   454  0017                     	;# 
   455  0018                     	;# 
   456  0019                     	;# 
   457  0019                     	;# 
   458  001A                     	;# 
   459  001B                     	;# 
   460  001C                     	;# 
   461  001D                     	;# 
   462  001E                     	;# 
   463  001F                     	;# 
   464  008C                     	;# 
   465  008D                     	;# 
   466  008E                     	;# 
   467  0090                     	;# 
   468  0091                     	;# 
   469  0092                     	;# 
   470  0093                     	;# 
   471  0094                     	;# 
   472  0097                     	;# 
   473  009B                     	;# 
   474  009B                     	;# 
   475  009C                     	;# 
   476  009D                     	;# 
   477  009E                     	;# 
   478  009F                     	;# 
   479  010C                     	;# 
   480  010D                     	;# 
   481  010E                     	;# 
   482  0111                     	;# 
   483  0112                     	;# 
   484  0113                     	;# 
   485  0114                     	;# 
   486  0115                     	;# 
   487  0116                     	;# 
   488  0117                     	;# 
   489  0118                     	;# 
   490  0119                     	;# 
   491  018C                     	;# 
   492  018D                     	;# 
   493  018E                     	;# 
   494  0197                     	;# 
   495  0199                     	;# 
   496  0199                     	;# 
   497  0199                     	;# 
   498  019A                     	;# 
   499  019A                     	;# 
   500  019A                     	;# 
   501  019B                     	;# 
   502  019B                     	;# 
   503  019B                     	;# 
   504  019B                     	;# 
   505  019B                     	;# 
   506  019C                     	;# 
   507  019C                     	;# 
   508  019C                     	;# 
   509  019D                     	;# 
   510  019D                     	;# 
   511  019D                     	;# 
   512  019E                     	;# 
   513  019E                     	;# 
   514  019E                     	;# 
   515  019F                     	;# 
   516  019F                     	;# 
   517  019F                     	;# 
   518  019F                     	;# 
   519  019F                     	;# 
   520  020C                     	;# 
   521  020D                     	;# 
   522  020E                     	;# 
   523  0211                     	;# 
   524  0211                     	;# 
   525  0212                     	;# 
   526  0212                     	;# 
   527  0213                     	;# 
   528  0213                     	;# 
   529  0214                     	;# 
   530  0214                     	;# 
   531  0215                     	;# 
   532  0215                     	;# 
   533  0215                     	;# 
   534  0215                     	;# 
   535  0216                     	;# 
   536  0216                     	;# 
   537  0217                     	;# 
   538  0217                     	;# 
   539  0219                     	;# 
   540  021A                     	;# 
   541  021B                     	;# 
   542  021C                     	;# 
   543  021D                     	;# 
   544  021D                     	;# 
   545  021E                     	;# 
   546  021F                     	;# 
   547  028C                     	;# 
   548  028D                     	;# 
   549  028E                     	;# 
   550  0291                     	;# 
   551  0291                     	;# 
   552  0292                     	;# 
   553  0293                     	;# 
   554  0294                     	;# 
   555  0295                     	;# 
   556  0295                     	;# 
   557  0296                     	;# 
   558  0297                     	;# 
   559  0298                     	;# 
   560  029F                     	;# 
   561  030C                     	;# 
   562  030D                     	;# 
   563  030E                     	;# 
   564  0311                     	;# 
   565  0311                     	;# 
   566  0312                     	;# 
   567  0313                     	;# 
   568  0314                     	;# 
   569  0315                     	;# 
   570  0315                     	;# 
   571  0316                     	;# 
   572  0317                     	;# 
   573  0318                     	;# 
   574  038C                     	;# 
   575  038D                     	;# 
   576  038E                     	;# 
   577  0391                     	;# 
   578  0392                     	;# 
   579  0393                     	;# 
   580  0394                     	;# 
   581  0395                     	;# 
   582  0396                     	;# 
   583  0397                     	;# 
   584  0398                     	;# 
   585  0399                     	;# 
   586  039A                     	;# 
   587  039C                     	;# 
   588  039D                     	;# 
   589  039E                     	;# 
   590  039F                     	;# 
   591  0411                     	;# 
   592  0411                     	;# 
   593  0412                     	;# 
   594  0413                     	;# 
   595  0414                     	;# 
   596  0415                     	;# 
   597  0416                     	;# 
   598  0417                     	;# 
   599  0418                     	;# 
   600  0418                     	;# 
   601  0419                     	;# 
   602  041A                     	;# 
   603  041B                     	;# 
   604  041C                     	;# 
   605  041D                     	;# 
   606  041E                     	;# 
   607  041F                     	;# 
   608  0498                     	;# 
   609  0498                     	;# 
   610  0499                     	;# 
   611  049A                     	;# 
   612  049B                     	;# 
   613  049B                     	;# 
   614  049C                     	;# 
   615  049D                     	;# 
   616  049E                     	;# 
   617  049F                     	;# 
   618  0617                     	;# 
   619  0618                     	;# 
   620  0619                     	;# 
   621  0619                     	;# 
   622  061A                     	;# 
   623  061B                     	;# 
   624  061C                     	;# 
   625  061C                     	;# 
   626  061F                     	;# 
   627  0691                     	;# 
   628  0692                     	;# 
   629  0693                     	;# 
   630  0694                     	;# 
   631  0695                     	;# 
   632  0696                     	;# 
   633  0697                     	;# 
   634  0698                     	;# 
   635  0699                     	;# 
   636  0711                     	;# 
   637  0712                     	;# 
   638  0713                     	;# 
   639  0714                     	;# 
   640  0715                     	;# 
   641  0716                     	;# 
   642  0717                     	;# 
   643  0718                     	;# 
   644  0719                     	;# 
   645  0891                     	;# 
   646  0891                     	;# 
   647  0891                     	;# 
   648  0891                     	;# 
   649  0891                     	;# 
   650  0891                     	;# 
   651  0892                     	;# 
   652  0892                     	;# 
   653  0892                     	;# 
   654  0893                     	;# 
   655  0893                     	;# 
   656  0893                     	;# 
   657  0893                     	;# 
   658  0893                     	;# 
   659  0893                     	;# 
   660  0894                     	;# 
   661  0894                     	;# 
   662  0894                     	;# 
   663  0895                     	;# 
   664  0895                     	;# 
   665  0895                     	;# 
   666  0896                     	;# 
   667  0896                     	;# 
   668  0896                     	;# 
   669  089B                     	;# 
   670  0911                     	;# 
   671  0912                     	;# 
   672  0913                     	;# 
   673  0914                     	;# 
   674  0915                     	;# 
   675  0916                     	;# 
   676  0918                     	;# 
   677  0919                     	;# 
   678  091A                     	;# 
   679  091B                     	;# 
   680  091C                     	;# 
   681  091D                     	;# 
   682  091E                     	;# 
   683  091F                     	;# 
   684  0E0F                     	;# 
   685  0E10                     	;# 
   686  0E11                     	;# 
   687  0E12                     	;# 
   688  0E13                     	;# 
   689  0E14                     	;# 
   690  0E15                     	;# 
   691  0E16                     	;# 
   692  0E17                     	;# 
   693  0E18                     	;# 
   694  0E19                     	;# 
   695  0E1A                     	;# 
   696  0E1B                     	;# 
   697  0E1C                     	;# 
   698  0E1D                     	;# 
   699  0E1E                     	;# 
   700  0E1F                     	;# 
   701  0E20                     	;# 
   702  0E21                     	;# 
   703  0E22                     	;# 
   704  0E24                     	;# 
   705  0E25                     	;# 
   706  0E28                     	;# 
   707  0E29                     	;# 
   708  0E2A                     	;# 
   709  0E2B                     	;# 
   710  0E2C                     	;# 
   711  0E2D                     	;# 
   712  0E2E                     	;# 
   713  0E2F                     	;# 
   714  0E90                     	;# 
   715  0E91                     	;# 
   716  0E92                     	;# 
   717  0E94                     	;# 
   718  0E95                     	;# 
   719  0E9C                     	;# 
   720  0E9D                     	;# 
   721  0E9E                     	;# 
   722  0E9F                     	;# 
   723  0EA0                     	;# 
   724  0EA1                     	;# 
   725  0EA2                     	;# 
   726  0EA3                     	;# 
   727  0EA4                     	;# 
   728  0EA5                     	;# 
   729  0EA6                     	;# 
   730  0EA7                     	;# 
   731  0F0F                     	;# 
   732  0F10                     	;# 
   733  0F11                     	;# 
   734  0F12                     	;# 
   735  0F13                     	;# 
   736  0F14                     	;# 
   737  0F15                     	;# 
   738  0F16                     	;# 
   739  0F17                     	;# 
   740  0F18                     	;# 
   741  0F19                     	;# 
   742  0F1A                     	;# 
   743  0F1B                     	;# 
   744  0F1C                     	;# 
   745  0F1D                     	;# 
   746  0F1E                     	;# 
   747  0F1F                     	;# 
   748  0F20                     	;# 
   749  0F21                     	;# 
   750  0F22                     	;# 
   751  0F23                     	;# 
   752  0F24                     	;# 
   753  0F25                     	;# 
   754  0F26                     	;# 
   755  0F27                     	;# 
   756  0F28                     	;# 
   757  0F29                     	;# 
   758  0F2A                     	;# 
   759  0F2B                     	;# 
   760  0F2C                     	;# 
   761  0F2D                     	;# 
   762  0F2E                     	;# 
   763  0F2F                     	;# 
   764  0F30                     	;# 
   765  0F31                     	;# 
   766  0F32                     	;# 
   767  0F33                     	;# 
   768  0F34                     	;# 
   769  0F35                     	;# 
   770  0F36                     	;# 
   771  0F37                     	;# 
   772  0FE4                     	;# 
   773  0FE5                     	;# 
   774  0FE6                     	;# 
   775  0FE7                     	;# 
   776  0FE8                     	;# 
   777  0FE9                     	;# 
   778  0FEA                     	;# 
   779  0FEB                     	;# 
   780  0FED                     	;# 
   781  0FEE                     	;# 
   782  0FEF                     	;# 
   783  0000                     	;# 
   784  0001                     	;# 
   785  0002                     	;# 
   786  0003                     	;# 
   787  0004                     	;# 
   788  0005                     	;# 
   789  0006                     	;# 
   790  0007                     	;# 
   791  0008                     	;# 
   792  0009                     	;# 
   793  000A                     	;# 
   794  000B                     	;# 
   795  000C                     	;# 
   796  000D                     	;# 
   797  000E                     	;# 
   798  0010                     	;# 
   799  0011                     	;# 
   800  0012                     	;# 
   801  0013                     	;# 
   802  0014                     	;# 
   803  0015                     	;# 
   804  0015                     	;# 
   805  0016                     	;# 
   806  0016                     	;# 
   807  0017                     	;# 
   808  0018                     	;# 
   809  0019                     	;# 
   810  0019                     	;# 
   811  001A                     	;# 
   812  001B                     	;# 
   813  001C                     	;# 
   814  001D                     	;# 
   815  001E                     	;# 
   816  001F                     	;# 
   817  008C                     	;# 
   818  008D                     	;# 
   819  008E                     	;# 
   820  0090                     	;# 
   821  0091                     	;# 
   822  0092                     	;# 
   823  0093                     	;# 
   824  0094                     	;# 
   825  0097                     	;# 
   826  009B                     	;# 
   827  009B                     	;# 
   828  009C                     	;# 
   829  009D                     	;# 
   830  009E                     	;# 
   831  009F                     	;# 
   832  010C                     	;# 
   833  010D                     	;# 
   834  010E                     	;# 
   835  0111                     	;# 
   836  0112                     	;# 
   837  0113                     	;# 
   838  0114                     	;# 
   839  0115                     	;# 
   840  0116                     	;# 
   841  0117                     	;# 
   842  0118                     	;# 
   843  0119                     	;# 
   844  018C                     	;# 
   845  018D                     	;# 
   846  018E                     	;# 
   847  0197                     	;# 
   848  0199                     	;# 
   849  0199                     	;# 
   850  0199                     	;# 
   851  019A                     	;# 
   852  019A                     	;# 
   853  019A                     	;# 
   854  019B                     	;# 
   855  019B                     	;# 
   856  019B                     	;# 
   857  019B                     	;# 
   858  019B                     	;# 
   859  019C                     	;# 
   860  019C                     	;# 
   861  019C                     	;# 
   862  019D                     	;# 
   863  019D                     	;# 
   864  019D                     	;# 
   865  019E                     	;# 
   866  019E                     	;# 
   867  019E                     	;# 
   868  019F                     	;# 
   869  019F                     	;# 
   870  019F                     	;# 
   871  019F                     	;# 
   872  019F                     	;# 
   873  020C                     	;# 
   874  020D                     	;# 
   875  020E                     	;# 
   876  0211                     	;# 
   877  0211                     	;# 
   878  0212                     	;# 
   879  0212                     	;# 
   880  0213                     	;# 
   881  0213                     	;# 
   882  0214                     	;# 
   883  0214                     	;# 
   884  0215                     	;# 
   885  0215                     	;# 
   886  0215                     	;# 
   887  0215                     	;# 
   888  0216                     	;# 
   889  0216                     	;# 
   890  0217                     	;# 
   891  0217                     	;# 
   892  0219                     	;# 
   893  021A                     	;# 
   894  021B                     	;# 
   895  021C                     	;# 
   896  021D                     	;# 
   897  021D                     	;# 
   898  021E                     	;# 
   899  021F                     	;# 
   900  028C                     	;# 
   901  028D                     	;# 
   902  028E                     	;# 
   903  0291                     	;# 
   904  0291                     	;# 
   905  0292                     	;# 
   906  0293                     	;# 
   907  0294                     	;# 
   908  0295                     	;# 
   909  0295                     	;# 
   910  0296                     	;# 
   911  0297                     	;# 
   912  0298                     	;# 
   913  029F                     	;# 
   914  030C                     	;# 
   915  030D                     	;# 
   916  030E                     	;# 
   917  0311                     	;# 
   918  0311                     	;# 
   919  0312                     	;# 
   920  0313                     	;# 
   921  0314                     	;# 
   922  0315                     	;# 
   923  0315                     	;# 
   924  0316                     	;# 
   925  0317                     	;# 
   926  0318                     	;# 
   927  038C                     	;# 
   928  038D                     	;# 
   929  038E                     	;# 
   930  0391                     	;# 
   931  0392                     	;# 
   932  0393                     	;# 
   933  0394                     	;# 
   934  0395                     	;# 
   935  0396                     	;# 
   936  0397                     	;# 
   937  0398                     	;# 
   938  0399                     	;# 
   939  039A                     	;# 
   940  039C                     	;# 
   941  039D                     	;# 
   942  039E                     	;# 
   943  039F                     	;# 
   944  0411                     	;# 
   945  0411                     	;# 
   946  0412                     	;# 
   947  0413                     	;# 
   948  0414                     	;# 
   949  0415                     	;# 
   950  0416                     	;# 
   951  0417                     	;# 
   952  0418                     	;# 
   953  0418                     	;# 
   954  0419                     	;# 
   955  041A                     	;# 
   956  041B                     	;# 
   957  041C                     	;# 
   958  041D                     	;# 
   959  041E                     	;# 
   960  041F                     	;# 
   961  0498                     	;# 
   962  0498                     	;# 
   963  0499                     	;# 
   964  049A                     	;# 
   965  049B                     	;# 
   966  049B                     	;# 
   967  049C                     	;# 
   968  049D                     	;# 
   969  049E                     	;# 
   970  049F                     	;# 
   971  0617                     	;# 
   972  0618                     	;# 
   973  0619                     	;# 
   974  0619                     	;# 
   975  061A                     	;# 
   976  061B                     	;# 
   977  061C                     	;# 
   978  061C                     	;# 
   979  061F                     	;# 
   980  0691                     	;# 
   981  0692                     	;# 
   982  0693                     	;# 
   983  0694                     	;# 
   984  0695                     	;# 
   985  0696                     	;# 
   986  0697                     	;# 
   987  0698                     	;# 
   988  0699                     	;# 
   989  0711                     	;# 
   990  0712                     	;# 
   991  0713                     	;# 
   992  0714                     	;# 
   993  0715                     	;# 
   994  0716                     	;# 
   995  0717                     	;# 
   996  0718                     	;# 
   997  0719                     	;# 
   998  0891                     	;# 
   999  0891                     	;# 
  1000  0891                     	;# 
  1001  0891                     	;# 
  1002  0891                     	;# 
  1003  0891                     	;# 
  1004  0892                     	;# 
  1005  0892                     	;# 
  1006  0892                     	;# 
  1007  0893                     	;# 
  1008  0893                     	;# 
  1009  0893                     	;# 
  1010  0893                     	;# 
  1011  0893                     	;# 
  1012  0893                     	;# 
  1013  0894                     	;# 
  1014  0894                     	;# 
  1015  0894                     	;# 
  1016  0895                     	;# 
  1017  0895                     	;# 
  1018  0895                     	;# 
  1019  0896                     	;# 
  1020  0896                     	;# 
  1021  0896                     	;# 
  1022  089B                     	;# 
  1023  0911                     	;# 
  1024  0912                     	;# 
  1025  0913                     	;# 
  1026  0914                     	;# 
  1027  0915                     	;# 
  1028  0916                     	;# 
  1029  0918                     	;# 
  1030  0919                     	;# 
  1031  091A                     	;# 
  1032  091B                     	;# 
  1033  091C                     	;# 
  1034  091D                     	;# 
  1035  091E                     	;# 
  1036  091F                     	;# 
  1037  0E0F                     	;# 
  1038  0E10                     	;# 
  1039  0E11                     	;# 
  1040  0E12                     	;# 
  1041  0E13                     	;# 
  1042  0E14                     	;# 
  1043  0E15                     	;# 
  1044  0E16                     	;# 
  1045  0E17                     	;# 
  1046  0E18                     	;# 
  1047  0E19                     	;# 
  1048  0E1A                     	;# 
  1049  0E1B                     	;# 
  1050  0E1C                     	;# 
  1051  0E1D                     	;# 
  1052  0E1E                     	;# 
  1053  0E1F                     	;# 
  1054  0E20                     	;# 
  1055  0E21                     	;# 
  1056  0E22                     	;# 
  1057  0E24                     	;# 
  1058  0E25                     	;# 
  1059  0E28                     	;# 
  1060  0E29                     	;# 
  1061  0E2A                     	;# 
  1062  0E2B                     	;# 
  1063  0E2C                     	;# 
  1064  0E2D                     	;# 
  1065  0E2E                     	;# 
  1066  0E2F                     	;# 
  1067  0E90                     	;# 
  1068  0E91                     	;# 
  1069  0E92                     	;# 
  1070  0E94                     	;# 
  1071  0E95                     	;# 
  1072  0E9C                     	;# 
  1073  0E9D                     	;# 
  1074  0E9E                     	;# 
  1075  0E9F                     	;# 
  1076  0EA0                     	;# 
  1077  0EA1                     	;# 
  1078  0EA2                     	;# 
  1079  0EA3                     	;# 
  1080  0EA4                     	;# 
  1081  0EA5                     	;# 
  1082  0EA6                     	;# 
  1083  0EA7                     	;# 
  1084  0F0F                     	;# 
  1085  0F10                     	;# 
  1086  0F11                     	;# 
  1087  0F12                     	;# 
  1088  0F13                     	;# 
  1089  0F14                     	;# 
  1090  0F15                     	;# 
  1091  0F16                     	;# 
  1092  0F17                     	;# 
  1093  0F18                     	;# 
  1094  0F19                     	;# 
  1095  0F1A                     	;# 
  1096  0F1B                     	;# 
  1097  0F1C                     	;# 
  1098  0F1D                     	;# 
  1099  0F1E                     	;# 
  1100  0F1F                     	;# 
  1101  0F20                     	;# 
  1102  0F21                     	;# 
  1103  0F22                     	;# 
  1104  0F23                     	;# 
  1105  0F24                     	;# 
  1106  0F25                     	;# 
  1107  0F26                     	;# 
  1108  0F27                     	;# 
  1109  0F28                     	;# 
  1110  0F29                     	;# 
  1111  0F2A                     	;# 
  1112  0F2B                     	;# 
  1113  0F2C                     	;# 
  1114  0F2D                     	;# 
  1115  0F2E                     	;# 
  1116  0F2F                     	;# 
  1117  0F30                     	;# 
  1118  0F31                     	;# 
  1119  0F32                     	;# 
  1120  0F33                     	;# 
  1121  0F34                     	;# 
  1122  0F35                     	;# 
  1123  0F36                     	;# 
  1124  0F37                     	;# 
  1125  0FE4                     	;# 
  1126  0FE5                     	;# 
  1127  0FE6                     	;# 
  1128  0FE7                     	;# 
  1129  0FE8                     	;# 
  1130  0FE9                     	;# 
  1131  0FEA                     	;# 
  1132  0FEB                     	;# 
  1133  0FED                     	;# 
  1134  0FEE                     	;# 
  1135  0FEF                     	;# 
  1136  0000                     	;# 
  1137  0001                     	;# 
  1138  0002                     	;# 
  1139  0003                     	;# 
  1140  0004                     	;# 
  1141  0005                     	;# 
  1142  0006                     	;# 
  1143  0007                     	;# 
  1144  0008                     	;# 
  1145  0009                     	;# 
  1146  000A                     	;# 
  1147  000B                     	;# 
  1148  000C                     	;# 
  1149  000D                     	;# 
  1150  000E                     	;# 
  1151  0010                     	;# 
  1152  0011                     	;# 
  1153  0012                     	;# 
  1154  0013                     	;# 
  1155  0014                     	;# 
  1156  0015                     	;# 
  1157  0015                     	;# 
  1158  0016                     	;# 
  1159  0016                     	;# 
  1160  0017                     	;# 
  1161  0018                     	;# 
  1162  0019                     	;# 
  1163  0019                     	;# 
  1164  001A                     	;# 
  1165  001B                     	;# 
  1166  001C                     	;# 
  1167  001D                     	;# 
  1168  001E                     	;# 
  1169  001F                     	;# 
  1170  008C                     	;# 
  1171  008D                     	;# 
  1172  008E                     	;# 
  1173  0090                     	;# 
  1174  0091                     	;# 
  1175  0092                     	;# 
  1176  0093                     	;# 
  1177  0094                     	;# 
  1178  0097                     	;# 
  1179  009B                     	;# 
  1180  009B                     	;# 
  1181  009C                     	;# 
  1182  009D                     	;# 
  1183  009E                     	;# 
  1184  009F                     	;# 
  1185  010C                     	;# 
  1186  010D                     	;# 
  1187  010E                     	;# 
  1188  0111                     	;# 
  1189  0112                     	;# 
  1190  0113                     	;# 
  1191  0114                     	;# 
  1192  0115                     	;# 
  1193  0116                     	;# 
  1194  0117                     	;# 
  1195  0118                     	;# 
  1196  0119                     	;# 
  1197  018C                     	;# 
  1198  018D                     	;# 
  1199  018E                     	;# 
  1200  0197                     	;# 
  1201  0199                     	;# 
  1202  0199                     	;# 
  1203  0199                     	;# 
  1204  019A                     	;# 
  1205  019A                     	;# 
  1206  019A                     	;# 
  1207  019B                     	;# 
  1208  019B                     	;# 
  1209  019B                     	;# 
  1210  019B                     	;# 
  1211  019B                     	;# 
  1212  019C                     	;# 
  1213  019C                     	;# 
  1214  019C                     	;# 
  1215  019D                     	;# 
  1216  019D                     	;# 
  1217  019D                     	;# 
  1218  019E                     	;# 
  1219  019E                     	;# 
  1220  019E                     	;# 
  1221  019F                     	;# 
  1222  019F                     	;# 
  1223  019F                     	;# 
  1224  019F                     	;# 
  1225  019F                     	;# 
  1226  020C                     	;# 
  1227  020D                     	;# 
  1228  020E                     	;# 
  1229  0211                     	;# 
  1230  0211                     	;# 
  1231  0212                     	;# 
  1232  0212                     	;# 
  1233  0213                     	;# 
  1234  0213                     	;# 
  1235  0214                     	;# 
  1236  0214                     	;# 
  1237  0215                     	;# 
  1238  0215                     	;# 
  1239  0215                     	;# 
  1240  0215                     	;# 
  1241  0216                     	;# 
  1242  0216                     	;# 
  1243  0217                     	;# 
  1244  0217                     	;# 
  1245  0219                     	;# 
  1246  021A                     	;# 
  1247  021B                     	;# 
  1248  021C                     	;# 
  1249  021D                     	;# 
  1250  021D                     	;# 
  1251  021E                     	;# 
  1252  021F                     	;# 
  1253  028C                     	;# 
  1254  028D                     	;# 
  1255  028E                     	;# 
  1256  0291                     	;# 
  1257  0291                     	;# 
  1258  0292                     	;# 
  1259  0293                     	;# 
  1260  0294                     	;# 
  1261  0295                     	;# 
  1262  0295                     	;# 
  1263  0296                     	;# 
  1264  0297                     	;# 
  1265  0298                     	;# 
  1266  029F                     	;# 
  1267  030C                     	;# 
  1268  030D                     	;# 
  1269  030E                     	;# 
  1270  0311                     	;# 
  1271  0311                     	;# 
  1272  0312                     	;# 
  1273  0313                     	;# 
  1274  0314                     	;# 
  1275  0315                     	;# 
  1276  0315                     	;# 
  1277  0316                     	;# 
  1278  0317                     	;# 
  1279  0318                     	;# 
  1280  038C                     	;# 
  1281  038D                     	;# 
  1282  038E                     	;# 
  1283  0391                     	;# 
  1284  0392                     	;# 
  1285  0393                     	;# 
  1286  0394                     	;# 
  1287  0395                     	;# 
  1288  0396                     	;# 
  1289  0397                     	;# 
  1290  0398                     	;# 
  1291  0399                     	;# 
  1292  039A                     	;# 
  1293  039C                     	;# 
  1294  039D                     	;# 
  1295  039E                     	;# 
  1296  039F                     	;# 
  1297  0411                     	;# 
  1298  0411                     	;# 
  1299  0412                     	;# 
  1300  0413                     	;# 
  1301  0414                     	;# 
  1302  0415                     	;# 
  1303  0416                     	;# 
  1304  0417                     	;# 
  1305  0418                     	;# 
  1306  0418                     	;# 
  1307  0419                     	;# 
  1308  041A                     	;# 
  1309  041B                     	;# 
  1310  041C                     	;# 
  1311  041D                     	;# 
  1312  041E                     	;# 
  1313  041F                     	;# 
  1314  0498                     	;# 
  1315  0498                     	;# 
  1316  0499                     	;# 
  1317  049A                     	;# 
  1318  049B                     	;# 
  1319  049B                     	;# 
  1320  049C                     	;# 
  1321  049D                     	;# 
  1322  049E                     	;# 
  1323  049F                     	;# 
  1324  0617                     	;# 
  1325  0618                     	;# 
  1326  0619                     	;# 
  1327  0619                     	;# 
  1328  061A                     	;# 
  1329  061B                     	;# 
  1330  061C                     	;# 
  1331  061C                     	;# 
  1332  061F                     	;# 
  1333  0691                     	;# 
  1334  0692                     	;# 
  1335  0693                     	;# 
  1336  0694                     	;# 
  1337  0695                     	;# 
  1338  0696                     	;# 
  1339  0697                     	;# 
  1340  0698                     	;# 
  1341  0699                     	;# 
  1342  0711                     	;# 
  1343  0712                     	;# 
  1344  0713                     	;# 
  1345  0714                     	;# 
  1346  0715                     	;# 
  1347  0716                     	;# 
  1348  0717                     	;# 
  1349  0718                     	;# 
  1350  0719                     	;# 
  1351  0891                     	;# 
  1352  0891                     	;# 
  1353  0891                     	;# 
  1354  0891                     	;# 
  1355  0891                     	;# 
  1356  0891                     	;# 
  1357  0892                     	;# 
  1358  0892                     	;# 
  1359  0892                     	;# 
  1360  0893                     	;# 
  1361  0893                     	;# 
  1362  0893                     	;# 
  1363  0893                     	;# 
  1364  0893                     	;# 
  1365  0893                     	;# 
  1366  0894                     	;# 
  1367  0894                     	;# 
  1368  0894                     	;# 
  1369  0895                     	;# 
  1370  0895                     	;# 
  1371  0895                     	;# 
  1372  0896                     	;# 
  1373  0896                     	;# 
  1374  0896                     	;# 
  1375  089B                     	;# 
  1376  0911                     	;# 
  1377  0912                     	;# 
  1378  0913                     	;# 
  1379  0914                     	;# 
  1380  0915                     	;# 
  1381  0916                     	;# 
  1382  0918                     	;# 
  1383  0919                     	;# 
  1384  091A                     	;# 
  1385  091B                     	;# 
  1386  091C                     	;# 
  1387  091D                     	;# 
  1388  091E                     	;# 
  1389  091F                     	;# 
  1390  0E0F                     	;# 
  1391  0E10                     	;# 
  1392  0E11                     	;# 
  1393  0E12                     	;# 
  1394  0E13                     	;# 
  1395  0E14                     	;# 
  1396  0E15                     	;# 
  1397  0E16                     	;# 
  1398  0E17                     	;# 
  1399  0E18                     	;# 
  1400  0E19                     	;# 
  1401  0E1A                     	;# 
  1402  0E1B                     	;# 
  1403  0E1C                     	;# 
  1404  0E1D                     	;# 
  1405  0E1E                     	;# 
  1406  0E1F                     	;# 
  1407  0E20                     	;# 
  1408  0E21                     	;# 
  1409  0E22                     	;# 
  1410  0E24                     	;# 
  1411  0E25                     	;# 
  1412  0E28                     	;# 
  1413  0E29                     	;# 
  1414  0E2A                     	;# 
  1415  0E2B                     	;# 
  1416  0E2C                     	;# 
  1417  0E2D                     	;# 
  1418  0E2E                     	;# 
  1419  0E2F                     	;# 
  1420  0E90                     	;# 
  1421  0E91                     	;# 
  1422  0E92                     	;# 
  1423  0E94                     	;# 
  1424  0E95                     	;# 
  1425  0E9C                     	;# 
  1426  0E9D                     	;# 
  1427  0E9E                     	;# 
  1428  0E9F                     	;# 
  1429  0EA0                     	;# 
  1430  0EA1                     	;# 
  1431  0EA2                     	;# 
  1432  0EA3                     	;# 
  1433  0EA4                     	;# 
  1434  0EA5                     	;# 
  1435  0EA6                     	;# 
  1436  0EA7                     	;# 
  1437  0F0F                     	;# 
  1438  0F10                     	;# 
  1439  0F11                     	;# 
  1440  0F12                     	;# 
  1441  0F13                     	;# 
  1442  0F14                     	;# 
  1443  0F15                     	;# 
  1444  0F16                     	;# 
  1445  0F17                     	;# 
  1446  0F18                     	;# 
  1447  0F19                     	;# 
  1448  0F1A                     	;# 
  1449  0F1B                     	;# 
  1450  0F1C                     	;# 
  1451  0F1D                     	;# 
  1452  0F1E                     	;# 
  1453  0F1F                     	;# 
  1454  0F20                     	;# 
  1455  0F21                     	;# 
  1456  0F22                     	;# 
  1457  0F23                     	;# 
  1458  0F24                     	;# 
  1459  0F25                     	;# 
  1460  0F26                     	;# 
  1461  0F27                     	;# 
  1462  0F28                     	;# 
  1463  0F29                     	;# 
  1464  0F2A                     	;# 
  1465  0F2B                     	;# 
  1466  0F2C                     	;# 
  1467  0F2D                     	;# 
  1468  0F2E                     	;# 
  1469  0F2F                     	;# 
  1470  0F30                     	;# 
  1471  0F31                     	;# 
  1472  0F32                     	;# 
  1473  0F33                     	;# 
  1474  0F34                     	;# 
  1475  0F35                     	;# 
  1476  0F36                     	;# 
  1477  0F37                     	;# 
  1478  0FE4                     	;# 
  1479  0FE5                     	;# 
  1480  0FE6                     	;# 
  1481  0FE7                     	;# 
  1482  0FE8                     	;# 
  1483  0FE9                     	;# 
  1484  0FEA                     	;# 
  1485  0FEB                     	;# 
  1486  0FED                     	;# 
  1487  0FEE                     	;# 
  1488  0FEF                     	;# 
  1489  0000                     	;# 
  1490  0001                     	;# 
  1491  0002                     	;# 
  1492  0003                     	;# 
  1493  0004                     	;# 
  1494  0005                     	;# 
  1495  0006                     	;# 
  1496  0007                     	;# 
  1497  0008                     	;# 
  1498  0009                     	;# 
  1499  000A                     	;# 
  1500  000B                     	;# 
  1501  000C                     	;# 
  1502  000D                     	;# 
  1503  000E                     	;# 
  1504  0010                     	;# 
  1505  0011                     	;# 
  1506  0012                     	;# 
  1507  0013                     	;# 
  1508  0014                     	;# 
  1509  0015                     	;# 
  1510  0015                     	;# 
  1511  0016                     	;# 
  1512  0016                     	;# 
  1513  0017                     	;# 
  1514  0018                     	;# 
  1515  0019                     	;# 
  1516  0019                     	;# 
  1517  001A                     	;# 
  1518  001B                     	;# 
  1519  001C                     	;# 
  1520  001D                     	;# 
  1521  001E                     	;# 
  1522  001F                     	;# 
  1523  008C                     	;# 
  1524  008D                     	;# 
  1525  008E                     	;# 
  1526  0090                     	;# 
  1527  0091                     	;# 
  1528  0092                     	;# 
  1529  0093                     	;# 
  1530  0094                     	;# 
  1531  0097                     	;# 
  1532  009B                     	;# 
  1533  009B                     	;# 
  1534  009C                     	;# 
  1535  009D                     	;# 
  1536  009E                     	;# 
  1537  009F                     	;# 
  1538  010C                     	;# 
  1539  010D                     	;# 
  1540  010E                     	;# 
  1541  0111                     	;# 
  1542  0112                     	;# 
  1543  0113                     	;# 
  1544  0114                     	;# 
  1545  0115                     	;# 
  1546  0116                     	;# 
  1547  0117                     	;# 
  1548  0118                     	;# 
  1549  0119                     	;# 
  1550  018C                     	;# 
  1551  018D                     	;# 
  1552  018E                     	;# 
  1553  0197                     	;# 
  1554  0199                     	;# 
  1555  0199                     	;# 
  1556  0199                     	;# 
  1557  019A                     	;# 
  1558  019A                     	;# 
  1559  019A                     	;# 
  1560  019B                     	;# 
  1561  019B                     	;# 
  1562  019B                     	;# 
  1563  019B                     	;# 
  1564  019B                     	;# 
  1565  019C                     	;# 
  1566  019C                     	;# 
  1567  019C                     	;# 
  1568  019D                     	;# 
  1569  019D                     	;# 
  1570  019D                     	;# 
  1571  019E                     	;# 
  1572  019E                     	;# 
  1573  019E                     	;# 
  1574  019F                     	;# 
  1575  019F                     	;# 
  1576  019F                     	;# 
  1577  019F                     	;# 
  1578  019F                     	;# 
  1579  020C                     	;# 
  1580  020D                     	;# 
  1581  020E                     	;# 
  1582  0211                     	;# 
  1583  0211                     	;# 
  1584  0212                     	;# 
  1585  0212                     	;# 
  1586  0213                     	;# 
  1587  0213                     	;# 
  1588  0214                     	;# 
  1589  0214                     	;# 
  1590  0215                     	;# 
  1591  0215                     	;# 
  1592  0215                     	;# 
  1593  0215                     	;# 
  1594  0216                     	;# 
  1595  0216                     	;# 
  1596  0217                     	;# 
  1597  0217                     	;# 
  1598  0219                     	;# 
  1599  021A                     	;# 
  1600  021B                     	;# 
  1601  021C                     	;# 
  1602  021D                     	;# 
  1603  021D                     	;# 
  1604  021E                     	;# 
  1605  021F                     	;# 
  1606  028C                     	;# 
  1607  028D                     	;# 
  1608  028E                     	;# 
  1609  0291                     	;# 
  1610  0291                     	;# 
  1611  0292                     	;# 
  1612  0293                     	;# 
  1613  0294                     	;# 
  1614  0295                     	;# 
  1615  0295                     	;# 
  1616  0296                     	;# 
  1617  0297                     	;# 
  1618  0298                     	;# 
  1619  029F                     	;# 
  1620  030C                     	;# 
  1621  030D                     	;# 
  1622  030E                     	;# 
  1623  0311                     	;# 
  1624  0311                     	;# 
  1625  0312                     	;# 
  1626  0313                     	;# 
  1627  0314                     	;# 
  1628  0315                     	;# 
  1629  0315                     	;# 
  1630  0316                     	;# 
  1631  0317                     	;# 
  1632  0318                     	;# 
  1633  038C                     	;# 
  1634  038D                     	;# 
  1635  038E                     	;# 
  1636  0391                     	;# 
  1637  0392                     	;# 
  1638  0393                     	;# 
  1639  0394                     	;# 
  1640  0395                     	;# 
  1641  0396                     	;# 
  1642  0397                     	;# 
  1643  0398                     	;# 
  1644  0399                     	;# 
  1645  039A                     	;# 
  1646  039C                     	;# 
  1647  039D                     	;# 
  1648  039E                     	;# 
  1649  039F                     	;# 
  1650  0411                     	;# 
  1651  0411                     	;# 
  1652  0412                     	;# 
  1653  0413                     	;# 
  1654  0414                     	;# 
  1655  0415                     	;# 
  1656  0416                     	;# 
  1657  0417                     	;# 
  1658  0418                     	;# 
  1659  0418                     	;# 
  1660  0419                     	;# 
  1661  041A                     	;# 
  1662  041B                     	;# 
  1663  041C                     	;# 
  1664  041D                     	;# 
  1665  041E                     	;# 
  1666  041F                     	;# 
  1667  0498                     	;# 
  1668  0498                     	;# 
  1669  0499                     	;# 
  1670  049A                     	;# 
  1671  049B                     	;# 
  1672  049B                     	;# 
  1673  049C                     	;# 
  1674  049D                     	;# 
  1675  049E                     	;# 
  1676  049F                     	;# 
  1677  0617                     	;# 
  1678  0618                     	;# 
  1679  0619                     	;# 
  1680  0619                     	;# 
  1681  061A                     	;# 
  1682  061B                     	;# 
  1683  061C                     	;# 
  1684  061C                     	;# 
  1685  061F                     	;# 
  1686  0691                     	;# 
  1687  0692                     	;# 
  1688  0693                     	;# 
  1689  0694                     	;# 
  1690  0695                     	;# 
  1691  0696                     	;# 
  1692  0697                     	;# 
  1693  0698                     	;# 
  1694  0699                     	;# 
  1695  0711                     	;# 
  1696  0712                     	;# 
  1697  0713                     	;# 
  1698  0714                     	;# 
  1699  0715                     	;# 
  1700  0716                     	;# 
  1701  0717                     	;# 
  1702  0718                     	;# 
  1703  0719                     	;# 
  1704  0891                     	;# 
  1705  0891                     	;# 
  1706  0891                     	;# 
  1707  0891                     	;# 
  1708  0891                     	;# 
  1709  0891                     	;# 
  1710  0892                     	;# 
  1711  0892                     	;# 
  1712  0892                     	;# 
  1713  0893                     	;# 
  1714  0893                     	;# 
  1715  0893                     	;# 
  1716  0893                     	;# 
  1717  0893                     	;# 
  1718  0893                     	;# 
  1719  0894                     	;# 
  1720  0894                     	;# 
  1721  0894                     	;# 
  1722  0895                     	;# 
  1723  0895                     	;# 
  1724  0895                     	;# 
  1725  0896                     	;# 
  1726  0896                     	;# 
  1727  0896                     	;# 
  1728  089B                     	;# 
  1729  0911                     	;# 
  1730  0912                     	;# 
  1731  0913                     	;# 
  1732  0914                     	;# 
  1733  0915                     	;# 
  1734  0916                     	;# 
  1735  0918                     	;# 
  1736  0919                     	;# 
  1737  091A                     	;# 
  1738  091B                     	;# 
  1739  091C                     	;# 
  1740  091D                     	;# 
  1741  091E                     	;# 
  1742  091F                     	;# 
  1743  0E0F                     	;# 
  1744  0E10                     	;# 
  1745  0E11                     	;# 
  1746  0E12                     	;# 
  1747  0E13                     	;# 
  1748  0E14                     	;# 
  1749  0E15                     	;# 
  1750  0E16                     	;# 
  1751  0E17                     	;# 
  1752  0E18                     	;# 
  1753  0E19                     	;# 
  1754  0E1A                     	;# 
  1755  0E1B                     	;# 
  1756  0E1C                     	;# 
  1757  0E1D                     	;# 
  1758  0E1E                     	;# 
  1759  0E1F                     	;# 
  1760  0E20                     	;# 
  1761  0E21                     	;# 
  1762  0E22                     	;# 
  1763  0E24                     	;# 
  1764  0E25                     	;# 
  1765  0E28                     	;# 
  1766  0E29                     	;# 
  1767  0E2A                     	;# 
  1768  0E2B                     	;# 
  1769  0E2C                     	;# 
  1770  0E2D                     	;# 
  1771  0E2E                     	;# 
  1772  0E2F                     	;# 
  1773  0E90                     	;# 
  1774  0E91                     	;# 
  1775  0E92                     	;# 
  1776  0E94                     	;# 
  1777  0E95                     	;# 
  1778  0E9C                     	;# 
  1779  0E9D                     	;# 
  1780  0E9E                     	;# 
  1781  0E9F                     	;# 
  1782  0EA0                     	;# 
  1783  0EA1                     	;# 
  1784  0EA2                     	;# 
  1785  0EA3                     	;# 
  1786  0EA4                     	;# 
  1787  0EA5                     	;# 
  1788  0EA6                     	;# 
  1789  0EA7                     	;# 
  1790  0F0F                     	;# 
  1791  0F10                     	;# 
  1792  0F11                     	;# 
  1793  0F12                     	;# 
  1794  0F13                     	;# 
  1795  0F14                     	;# 
  1796  0F15                     	;# 
  1797  0F16                     	;# 
  1798  0F17                     	;# 
  1799  0F18                     	;# 
  1800  0F19                     	;# 
  1801  0F1A                     	;# 
  1802  0F1B                     	;# 
  1803  0F1C                     	;# 
  1804  0F1D                     	;# 
  1805  0F1E                     	;# 
  1806  0F1F                     	;# 
  1807  0F20                     	;# 
  1808  0F21                     	;# 
  1809  0F22                     	;# 
  1810  0F23                     	;# 
  1811  0F24                     	;# 
  1812  0F25                     	;# 
  1813  0F26                     	;# 
  1814  0F27                     	;# 
  1815  0F28                     	;# 
  1816  0F29                     	;# 
  1817  0F2A                     	;# 
  1818  0F2B                     	;# 
  1819  0F2C                     	;# 
  1820  0F2D                     	;# 
  1821  0F2E                     	;# 
  1822  0F2F                     	;# 
  1823  0F30                     	;# 
  1824  0F31                     	;# 
  1825  0F32                     	;# 
  1826  0F33                     	;# 
  1827  0F34                     	;# 
  1828  0F35                     	;# 
  1829  0F36                     	;# 
  1830  0F37                     	;# 
  1831  0FE4                     	;# 
  1832  0FE5                     	;# 
  1833  0FE6                     	;# 
  1834  0FE7                     	;# 
  1835  0FE8                     	;# 
  1836  0FE9                     	;# 
  1837  0FEA                     	;# 
  1838  0FEB                     	;# 
  1839  0FED                     	;# 
  1840  0FEE                     	;# 
  1841  0FEF                     	;# 
  1842  0000                     	;# 
  1843  0001                     	;# 
  1844  0002                     	;# 
  1845  0003                     	;# 
  1846  0004                     	;# 
  1847  0005                     	;# 
  1848  0006                     	;# 
  1849  0007                     	;# 
  1850  0008                     	;# 
  1851  0009                     	;# 
  1852  000A                     	;# 
  1853  000B                     	;# 
  1854  000C                     	;# 
  1855  000D                     	;# 
  1856  000E                     	;# 
  1857  0010                     	;# 
  1858  0011                     	;# 
  1859  0012                     	;# 
  1860  0013                     	;# 
  1861  0014                     	;# 
  1862  0015                     	;# 
  1863  0015                     	;# 
  1864  0016                     	;# 
  1865  0016                     	;# 
  1866  0017                     	;# 
  1867  0018                     	;# 
  1868  0019                     	;# 
  1869  0019                     	;# 
  1870  001A                     	;# 
  1871  001B                     	;# 
  1872  001C                     	;# 
  1873  001D                     	;# 
  1874  001E                     	;# 
  1875  001F                     	;# 
  1876  008C                     	;# 
  1877  008D                     	;# 
  1878  008E                     	;# 
  1879  0090                     	;# 
  1880  0091                     	;# 
  1881  0092                     	;# 
  1882  0093                     	;# 
  1883  0094                     	;# 
  1884  0097                     	;# 
  1885  009B                     	;# 
  1886  009B                     	;# 
  1887  009C                     	;# 
  1888  009D                     	;# 
  1889  009E                     	;# 
  1890  009F                     	;# 
  1891  010C                     	;# 
  1892  010D                     	;# 
  1893  010E                     	;# 
  1894  0111                     	;# 
  1895  0112                     	;# 
  1896  0113                     	;# 
  1897  0114                     	;# 
  1898  0115                     	;# 
  1899  0116                     	;# 
  1900  0117                     	;# 
  1901  0118                     	;# 
  1902  0119                     	;# 
  1903  018C                     	;# 
  1904  018D                     	;# 
  1905  018E                     	;# 
  1906  0197                     	;# 
  1907  0199                     	;# 
  1908  0199                     	;# 
  1909  0199                     	;# 
  1910  019A                     	;# 
  1911  019A                     	;# 
  1912  019A                     	;# 
  1913  019B                     	;# 
  1914  019B                     	;# 
  1915  019B                     	;# 
  1916  019B                     	;# 
  1917  019B                     	;# 
  1918  019C                     	;# 
  1919  019C                     	;# 
  1920  019C                     	;# 
  1921  019D                     	;# 
  1922  019D                     	;# 
  1923  019D                     	;# 
  1924  019E                     	;# 
  1925  019E                     	;# 
  1926  019E                     	;# 
  1927  019F                     	;# 
  1928  019F                     	;# 
  1929  019F                     	;# 
  1930  019F                     	;# 
  1931  019F                     	;# 
  1932  020C                     	;# 
  1933  020D                     	;# 
  1934  020E                     	;# 
  1935  0211                     	;# 
  1936  0211                     	;# 
  1937  0212                     	;# 
  1938  0212                     	;# 
  1939  0213                     	;# 
  1940  0213                     	;# 
  1941  0214                     	;# 
  1942  0214                     	;# 
  1943  0215                     	;# 
  1944  0215                     	;# 
  1945  0215                     	;# 
  1946  0215                     	;# 
  1947  0216                     	;# 
  1948  0216                     	;# 
  1949  0217                     	;# 
  1950  0217                     	;# 
  1951  0219                     	;# 
  1952  021A                     	;# 
  1953  021B                     	;# 
  1954  021C                     	;# 
  1955  021D                     	;# 
  1956  021D                     	;# 
  1957  021E                     	;# 
  1958  021F                     	;# 
  1959  028C                     	;# 
  1960  028D                     	;# 
  1961  028E                     	;# 
  1962  0291                     	;# 
  1963  0291                     	;# 
  1964  0292                     	;# 
  1965  0293                     	;# 
  1966  0294                     	;# 
  1967  0295                     	;# 
  1968  0295                     	;# 
  1969  0296                     	;# 
  1970  0297                     	;# 
  1971  0298                     	;# 
  1972  029F                     	;# 
  1973  030C                     	;# 
  1974  030D                     	;# 
  1975  030E                     	;# 
  1976  0311                     	;# 
  1977  0311                     	;# 
  1978  0312                     	;# 
  1979  0313                     	;# 
  1980  0314                     	;# 
  1981  0315                     	;# 
  1982  0315                     	;# 
  1983  0316                     	;# 
  1984  0317                     	;# 
  1985  0318                     	;# 
  1986  038C                     	;# 
  1987  038D                     	;# 
  1988  038E                     	;# 
  1989  0391                     	;# 
  1990  0392                     	;# 
  1991  0393                     	;# 
  1992  0394                     	;# 
  1993  0395                     	;# 
  1994  0396                     	;# 
  1995  0397                     	;# 
  1996  0398                     	;# 
  1997  0399                     	;# 
  1998  039A                     	;# 
  1999  039C                     	;# 
  2000  039D                     	;# 
  2001  039E                     	;# 
  2002  039F                     	;# 
  2003  0411                     	;# 
  2004  0411                     	;# 
  2005  0412                     	;# 
  2006  0413                     	;# 
  2007  0414                     	;# 
  2008  0415                     	;# 
  2009  0416                     	;# 
  2010  0417                     	;# 
  2011  0418                     	;# 
  2012  0418                     	;# 
  2013  0419                     	;# 
  2014  041A                     	;# 
  2015  041B                     	;# 
  2016  041C                     	;# 
  2017  041D                     	;# 
  2018  041E                     	;# 
  2019  041F                     	;# 
  2020  0498                     	;# 
  2021  0498                     	;# 
  2022  0499                     	;# 
  2023  049A                     	;# 
  2024  049B                     	;# 
  2025  049B                     	;# 
  2026  049C                     	;# 
  2027  049D                     	;# 
  2028  049E                     	;# 
  2029  049F                     	;# 
  2030  0617                     	;# 
  2031  0618                     	;# 
  2032  0619                     	;# 
  2033  0619                     	;# 
  2034  061A                     	;# 
  2035  061B                     	;# 
  2036  061C                     	;# 
  2037  061C                     	;# 
  2038  061F                     	;# 
  2039  0691                     	;# 
  2040  0692                     	;# 
  2041  0693                     	;# 
  2042  0694                     	;# 
  2043  0695                     	;# 
  2044  0696                     	;# 
  2045  0697                     	;# 
  2046  0698                     	;# 
  2047  0699                     	;# 
  2048  0711                     	;# 
  2049  0712                     	;# 
  2050  0713                     	;# 
  2051  0714                     	;# 
  2052  0715                     	;# 
  2053  0716                     	;# 
  2054  0717                     	;# 
  2055  0718                     	;# 
  2056  0719                     	;# 
  2057  0891                     	;# 
  2058  0891                     	;# 
  2059  0891                     	;# 
  2060  0891                     	;# 
  2061  0891                     	;# 
  2062  0891                     	;# 
  2063  0892                     	;# 
  2064  0892                     	;# 
  2065  0892                     	;# 
  2066  0893                     	;# 
  2067  0893                     	;# 
  2068  0893                     	;# 
  2069  0893                     	;# 
  2070  0893                     	;# 
  2071  0893                     	;# 
  2072  0894                     	;# 
  2073  0894                     	;# 
  2074  0894                     	;# 
  2075  0895                     	;# 
  2076  0895                     	;# 
  2077  0895                     	;# 
  2078  0896                     	;# 
  2079  0896                     	;# 
  2080  0896                     	;# 
  2081  089B                     	;# 
  2082  0911                     	;# 
  2083  0912                     	;# 
  2084  0913                     	;# 
  2085  0914                     	;# 
  2086  0915                     	;# 
  2087  0916                     	;# 
  2088  0918                     	;# 
  2089  0919                     	;# 
  2090  091A                     	;# 
  2091  091B                     	;# 
  2092  091C                     	;# 
  2093  091D                     	;# 
  2094  091E                     	;# 
  2095  091F                     	;# 
  2096  0E0F                     	;# 
  2097  0E10                     	;# 
  2098  0E11                     	;# 
  2099  0E12                     	;# 
  2100  0E13                     	;# 
  2101  0E14                     	;# 
  2102  0E15                     	;# 
  2103  0E16                     	;# 
  2104  0E17                     	;# 
  2105  0E18                     	;# 
  2106  0E19                     	;# 
  2107  0E1A                     	;# 
  2108  0E1B                     	;# 
  2109  0E1C                     	;# 
  2110  0E1D                     	;# 
  2111  0E1E                     	;# 
  2112  0E1F                     	;# 
  2113  0E20                     	;# 
  2114  0E21                     	;# 
  2115  0E22                     	;# 
  2116  0E24                     	;# 
  2117  0E25                     	;# 
  2118  0E28                     	;# 
  2119  0E29                     	;# 
  2120  0E2A                     	;# 
  2121  0E2B                     	;# 
  2122  0E2C                     	;# 
  2123  0E2D                     	;# 
  2124  0E2E                     	;# 
  2125  0E2F                     	;# 
  2126  0E90                     	;# 
  2127  0E91                     	;# 
  2128  0E92                     	;# 
  2129  0E94                     	;# 
  2130  0E95                     	;# 
  2131  0E9C                     	;# 
  2132  0E9D                     	;# 
  2133  0E9E                     	;# 
  2134  0E9F                     	;# 
  2135  0EA0                     	;# 
  2136  0EA1                     	;# 
  2137  0EA2                     	;# 
  2138  0EA3                     	;# 
  2139  0EA4                     	;# 
  2140  0EA5                     	;# 
  2141  0EA6                     	;# 
  2142  0EA7                     	;# 
  2143  0F0F                     	;# 
  2144  0F10                     	;# 
  2145  0F11                     	;# 
  2146  0F12                     	;# 
  2147  0F13                     	;# 
  2148  0F14                     	;# 
  2149  0F15                     	;# 
  2150  0F16                     	;# 
  2151  0F17                     	;# 
  2152  0F18                     	;# 
  2153  0F19                     	;# 
  2154  0F1A                     	;# 
  2155  0F1B                     	;# 
  2156  0F1C                     	;# 
  2157  0F1D                     	;# 
  2158  0F1E                     	;# 
  2159  0F1F                     	;# 
  2160  0F20                     	;# 
  2161  0F21                     	;# 
  2162  0F22                     	;# 
  2163  0F23                     	;# 
  2164  0F24                     	;# 
  2165  0F25                     	;# 
  2166  0F26                     	;# 
  2167  0F27                     	;# 
  2168  0F28                     	;# 
  2169  0F29                     	;# 
  2170  0F2A                     	;# 
  2171  0F2B                     	;# 
  2172  0F2C                     	;# 
  2173  0F2D                     	;# 
  2174  0F2E                     	;# 
  2175  0F2F                     	;# 
  2176  0F30                     	;# 
  2177  0F31                     	;# 
  2178  0F32                     	;# 
  2179  0F33                     	;# 
  2180  0F34                     	;# 
  2181  0F35                     	;# 
  2182  0F36                     	;# 
  2183  0F37                     	;# 
  2184  0FE4                     	;# 
  2185  0FE5                     	;# 
  2186  0FE6                     	;# 
  2187  0FE7                     	;# 
  2188  0FE8                     	;# 
  2189  0FE9                     	;# 
  2190  0FEA                     	;# 
  2191  0FEB                     	;# 
  2192  0FED                     	;# 
  2193  0FEE                     	;# 
  2194  0FEF                     	;# 
  2195  0000                     	;# 
  2196  0001                     	;# 
  2197  0002                     	;# 
  2198  0003                     	;# 
  2199  0004                     	;# 
  2200  0005                     	;# 
  2201  0006                     	;# 
  2202  0007                     	;# 
  2203  0008                     	;# 
  2204  0009                     	;# 
  2205  000A                     	;# 
  2206  000B                     	;# 
  2207  000C                     	;# 
  2208  000D                     	;# 
  2209  000E                     	;# 
  2210  0010                     	;# 
  2211  0011                     	;# 
  2212  0012                     	;# 
  2213  0013                     	;# 
  2214  0014                     	;# 
  2215  0015                     	;# 
  2216  0015                     	;# 
  2217  0016                     	;# 
  2218  0016                     	;# 
  2219  0017                     	;# 
  2220  0018                     	;# 
  2221  0019                     	;# 
  2222  0019                     	;# 
  2223  001A                     	;# 
  2224  001B                     	;# 
  2225  001C                     	;# 
  2226  001D                     	;# 
  2227  001E                     	;# 
  2228  001F                     	;# 
  2229  008C                     	;# 
  2230  008D                     	;# 
  2231  008E                     	;# 
  2232  0090                     	;# 
  2233  0091                     	;# 
  2234  0092                     	;# 
  2235  0093                     	;# 
  2236  0094                     	;# 
  2237  0097                     	;# 
  2238  009B                     	;# 
  2239  009B                     	;# 
  2240  009C                     	;# 
  2241  009D                     	;# 
  2242  009E                     	;# 
  2243  009F                     	;# 
  2244  010C                     	;# 
  2245  010D                     	;# 
  2246  010E                     	;# 
  2247  0111                     	;# 
  2248  0112                     	;# 
  2249  0113                     	;# 
  2250  0114                     	;# 
  2251  0115                     	;# 
  2252  0116                     	;# 
  2253  0117                     	;# 
  2254  0118                     	;# 
  2255  0119                     	;# 
  2256  018C                     	;# 
  2257  018D                     	;# 
  2258  018E                     	;# 
  2259  0197                     	;# 
  2260  0199                     	;# 
  2261  0199                     	;# 
  2262  0199                     	;# 
  2263  019A                     	;# 
  2264  019A                     	;# 
  2265  019A                     	;# 
  2266  019B                     	;# 
  2267  019B                     	;# 
  2268  019B                     	;# 
  2269  019B                     	;# 
  2270  019B                     	;# 
  2271  019C                     	;# 
  2272  019C                     	;# 
  2273  019C                     	;# 
  2274  019D                     	;# 
  2275  019D                     	;# 
  2276  019D                     	;# 
  2277  019E                     	;# 
  2278  019E                     	;# 
  2279  019E                     	;# 
  2280  019F                     	;# 
  2281  019F                     	;# 
  2282  019F                     	;# 
  2283  019F                     	;# 
  2284  019F                     	;# 
  2285  020C                     	;# 
  2286  020D                     	;# 
  2287  020E                     	;# 
  2288  0211                     	;# 
  2289  0211                     	;# 
  2290  0212                     	;# 
  2291  0212                     	;# 
  2292  0213                     	;# 
  2293  0213                     	;# 
  2294  0214                     	;# 
  2295  0214                     	;# 
  2296  0215                     	;# 
  2297  0215                     	;# 
  2298  0215                     	;# 
  2299  0215                     	;# 
  2300  0216                     	;# 
  2301  0216                     	;# 
  2302  0217                     	;# 
  2303  0217                     	;# 
  2304  0219                     	;# 
  2305  021A                     	;# 
  2306  021B                     	;# 
  2307  021C                     	;# 
  2308  021D                     	;# 
  2309  021D                     	;# 
  2310  021E                     	;# 
  2311  021F                     	;# 
  2312  028C                     	;# 
  2313  028D                     	;# 
  2314  028E                     	;# 
  2315  0291                     	;# 
  2316  0291                     	;# 
  2317  0292                     	;# 
  2318  0293                     	;# 
  2319  0294                     	;# 
  2320  0295                     	;# 
  2321  0295                     	;# 
  2322  0296                     	;# 
  2323  0297                     	;# 
  2324  0298                     	;# 
  2325  029F                     	;# 
  2326  030C                     	;# 
  2327  030D                     	;# 
  2328  030E                     	;# 
  2329  0311                     	;# 
  2330  0311                     	;# 
  2331  0312                     	;# 
  2332  0313                     	;# 
  2333  0314                     	;# 
  2334  0315                     	;# 
  2335  0315                     	;# 
  2336  0316                     	;# 
  2337  0317                     	;# 
  2338  0318                     	;# 
  2339  038C                     	;# 
  2340  038D                     	;# 
  2341  038E                     	;# 
  2342  0391                     	;# 
  2343  0392                     	;# 
  2344  0393                     	;# 
  2345  0394                     	;# 
  2346  0395                     	;# 
  2347  0396                     	;# 
  2348  0397                     	;# 
  2349  0398                     	;# 
  2350  0399                     	;# 
  2351  039A                     	;# 
  2352  039C                     	;# 
  2353  039D                     	;# 
  2354  039E                     	;# 
  2355  039F                     	;# 
  2356  0411                     	;# 
  2357  0411                     	;# 
  2358  0412                     	;# 
  2359  0413                     	;# 
  2360  0414                     	;# 
  2361  0415                     	;# 
  2362  0416                     	;# 
  2363  0417                     	;# 
  2364  0418                     	;# 
  2365  0418                     	;# 
  2366  0419                     	;# 
  2367  041A                     	;# 
  2368  041B                     	;# 
  2369  041C                     	;# 
  2370  041D                     	;# 
  2371  041E                     	;# 
  2372  041F                     	;# 
  2373  0498                     	;# 
  2374  0498                     	;# 
  2375  0499                     	;# 
  2376  049A                     	;# 
  2377  049B                     	;# 
  2378  049B                     	;# 
  2379  049C                     	;# 
  2380  049D                     	;# 
  2381  049E                     	;# 
  2382  049F                     	;# 
  2383  0617                     	;# 
  2384  0618                     	;# 
  2385  0619                     	;# 
  2386  0619                     	;# 
  2387  061A                     	;# 
  2388  061B                     	;# 
  2389  061C                     	;# 
  2390  061C                     	;# 
  2391  061F                     	;# 
  2392  0691                     	;# 
  2393  0692                     	;# 
  2394  0693                     	;# 
  2395  0694                     	;# 
  2396  0695                     	;# 
  2397  0696                     	;# 
  2398  0697                     	;# 
  2399  0698                     	;# 
  2400  0699                     	;# 
  2401  0711                     	;# 
  2402  0712                     	;# 
  2403  0713                     	;# 
  2404  0714                     	;# 
  2405  0715                     	;# 
  2406  0716                     	;# 
  2407  0717                     	;# 
  2408  0718                     	;# 
  2409  0719                     	;# 
  2410  0891                     	;# 
  2411  0891                     	;# 
  2412  0891                     	;# 
  2413  0891                     	;# 
  2414  0891                     	;# 
  2415  0891                     	;# 
  2416  0892                     	;# 
  2417  0892                     	;# 
  2418  0892                     	;# 
  2419  0893                     	;# 
  2420  0893                     	;# 
  2421  0893                     	;# 
  2422  0893                     	;# 
  2423  0893                     	;# 
  2424  0893                     	;# 
  2425  0894                     	;# 
  2426  0894                     	;# 
  2427  0894                     	;# 
  2428  0895                     	;# 
  2429  0895                     	;# 
  2430  0895                     	;# 
  2431  0896                     	;# 
  2432  0896                     	;# 
  2433  0896                     	;# 
  2434  089B                     	;# 
  2435  0911                     	;# 
  2436  0912                     	;# 
  2437  0913                     	;# 
  2438  0914                     	;# 
  2439  0915                     	;# 
  2440  0916                     	;# 
  2441  0918                     	;# 
  2442  0919                     	;# 
  2443  091A                     	;# 
  2444  091B                     	;# 
  2445  091C                     	;# 
  2446  091D                     	;# 
  2447  091E                     	;# 
  2448  091F                     	;# 
  2449  0E0F                     	;# 
  2450  0E10                     	;# 
  2451  0E11                     	;# 
  2452  0E12                     	;# 
  2453  0E13                     	;# 
  2454  0E14                     	;# 
  2455  0E15                     	;# 
  2456  0E16                     	;# 
  2457  0E17                     	;# 
  2458  0E18                     	;# 
  2459  0E19                     	;# 
  2460  0E1A                     	;# 
  2461  0E1B                     	;# 
  2462  0E1C                     	;# 
  2463  0E1D                     	;# 
  2464  0E1E                     	;# 
  2465  0E1F                     	;# 
  2466  0E20                     	;# 
  2467  0E21                     	;# 
  2468  0E22                     	;# 
  2469  0E24                     	;# 
  2470  0E25                     	;# 
  2471  0E28                     	;# 
  2472  0E29                     	;# 
  2473  0E2A                     	;# 
  2474  0E2B                     	;# 
  2475  0E2C                     	;# 
  2476  0E2D                     	;# 
  2477  0E2E                     	;# 
  2478  0E2F                     	;# 
  2479  0E90                     	;# 
  2480  0E91                     	;# 
  2481  0E92                     	;# 
  2482  0E94                     	;# 
  2483  0E95                     	;# 
  2484  0E9C                     	;# 
  2485  0E9D                     	;# 
  2486  0E9E                     	;# 
  2487  0E9F                     	;# 
  2488  0EA0                     	;# 
  2489  0EA1                     	;# 
  2490  0EA2                     	;# 
  2491  0EA3                     	;# 
  2492  0EA4                     	;# 
  2493  0EA5                     	;# 
  2494  0EA6                     	;# 
  2495  0EA7                     	;# 
  2496  0F0F                     	;# 
  2497  0F10                     	;# 
  2498  0F11                     	;# 
  2499  0F12                     	;# 
  2500  0F13                     	;# 
  2501  0F14                     	;# 
  2502  0F15                     	;# 
  2503  0F16                     	;# 
  2504  0F17                     	;# 
  2505  0F18                     	;# 
  2506  0F19                     	;# 
  2507  0F1A                     	;# 
  2508  0F1B                     	;# 
  2509  0F1C                     	;# 
  2510  0F1D                     	;# 
  2511  0F1E                     	;# 
  2512  0F1F                     	;# 
  2513  0F20                     	;# 
  2514  0F21                     	;# 
  2515  0F22                     	;# 
  2516  0F23                     	;# 
  2517  0F24                     	;# 
  2518  0F25                     	;# 
  2519  0F26                     	;# 
  2520  0F27                     	;# 
  2521  0F28                     	;# 
  2522  0F29                     	;# 
  2523  0F2A                     	;# 
  2524  0F2B                     	;# 
  2525  0F2C                     	;# 
  2526  0F2D                     	;# 
  2527  0F2E                     	;# 
  2528  0F2F                     	;# 
  2529  0F30                     	;# 
  2530  0F31                     	;# 
  2531  0F32                     	;# 
  2532  0F33                     	;# 
  2533  0F34                     	;# 
  2534  0F35                     	;# 
  2535  0F36                     	;# 
  2536  0F37                     	;# 
  2537  0FE4                     	;# 
  2538  0FE5                     	;# 
  2539  0FE6                     	;# 
  2540  0FE7                     	;# 
  2541  0FE8                     	;# 
  2542  0FE9                     	;# 
  2543  0FEA                     	;# 
  2544  0FEB                     	;# 
  2545  0FED                     	;# 
  2546  0FEE                     	;# 
  2547  0FEF                     	;# 
  2548  0000                     	;# 
  2549  0001                     	;# 
  2550  0002                     	;# 
  2551  0003                     	;# 
  2552  0004                     	;# 
  2553  0005                     	;# 
  2554  0006                     	;# 
  2555  0007                     	;# 
  2556  0008                     	;# 
  2557  0009                     	;# 
  2558  000A                     	;# 
  2559  000B                     	;# 
  2560  000C                     	;# 
  2561  000D                     	;# 
  2562  000E                     	;# 
  2563  0010                     	;# 
  2564  0011                     	;# 
  2565  0012                     	;# 
  2566  0013                     	;# 
  2567  0014                     	;# 
  2568  0015                     	;# 
  2569  0015                     	;# 
  2570  0016                     	;# 
  2571  0016                     	;# 
  2572  0017                     	;# 
  2573  0018                     	;# 
  2574  0019                     	;# 
  2575  0019                     	;# 
  2576  001A                     	;# 
  2577  001B                     	;# 
  2578  001C                     	;# 
  2579  001D                     	;# 
  2580  001E                     	;# 
  2581  001F                     	;# 
  2582  008C                     	;# 
  2583  008D                     	;# 
  2584  008E                     	;# 
  2585  0090                     	;# 
  2586  0091                     	;# 
  2587  0092                     	;# 
  2588  0093                     	;# 
  2589  0094                     	;# 
  2590  0097                     	;# 
  2591  009B                     	;# 
  2592  009B                     	;# 
  2593  009C                     	;# 
  2594  009D                     	;# 
  2595  009E                     	;# 
  2596  009F                     	;# 
  2597  010C                     	;# 
  2598  010D                     	;# 
  2599  010E                     	;# 
  2600  0111                     	;# 
  2601  0112                     	;# 
  2602  0113                     	;# 
  2603  0114                     	;# 
  2604  0115                     	;# 
  2605  0116                     	;# 
  2606  0117                     	;# 
  2607  0118                     	;# 
  2608  0119                     	;# 
  2609  018C                     	;# 
  2610  018D                     	;# 
  2611  018E                     	;# 
  2612  0197                     	;# 
  2613  0199                     	;# 
  2614  0199                     	;# 
  2615  0199                     	;# 
  2616  019A                     	;# 
  2617  019A                     	;# 
  2618  019A                     	;# 
  2619  019B                     	;# 
  2620  019B                     	;# 
  2621  019B                     	;# 
  2622  019B                     	;# 
  2623  019B                     	;# 
  2624  019C                     	;# 
  2625  019C                     	;# 
  2626  019C                     	;# 
  2627  019D                     	;# 
  2628  019D                     	;# 
  2629  019D                     	;# 
  2630  019E                     	;# 
  2631  019E                     	;# 
  2632  019E                     	;# 
  2633  019F                     	;# 
  2634  019F                     	;# 
  2635  019F                     	;# 
  2636  019F                     	;# 
  2637  019F                     	;# 
  2638  020C                     	;# 
  2639  020D                     	;# 
  2640  020E                     	;# 
  2641  0211                     	;# 
  2642  0211                     	;# 
  2643  0212                     	;# 
  2644  0212                     	;# 
  2645  0213                     	;# 
  2646  0213                     	;# 
  2647  0214                     	;# 
  2648  0214                     	;# 
  2649  0215                     	;# 
  2650  0215                     	;# 
  2651  0215                     	;# 
  2652  0215                     	;# 
  2653  0216                     	;# 
  2654  0216                     	;# 
  2655  0217                     	;# 
  2656  0217                     	;# 
  2657  0219                     	;# 
  2658  021A                     	;# 
  2659  021B                     	;# 
  2660  021C                     	;# 
  2661  021D                     	;# 
  2662  021D                     	;# 
  2663  021E                     	;# 
  2664  021F                     	;# 
  2665  028C                     	;# 
  2666  028D                     	;# 
  2667  028E                     	;# 
  2668  0291                     	;# 
  2669  0291                     	;# 
  2670  0292                     	;# 
  2671  0293                     	;# 
  2672  0294                     	;# 
  2673  0295                     	;# 
  2674  0295                     	;# 
  2675  0296                     	;# 
  2676  0297                     	;# 
  2677  0298                     	;# 
  2678  029F                     	;# 
  2679  030C                     	;# 
  2680  030D                     	;# 
  2681  030E                     	;# 
  2682  0311                     	;# 
  2683  0311                     	;# 
  2684  0312                     	;# 
  2685  0313                     	;# 
  2686  0314                     	;# 
  2687  0315                     	;# 
  2688  0315                     	;# 
  2689  0316                     	;# 
  2690  0317                     	;# 
  2691  0318                     	;# 
  2692  038C                     	;# 
  2693  038D                     	;# 
  2694  038E                     	;# 
  2695  0391                     	;# 
  2696  0392                     	;# 
  2697  0393                     	;# 
  2698  0394                     	;# 
  2699  0395                     	;# 
  2700  0396                     	;# 
  2701  0397                     	;# 
  2702  0398                     	;# 
  2703  0399                     	;# 
  2704  039A                     	;# 
  2705  039C                     	;# 
  2706  039D                     	;# 
  2707  039E                     	;# 
  2708  039F                     	;# 
  2709  0411                     	;# 
  2710  0411                     	;# 
  2711  0412                     	;# 
  2712  0413                     	;# 
  2713  0414                     	;# 
  2714  0415                     	;# 
  2715  0416                     	;# 
  2716  0417                     	;# 
  2717  0418                     	;# 
  2718  0418                     	;# 
  2719  0419                     	;# 
  2720  041A                     	;# 
  2721  041B                     	;# 
  2722  041C                     	;# 
  2723  041D                     	;# 
  2724  041E                     	;# 
  2725  041F                     	;# 
  2726  0498                     	;# 
  2727  0498                     	;# 
  2728  0499                     	;# 
  2729  049A                     	;# 
  2730  049B                     	;# 
  2731  049B                     	;# 
  2732  049C                     	;# 
  2733  049D                     	;# 
  2734  049E                     	;# 
  2735  049F                     	;# 
  2736  0617                     	;# 
  2737  0618                     	;# 
  2738  0619                     	;# 
  2739  0619                     	;# 
  2740  061A                     	;# 
  2741  061B                     	;# 
  2742  061C                     	;# 
  2743  061C                     	;# 
  2744  061F                     	;# 
  2745  0691                     	;# 
  2746  0692                     	;# 
  2747  0693                     	;# 
  2748  0694                     	;# 
  2749  0695                     	;# 
  2750  0696                     	;# 
  2751  0697                     	;# 
  2752  0698                     	;# 
  2753  0699                     	;# 
  2754  0711                     	;# 
  2755  0712                     	;# 
  2756  0713                     	;# 
  2757  0714                     	;# 
  2758  0715                     	;# 
  2759  0716                     	;# 
  2760  0717                     	;# 
  2761  0718                     	;# 
  2762  0719                     	;# 
  2763  0891                     	;# 
  2764  0891                     	;# 
  2765  0891                     	;# 
  2766  0891                     	;# 
  2767  0891                     	;# 
  2768  0891                     	;# 
  2769  0892                     	;# 
  2770  0892                     	;# 
  2771  0892                     	;# 
  2772  0893                     	;# 
  2773  0893                     	;# 
  2774  0893                     	;# 
  2775  0893                     	;# 
  2776  0893                     	;# 
  2777  0893                     	;# 
  2778  0894                     	;# 
  2779  0894                     	;# 
  2780  0894                     	;# 
  2781  0895                     	;# 
  2782  0895                     	;# 
  2783  0895                     	;# 
  2784  0896                     	;# 
  2785  0896                     	;# 
  2786  0896                     	;# 
  2787  089B                     	;# 
  2788  0911                     	;# 
  2789  0912                     	;# 
  2790  0913                     	;# 
  2791  0914                     	;# 
  2792  0915                     	;# 
  2793  0916                     	;# 
  2794  0918                     	;# 
  2795  0919                     	;# 
  2796  091A                     	;# 
  2797  091B                     	;# 
  2798  091C                     	;# 
  2799  091D                     	;# 
  2800  091E                     	;# 
  2801  091F                     	;# 
  2802  0E0F                     	;# 
  2803  0E10                     	;# 
  2804  0E11                     	;# 
  2805  0E12                     	;# 
  2806  0E13                     	;# 
  2807  0E14                     	;# 
  2808  0E15                     	;# 
  2809  0E16                     	;# 
  2810  0E17                     	;# 
  2811  0E18                     	;# 
  2812  0E19                     	;# 
  2813  0E1A                     	;# 
  2814  0E1B                     	;# 
  2815  0E1C                     	;# 
  2816  0E1D                     	;# 
  2817  0E1E                     	;# 
  2818  0E1F                     	;# 
  2819  0E20                     	;# 
  2820  0E21                     	;# 
  2821  0E22                     	;# 
  2822  0E24                     	;# 
  2823  0E25                     	;# 
  2824  0E28                     	;# 
  2825  0E29                     	;# 
  2826  0E2A                     	;# 
  2827  0E2B                     	;# 
  2828  0E2C                     	;# 
  2829  0E2D                     	;# 
  2830  0E2E                     	;# 
  2831  0E2F                     	;# 
  2832  0E90                     	;# 
  2833  0E91                     	;# 
  2834  0E92                     	;# 
  2835  0E94                     	;# 
  2836  0E95                     	;# 
  2837  0E9C                     	;# 
  2838  0E9D                     	;# 
  2839  0E9E                     	;# 
  2840  0E9F                     	;# 
  2841  0EA0                     	;# 
  2842  0EA1                     	;# 
  2843  0EA2                     	;# 
  2844  0EA3                     	;# 
  2845  0EA4                     	;# 
  2846  0EA5                     	;# 
  2847  0EA6                     	;# 
  2848  0EA7                     	;# 
  2849  0F0F                     	;# 
  2850  0F10                     	;# 
  2851  0F11                     	;# 
  2852  0F12                     	;# 
  2853  0F13                     	;# 
  2854  0F14                     	;# 
  2855  0F15                     	;# 
  2856  0F16                     	;# 
  2857  0F17                     	;# 
  2858  0F18                     	;# 
  2859  0F19                     	;# 
  2860  0F1A                     	;# 
  2861  0F1B                     	;# 
  2862  0F1C                     	;# 
  2863  0F1D                     	;# 
  2864  0F1E                     	;# 
  2865  0F1F                     	;# 
  2866  0F20                     	;# 
  2867  0F21                     	;# 
  2868  0F22                     	;# 
  2869  0F23                     	;# 
  2870  0F24                     	;# 
  2871  0F25                     	;# 
  2872  0F26                     	;# 
  2873  0F27                     	;# 
  2874  0F28                     	;# 
  2875  0F29                     	;# 
  2876  0F2A                     	;# 
  2877  0F2B                     	;# 
  2878  0F2C                     	;# 
  2879  0F2D                     	;# 
  2880  0F2E                     	;# 
  2881  0F2F                     	;# 
  2882  0F30                     	;# 
  2883  0F31                     	;# 
  2884  0F32                     	;# 
  2885  0F33                     	;# 
  2886  0F34                     	;# 
  2887  0F35                     	;# 
  2888  0F36                     	;# 
  2889  0F37                     	;# 
  2890  0FE4                     	;# 
  2891  0FE5                     	;# 
  2892  0FE6                     	;# 
  2893  0FE7                     	;# 
  2894  0FE8                     	;# 
  2895  0FE9                     	;# 
  2896  0FEA                     	;# 
  2897  0FEB                     	;# 
  2898  0FED                     	;# 
  2899  0FEE                     	;# 
  2900  0FEF                     	;# 
  2901  0000                     	;# 
  2902  0001                     	;# 
  2903  0002                     	;# 
  2904  0003                     	;# 
  2905  0004                     	;# 
  2906  0005                     	;# 
  2907  0006                     	;# 
  2908  0007                     	;# 
  2909  0008                     	;# 
  2910  0009                     	;# 
  2911  000A                     	;# 
  2912  000B                     	;# 
  2913  000C                     	;# 
  2914  000D                     	;# 
  2915  000E                     	;# 
  2916  0010                     	;# 
  2917  0011                     	;# 
  2918  0012                     	;# 
  2919  0013                     	;# 
  2920  0014                     	;# 
  2921  0015                     	;# 
  2922  0015                     	;# 
  2923  0016                     	;# 
  2924  0016                     	;# 
  2925  0017                     	;# 
  2926  0018                     	;# 
  2927  0019                     	;# 
  2928  0019                     	;# 
  2929  001A                     	;# 
  2930  001B                     	;# 
  2931  001C                     	;# 
  2932  001D                     	;# 
  2933  001E                     	;# 
  2934  001F                     	;# 
  2935  008C                     	;# 
  2936  008D                     	;# 
  2937  008E                     	;# 
  2938  0090                     	;# 
  2939  0091                     	;# 
  2940  0092                     	;# 
  2941  0093                     	;# 
  2942  0094                     	;# 
  2943  0097                     	;# 
  2944  009B                     	;# 
  2945  009B                     	;# 
  2946  009C                     	;# 
  2947  009D                     	;# 
  2948  009E                     	;# 
  2949  009F                     	;# 
  2950  010C                     	;# 
  2951  010D                     	;# 
  2952  010E                     	;# 
  2953  0111                     	;# 
  2954  0112                     	;# 
  2955  0113                     	;# 
  2956  0114                     	;# 
  2957  0115                     	;# 
  2958  0116                     	;# 
  2959  0117                     	;# 
  2960  0118                     	;# 
  2961  0119                     	;# 
  2962  018C                     	;# 
  2963  018D                     	;# 
  2964  018E                     	;# 
  2965  0197                     	;# 
  2966  0199                     	;# 
  2967  0199                     	;# 
  2968  0199                     	;# 
  2969  019A                     	;# 
  2970  019A                     	;# 
  2971  019A                     	;# 
  2972  019B                     	;# 
  2973  019B                     	;# 
  2974  019B                     	;# 
  2975  019B                     	;# 
  2976  019B                     	;# 
  2977  019C                     	;# 
  2978  019C                     	;# 
  2979  019C                     	;# 
  2980  019D                     	;# 
  2981  019D                     	;# 
  2982  019D                     	;# 
  2983  019E                     	;# 
  2984  019E                     	;# 
  2985  019E                     	;# 
  2986  019F                     	;# 
  2987  019F                     	;# 
  2988  019F                     	;# 
  2989  019F                     	;# 
  2990  019F                     	;# 
  2991  020C                     	;# 
  2992  020D                     	;# 
  2993  020E                     	;# 
  2994  0211                     	;# 
  2995  0211                     	;# 
  2996  0212                     	;# 
  2997  0212                     	;# 
  2998  0213                     	;# 
  2999  0213                     	;# 
  3000  0214                     	;# 
  3001  0214                     	;# 
  3002  0215                     	;# 
  3003  0215                     	;# 
  3004  0215                     	;# 
  3005  0215                     	;# 
  3006  0216                     	;# 
  3007  0216                     	;# 
  3008  0217                     	;# 
  3009  0217                     	;# 
  3010  0219                     	;# 
  3011  021A                     	;# 
  3012  021B                     	;# 
  3013  021C                     	;# 
  3014  021D                     	;# 
  3015  021D                     	;# 
  3016  021E                     	;# 
  3017  021F                     	;# 
  3018  028C                     	;# 
  3019  028D                     	;# 
  3020  028E                     	;# 
  3021  0291                     	;# 
  3022  0291                     	;# 
  3023  0292                     	;# 
  3024  0293                     	;# 
  3025  0294                     	;# 
  3026  0295                     	;# 
  3027  0295                     	;# 
  3028  0296                     	;# 
  3029  0297                     	;# 
  3030  0298                     	;# 
  3031  029F                     	;# 
  3032  030C                     	;# 
  3033  030D                     	;# 
  3034  030E                     	;# 
  3035  0311                     	;# 
  3036  0311                     	;# 
  3037  0312                     	;# 
  3038  0313                     	;# 
  3039  0314                     	;# 
  3040  0315                     	;# 
  3041  0315                     	;# 
  3042  0316                     	;# 
  3043  0317                     	;# 
  3044  0318                     	;# 
  3045  038C                     	;# 
  3046  038D                     	;# 
  3047  038E                     	;# 
  3048  0391                     	;# 
  3049  0392                     	;# 
  3050  0393                     	;# 
  3051  0394                     	;# 
  3052  0395                     	;# 
  3053  0396                     	;# 
  3054  0397                     	;# 
  3055  0398                     	;# 
  3056  0399                     	;# 
  3057  039A                     	;# 
  3058  039C                     	;# 
  3059  039D                     	;# 
  3060  039E                     	;# 
  3061  039F                     	;# 
  3062  0411                     	;# 
  3063  0411                     	;# 
  3064  0412                     	;# 
  3065  0413                     	;# 
  3066  0414                     	;# 
  3067  0415                     	;# 
  3068  0416                     	;# 
  3069  0417                     	;# 
  3070  0418                     	;# 
  3071  0418                     	;# 
  3072  0419                     	;# 
  3073  041A                     	;# 
  3074  041B                     	;# 
  3075  041C                     	;# 
  3076  041D                     	;# 
  3077  041E                     	;# 
  3078  041F                     	;# 
  3079  0498                     	;# 
  3080  0498                     	;# 
  3081  0499                     	;# 
  3082  049A                     	;# 
  3083  049B                     	;# 
  3084  049B                     	;# 
  3085  049C                     	;# 
  3086  049D                     	;# 
  3087  049E                     	;# 
  3088  049F                     	;# 
  3089  0617                     	;# 
  3090  0618                     	;# 
  3091  0619                     	;# 
  3092  0619                     	;# 
  3093  061A                     	;# 
  3094  061B                     	;# 
  3095  061C                     	;# 
  3096  061C                     	;# 
  3097  061F                     	;# 
  3098  0691                     	;# 
  3099  0692                     	;# 
  3100  0693                     	;# 
  3101  0694                     	;# 
  3102  0695                     	;# 
  3103  0696                     	;# 
  3104  0697                     	;# 
  3105  0698                     	;# 
  3106  0699                     	;# 
  3107  0711                     	;# 
  3108  0712                     	;# 
  3109  0713                     	;# 
  3110  0714                     	;# 
  3111  0715                     	;# 
  3112  0716                     	;# 
  3113  0717                     	;# 
  3114  0718                     	;# 
  3115  0719                     	;# 
  3116  0891                     	;# 
  3117  0891                     	;# 
  3118  0891                     	;# 
  3119  0891                     	;# 
  3120  0891                     	;# 
  3121  0891                     	;# 
  3122  0892                     	;# 
  3123  0892                     	;# 
  3124  0892                     	;# 
  3125  0893                     	;# 
  3126  0893                     	;# 
  3127  0893                     	;# 
  3128  0893                     	;# 
  3129  0893                     	;# 
  3130  0893                     	;# 
  3131  0894                     	;# 
  3132  0894                     	;# 
  3133  0894                     	;# 
  3134  0895                     	;# 
  3135  0895                     	;# 
  3136  0895                     	;# 
  3137  0896                     	;# 
  3138  0896                     	;# 
  3139  0896                     	;# 
  3140  089B                     	;# 
  3141  0911                     	;# 
  3142  0912                     	;# 
  3143  0913                     	;# 
  3144  0914                     	;# 
  3145  0915                     	;# 
  3146  0916                     	;# 
  3147  0918                     	;# 
  3148  0919                     	;# 
  3149  091A                     	;# 
  3150  091B                     	;# 
  3151  091C                     	;# 
  3152  091D                     	;# 
  3153  091E                     	;# 
  3154  091F                     	;# 
  3155  0E0F                     	;# 
  3156  0E10                     	;# 
  3157  0E11                     	;# 
  3158  0E12                     	;# 
  3159  0E13                     	;# 
  3160  0E14                     	;# 
  3161  0E15                     	;# 
  3162  0E16                     	;# 
  3163  0E17                     	;# 
  3164  0E18                     	;# 
  3165  0E19                     	;# 
  3166  0E1A                     	;# 
  3167  0E1B                     	;# 
  3168  0E1C                     	;# 
  3169  0E1D                     	;# 
  3170  0E1E                     	;# 
  3171  0E1F                     	;# 
  3172  0E20                     	;# 
  3173  0E21                     	;# 
  3174  0E22                     	;# 
  3175  0E24                     	;# 
  3176  0E25                     	;# 
  3177  0E28                     	;# 
  3178  0E29                     	;# 
  3179  0E2A                     	;# 
  3180  0E2B                     	;# 
  3181  0E2C                     	;# 
  3182  0E2D                     	;# 
  3183  0E2E                     	;# 
  3184  0E2F                     	;# 
  3185  0E90                     	;# 
  3186  0E91                     	;# 
  3187  0E92                     	;# 
  3188  0E94                     	;# 
  3189  0E95                     	;# 
  3190  0E9C                     	;# 
  3191  0E9D                     	;# 
  3192  0E9E                     	;# 
  3193  0E9F                     	;# 
  3194  0EA0                     	;# 
  3195  0EA1                     	;# 
  3196  0EA2                     	;# 
  3197  0EA3                     	;# 
  3198  0EA4                     	;# 
  3199  0EA5                     	;# 
  3200  0EA6                     	;# 
  3201  0EA7                     	;# 
  3202  0F0F                     	;# 
  3203  0F10                     	;# 
  3204  0F11                     	;# 
  3205  0F12                     	;# 
  3206  0F13                     	;# 
  3207  0F14                     	;# 
  3208  0F15                     	;# 
  3209  0F16                     	;# 
  3210  0F17                     	;# 
  3211  0F18                     	;# 
  3212  0F19                     	;# 
  3213  0F1A                     	;# 
  3214  0F1B                     	;# 
  3215  0F1C                     	;# 
  3216  0F1D                     	;# 
  3217  0F1E                     	;# 
  3218  0F1F                     	;# 
  3219  0F20                     	;# 
  3220  0F21                     	;# 
  3221  0F22                     	;# 
  3222  0F23                     	;# 
  3223  0F24                     	;# 
  3224  0F25                     	;# 
  3225  0F26                     	;# 
  3226  0F27                     	;# 
  3227  0F28                     	;# 
  3228  0F29                     	;# 
  3229  0F2A                     	;# 
  3230  0F2B                     	;# 
  3231  0F2C                     	;# 
  3232  0F2D                     	;# 
  3233  0F2E                     	;# 
  3234  0F2F                     	;# 
  3235  0F30                     	;# 
  3236  0F31                     	;# 
  3237  0F32                     	;# 
  3238  0F33                     	;# 
  3239  0F34                     	;# 
  3240  0F35                     	;# 
  3241  0F36                     	;# 
  3242  0F37                     	;# 
  3243  0FE4                     	;# 
  3244  0FE5                     	;# 
  3245  0FE6                     	;# 
  3246  0FE7                     	;# 
  3247  0FE8                     	;# 
  3248  0FE9                     	;# 
  3249  0FEA                     	;# 
  3250  0FEB                     	;# 
  3251  0FED                     	;# 
  3252  0FEE                     	;# 
  3253  0FEF                     	;# 
  3254  0000                     	;# 
  3255  0001                     	;# 
  3256  0002                     	;# 
  3257  0003                     	;# 
  3258  0004                     	;# 
  3259  0005                     	;# 
  3260  0006                     	;# 
  3261  0007                     	;# 
  3262  0008                     	;# 
  3263  0009                     	;# 
  3264  000A                     	;# 
  3265  000B                     	;# 
  3266  000C                     	;# 
  3267  000D                     	;# 
  3268  000E                     	;# 
  3269  0010                     	;# 
  3270  0011                     	;# 
  3271  0012                     	;# 
  3272  0013                     	;# 
  3273  0014                     	;# 
  3274  0015                     	;# 
  3275  0015                     	;# 
  3276  0016                     	;# 
  3277  0016                     	;# 
  3278  0017                     	;# 
  3279  0018                     	;# 
  3280  0019                     	;# 
  3281  0019                     	;# 
  3282  001A                     	;# 
  3283  001B                     	;# 
  3284  001C                     	;# 
  3285  001D                     	;# 
  3286  001E                     	;# 
  3287  001F                     	;# 
  3288  008C                     	;# 
  3289  008D                     	;# 
  3290  008E                     	;# 
  3291  0090                     	;# 
  3292  0091                     	;# 
  3293  0092                     	;# 
  3294  0093                     	;# 
  3295  0094                     	;# 
  3296  0097                     	;# 
  3297  009B                     	;# 
  3298  009B                     	;# 
  3299  009C                     	;# 
  3300  009D                     	;# 
  3301  009E                     	;# 
  3302  009F                     	;# 
  3303  010C                     	;# 
  3304  010D                     	;# 
  3305  010E                     	;# 
  3306  0111                     	;# 
  3307  0112                     	;# 
  3308  0113                     	;# 
  3309  0114                     	;# 
  3310  0115                     	;# 
  3311  0116                     	;# 
  3312  0117                     	;# 
  3313  0118                     	;# 
  3314  0119                     	;# 
  3315  018C                     	;# 
  3316  018D                     	;# 
  3317  018E                     	;# 
  3318  0197                     	;# 
  3319  0199                     	;# 
  3320  0199                     	;# 
  3321  0199                     	;# 
  3322  019A                     	;# 
  3323  019A                     	;# 
  3324  019A                     	;# 
  3325  019B                     	;# 
  3326  019B                     	;# 
  3327  019B                     	;# 
  3328  019B                     	;# 
  3329  019B                     	;# 
  3330  019C                     	;# 
  3331  019C                     	;# 
  3332  019C                     	;# 
  3333  019D                     	;# 
  3334  019D                     	;# 
  3335  019D                     	;# 
  3336  019E                     	;# 
  3337  019E                     	;# 
  3338  019E                     	;# 
  3339  019F                     	;# 
  3340  019F                     	;# 
  3341  019F                     	;# 
  3342  019F                     	;# 
  3343  019F                     	;# 
  3344  020C                     	;# 
  3345  020D                     	;# 
  3346  020E                     	;# 
  3347  0211                     	;# 
  3348  0211                     	;# 
  3349  0212                     	;# 
  3350  0212                     	;# 
  3351  0213                     	;# 
  3352  0213                     	;# 
  3353  0214                     	;# 
  3354  0214                     	;# 
  3355  0215                     	;# 
  3356  0215                     	;# 
  3357  0215                     	;# 
  3358  0215                     	;# 
  3359  0216                     	;# 
  3360  0216                     	;# 
  3361  0217                     	;# 
  3362  0217                     	;# 
  3363  0219                     	;# 
  3364  021A                     	;# 
  3365  021B                     	;# 
  3366  021C                     	;# 
  3367  021D                     	;# 
  3368  021D                     	;# 
  3369  021E                     	;# 
  3370  021F                     	;# 
  3371  028C                     	;# 
  3372  028D                     	;# 
  3373  028E                     	;# 
  3374  0291                     	;# 
  3375  0291                     	;# 
  3376  0292                     	;# 
  3377  0293                     	;# 
  3378  0294                     	;# 
  3379  0295                     	;# 
  3380  0295                     	;# 
  3381  0296                     	;# 
  3382  0297                     	;# 
  3383  0298                     	;# 
  3384  029F                     	;# 
  3385  030C                     	;# 
  3386  030D                     	;# 
  3387  030E                     	;# 
  3388  0311                     	;# 
  3389  0311                     	;# 
  3390  0312                     	;# 
  3391  0313                     	;# 
  3392  0314                     	;# 
  3393  0315                     	;# 
  3394  0315                     	;# 
  3395  0316                     	;# 
  3396  0317                     	;# 
  3397  0318                     	;# 
  3398  038C                     	;# 
  3399  038D                     	;# 
  3400  038E                     	;# 
  3401  0391                     	;# 
  3402  0392                     	;# 
  3403  0393                     	;# 
  3404  0394                     	;# 
  3405  0395                     	;# 
  3406  0396                     	;# 
  3407  0397                     	;# 
  3408  0398                     	;# 
  3409  0399                     	;# 
  3410  039A                     	;# 
  3411  039C                     	;# 
  3412  039D                     	;# 
  3413  039E                     	;# 
  3414  039F                     	;# 
  3415  0411                     	;# 
  3416  0411                     	;# 
  3417  0412                     	;# 
  3418  0413                     	;# 
  3419  0414                     	;# 
  3420  0415                     	;# 
  3421  0416                     	;# 
  3422  0417                     	;# 
  3423  0418                     	;# 
  3424  0418                     	;# 
  3425  0419                     	;# 
  3426  041A                     	;# 
  3427  041B                     	;# 
  3428  041C                     	;# 
  3429  041D                     	;# 
  3430  041E                     	;# 
  3431  041F                     	;# 
  3432  0498                     	;# 
  3433  0498                     	;# 
  3434  0499                     	;# 
  3435  049A                     	;# 
  3436  049B                     	;# 
  3437  049B                     	;# 
  3438  049C                     	;# 
  3439  049D                     	;# 
  3440  049E                     	;# 
  3441  049F                     	;# 
  3442  0617                     	;# 
  3443  0618                     	;# 
  3444  0619                     	;# 
  3445  0619                     	;# 
  3446  061A                     	;# 
  3447  061B                     	;# 
  3448  061C                     	;# 
  3449  061C                     	;# 
  3450  061F                     	;# 
  3451  0691                     	;# 
  3452  0692                     	;# 
  3453  0693                     	;# 
  3454  0694                     	;# 
  3455  0695                     	;# 
  3456  0696                     	;# 
  3457  0697                     	;# 
  3458  0698                     	;# 
  3459  0699                     	;# 
  3460  0711                     	;# 
  3461  0712                     	;# 
  3462  0713                     	;# 
  3463  0714                     	;# 
  3464  0715                     	;# 
  3465  0716                     	;# 
  3466  0717                     	;# 
  3467  0718                     	;# 
  3468  0719                     	;# 
  3469  0891                     	;# 
  3470  0891                     	;# 
  3471  0891                     	;# 
  3472  0891                     	;# 
  3473  0891                     	;# 
  3474  0891                     	;# 
  3475  0892                     	;# 
  3476  0892                     	;# 
  3477  0892                     	;# 
  3478  0893                     	;# 
  3479  0893                     	;# 
  3480  0893                     	;# 
  3481  0893                     	;# 
  3482  0893                     	;# 
  3483  0893                     	;# 
  3484  0894                     	;# 
  3485  0894                     	;# 
  3486  0894                     	;# 
  3487  0895                     	;# 
  3488  0895                     	;# 
  3489  0895                     	;# 
  3490  0896                     	;# 
  3491  0896                     	;# 
  3492  0896                     	;# 
  3493  089B                     	;# 
  3494  0911                     	;# 
  3495  0912                     	;# 
  3496  0913                     	;# 
  3497  0914                     	;# 
  3498  0915                     	;# 
  3499  0916                     	;# 
  3500  0918                     	;# 
  3501  0919                     	;# 
  3502  091A                     	;# 
  3503  091B                     	;# 
  3504  091C                     	;# 
  3505  091D                     	;# 
  3506  091E                     	;# 
  3507  091F                     	;# 
  3508  0E0F                     	;# 
  3509  0E10                     	;# 
  3510  0E11                     	;# 
  3511  0E12                     	;# 
  3512  0E13                     	;# 
  3513  0E14                     	;# 
  3514  0E15                     	;# 
  3515  0E16                     	;# 
  3516  0E17                     	;# 
  3517  0E18                     	;# 
  3518  0E19                     	;# 
  3519  0E1A                     	;# 
  3520  0E1B                     	;# 
  3521  0E1C                     	;# 
  3522  0E1D                     	;# 
  3523  0E1E                     	;# 
  3524  0E1F                     	;# 
  3525  0E20                     	;# 
  3526  0E21                     	;# 
  3527  0E22                     	;# 
  3528  0E24                     	;# 
  3529  0E25                     	;# 
  3530  0E28                     	;# 
  3531  0E29                     	;# 
  3532  0E2A                     	;# 
  3533  0E2B                     	;# 
  3534  0E2C                     	;# 
  3535  0E2D                     	;# 
  3536  0E2E                     	;# 
  3537  0E2F                     	;# 
  3538  0E90                     	;# 
  3539  0E91                     	;# 
  3540  0E92                     	;# 
  3541  0E94                     	;# 
  3542  0E95                     	;# 
  3543  0E9C                     	;# 
  3544  0E9D                     	;# 
  3545  0E9E                     	;# 
  3546  0E9F                     	;# 
  3547  0EA0                     	;# 
  3548  0EA1                     	;# 
  3549  0EA2                     	;# 
  3550  0EA3                     	;# 
  3551  0EA4                     	;# 
  3552  0EA5                     	;# 
  3553  0EA6                     	;# 
  3554  0EA7                     	;# 
  3555  0F0F                     	;# 
  3556  0F10                     	;# 
  3557  0F11                     	;# 
  3558  0F12                     	;# 
  3559  0F13                     	;# 
  3560  0F14                     	;# 
  3561  0F15                     	;# 
  3562  0F16                     	;# 
  3563  0F17                     	;# 
  3564  0F18                     	;# 
  3565  0F19                     	;# 
  3566  0F1A                     	;# 
  3567  0F1B                     	;# 
  3568  0F1C                     	;# 
  3569  0F1D                     	;# 
  3570  0F1E                     	;# 
  3571  0F1F                     	;# 
  3572  0F20                     	;# 
  3573  0F21                     	;# 
  3574  0F22                     	;# 
  3575  0F23                     	;# 
  3576  0F24                     	;# 
  3577  0F25                     	;# 
  3578  0F26                     	;# 
  3579  0F27                     	;# 
  3580  0F28                     	;# 
  3581  0F29                     	;# 
  3582  0F2A                     	;# 
  3583  0F2B                     	;# 
  3584  0F2C                     	;# 
  3585  0F2D                     	;# 
  3586  0F2E                     	;# 
  3587  0F2F                     	;# 
  3588  0F30                     	;# 
  3589  0F31                     	;# 
  3590  0F32                     	;# 
  3591  0F33                     	;# 
  3592  0F34                     	;# 
  3593  0F35                     	;# 
  3594  0F36                     	;# 
  3595  0F37                     	;# 
  3596  0FE4                     	;# 
  3597  0FE5                     	;# 
  3598  0FE6                     	;# 
  3599  0FE7                     	;# 
  3600  0FE8                     	;# 
  3601  0FE9                     	;# 
  3602  0FEA                     	;# 
  3603  0FEB                     	;# 
  3604  0FED                     	;# 
  3605  0FEE                     	;# 
  3606  0FEF                     	;# 
  3607  0000                     	;# 
  3608  0001                     	;# 
  3609  0002                     	;# 
  3610  0003                     	;# 
  3611  0004                     	;# 
  3612  0005                     	;# 
  3613  0006                     	;# 
  3614  0007                     	;# 
  3615  0008                     	;# 
  3616  0009                     	;# 
  3617  000A                     	;# 
  3618  000B                     	;# 
  3619  000C                     	;# 
  3620  000D                     	;# 
  3621  000E                     	;# 
  3622  0010                     	;# 
  3623  0011                     	;# 
  3624  0012                     	;# 
  3625  0013                     	;# 
  3626  0014                     	;# 
  3627  0015                     	;# 
  3628  0015                     	;# 
  3629  0016                     	;# 
  3630  0016                     	;# 
  3631  0017                     	;# 
  3632  0018                     	;# 
  3633  0019                     	;# 
  3634  0019                     	;# 
  3635  001A                     	;# 
  3636  001B                     	;# 
  3637  001C                     	;# 
  3638  001D                     	;# 
  3639  001E                     	;# 
  3640  001F                     	;# 
  3641  008C                     	;# 
  3642  008D                     	;# 
  3643  008E                     	;# 
  3644  0090                     	;# 
  3645  0091                     	;# 
  3646  0092                     	;# 
  3647  0093                     	;# 
  3648  0094                     	;# 
  3649  0097                     	;# 
  3650  009B                     	;# 
  3651  009B                     	;# 
  3652  009C                     	;# 
  3653  009D                     	;# 
  3654  009E                     	;# 
  3655  009F                     	;# 
  3656  010C                     	;# 
  3657  010D                     	;# 
  3658  010E                     	;# 
  3659  0111                     	;# 
  3660  0112                     	;# 
  3661  0113                     	;# 
  3662  0114                     	;# 
  3663  0115                     	;# 
  3664  0116                     	;# 
  3665  0117                     	;# 
  3666  0118                     	;# 
  3667  0119                     	;# 
  3668  018C                     	;# 
  3669  018D                     	;# 
  3670  018E                     	;# 
  3671  0197                     	;# 
  3672  0199                     	;# 
  3673  0199                     	;# 
  3674  0199                     	;# 
  3675  019A                     	;# 
  3676  019A                     	;# 
  3677  019A                     	;# 
  3678  019B                     	;# 
  3679  019B                     	;# 
  3680  019B                     	;# 
  3681  019B                     	;# 
  3682  019B                     	;# 
  3683  019C                     	;# 
  3684  019C                     	;# 
  3685  019C                     	;# 
  3686  019D                     	;# 
  3687  019D                     	;# 
  3688  019D                     	;# 
  3689  019E                     	;# 
  3690  019E                     	;# 
  3691  019E                     	;# 
  3692  019F                     	;# 
  3693  019F                     	;# 
  3694  019F                     	;# 
  3695  019F                     	;# 
  3696  019F                     	;# 
  3697  020C                     	;# 
  3698  020D                     	;# 
  3699  020E                     	;# 
  3700  0211                     	;# 
  3701  0211                     	;# 
  3702  0212                     	;# 
  3703  0212                     	;# 
  3704  0213                     	;# 
  3705  0213                     	;# 
  3706  0214                     	;# 
  3707  0214                     	;# 
  3708  0215                     	;# 
  3709  0215                     	;# 
  3710  0215                     	;# 
  3711  0215                     	;# 
  3712  0216                     	;# 
  3713  0216                     	;# 
  3714  0217                     	;# 
  3715  0217                     	;# 
  3716  0219                     	;# 
  3717  021A                     	;# 
  3718  021B                     	;# 
  3719  021C                     	;# 
  3720  021D                     	;# 
  3721  021D                     	;# 
  3722  021E                     	;# 
  3723  021F                     	;# 
  3724  028C                     	;# 
  3725  028D                     	;# 
  3726  028E                     	;# 
  3727  0291                     	;# 
  3728  0291                     	;# 
  3729  0292                     	;# 
  3730  0293                     	;# 
  3731  0294                     	;# 
  3732  0295                     	;# 
  3733  0295                     	;# 
  3734  0296                     	;# 
  3735  0297                     	;# 
  3736  0298                     	;# 
  3737  029F                     	;# 
  3738  030C                     	;# 
  3739  030D                     	;# 
  3740  030E                     	;# 
  3741  0311                     	;# 
  3742  0311                     	;# 
  3743  0312                     	;# 
  3744  0313                     	;# 
  3745  0314                     	;# 
  3746  0315                     	;# 
  3747  0315                     	;# 
  3748  0316                     	;# 
  3749  0317                     	;# 
  3750  0318                     	;# 
  3751  038C                     	;# 
  3752  038D                     	;# 
  3753  038E                     	;# 
  3754  0391                     	;# 
  3755  0392                     	;# 
  3756  0393                     	;# 
  3757  0394                     	;# 
  3758  0395                     	;# 
  3759  0396                     	;# 
  3760  0397                     	;# 
  3761  0398                     	;# 
  3762  0399                     	;# 
  3763  039A                     	;# 
  3764  039C                     	;# 
  3765  039D                     	;# 
  3766  039E                     	;# 
  3767  039F                     	;# 
  3768  0411                     	;# 
  3769  0411                     	;# 
  3770  0412                     	;# 
  3771  0413                     	;# 
  3772  0414                     	;# 
  3773  0415                     	;# 
  3774  0416                     	;# 
  3775  0417                     	;# 
  3776  0418                     	;# 
  3777  0418                     	;# 
  3778  0419                     	;# 
  3779  041A                     	;# 
  3780  041B                     	;# 
  3781  041C                     	;# 
  3782  041D                     	;# 
  3783  041E                     	;# 
  3784  041F                     	;# 
  3785  0498                     	;# 
  3786  0498                     	;# 
  3787  0499                     	;# 
  3788  049A                     	;# 
  3789  049B                     	;# 
  3790  049B                     	;# 
  3791  049C                     	;# 
  3792  049D                     	;# 
  3793  049E                     	;# 
  3794  049F                     	;# 
  3795  0617                     	;# 
  3796  0618                     	;# 
  3797  0619                     	;# 
  3798  0619                     	;# 
  3799  061A                     	;# 
  3800  061B                     	;# 
  3801  061C                     	;# 
  3802  061C                     	;# 
  3803  061F                     	;# 
  3804  0691                     	;# 
  3805  0692                     	;# 
  3806  0693                     	;# 
  3807  0694                     	;# 
  3808  0695                     	;# 
  3809  0696                     	;# 
  3810  0697                     	;# 
  3811  0698                     	;# 
  3812  0699                     	;# 
  3813  0711                     	;# 
  3814  0712                     	;# 
  3815  0713                     	;# 
  3816  0714                     	;# 
  3817  0715                     	;# 
  3818  0716                     	;# 
  3819  0717                     	;# 
  3820  0718                     	;# 
  3821  0719                     	;# 
  3822  0891                     	;# 
  3823  0891                     	;# 
  3824  0891                     	;# 
  3825  0891                     	;# 
  3826  0891                     	;# 
  3827  0891                     	;# 
  3828  0892                     	;# 
  3829  0892                     	;# 
  3830  0892                     	;# 
  3831  0893                     	;# 
  3832  0893                     	;# 
  3833  0893                     	;# 
  3834  0893                     	;# 
  3835  0893                     	;# 
  3836  0893                     	;# 
  3837  0894                     	;# 
  3838  0894                     	;# 
  3839  0894                     	;# 
  3840  0895                     	;# 
  3841  0895                     	;# 
  3842  0895                     	;# 
  3843  0896                     	;# 
  3844  0896                     	;# 
  3845  0896                     	;# 
  3846  089B                     	;# 
  3847  0911                     	;# 
  3848  0912                     	;# 
  3849  0913                     	;# 
  3850  0914                     	;# 
  3851  0915                     	;# 
  3852  0916                     	;# 
  3853  0918                     	;# 
  3854  0919                     	;# 
  3855  091A                     	;# 
  3856  091B                     	;# 
  3857  091C                     	;# 
  3858  091D                     	;# 
  3859  091E                     	;# 
  3860  091F                     	;# 
  3861  0E0F                     	;# 
  3862  0E10                     	;# 
  3863  0E11                     	;# 
  3864  0E12                     	;# 
  3865  0E13                     	;# 
  3866  0E14                     	;# 
  3867  0E15                     	;# 
  3868  0E16                     	;# 
  3869  0E17                     	;# 
  3870  0E18                     	;# 
  3871  0E19                     	;# 
  3872  0E1A                     	;# 
  3873  0E1B                     	;# 
  3874  0E1C                     	;# 
  3875  0E1D                     	;# 
  3876  0E1E                     	;# 
  3877  0E1F                     	;# 
  3878  0E20                     	;# 
  3879  0E21                     	;# 
  3880  0E22                     	;# 
  3881  0E24                     	;# 
  3882  0E25                     	;# 
  3883  0E28                     	;# 
  3884  0E29                     	;# 
  3885  0E2A                     	;# 
  3886  0E2B                     	;# 
  3887  0E2C                     	;# 
  3888  0E2D                     	;# 
  3889  0E2E                     	;# 
  3890  0E2F                     	;# 
  3891  0E90                     	;# 
  3892  0E91                     	;# 
  3893  0E92                     	;# 
  3894  0E94                     	;# 
  3895  0E95                     	;# 
  3896  0E9C                     	;# 
  3897  0E9D                     	;# 
  3898  0E9E                     	;# 
  3899  0E9F                     	;# 
  3900  0EA0                     	;# 
  3901  0EA1                     	;# 
  3902  0EA2                     	;# 
  3903  0EA3                     	;# 
  3904  0EA4                     	;# 
  3905  0EA5                     	;# 
  3906  0EA6                     	;# 
  3907  0EA7                     	;# 
  3908  0F0F                     	;# 
  3909  0F10                     	;# 
  3910  0F11                     	;# 
  3911  0F12                     	;# 
  3912  0F13                     	;# 
  3913  0F14                     	;# 
  3914  0F15                     	;# 
  3915  0F16                     	;# 
  3916  0F17                     	;# 
  3917  0F18                     	;# 
  3918  0F19                     	;# 
  3919  0F1A                     	;# 
  3920  0F1B                     	;# 
  3921  0F1C                     	;# 
  3922  0F1D                     	;# 
  3923  0F1E                     	;# 
  3924  0F1F                     	;# 
  3925  0F20                     	;# 
  3926  0F21                     	;# 
  3927  0F22                     	;# 
  3928  0F23                     	;# 
  3929  0F24                     	;# 
  3930  0F25                     	;# 
  3931  0F26                     	;# 
  3932  0F27                     	;# 
  3933  0F28                     	;# 
  3934  0F29                     	;# 
  3935  0F2A                     	;# 
  3936  0F2B                     	;# 
  3937  0F2C                     	;# 
  3938  0F2D                     	;# 
  3939  0F2E                     	;# 
  3940  0F2F                     	;# 
  3941  0F30                     	;# 
  3942  0F31                     	;# 
  3943  0F32                     	;# 
  3944  0F33                     	;# 
  3945  0F34                     	;# 
  3946  0F35                     	;# 
  3947  0F36                     	;# 
  3948  0F37                     	;# 
  3949  0FE4                     	;# 
  3950  0FE5                     	;# 
  3951  0FE6                     	;# 
  3952  0FE7                     	;# 
  3953  0FE8                     	;# 
  3954  0FE9                     	;# 
  3955  0FEA                     	;# 
  3956  0FEB                     	;# 
  3957  0FED                     	;# 
  3958  0FEE                     	;# 
  3959  0FEF                     	;# 
  3960  0000                     	;# 
  3961  0001                     	;# 
  3962  0002                     	;# 
  3963  0003                     	;# 
  3964  0004                     	;# 
  3965  0005                     	;# 
  3966  0006                     	;# 
  3967  0007                     	;# 
  3968  0008                     	;# 
  3969  0009                     	;# 
  3970  000A                     	;# 
  3971  000B                     	;# 
  3972  000C                     	;# 
  3973  000D                     	;# 
  3974  000E                     	;# 
  3975  0010                     	;# 
  3976  0011                     	;# 
  3977  0012                     	;# 
  3978  0013                     	;# 
  3979  0014                     	;# 
  3980  0015                     	;# 
  3981  0015                     	;# 
  3982  0016                     	;# 
  3983  0016                     	;# 
  3984  0017                     	;# 
  3985  0018                     	;# 
  3986  0019                     	;# 
  3987  0019                     	;# 
  3988  001A                     	;# 
  3989  001B                     	;# 
  3990  001C                     	;# 
  3991  001D                     	;# 
  3992  001E                     	;# 
  3993  001F                     	;# 
  3994  008C                     	;# 
  3995  008D                     	;# 
  3996  008E                     	;# 
  3997  0090                     	;# 
  3998  0091                     	;# 
  3999  0092                     	;# 
  4000  0093                     	;# 
  4001  0094                     	;# 
  4002  0097                     	;# 
  4003  009B                     	;# 
  4004  009B                     	;# 
  4005  009C                     	;# 
  4006  009D                     	;# 
  4007  009E                     	;# 
  4008  009F                     	;# 
  4009  010C                     	;# 
  4010  010D                     	;# 
  4011  010E                     	;# 
  4012  0111                     	;# 
  4013  0112                     	;# 
  4014  0113                     	;# 
  4015  0114                     	;# 
  4016  0115                     	;# 
  4017  0116                     	;# 
  4018  0117                     	;# 
  4019  0118                     	;# 
  4020  0119                     	;# 
  4021  018C                     	;# 
  4022  018D                     	;# 
  4023  018E                     	;# 
  4024  0197                     	;# 
  4025  0199                     	;# 
  4026  0199                     	;# 
  4027  0199                     	;# 
  4028  019A                     	;# 
  4029  019A                     	;# 
  4030  019A                     	;# 
  4031  019B                     	;# 
  4032  019B                     	;# 
  4033  019B                     	;# 
  4034  019B                     	;# 
  4035  019B                     	;# 
  4036  019C                     	;# 
  4037  019C                     	;# 
  4038  019C                     	;# 
  4039  019D                     	;# 
  4040  019D                     	;# 
  4041  019D                     	;# 
  4042  019E                     	;# 
  4043  019E                     	;# 
  4044  019E                     	;# 
  4045  019F                     	;# 
  4046  019F                     	;# 
  4047  019F                     	;# 
  4048  019F                     	;# 
  4049  019F                     	;# 
  4050  020C                     	;# 
  4051  020D                     	;# 
  4052  020E                     	;# 
  4053  0211                     	;# 
  4054  0211                     	;# 
  4055  0212                     	;# 
  4056  0212                     	;# 
  4057  0213                     	;# 
  4058  0213                     	;# 
  4059  0214                     	;# 
  4060  0214                     	;# 
  4061  0215                     	;# 
  4062  0215                     	;# 
  4063  0215                     	;# 
  4064  0215                     	;# 
  4065  0216                     	;# 
  4066  0216                     	;# 
  4067  0217                     	;# 
  4068  0217                     	;# 
  4069  0219                     	;# 
  4070  021A                     	;# 
  4071  021B                     	;# 
  4072  021C                     	;# 
  4073  021D                     	;# 
  4074  021D                     	;# 
  4075  021E                     	;# 
  4076  021F                     	;# 
  4077  028C                     	;# 
  4078  028D                     	;# 
  4079  028E                     	;# 
  4080  0291                     	;# 
  4081  0291                     	;# 
  4082  0292                     	;# 
  4083  0293                     	;# 
  4084  0294                     	;# 
  4085  0295                     	;# 
  4086  0295                     	;# 
  4087  0296                     	;# 
  4088  0297                     	;# 
  4089  0298                     	;# 
  4090  029F                     	;# 
  4091  030C                     	;# 
  4092  030D                     	;# 
  4093  030E                     	;# 
  4094  0311                     	;# 
  4095  0311                     	;# 
  4096  0312                     	;# 
  4097  0313                     	;# 
  4098  0314                     	;# 
  4099  0315                     	;# 
  4100  0315                     	;# 
  4101  0316                     	;# 
  4102  0317                     	;# 
  4103  0318                     	;# 
  4104  038C                     	;# 
  4105  038D                     	;# 
  4106  038E                     	;# 
  4107  0391                     	;# 
  4108  0392                     	;# 
  4109  0393                     	;# 
  4110  0394                     	;# 
  4111  0395                     	;# 
  4112  0396                     	;# 
  4113  0397                     	;# 
  4114  0398                     	;# 
  4115  0399                     	;# 
  4116  039A                     	;# 
  4117  039C                     	;# 
  4118  039D                     	;# 
  4119  039E                     	;# 
  4120  039F                     	;# 
  4121  0411                     	;# 
  4122  0411                     	;# 
  4123  0412                     	;# 
  4124  0413                     	;# 
  4125  0414                     	;# 
  4126  0415                     	;# 
  4127  0416                     	;# 
  4128  0417                     	;# 
  4129  0418                     	;# 
  4130  0418                     	;# 
  4131  0419                     	;# 
  4132  041A                     	;# 
  4133  041B                     	;# 
  4134  041C                     	;# 
  4135  041D                     	;# 
  4136  041E                     	;# 
  4137  041F                     	;# 
  4138  0498                     	;# 
  4139  0498                     	;# 
  4140  0499                     	;# 
  4141  049A                     	;# 
  4142  049B                     	;# 
  4143  049B                     	;# 
  4144  049C                     	;# 
  4145  049D                     	;# 
  4146  049E                     	;# 
  4147  049F                     	;# 
  4148  0617                     	;# 
  4149  0618                     	;# 
  4150  0619                     	;# 
  4151  0619                     	;# 
  4152  061A                     	;# 
  4153  061B                     	;# 
  4154  061C                     	;# 
  4155  061C                     	;# 
  4156  061F                     	;# 
  4157  0691                     	;# 
  4158  0692                     	;# 
  4159  0693                     	;# 
  4160  0694                     	;# 
  4161  0695                     	;# 
  4162  0696                     	;# 
  4163  0697                     	;# 
  4164  0698                     	;# 
  4165  0699                     	;# 
  4166  0711                     	;# 
  4167  0712                     	;# 
  4168  0713                     	;# 
  4169  0714                     	;# 
  4170  0715                     	;# 
  4171  0716                     	;# 
  4172  0717                     	;# 
  4173  0718                     	;# 
  4174  0719                     	;# 
  4175  0891                     	;# 
  4176  0891                     	;# 
  4177  0891                     	;# 
  4178  0891                     	;# 
  4179  0891                     	;# 
  4180  0891                     	;# 
  4181  0892                     	;# 
  4182  0892                     	;# 
  4183  0892                     	;# 
  4184  0893                     	;# 
  4185  0893                     	;# 
  4186  0893                     	;# 
  4187  0893                     	;# 
  4188  0893                     	;# 
  4189  0893                     	;# 
  4190  0894                     	;# 
  4191  0894                     	;# 
  4192  0894                     	;# 
  4193  0895                     	;# 
  4194  0895                     	;# 
  4195  0895                     	;# 
  4196  0896                     	;# 
  4197  0896                     	;# 
  4198  0896                     	;# 
  4199  089B                     	;# 
  4200  0911                     	;# 
  4201  0912                     	;# 
  4202  0913                     	;# 
  4203  0914                     	;# 
  4204  0915                     	;# 
  4205  0916                     	;# 
  4206  0918                     	;# 
  4207  0919                     	;# 
  4208  091A                     	;# 
  4209  091B                     	;# 
  4210  091C                     	;# 
  4211  091D                     	;# 
  4212  091E                     	;# 
  4213  091F                     	;# 
  4214  0E0F                     	;# 
  4215  0E10                     	;# 
  4216  0E11                     	;# 
  4217  0E12                     	;# 
  4218  0E13                     	;# 
  4219  0E14                     	;# 
  4220  0E15                     	;# 
  4221  0E16                     	;# 
  4222  0E17                     	;# 
  4223  0E18                     	;# 
  4224  0E19                     	;# 
  4225  0E1A                     	;# 
  4226  0E1B                     	;# 
  4227  0E1C                     	;# 
  4228  0E1D                     	;# 
  4229  0E1E                     	;# 
  4230  0E1F                     	;# 
  4231  0E20                     	;# 
  4232  0E21                     	;# 
  4233  0E22                     	;# 
  4234  0E24                     	;# 
  4235  0E25                     	;# 
  4236  0E28                     	;# 
  4237  0E29                     	;# 
  4238  0E2A                     	;# 
  4239  0E2B                     	;# 
  4240  0E2C                     	;# 
  4241  0E2D                     	;# 
  4242  0E2E                     	;# 
  4243  0E2F                     	;# 
  4244  0E90                     	;# 
  4245  0E91                     	;# 
  4246  0E92                     	;# 
  4247  0E94                     	;# 
  4248  0E95                     	;# 
  4249  0E9C                     	;# 
  4250  0E9D                     	;# 
  4251  0E9E                     	;# 
  4252  0E9F                     	;# 
  4253  0EA0                     	;# 
  4254  0EA1                     	;# 
  4255  0EA2                     	;# 
  4256  0EA3                     	;# 
  4257  0EA4                     	;# 
  4258  0EA5                     	;# 
  4259  0EA6                     	;# 
  4260  0EA7                     	;# 
  4261  0F0F                     	;# 
  4262  0F10                     	;# 
  4263  0F11                     	;# 
  4264  0F12                     	;# 
  4265  0F13                     	;# 
  4266  0F14                     	;# 
  4267  0F15                     	;# 
  4268  0F16                     	;# 
  4269  0F17                     	;# 
  4270  0F18                     	;# 
  4271  0F19                     	;# 
  4272  0F1A                     	;# 
  4273  0F1B                     	;# 
  4274  0F1C                     	;# 
  4275  0F1D                     	;# 
  4276  0F1E                     	;# 
  4277  0F1F                     	;# 
  4278  0F20                     	;# 
  4279  0F21                     	;# 
  4280  0F22                     	;# 
  4281  0F23                     	;# 
  4282  0F24                     	;# 
  4283  0F25                     	;# 
  4284  0F26                     	;# 
  4285  0F27                     	;# 
  4286  0F28                     	;# 
  4287  0F29                     	;# 
  4288  0F2A                     	;# 
  4289  0F2B                     	;# 
  4290  0F2C                     	;# 
  4291  0F2D                     	;# 
  4292  0F2E                     	;# 
  4293  0F2F                     	;# 
  4294  0F30                     	;# 
  4295  0F31                     	;# 
  4296  0F32                     	;# 
  4297  0F33                     	;# 
  4298  0F34                     	;# 
  4299  0F35                     	;# 
  4300  0F36                     	;# 
  4301  0F37                     	;# 
  4302  0FE4                     	;# 
  4303  0FE5                     	;# 
  4304  0FE6                     	;# 
  4305  0FE7                     	;# 
  4306  0FE8                     	;# 
  4307  0FE9                     	;# 
  4308  0FEA                     	;# 
  4309  0FEB                     	;# 
  4310  0FED                     	;# 
  4311  0FEE                     	;# 
  4312  0FEF                     	;# 
  4313  0000                     	;# 
  4314  0001                     	;# 
  4315  0002                     	;# 
  4316  0003                     	;# 
  4317  0004                     	;# 
  4318  0005                     	;# 
  4319  0006                     	;# 
  4320  0007                     	;# 
  4321  0008                     	;# 
  4322  0009                     	;# 
  4323  000A                     	;# 
  4324  000B                     	;# 
  4325  000C                     	;# 
  4326  000D                     	;# 
  4327  000E                     	;# 
  4328  0010                     	;# 
  4329  0011                     	;# 
  4330  0012                     	;# 
  4331  0013                     	;# 
  4332  0014                     	;# 
  4333  0015                     	;# 
  4334  0015                     	;# 
  4335  0016                     	;# 
  4336  0016                     	;# 
  4337  0017                     	;# 
  4338  0018                     	;# 
  4339  0019                     	;# 
  4340  0019                     	;# 
  4341  001A                     	;# 
  4342  001B                     	;# 
  4343  001C                     	;# 
  4344  001D                     	;# 
  4345  001E                     	;# 
  4346  001F                     	;# 
  4347  008C                     	;# 
  4348  008D                     	;# 
  4349  008E                     	;# 
  4350  0090                     	;# 
  4351  0091                     	;# 
  4352  0092                     	;# 
  4353  0093                     	;# 
  4354  0094                     	;# 
  4355  0097                     	;# 
  4356  009B                     	;# 
  4357  009B                     	;# 
  4358  009C                     	;# 
  4359  009D                     	;# 
  4360  009E                     	;# 
  4361  009F                     	;# 
  4362  010C                     	;# 
  4363  010D                     	;# 
  4364  010E                     	;# 
  4365  0111                     	;# 
  4366  0112                     	;# 
  4367  0113                     	;# 
  4368  0114                     	;# 
  4369  0115                     	;# 
  4370  0116                     	;# 
  4371  0117                     	;# 
  4372  0118                     	;# 
  4373  0119                     	;# 
  4374  018C                     	;# 
  4375  018D                     	;# 
  4376  018E                     	;# 
  4377  0197                     	;# 
  4378  0199                     	;# 
  4379  0199                     	;# 
  4380  0199                     	;# 
  4381  019A                     	;# 
  4382  019A                     	;# 
  4383  019A                     	;# 
  4384  019B                     	;# 
  4385  019B                     	;# 
  4386  019B                     	;# 
  4387  019B                     	;# 
  4388  019B                     	;# 
  4389  019C                     	;# 
  4390  019C                     	;# 
  4391  019C                     	;# 
  4392  019D                     	;# 
  4393  019D                     	;# 
  4394  019D                     	;# 
  4395  019E                     	;# 
  4396  019E                     	;# 
  4397  019E                     	;# 
  4398  019F                     	;# 
  4399  019F                     	;# 
  4400  019F                     	;# 
  4401  019F                     	;# 
  4402  019F                     	;# 
  4403  020C                     	;# 
  4404  020D                     	;# 
  4405  020E                     	;# 
  4406  0211                     	;# 
  4407  0211                     	;# 
  4408  0212                     	;# 
  4409  0212                     	;# 
  4410  0213                     	;# 
  4411  0213                     	;# 
  4412  0214                     	;# 
  4413  0214                     	;# 
  4414  0215                     	;# 
  4415  0215                     	;# 
  4416  0215                     	;# 
  4417  0215                     	;# 
  4418  0216                     	;# 
  4419  0216                     	;# 
  4420  0217                     	;# 
  4421  0217                     	;# 
  4422  0219                     	;# 
  4423  021A                     	;# 
  4424  021B                     	;# 
  4425  021C                     	;# 
  4426  021D                     	;# 
  4427  021D                     	;# 
  4428  021E                     	;# 
  4429  021F                     	;# 
  4430  028C                     	;# 
  4431  028D                     	;# 
  4432  028E                     	;# 
  4433  0291                     	;# 
  4434  0291                     	;# 
  4435  0292                     	;# 
  4436  0293                     	;# 
  4437  0294                     	;# 
  4438  0295                     	;# 
  4439  0295                     	;# 
  4440  0296                     	;# 
  4441  0297                     	;# 
  4442  0298                     	;# 
  4443  029F                     	;# 
  4444  030C                     	;# 
  4445  030D                     	;# 
  4446  030E                     	;# 
  4447  0311                     	;# 
  4448  0311                     	;# 
  4449  0312                     	;# 
  4450  0313                     	;# 
  4451  0314                     	;# 
  4452  0315                     	;# 
  4453  0315                     	;# 
  4454  0316                     	;# 
  4455  0317                     	;# 
  4456  0318                     	;# 
  4457  038C                     	;# 
  4458  038D                     	;# 
  4459  038E                     	;# 
  4460  0391                     	;# 
  4461  0392                     	;# 
  4462  0393                     	;# 
  4463  0394                     	;# 
  4464  0395                     	;# 
  4465  0396                     	;# 
  4466  0397                     	;# 
  4467  0398                     	;# 
  4468  0399                     	;# 
  4469  039A                     	;# 
  4470  039C                     	;# 
  4471  039D                     	;# 
  4472  039E                     	;# 
  4473  039F                     	;# 
  4474  0411                     	;# 
  4475  0411                     	;# 
  4476  0412                     	;# 
  4477  0413                     	;# 
  4478  0414                     	;# 
  4479  0415                     	;# 
  4480  0416                     	;# 
  4481  0417                     	;# 
  4482  0418                     	;# 
  4483  0418                     	;# 
  4484  0419                     	;# 
  4485  041A                     	;# 
  4486  041B                     	;# 
  4487  041C                     	;# 
  4488  041D                     	;# 
  4489  041E                     	;# 
  4490  041F                     	;# 
  4491  0498                     	;# 
  4492  0498                     	;# 
  4493  0499                     	;# 
  4494  049A                     	;# 
  4495  049B                     	;# 
  4496  049B                     	;# 
  4497  049C                     	;# 
  4498  049D                     	;# 
  4499  049E                     	;# 
  4500  049F                     	;# 
  4501  0617                     	;# 
  4502  0618                     	;# 
  4503  0619                     	;# 
  4504  0619                     	;# 
  4505  061A                     	;# 
  4506  061B                     	;# 
  4507  061C                     	;# 
  4508  061C                     	;# 
  4509  061F                     	;# 
  4510  0691                     	;# 
  4511  0692                     	;# 
  4512  0693                     	;# 
  4513  0694                     	;# 
  4514  0695                     	;# 
  4515  0696                     	;# 
  4516  0697                     	;# 
  4517  0698                     	;# 
  4518  0699                     	;# 
  4519  0711                     	;# 
  4520  0712                     	;# 
  4521  0713                     	;# 
  4522  0714                     	;# 
  4523  0715                     	;# 
  4524  0716                     	;# 
  4525  0717                     	;# 
  4526  0718                     	;# 
  4527  0719                     	;# 
  4528  0891                     	;# 
  4529  0891                     	;# 
  4530  0891                     	;# 
  4531  0891                     	;# 
  4532  0891                     	;# 
  4533  0891                     	;# 
  4534  0892                     	;# 
  4535  0892                     	;# 
  4536  0892                     	;# 
  4537  0893                     	;# 
  4538  0893                     	;# 
  4539  0893                     	;# 
  4540  0893                     	;# 
  4541  0893                     	;# 
  4542  0893                     	;# 
  4543  0894                     	;# 
  4544  0894                     	;# 
  4545  0894                     	;# 
  4546  0895                     	;# 
  4547  0895                     	;# 
  4548  0895                     	;# 
  4549  0896                     	;# 
  4550  0896                     	;# 
  4551  0896                     	;# 
  4552  089B                     	;# 
  4553  0911                     	;# 
  4554  0912                     	;# 
  4555  0913                     	;# 
  4556  0914                     	;# 
  4557  0915                     	;# 
  4558  0916                     	;# 
  4559  0918                     	;# 
  4560  0919                     	;# 
  4561  091A                     	;# 
  4562  091B                     	;# 
  4563  091C                     	;# 
  4564  091D                     	;# 
  4565  091E                     	;# 
  4566  091F                     	;# 
  4567  0E0F                     	;# 
  4568  0E10                     	;# 
  4569  0E11                     	;# 
  4570  0E12                     	;# 
  4571  0E13                     	;# 
  4572  0E14                     	;# 
  4573  0E15                     	;# 
  4574  0E16                     	;# 
  4575  0E17                     	;# 
  4576  0E18                     	;# 
  4577  0E19                     	;# 
  4578  0E1A                     	;# 
  4579  0E1B                     	;# 
  4580  0E1C                     	;# 
  4581  0E1D                     	;# 
  4582  0E1E                     	;# 
  4583  0E1F                     	;# 
  4584  0E20                     	;# 
  4585  0E21                     	;# 
  4586  0E22                     	;# 
  4587  0E24                     	;# 
  4588  0E25                     	;# 
  4589  0E28                     	;# 
  4590  0E29                     	;# 
  4591  0E2A                     	;# 
  4592  0E2B                     	;# 
  4593  0E2C                     	;# 
  4594  0E2D                     	;# 
  4595  0E2E                     	;# 
  4596  0E2F                     	;# 
  4597  0E90                     	;# 
  4598  0E91                     	;# 
  4599  0E92                     	;# 
  4600  0E94                     	;# 
  4601  0E95                     	;# 
  4602  0E9C                     	;# 
  4603  0E9D                     	;# 
  4604  0E9E                     	;# 
  4605  0E9F                     	;# 
  4606  0EA0                     	;# 
  4607  0EA1                     	;# 
  4608  0EA2                     	;# 
  4609  0EA3                     	;# 
  4610  0EA4                     	;# 
  4611  0EA5                     	;# 
  4612  0EA6                     	;# 
  4613  0EA7                     	;# 
  4614  0F0F                     	;# 
  4615  0F10                     	;# 
  4616  0F11                     	;# 
  4617  0F12                     	;# 
  4618  0F13                     	;# 
  4619  0F14                     	;# 
  4620  0F15                     	;# 
  4621  0F16                     	;# 
  4622  0F17                     	;# 
  4623  0F18                     	;# 
  4624  0F19                     	;# 
  4625  0F1A                     	;# 
  4626  0F1B                     	;# 
  4627  0F1C                     	;# 
  4628  0F1D                     	;# 
  4629  0F1E                     	;# 
  4630  0F1F                     	;# 
  4631  0F20                     	;# 
  4632  0F21                     	;# 
  4633  0F22                     	;# 
  4634  0F23                     	;# 
  4635  0F24                     	;# 
  4636  0F25                     	;# 
  4637  0F26                     	;# 
  4638  0F27                     	;# 
  4639  0F28                     	;# 
  4640  0F29                     	;# 
  4641  0F2A                     	;# 
  4642  0F2B                     	;# 
  4643  0F2C                     	;# 
  4644  0F2D                     	;# 
  4645  0F2E                     	;# 
  4646  0F2F                     	;# 
  4647  0F30                     	;# 
  4648  0F31                     	;# 
  4649  0F32                     	;# 
  4650  0F33                     	;# 
  4651  0F34                     	;# 
  4652  0F35                     	;# 
  4653  0F36                     	;# 
  4654  0F37                     	;# 
  4655  0FE4                     	;# 
  4656  0FE5                     	;# 
  4657  0FE6                     	;# 
  4658  0FE7                     	;# 
  4659  0FE8                     	;# 
  4660  0FE9                     	;# 
  4661  0FEA                     	;# 
  4662  0FEB                     	;# 
  4663  0FED                     	;# 
  4664  0FEE                     	;# 
  4665  0FEF                     	;# 
  4666  0000                     	;# 
  4667  0001                     	;# 
  4668  0002                     	;# 
  4669  0003                     	;# 
  4670  0004                     	;# 
  4671  0005                     	;# 
  4672  0006                     	;# 
  4673  0007                     	;# 
  4674  0008                     	;# 
  4675  0009                     	;# 
  4676  000A                     	;# 
  4677  000B                     	;# 
  4678  000C                     	;# 
  4679  000D                     	;# 
  4680  000E                     	;# 
  4681  0010                     	;# 
  4682  0011                     	;# 
  4683  0012                     	;# 
  4684  0013                     	;# 
  4685  0014                     	;# 
  4686  0015                     	;# 
  4687  0015                     	;# 
  4688  0016                     	;# 
  4689  0016                     	;# 
  4690  0017                     	;# 
  4691  0018                     	;# 
  4692  0019                     	;# 
  4693  0019                     	;# 
  4694  001A                     	;# 
  4695  001B                     	;# 
  4696  001C                     	;# 
  4697  001D                     	;# 
  4698  001E                     	;# 
  4699  001F                     	;# 
  4700  008C                     	;# 
  4701  008D                     	;# 
  4702  008E                     	;# 
  4703  0090                     	;# 
  4704  0091                     	;# 
  4705  0092                     	;# 
  4706  0093                     	;# 
  4707  0094                     	;# 
  4708  0097                     	;# 
  4709  009B                     	;# 
  4710  009B                     	;# 
  4711  009C                     	;# 
  4712  009D                     	;# 
  4713  009E                     	;# 
  4714  009F                     	;# 
  4715  010C                     	;# 
  4716  010D                     	;# 
  4717  010E                     	;# 
  4718  0111                     	;# 
  4719  0112                     	;# 
  4720  0113                     	;# 
  4721  0114                     	;# 
  4722  0115                     	;# 
  4723  0116                     	;# 
  4724  0117                     	;# 
  4725  0118                     	;# 
  4726  0119                     	;# 
  4727  018C                     	;# 
  4728  018D                     	;# 
  4729  018E                     	;# 
  4730  0197                     	;# 
  4731  0199                     	;# 
  4732  0199                     	;# 
  4733  0199                     	;# 
  4734  019A                     	;# 
  4735  019A                     	;# 
  4736  019A                     	;# 
  4737  019B                     	;# 
  4738  019B                     	;# 
  4739  019B                     	;# 
  4740  019B                     	;# 
  4741  019B                     	;# 
  4742  019C                     	;# 
  4743  019C                     	;# 
  4744  019C                     	;# 
  4745  019D                     	;# 
  4746  019D                     	;# 
  4747  019D                     	;# 
  4748  019E                     	;# 
  4749  019E                     	;# 
  4750  019E                     	;# 
  4751  019F                     	;# 
  4752  019F                     	;# 
  4753  019F                     	;# 
  4754  019F                     	;# 
  4755  019F                     	;# 
  4756  020C                     	;# 
  4757  020D                     	;# 
  4758  020E                     	;# 
  4759  0211                     	;# 
  4760  0211                     	;# 
  4761  0212                     	;# 
  4762  0212                     	;# 
  4763  0213                     	;# 
  4764  0213                     	;# 
  4765  0214                     	;# 
  4766  0214                     	;# 
  4767  0215                     	;# 
  4768  0215                     	;# 
  4769  0215                     	;# 
  4770  0215                     	;# 
  4771  0216                     	;# 
  4772  0216                     	;# 
  4773  0217                     	;# 
  4774  0217                     	;# 
  4775  0219                     	;# 
  4776  021A                     	;# 
  4777  021B                     	;# 
  4778  021C                     	;# 
  4779  021D                     	;# 
  4780  021D                     	;# 
  4781  021E                     	;# 
  4782  021F                     	;# 
  4783  028C                     	;# 
  4784  028D                     	;# 
  4785  028E                     	;# 
  4786  0291                     	;# 
  4787  0291                     	;# 
  4788  0292                     	;# 
  4789  0293                     	;# 
  4790  0294                     	;# 
  4791  0295                     	;# 
  4792  0295                     	;# 
  4793  0296                     	;# 
  4794  0297                     	;# 
  4795  0298                     	;# 
  4796  029F                     	;# 
  4797  030C                     	;# 
  4798  030D                     	;# 
  4799  030E                     	;# 
  4800  0311                     	;# 
  4801  0311                     	;# 
  4802  0312                     	;# 
  4803  0313                     	;# 
  4804  0314                     	;# 
  4805  0315                     	;# 
  4806  0315                     	;# 
  4807  0316                     	;# 
  4808  0317                     	;# 
  4809  0318                     	;# 
  4810  038C                     	;# 
  4811  038D                     	;# 
  4812  038E                     	;# 
  4813  0391                     	;# 
  4814  0392                     	;# 
  4815  0393                     	;# 
  4816  0394                     	;# 
  4817  0395                     	;# 
  4818  0396                     	;# 
  4819  0397                     	;# 
  4820  0398                     	;# 
  4821  0399                     	;# 
  4822  039A                     	;# 
  4823  039C                     	;# 
  4824  039D                     	;# 
  4825  039E                     	;# 
  4826  039F                     	;# 
  4827  0411                     	;# 
  4828  0411                     	;# 
  4829  0412                     	;# 
  4830  0413                     	;# 
  4831  0414                     	;# 
  4832  0415                     	;# 
  4833  0416                     	;# 
  4834  0417                     	;# 
  4835  0418                     	;# 
  4836  0418                     	;# 
  4837  0419                     	;# 
  4838  041A                     	;# 
  4839  041B                     	;# 
  4840  041C                     	;# 
  4841  041D                     	;# 
  4842  041E                     	;# 
  4843  041F                     	;# 
  4844  0498                     	;# 
  4845  0498                     	;# 
  4846  0499                     	;# 
  4847  049A                     	;# 
  4848  049B                     	;# 
  4849  049B                     	;# 
  4850  049C                     	;# 
  4851  049D                     	;# 
  4852  049E                     	;# 
  4853  049F                     	;# 
  4854  0617                     	;# 
  4855  0618                     	;# 
  4856  0619                     	;# 
  4857  0619                     	;# 
  4858  061A                     	;# 
  4859  061B                     	;# 
  4860  061C                     	;# 
  4861  061C                     	;# 
  4862  061F                     	;# 
  4863  0691                     	;# 
  4864  0692                     	;# 
  4865  0693                     	;# 
  4866  0694                     	;# 
  4867  0695                     	;# 
  4868  0696                     	;# 
  4869  0697                     	;# 
  4870  0698                     	;# 
  4871  0699                     	;# 
  4872  0711                     	;# 
  4873  0712                     	;# 
  4874  0713                     	;# 
  4875  0714                     	;# 
  4876  0715                     	;# 
  4877  0716                     	;# 
  4878  0717                     	;# 
  4879  0718                     	;# 
  4880  0719                     	;# 
  4881  0891                     	;# 
  4882  0891                     	;# 
  4883  0891                     	;# 
  4884  0891                     	;# 
  4885  0891                     	;# 
  4886  0891                     	;# 
  4887  0892                     	;# 
  4888  0892                     	;# 
  4889  0892                     	;# 
  4890  0893                     	;# 
  4891  0893                     	;# 
  4892  0893                     	;# 
  4893  0893                     	;# 
  4894  0893                     	;# 
  4895  0893                     	;# 
  4896  0894                     	;# 
  4897  0894                     	;# 
  4898  0894                     	;# 
  4899  0895                     	;# 
  4900  0895                     	;# 
  4901  0895                     	;# 
  4902  0896                     	;# 
  4903  0896                     	;# 
  4904  0896                     	;# 
  4905  089B                     	;# 
  4906  0911                     	;# 
  4907  0912                     	;# 
  4908  0913                     	;# 
  4909  0914                     	;# 
  4910  0915                     	;# 
  4911  0916                     	;# 
  4912  0918                     	;# 
  4913  0919                     	;# 
  4914  091A                     	;# 
  4915  091B                     	;# 
  4916  091C                     	;# 
  4917  091D                     	;# 
  4918  091E                     	;# 
  4919  091F                     	;# 
  4920  0E0F                     	;# 
  4921  0E10                     	;# 
  4922  0E11                     	;# 
  4923  0E12                     	;# 
  4924  0E13                     	;# 
  4925  0E14                     	;# 
  4926  0E15                     	;# 
  4927  0E16                     	;# 
  4928  0E17                     	;# 
  4929  0E18                     	;# 
  4930  0E19                     	;# 
  4931  0E1A                     	;# 
  4932  0E1B                     	;# 
  4933  0E1C                     	;# 
  4934  0E1D                     	;# 
  4935  0E1E                     	;# 
  4936  0E1F                     	;# 
  4937  0E20                     	;# 
  4938  0E21                     	;# 
  4939  0E22                     	;# 
  4940  0E24                     	;# 
  4941  0E25                     	;# 
  4942  0E28                     	;# 
  4943  0E29                     	;# 
  4944  0E2A                     	;# 
  4945  0E2B                     	;# 
  4946  0E2C                     	;# 
  4947  0E2D                     	;# 
  4948  0E2E                     	;# 
  4949  0E2F                     	;# 
  4950  0E90                     	;# 
  4951  0E91                     	;# 
  4952  0E92                     	;# 
  4953  0E94                     	;# 
  4954  0E95                     	;# 
  4955  0E9C                     	;# 
  4956  0E9D                     	;# 
  4957  0E9E                     	;# 
  4958  0E9F                     	;# 
  4959  0EA0                     	;# 
  4960  0EA1                     	;# 
  4961  0EA2                     	;# 
  4962  0EA3                     	;# 
  4963  0EA4                     	;# 
  4964  0EA5                     	;# 
  4965  0EA6                     	;# 
  4966  0EA7                     	;# 
  4967  0F0F                     	;# 
  4968  0F10                     	;# 
  4969  0F11                     	;# 
  4970  0F12                     	;# 
  4971  0F13                     	;# 
  4972  0F14                     	;# 
  4973  0F15                     	;# 
  4974  0F16                     	;# 
  4975  0F17                     	;# 
  4976  0F18                     	;# 
  4977  0F19                     	;# 
  4978  0F1A                     	;# 
  4979  0F1B                     	;# 
  4980  0F1C                     	;# 
  4981  0F1D                     	;# 
  4982  0F1E                     	;# 
  4983  0F1F                     	;# 
  4984  0F20                     	;# 
  4985  0F21                     	;# 
  4986  0F22                     	;# 
  4987  0F23                     	;# 
  4988  0F24                     	;# 
  4989  0F25                     	;# 
  4990  0F26                     	;# 
  4991  0F27                     	;# 
  4992  0F28                     	;# 
  4993  0F29                     	;# 
  4994  0F2A                     	;# 
  4995  0F2B                     	;# 
  4996  0F2C                     	;# 
  4997  0F2D                     	;# 
  4998  0F2E                     	;# 
  4999  0F2F                     	;# 
  5000  0F30                     	;# 
  5001  0F31                     	;# 
  5002  0F32                     	;# 
  5003  0F33                     	;# 
  5004  0F34                     	;# 
  5005  0F35                     	;# 
  5006  0F36                     	;# 
  5007  0F37                     	;# 
  5008  0FE4                     	;# 
  5009  0FE5                     	;# 
  5010  0FE6                     	;# 
  5011  0FE7                     	;# 
  5012  0FE8                     	;# 
  5013  0FE9                     	;# 
  5014  0FEA                     	;# 
  5015  0FEB                     	;# 
  5016  0FED                     	;# 
  5017  0FEE                     	;# 
  5018  0FEF                     	;# 
  5019  0000                     	;# 
  5020  0001                     	;# 
  5021  0002                     	;# 
  5022  0003                     	;# 
  5023  0004                     	;# 
  5024  0005                     	;# 
  5025  0006                     	;# 
  5026  0007                     	;# 
  5027  0008                     	;# 
  5028  0009                     	;# 
  5029  000A                     	;# 
  5030  000B                     	;# 
  5031  000C                     	;# 
  5032  000D                     	;# 
  5033  000E                     	;# 
  5034  0010                     	;# 
  5035  0011                     	;# 
  5036  0012                     	;# 
  5037  0013                     	;# 
  5038  0014                     	;# 
  5039  0015                     	;# 
  5040  0015                     	;# 
  5041  0016                     	;# 
  5042  0016                     	;# 
  5043  0017                     	;# 
  5044  0018                     	;# 
  5045  0019                     	;# 
  5046  0019                     	;# 
  5047  001A                     	;# 
  5048  001B                     	;# 
  5049  001C                     	;# 
  5050  001D                     	;# 
  5051  001E                     	;# 
  5052  001F                     	;# 
  5053  008C                     	;# 
  5054  008D                     	;# 
  5055  008E                     	;# 
  5056  0090                     	;# 
  5057  0091                     	;# 
  5058  0092                     	;# 
  5059  0093                     	;# 
  5060  0094                     	;# 
  5061  0097                     	;# 
  5062  009B                     	;# 
  5063  009B                     	;# 
  5064  009C                     	;# 
  5065  009D                     	;# 
  5066  009E                     	;# 
  5067  009F                     	;# 
  5068  010C                     	;# 
  5069  010D                     	;# 
  5070  010E                     	;# 
  5071  0111                     	;# 
  5072  0112                     	;# 
  5073  0113                     	;# 
  5074  0114                     	;# 
  5075  0115                     	;# 
  5076  0116                     	;# 
  5077  0117                     	;# 
  5078  0118                     	;# 
  5079  0119                     	;# 
  5080  018C                     	;# 
  5081  018D                     	;# 
  5082  018E                     	;# 
  5083  0197                     	;# 
  5084  0199                     	;# 
  5085  0199                     	;# 
  5086  0199                     	;# 
  5087  019A                     	;# 
  5088  019A                     	;# 
  5089  019A                     	;# 
  5090  019B                     	;# 
  5091  019B                     	;# 
  5092  019B                     	;# 
  5093  019B                     	;# 
  5094  019B                     	;# 
  5095  019C                     	;# 
  5096  019C                     	;# 
  5097  019C                     	;# 
  5098  019D                     	;# 
  5099  019D                     	;# 
  5100  019D                     	;# 
  5101  019E                     	;# 
  5102  019E                     	;# 
  5103  019E                     	;# 
  5104  019F                     	;# 
  5105  019F                     	;# 
  5106  019F                     	;# 
  5107  019F                     	;# 
  5108  019F                     	;# 
  5109  020C                     	;# 
  5110  020D                     	;# 
  5111  020E                     	;# 
  5112  0211                     	;# 
  5113  0211                     	;# 
  5114  0212                     	;# 
  5115  0212                     	;# 
  5116  0213                     	;# 
  5117  0213                     	;# 
  5118  0214                     	;# 
  5119  0214                     	;# 
  5120  0215                     	;# 
  5121  0215                     	;# 
  5122  0215                     	;# 
  5123  0215                     	;# 
  5124  0216                     	;# 
  5125  0216                     	;# 
  5126  0217                     	;# 
  5127  0217                     	;# 
  5128  0219                     	;# 
  5129  021A                     	;# 
  5130  021B                     	;# 
  5131  021C                     	;# 
  5132  021D                     	;# 
  5133  021D                     	;# 
  5134  021E                     	;# 
  5135  021F                     	;# 
  5136  028C                     	;# 
  5137  028D                     	;# 
  5138  028E                     	;# 
  5139  0291                     	;# 
  5140  0291                     	;# 
  5141  0292                     	;# 
  5142  0293                     	;# 
  5143  0294                     	;# 
  5144  0295                     	;# 
  5145  0295                     	;# 
  5146  0296                     	;# 
  5147  0297                     	;# 
  5148  0298                     	;# 
  5149  029F                     	;# 
  5150  030C                     	;# 
  5151  030D                     	;# 
  5152  030E                     	;# 
  5153  0311                     	;# 
  5154  0311                     	;# 
  5155  0312                     	;# 
  5156  0313                     	;# 
  5157  0314                     	;# 
  5158  0315                     	;# 
  5159  0315                     	;# 
  5160  0316                     	;# 
  5161  0317                     	;# 
  5162  0318                     	;# 
  5163  038C                     	;# 
  5164  038D                     	;# 
  5165  038E                     	;# 
  5166  0391                     	;# 
  5167  0392                     	;# 
  5168  0393                     	;# 
  5169  0394                     	;# 
  5170  0395                     	;# 
  5171  0396                     	;# 
  5172  0397                     	;# 
  5173  0398                     	;# 
  5174  0399                     	;# 
  5175  039A                     	;# 
  5176  039C                     	;# 
  5177  039D                     	;# 
  5178  039E                     	;# 
  5179  039F                     	;# 
  5180  0411                     	;# 
  5181  0411                     	;# 
  5182  0412                     	;# 
  5183  0413                     	;# 
  5184  0414                     	;# 
  5185  0415                     	;# 
  5186  0416                     	;# 
  5187  0417                     	;# 
  5188  0418                     	;# 
  5189  0418                     	;# 
  5190  0419                     	;# 
  5191  041A                     	;# 
  5192  041B                     	;# 
  5193  041C                     	;# 
  5194  041D                     	;# 
  5195  041E                     	;# 
  5196  041F                     	;# 
  5197  0498                     	;# 
  5198  0498                     	;# 
  5199  0499                     	;# 
  5200  049A                     	;# 
  5201  049B                     	;# 
  5202  049B                     	;# 
  5203  049C                     	;# 
  5204  049D                     	;# 
  5205  049E                     	;# 
  5206  049F                     	;# 
  5207  0617                     	;# 
  5208  0618                     	;# 
  5209  0619                     	;# 
  5210  0619                     	;# 
  5211  061A                     	;# 
  5212  061B                     	;# 
  5213  061C                     	;# 
  5214  061C                     	;# 
  5215  061F                     	;# 
  5216  0691                     	;# 
  5217  0692                     	;# 
  5218  0693                     	;# 
  5219  0694                     	;# 
  5220  0695                     	;# 
  5221  0696                     	;# 
  5222  0697                     	;# 
  5223  0698                     	;# 
  5224  0699                     	;# 
  5225  0711                     	;# 
  5226  0712                     	;# 
  5227  0713                     	;# 
  5228  0714                     	;# 
  5229  0715                     	;# 
  5230  0716                     	;# 
  5231  0717                     	;# 
  5232  0718                     	;# 
  5233  0719                     	;# 
  5234  0891                     	;# 
  5235  0891                     	;# 
  5236  0891                     	;# 
  5237  0891                     	;# 
  5238  0891                     	;# 
  5239  0891                     	;# 
  5240  0892                     	;# 
  5241  0892                     	;# 
  5242  0892                     	;# 
  5243  0893                     	;# 
  5244  0893                     	;# 
  5245  0893                     	;# 
  5246  0893                     	;# 
  5247  0893                     	;# 
  5248  0893                     	;# 
  5249  0894                     	;# 
  5250  0894                     	;# 
  5251  0894                     	;# 
  5252  0895                     	;# 
  5253  0895                     	;# 
  5254  0895                     	;# 
  5255  0896                     	;# 
  5256  0896                     	;# 
  5257  0896                     	;# 
  5258  089B                     	;# 
  5259  0911                     	;# 
  5260  0912                     	;# 
  5261  0913                     	;# 
  5262  0914                     	;# 
  5263  0915                     	;# 
  5264  0916                     	;# 
  5265  0918                     	;# 
  5266  0919                     	;# 
  5267  091A                     	;# 
  5268  091B                     	;# 
  5269  091C                     	;# 
  5270  091D                     	;# 
  5271  091E                     	;# 
  5272  091F                     	;# 
  5273  0E0F                     	;# 
  5274  0E10                     	;# 
  5275  0E11                     	;# 
  5276  0E12                     	;# 
  5277  0E13                     	;# 
  5278  0E14                     	;# 
  5279  0E15                     	;# 
  5280  0E16                     	;# 
  5281  0E17                     	;# 
  5282  0E18                     	;# 
  5283  0E19                     	;# 
  5284  0E1A                     	;# 
  5285  0E1B                     	;# 
  5286  0E1C                     	;# 
  5287  0E1D                     	;# 
  5288  0E1E                     	;# 
  5289  0E1F                     	;# 
  5290  0E20                     	;# 
  5291  0E21                     	;# 
  5292  0E22                     	;# 
  5293  0E24                     	;# 
  5294  0E25                     	;# 
  5295  0E28                     	;# 
  5296  0E29                     	;# 
  5297  0E2A                     	;# 
  5298  0E2B                     	;# 
  5299  0E2C                     	;# 
  5300  0E2D                     	;# 
  5301  0E2E                     	;# 
  5302  0E2F                     	;# 
  5303  0E90                     	;# 
  5304  0E91                     	;# 
  5305  0E92                     	;# 
  5306  0E94                     	;# 
  5307  0E95                     	;# 
  5308  0E9C                     	;# 
  5309  0E9D                     	;# 
  5310  0E9E                     	;# 
  5311  0E9F                     	;# 
  5312  0EA0                     	;# 
  5313  0EA1                     	;# 
  5314  0EA2                     	;# 
  5315  0EA3                     	;# 
  5316  0EA4                     	;# 
  5317  0EA5                     	;# 
  5318  0EA6                     	;# 
  5319  0EA7                     	;# 
  5320  0F0F                     	;# 
  5321  0F10                     	;# 
  5322  0F11                     	;# 
  5323  0F12                     	;# 
  5324  0F13                     	;# 
  5325  0F14                     	;# 
  5326  0F15                     	;# 
  5327  0F16                     	;# 
  5328  0F17                     	;# 
  5329  0F18                     	;# 
  5330  0F19                     	;# 
  5331  0F1A                     	;# 
  5332  0F1B                     	;# 
  5333  0F1C                     	;# 
  5334  0F1D                     	;# 
  5335  0F1E                     	;# 
  5336  0F1F                     	;# 
  5337  0F20                     	;# 
  5338  0F21                     	;# 
  5339  0F22                     	;# 
  5340  0F23                     	;# 
  5341  0F24                     	;# 
  5342  0F25                     	;# 
  5343  0F26                     	;# 
  5344  0F27                     	;# 
  5345  0F28                     	;# 
  5346  0F29                     	;# 
  5347  0F2A                     	;# 
  5348  0F2B                     	;# 
  5349  0F2C                     	;# 
  5350  0F2D                     	;# 
  5351  0F2E                     	;# 
  5352  0F2F                     	;# 
  5353  0F30                     	;# 
  5354  0F31                     	;# 
  5355  0F32                     	;# 
  5356  0F33                     	;# 
  5357  0F34                     	;# 
  5358  0F35                     	;# 
  5359  0F36                     	;# 
  5360  0F37                     	;# 
  5361  0FE4                     	;# 
  5362  0FE5                     	;# 
  5363  0FE6                     	;# 
  5364  0FE7                     	;# 
  5365  0FE8                     	;# 
  5366  0FE9                     	;# 
  5367  0FEA                     	;# 
  5368  0FEB                     	;# 
  5369  0FED                     	;# 
  5370  0FEE                     	;# 
  5371  0FEF                     	;# 
  5372  0000                     	;# 
  5373  0001                     	;# 
  5374  0002                     	;# 
  5375  0003                     	;# 
  5376  0004                     	;# 
  5377  0005                     	;# 
  5378  0006                     	;# 
  5379  0007                     	;# 
  5380  0008                     	;# 
  5381  0009                     	;# 
  5382  000A                     	;# 
  5383  000B                     	;# 
  5384  000C                     	;# 
  5385  000D                     	;# 
  5386  000E                     	;# 
  5387  0010                     	;# 
  5388  0011                     	;# 
  5389  0012                     	;# 
  5390  0013                     	;# 
  5391  0014                     	;# 
  5392  0015                     	;# 
  5393  0015                     	;# 
  5394  0016                     	;# 
  5395  0016                     	;# 
  5396  0017                     	;# 
  5397  0018                     	;# 
  5398  0019                     	;# 
  5399  0019                     	;# 
  5400  001A                     	;# 
  5401  001B                     	;# 
  5402  001C                     	;# 
  5403  001D                     	;# 
  5404  001E                     	;# 
  5405  001F                     	;# 
  5406  008C                     	;# 
  5407  008D                     	;# 
  5408  008E                     	;# 
  5409  0090                     	;# 
  5410  0091                     	;# 
  5411  0092                     	;# 
  5412  0093                     	;# 
  5413  0094                     	;# 
  5414  0097                     	;# 
  5415  009B                     	;# 
  5416  009B                     	;# 
  5417  009C                     	;# 
  5418  009D                     	;# 
  5419  009E                     	;# 
  5420  009F                     	;# 
  5421  010C                     	;# 
  5422  010D                     	;# 
  5423  010E                     	;# 
  5424  0111                     	;# 
  5425  0112                     	;# 
  5426  0113                     	;# 
  5427  0114                     	;# 
  5428  0115                     	;# 
  5429  0116                     	;# 
  5430  0117                     	;# 
  5431  0118                     	;# 
  5432  0119                     	;# 
  5433  018C                     	;# 
  5434  018D                     	;# 
  5435  018E                     	;# 
  5436  0197                     	;# 
  5437  0199                     	;# 
  5438  0199                     	;# 
  5439  0199                     	;# 
  5440  019A                     	;# 
  5441  019A                     	;# 
  5442  019A                     	;# 
  5443  019B                     	;# 
  5444  019B                     	;# 
  5445  019B                     	;# 
  5446  019B                     	;# 
  5447  019B                     	;# 
  5448  019C                     	;# 
  5449  019C                     	;# 
  5450  019C                     	;# 
  5451  019D                     	;# 
  5452  019D                     	;# 
  5453  019D                     	;# 
  5454  019E                     	;# 
  5455  019E                     	;# 
  5456  019E                     	;# 
  5457  019F                     	;# 
  5458  019F                     	;# 
  5459  019F                     	;# 
  5460  019F                     	;# 
  5461  019F                     	;# 
  5462  020C                     	;# 
  5463  020D                     	;# 
  5464  020E                     	;# 
  5465  0211                     	;# 
  5466  0211                     	;# 
  5467  0212                     	;# 
  5468  0212                     	;# 
  5469  0213                     	;# 
  5470  0213                     	;# 
  5471  0214                     	;# 
  5472  0214                     	;# 
  5473  0215                     	;# 
  5474  0215                     	;# 
  5475  0215                     	;# 
  5476  0215                     	;# 
  5477  0216                     	;# 
  5478  0216                     	;# 
  5479  0217                     	;# 
  5480  0217                     	;# 
  5481  0219                     	;# 
  5482  021A                     	;# 
  5483  021B                     	;# 
  5484  021C                     	;# 
  5485  021D                     	;# 
  5486  021D                     	;# 
  5487  021E                     	;# 
  5488  021F                     	;# 
  5489  028C                     	;# 
  5490  028D                     	;# 
  5491  028E                     	;# 
  5492  0291                     	;# 
  5493  0291                     	;# 
  5494  0292                     	;# 
  5495  0293                     	;# 
  5496  0294                     	;# 
  5497  0295                     	;# 
  5498  0295                     	;# 
  5499  0296                     	;# 
  5500  0297                     	;# 
  5501  0298                     	;# 
  5502  029F                     	;# 
  5503  030C                     	;# 
  5504  030D                     	;# 
  5505  030E                     	;# 
  5506  0311                     	;# 
  5507  0311                     	;# 
  5508  0312                     	;# 
  5509  0313                     	;# 
  5510  0314                     	;# 
  5511  0315                     	;# 
  5512  0315                     	;# 
  5513  0316                     	;# 
  5514  0317                     	;# 
  5515  0318                     	;# 
  5516  038C                     	;# 
  5517  038D                     	;# 
  5518  038E                     	;# 
  5519  0391                     	;# 
  5520  0392                     	;# 
  5521  0393                     	;# 
  5522  0394                     	;# 
  5523  0395                     	;# 
  5524  0396                     	;# 
  5525  0397                     	;# 
  5526  0398                     	;# 
  5527  0399                     	;# 
  5528  039A                     	;# 
  5529  039C                     	;# 
  5530  039D                     	;# 
  5531  039E                     	;# 
  5532  039F                     	;# 
  5533  0411                     	;# 
  5534  0411                     	;# 
  5535  0412                     	;# 
  5536  0413                     	;# 
  5537  0414                     	;# 
  5538  0415                     	;# 
  5539  0416                     	;# 
  5540  0417                     	;# 
  5541  0418                     	;# 
  5542  0418                     	;# 
  5543  0419                     	;# 
  5544  041A                     	;# 
  5545  041B                     	;# 
  5546  041C                     	;# 
  5547  041D                     	;# 
  5548  041E                     	;# 
  5549  041F                     	;# 
  5550  0498                     	;# 
  5551  0498                     	;# 
  5552  0499                     	;# 
  5553  049A                     	;# 
  5554  049B                     	;# 
  5555  049B                     	;# 
  5556  049C                     	;# 
  5557  049D                     	;# 
  5558  049E                     	;# 
  5559  049F                     	;# 
  5560  0617                     	;# 
  5561  0618                     	;# 
  5562  0619                     	;# 
  5563  0619                     	;# 
  5564  061A                     	;# 
  5565  061B                     	;# 
  5566  061C                     	;# 
  5567  061C                     	;# 
  5568  061F                     	;# 
  5569  0691                     	;# 
  5570  0692                     	;# 
  5571  0693                     	;# 
  5572  0694                     	;# 
  5573  0695                     	;# 
  5574  0696                     	;# 
  5575  0697                     	;# 
  5576  0698                     	;# 
  5577  0699                     	;# 
  5578  0711                     	;# 
  5579  0712                     	;# 
  5580  0713                     	;# 
  5581  0714                     	;# 
  5582  0715                     	;# 
  5583  0716                     	;# 
  5584  0717                     	;# 
  5585  0718                     	;# 
  5586  0719                     	;# 
  5587  0891                     	;# 
  5588  0891                     	;# 
  5589  0891                     	;# 
  5590  0891                     	;# 
  5591  0891                     	;# 
  5592  0891                     	;# 
  5593  0892                     	;# 
  5594  0892                     	;# 
  5595  0892                     	;# 
  5596  0893                     	;# 
  5597  0893                     	;# 
  5598  0893                     	;# 
  5599  0893                     	;# 
  5600  0893                     	;# 
  5601  0893                     	;# 
  5602  0894                     	;# 
  5603  0894                     	;# 
  5604  0894                     	;# 
  5605  0895                     	;# 
  5606  0895                     	;# 
  5607  0895                     	;# 
  5608  0896                     	;# 
  5609  0896                     	;# 
  5610  0896                     	;# 
  5611  089B                     	;# 
  5612  0911                     	;# 
  5613  0912                     	;# 
  5614  0913                     	;# 
  5615  0914                     	;# 
  5616  0915                     	;# 
  5617  0916                     	;# 
  5618  0918                     	;# 
  5619  0919                     	;# 
  5620  091A                     	;# 
  5621  091B                     	;# 
  5622  091C                     	;# 
  5623  091D                     	;# 
  5624  091E                     	;# 
  5625  091F                     	;# 
  5626  0E0F                     	;# 
  5627  0E10                     	;# 
  5628  0E11                     	;# 
  5629  0E12                     	;# 
  5630  0E13                     	;# 
  5631  0E14                     	;# 
  5632  0E15                     	;# 
  5633  0E16                     	;# 
  5634  0E17                     	;# 
  5635  0E18                     	;# 
  5636  0E19                     	;# 
  5637  0E1A                     	;# 
  5638  0E1B                     	;# 
  5639  0E1C                     	;# 
  5640  0E1D                     	;# 
  5641  0E1E                     	;# 
  5642  0E1F                     	;# 
  5643  0E20                     	;# 
  5644  0E21                     	;# 
  5645  0E22                     	;# 
  5646  0E24                     	;# 
  5647  0E25                     	;# 
  5648  0E28                     	;# 
  5649  0E29                     	;# 
  5650  0E2A                     	;# 
  5651  0E2B                     	;# 
  5652  0E2C                     	;# 
  5653  0E2D                     	;# 
  5654  0E2E                     	;# 
  5655  0E2F                     	;# 
  5656  0E90                     	;# 
  5657  0E91                     	;# 
  5658  0E92                     	;# 
  5659  0E94                     	;# 
  5660  0E95                     	;# 
  5661  0E9C                     	;# 
  5662  0E9D                     	;# 
  5663  0E9E                     	;# 
  5664  0E9F                     	;# 
  5665  0EA0                     	;# 
  5666  0EA1                     	;# 
  5667  0EA2                     	;# 
  5668  0EA3                     	;# 
  5669  0EA4                     	;# 
  5670  0EA5                     	;# 
  5671  0EA6                     	;# 
  5672  0EA7                     	;# 
  5673  0F0F                     	;# 
  5674  0F10                     	;# 
  5675  0F11                     	;# 
  5676  0F12                     	;# 
  5677  0F13                     	;# 
  5678  0F14                     	;# 
  5679  0F15                     	;# 
  5680  0F16                     	;# 
  5681  0F17                     	;# 
  5682  0F18                     	;# 
  5683  0F19                     	;# 
  5684  0F1A                     	;# 
  5685  0F1B                     	;# 
  5686  0F1C                     	;# 
  5687  0F1D                     	;# 
  5688  0F1E                     	;# 
  5689  0F1F                     	;# 
  5690  0F20                     	;# 
  5691  0F21                     	;# 
  5692  0F22                     	;# 
  5693  0F23                     	;# 
  5694  0F24                     	;# 
  5695  0F25                     	;# 
  5696  0F26                     	;# 
  5697  0F27                     	;# 
  5698  0F28                     	;# 
  5699  0F29                     	;# 
  5700  0F2A                     	;# 
  5701  0F2B                     	;# 
  5702  0F2C                     	;# 
  5703  0F2D                     	;# 
  5704  0F2E                     	;# 
  5705  0F2F                     	;# 
  5706  0F30                     	;# 
  5707  0F31                     	;# 
  5708  0F32                     	;# 
  5709  0F33                     	;# 
  5710  0F34                     	;# 
  5711  0F35                     	;# 
  5712  0F36                     	;# 
  5713  0F37                     	;# 
  5714  0FE4                     	;# 
  5715  0FE5                     	;# 
  5716  0FE6                     	;# 
  5717  0FE7                     	;# 
  5718  0FE8                     	;# 
  5719  0FE9                     	;# 
  5720  0FEA                     	;# 
  5721  0FEB                     	;# 
  5722  0FED                     	;# 
  5723  0FEE                     	;# 
  5724  0FEF                     	;# 
  5725  0000                     	;# 
  5726  0001                     	;# 
  5727  0002                     	;# 
  5728  0003                     	;# 
  5729  0004                     	;# 
  5730  0005                     	;# 
  5731  0006                     	;# 
  5732  0007                     	;# 
  5733  0008                     	;# 
  5734  0009                     	;# 
  5735  000A                     	;# 
  5736  000B                     	;# 
  5737  000C                     	;# 
  5738  000D                     	;# 
  5739  000E                     	;# 
  5740  0010                     	;# 
  5741  0011                     	;# 
  5742  0012                     	;# 
  5743  0013                     	;# 
  5744  0014                     	;# 
  5745  0015                     	;# 
  5746  0015                     	;# 
  5747  0016                     	;# 
  5748  0016                     	;# 
  5749  0017                     	;# 
  5750  0018                     	;# 
  5751  0019                     	;# 
  5752  0019                     	;# 
  5753  001A                     	;# 
  5754  001B                     	;# 
  5755  001C                     	;# 
  5756  001D                     	;# 
  5757  001E                     	;# 
  5758  001F                     	;# 
  5759  008C                     	;# 
  5760  008D                     	;# 
  5761  008E                     	;# 
  5762  0090                     	;# 
  5763  0091                     	;# 
  5764  0092                     	;# 
  5765  0093                     	;# 
  5766  0094                     	;# 
  5767  0097                     	;# 
  5768  009B                     	;# 
  5769  009B                     	;# 
  5770  009C                     	;# 
  5771  009D                     	;# 
  5772  009E                     	;# 
  5773  009F                     	;# 
  5774  010C                     	;# 
  5775  010D                     	;# 
  5776  010E                     	;# 
  5777  0111                     	;# 
  5778  0112                     	;# 
  5779  0113                     	;# 
  5780  0114                     	;# 
  5781  0115                     	;# 
  5782  0116                     	;# 
  5783  0117                     	;# 
  5784  0118                     	;# 
  5785  0119                     	;# 
  5786  018C                     	;# 
  5787  018D                     	;# 
  5788  018E                     	;# 
  5789  0197                     	;# 
  5790  0199                     	;# 
  5791  0199                     	;# 
  5792  0199                     	;# 
  5793  019A                     	;# 
  5794  019A                     	;# 
  5795  019A                     	;# 
  5796  019B                     	;# 
  5797  019B                     	;# 
  5798  019B                     	;# 
  5799  019B                     	;# 
  5800  019B                     	;# 
  5801  019C                     	;# 
  5802  019C                     	;# 
  5803  019C                     	;# 
  5804  019D                     	;# 
  5805  019D                     	;# 
  5806  019D                     	;# 
  5807  019E                     	;# 
  5808  019E                     	;# 
  5809  019E                     	;# 
  5810  019F                     	;# 
  5811  019F                     	;# 
  5812  019F                     	;# 
  5813  019F                     	;# 
  5814  019F                     	;# 
  5815  020C                     	;# 
  5816  020D                     	;# 
  5817  020E                     	;# 
  5818  0211                     	;# 
  5819  0211                     	;# 
  5820  0212                     	;# 
  5821  0212                     	;# 
  5822  0213                     	;# 
  5823  0213                     	;# 
  5824  0214                     	;# 
  5825  0214                     	;# 
  5826  0215                     	;# 
  5827  0215                     	;# 
  5828  0215                     	;# 
  5829  0215                     	;# 
  5830  0216                     	;# 
  5831  0216                     	;# 
  5832  0217                     	;# 
  5833  0217                     	;# 
  5834  0219                     	;# 
  5835  021A                     	;# 
  5836  021B                     	;# 
  5837  021C                     	;# 
  5838  021D                     	;# 
  5839  021D                     	;# 
  5840  021E                     	;# 
  5841  021F                     	;# 
  5842  028C                     	;# 
  5843  028D                     	;# 
  5844  028E                     	;# 
  5845  0291                     	;# 
  5846  0291                     	;# 
  5847  0292                     	;# 
  5848  0293                     	;# 
  5849  0294                     	;# 
  5850  0295                     	;# 
  5851  0295                     	;# 
  5852  0296                     	;# 
  5853  0297                     	;# 
  5854  0298                     	;# 
  5855  029F                     	;# 
  5856  030C                     	;# 
  5857  030D                     	;# 
  5858  030E                     	;# 
  5859  0311                     	;# 
  5860  0311                     	;# 
  5861  0312                     	;# 
  5862  0313                     	;# 
  5863  0314                     	;# 
  5864  0315                     	;# 
  5865  0315                     	;# 
  5866  0316                     	;# 
  5867  0317                     	;# 
  5868  0318                     	;# 
  5869  038C                     	;# 
  5870  038D                     	;# 
  5871  038E                     	;# 
  5872  0391                     	;# 
  5873  0392                     	;# 
  5874  0393                     	;# 
  5875  0394                     	;# 
  5876  0395                     	;# 
  5877  0396                     	;# 
  5878  0397                     	;# 
  5879  0398                     	;# 
  5880  0399                     	;# 
  5881  039A                     	;# 
  5882  039C                     	;# 
  5883  039D                     	;# 
  5884  039E                     	;# 
  5885  039F                     	;# 
  5886  0411                     	;# 
  5887  0411                     	;# 
  5888  0412                     	;# 
  5889  0413                     	;# 
  5890  0414                     	;# 
  5891  0415                     	;# 
  5892  0416                     	;# 
  5893  0417                     	;# 
  5894  0418                     	;# 
  5895  0418                     	;# 
  5896  0419                     	;# 
  5897  041A                     	;# 
  5898  041B                     	;# 
  5899  041C                     	;# 
  5900  041D                     	;# 
  5901  041E                     	;# 
  5902  041F                     	;# 
  5903  0498                     	;# 
  5904  0498                     	;# 
  5905  0499                     	;# 
  5906  049A                     	;# 
  5907  049B                     	;# 
  5908  049B                     	;# 
  5909  049C                     	;# 
  5910  049D                     	;# 
  5911  049E                     	;# 
  5912  049F                     	;# 
  5913  0617                     	;# 
  5914  0618                     	;# 
  5915  0619                     	;# 
  5916  0619                     	;# 
  5917  061A                     	;# 
  5918  061B                     	;# 
  5919  061C                     	;# 
  5920  061C                     	;# 
  5921  061F                     	;# 
  5922  0691                     	;# 
  5923  0692                     	;# 
  5924  0693                     	;# 
  5925  0694                     	;# 
  5926  0695                     	;# 
  5927  0696                     	;# 
  5928  0697                     	;# 
  5929  0698                     	;# 
  5930  0699                     	;# 
  5931  0711                     	;# 
  5932  0712                     	;# 
  5933  0713                     	;# 
  5934  0714                     	;# 
  5935  0715                     	;# 
  5936  0716                     	;# 
  5937  0717                     	;# 
  5938  0718                     	;# 
  5939  0719                     	;# 
  5940  0891                     	;# 
  5941  0891                     	;# 
  5942  0891                     	;# 
  5943  0891                     	;# 
  5944  0891                     	;# 
  5945  0891                     	;# 
  5946  0892                     	;# 
  5947  0892                     	;# 
  5948  0892                     	;# 
  5949  0893                     	;# 
  5950  0893                     	;# 
  5951  0893                     	;# 
  5952  0893                     	;# 
  5953  0893                     	;# 
  5954  0893                     	;# 
  5955  0894                     	;# 
  5956  0894                     	;# 
  5957  0894                     	;# 
  5958  0895                     	;# 
  5959  0895                     	;# 
  5960  0895                     	;# 
  5961  0896                     	;# 
  5962  0896                     	;# 
  5963  0896                     	;# 
  5964  089B                     	;# 
  5965  0911                     	;# 
  5966  0912                     	;# 
  5967  0913                     	;# 
  5968  0914                     	;# 
  5969  0915                     	;# 
  5970  0916                     	;# 
  5971  0918                     	;# 
  5972  0919                     	;# 
  5973  091A                     	;# 
  5974  091B                     	;# 
  5975  091C                     	;# 
  5976  091D                     	;# 
  5977  091E                     	;# 
  5978  091F                     	;# 
  5979  0E0F                     	;# 
  5980  0E10                     	;# 
  5981  0E11                     	;# 
  5982  0E12                     	;# 
  5983  0E13                     	;# 
  5984  0E14                     	;# 
  5985  0E15                     	;# 
  5986  0E16                     	;# 
  5987  0E17                     	;# 
  5988  0E18                     	;# 
  5989  0E19                     	;# 
  5990  0E1A                     	;# 
  5991  0E1B                     	;# 
  5992  0E1C                     	;# 
  5993  0E1D                     	;# 
  5994  0E1E                     	;# 
  5995  0E1F                     	;# 
  5996  0E20                     	;# 
  5997  0E21                     	;# 
  5998  0E22                     	;# 
  5999  0E24                     	;# 
  6000  0E25                     	;# 
  6001  0E28                     	;# 
  6002  0E29                     	;# 
  6003  0E2A                     	;# 
  6004  0E2B                     	;# 
  6005  0E2C                     	;# 
  6006  0E2D                     	;# 
  6007  0E2E                     	;# 
  6008  0E2F                     	;# 
  6009  0E90                     	;# 
  6010  0E91                     	;# 
  6011  0E92                     	;# 
  6012  0E94                     	;# 
  6013  0E95                     	;# 
  6014  0E9C                     	;# 
  6015  0E9D                     	;# 
  6016  0E9E                     	;# 
  6017  0E9F                     	;# 
  6018  0EA0                     	;# 
  6019  0EA1                     	;# 
  6020  0EA2                     	;# 
  6021  0EA3                     	;# 
  6022  0EA4                     	;# 
  6023  0EA5                     	;# 
  6024  0EA6                     	;# 
  6025  0EA7                     	;# 
  6026  0F0F                     	;# 
  6027  0F10                     	;# 
  6028  0F11                     	;# 
  6029  0F12                     	;# 
  6030  0F13                     	;# 
  6031  0F14                     	;# 
  6032  0F15                     	;# 
  6033  0F16                     	;# 
  6034  0F17                     	;# 
  6035  0F18                     	;# 
  6036  0F19                     	;# 
  6037  0F1A                     	;# 
  6038  0F1B                     	;# 
  6039  0F1C                     	;# 
  6040  0F1D                     	;# 
  6041  0F1E                     	;# 
  6042  0F1F                     	;# 
  6043  0F20                     	;# 
  6044  0F21                     	;# 
  6045  0F22                     	;# 
  6046  0F23                     	;# 
  6047  0F24                     	;# 
  6048  0F25                     	;# 
  6049  0F26                     	;# 
  6050  0F27                     	;# 
  6051  0F28                     	;# 
  6052  0F29                     	;# 
  6053  0F2A                     	;# 
  6054  0F2B                     	;# 
  6055  0F2C                     	;# 
  6056  0F2D                     	;# 
  6057  0F2E                     	;# 
  6058  0F2F                     	;# 
  6059  0F30                     	;# 
  6060  0F31                     	;# 
  6061  0F32                     	;# 
  6062  0F33                     	;# 
  6063  0F34                     	;# 
  6064  0F35                     	;# 
  6065  0F36                     	;# 
  6066  0F37                     	;# 
  6067  0FE4                     	;# 
  6068  0FE5                     	;# 
  6069  0FE6                     	;# 
  6070  0FE7                     	;# 
  6071  0FE8                     	;# 
  6072  0FE9                     	;# 
  6073  0FEA                     	;# 
  6074  0FEB                     	;# 
  6075  0FED                     	;# 
  6076  0FEE                     	;# 
  6077  0FEF                     	;# 
  6078  0000                     	;# 
  6079  0001                     	;# 
  6080  0002                     	;# 
  6081  0003                     	;# 
  6082  0004                     	;# 
  6083  0005                     	;# 
  6084  0006                     	;# 
  6085  0007                     	;# 
  6086  0008                     	;# 
  6087  0009                     	;# 
  6088  000A                     	;# 
  6089  000B                     	;# 
  6090  000C                     	;# 
  6091  000D                     	;# 
  6092  000E                     	;# 
  6093  0010                     	;# 
  6094  0011                     	;# 
  6095  0012                     	;# 
  6096  0013                     	;# 
  6097  0014                     	;# 
  6098  0015                     	;# 
  6099  0015                     	;# 
  6100  0016                     	;# 
  6101  0016                     	;# 
  6102  0017                     	;# 
  6103  0018                     	;# 
  6104  0019                     	;# 
  6105  0019                     	;# 
  6106  001A                     	;# 
  6107  001B                     	;# 
  6108  001C                     	;# 
  6109  001D                     	;# 
  6110  001E                     	;# 
  6111  001F                     	;# 
  6112  008C                     	;# 
  6113  008D                     	;# 
  6114  008E                     	;# 
  6115  0090                     	;# 
  6116  0091                     	;# 
  6117  0092                     	;# 
  6118  0093                     	;# 
  6119  0094                     	;# 
  6120  0097                     	;# 
  6121  009B                     	;# 
  6122  009B                     	;# 
  6123  009C                     	;# 
  6124  009D                     	;# 
  6125  009E                     	;# 
  6126  009F                     	;# 
  6127  010C                     	;# 
  6128  010D                     	;# 
  6129  010E                     	;# 
  6130  0111                     	;# 
  6131  0112                     	;# 
  6132  0113                     	;# 
  6133  0114                     	;# 
  6134  0115                     	;# 
  6135  0116                     	;# 
  6136  0117                     	;# 
  6137  0118                     	;# 
  6138  0119                     	;# 
  6139  018C                     	;# 
  6140  018D                     	;# 
  6141  018E                     	;# 
  6142  0197                     	;# 
  6143  0199                     	;# 
  6144  0199                     	;# 
  6145  0199                     	;# 
  6146  019A                     	;# 
  6147  019A                     	;# 
  6148  019A                     	;# 
  6149  019B                     	;# 
  6150  019B                     	;# 
  6151  019B                     	;# 
  6152  019B                     	;# 
  6153  019B                     	;# 
  6154  019C                     	;# 
  6155  019C                     	;# 
  6156  019C                     	;# 
  6157  019D                     	;# 
  6158  019D                     	;# 
  6159  019D                     	;# 
  6160  019E                     	;# 
  6161  019E                     	;# 
  6162  019E                     	;# 
  6163  019F                     	;# 
  6164  019F                     	;# 
  6165  019F                     	;# 
  6166  019F                     	;# 
  6167  019F                     	;# 
  6168  020C                     	;# 
  6169  020D                     	;# 
  6170  020E                     	;# 
  6171  0211                     	;# 
  6172  0211                     	;# 
  6173  0212                     	;# 
  6174  0212                     	;# 
  6175  0213                     	;# 
  6176  0213                     	;# 
  6177  0214                     	;# 
  6178  0214                     	;# 
  6179  0215                     	;# 
  6180  0215                     	;# 
  6181  0215                     	;# 
  6182  0215                     	;# 
  6183  0216                     	;# 
  6184  0216                     	;# 
  6185  0217                     	;# 
  6186  0217                     	;# 
  6187  0219                     	;# 
  6188  021A                     	;# 
  6189  021B                     	;# 
  6190  021C                     	;# 
  6191  021D                     	;# 
  6192  021D                     	;# 
  6193  021E                     	;# 
  6194  021F                     	;# 
  6195  028C                     	;# 
  6196  028D                     	;# 
  6197  028E                     	;# 
  6198  0291                     	;# 
  6199  0291                     	;# 
  6200  0292                     	;# 
  6201  0293                     	;# 
  6202  0294                     	;# 
  6203  0295                     	;# 
  6204  0295                     	;# 
  6205  0296                     	;# 
  6206  0297                     	;# 
  6207  0298                     	;# 
  6208  029F                     	;# 
  6209  030C                     	;# 
  6210  030D                     	;# 
  6211  030E                     	;# 
  6212  0311                     	;# 
  6213  0311                     	;# 
  6214  0312                     	;# 
  6215  0313                     	;# 
  6216  0314                     	;# 
  6217  0315                     	;# 
  6218  0315                     	;# 
  6219  0316                     	;# 
  6220  0317                     	;# 
  6221  0318                     	;# 
  6222  038C                     	;# 
  6223  038D                     	;# 
  6224  038E                     	;# 
  6225  0391                     	;# 
  6226  0392                     	;# 
  6227  0393                     	;# 
  6228  0394                     	;# 
  6229  0395                     	;# 
  6230  0396                     	;# 
  6231  0397                     	;# 
  6232  0398                     	;# 
  6233  0399                     	;# 
  6234  039A                     	;# 
  6235  039C                     	;# 
  6236  039D                     	;# 
  6237  039E                     	;# 
  6238  039F                     	;# 
  6239  0411                     	;# 
  6240  0411                     	;# 
  6241  0412                     	;# 
  6242  0413                     	;# 
  6243  0414                     	;# 
  6244  0415                     	;# 
  6245  0416                     	;# 
  6246  0417                     	;# 
  6247  0418                     	;# 
  6248  0418                     	;# 
  6249  0419                     	;# 
  6250  041A                     	;# 
  6251  041B                     	;# 
  6252  041C                     	;# 
  6253  041D                     	;# 
  6254  041E                     	;# 
  6255  041F                     	;# 
  6256  0498                     	;# 
  6257  0498                     	;# 
  6258  0499                     	;# 
  6259  049A                     	;# 
  6260  049B                     	;# 
  6261  049B                     	;# 
  6262  049C                     	;# 
  6263  049D                     	;# 
  6264  049E                     	;# 
  6265  049F                     	;# 
  6266  0617                     	;# 
  6267  0618                     	;# 
  6268  0619                     	;# 
  6269  0619                     	;# 
  6270  061A                     	;# 
  6271  061B                     	;# 
  6272  061C                     	;# 
  6273  061C                     	;# 
  6274  061F                     	;# 
  6275  0691                     	;# 
  6276  0692                     	;# 
  6277  0693                     	;# 
  6278  0694                     	;# 
  6279  0695                     	;# 
  6280  0696                     	;# 
  6281  0697                     	;# 
  6282  0698                     	;# 
  6283  0699                     	;# 
  6284  0711                     	;# 
  6285  0712                     	;# 
  6286  0713                     	;# 
  6287  0714                     	;# 
  6288  0715                     	;# 
  6289  0716                     	;# 
  6290  0717                     	;# 
  6291  0718                     	;# 
  6292  0719                     	;# 
  6293  0891                     	;# 
  6294  0891                     	;# 
  6295  0891                     	;# 
  6296  0891                     	;# 
  6297  0891                     	;# 
  6298  0891                     	;# 
  6299  0892                     	;# 
  6300  0892                     	;# 
  6301  0892                     	;# 
  6302  0893                     	;# 
  6303  0893                     	;# 
  6304  0893                     	;# 
  6305  0893                     	;# 
  6306  0893                     	;# 
  6307  0893                     	;# 
  6308  0894                     	;# 
  6309  0894                     	;# 
  6310  0894                     	;# 
  6311  0895                     	;# 
  6312  0895                     	;# 
  6313  0895                     	;# 
  6314  0896                     	;# 
  6315  0896                     	;# 
  6316  0896                     	;# 
  6317  089B                     	;# 
  6318  0911                     	;# 
  6319  0912                     	;# 
  6320  0913                     	;# 
  6321  0914                     	;# 
  6322  0915                     	;# 
  6323  0916                     	;# 
  6324  0918                     	;# 
  6325  0919                     	;# 
  6326  091A                     	;# 
  6327  091B                     	;# 
  6328  091C                     	;# 
  6329  091D                     	;# 
  6330  091E                     	;# 
  6331  091F                     	;# 
  6332  0E0F                     	;# 
  6333  0E10                     	;# 
  6334  0E11                     	;# 
  6335  0E12                     	;# 
  6336  0E13                     	;# 
  6337  0E14                     	;# 
  6338  0E15                     	;# 
  6339  0E16                     	;# 
  6340  0E17                     	;# 
  6341  0E18                     	;# 
  6342  0E19                     	;# 
  6343  0E1A                     	;# 
  6344  0E1B                     	;# 
  6345  0E1C                     	;# 
  6346  0E1D                     	;# 
  6347  0E1E                     	;# 
  6348  0E1F                     	;# 
  6349  0E20                     	;# 
  6350  0E21                     	;# 
  6351  0E22                     	;# 
  6352  0E24                     	;# 
  6353  0E25                     	;# 
  6354  0E28                     	;# 
  6355  0E29                     	;# 
  6356  0E2A                     	;# 
  6357  0E2B                     	;# 
  6358  0E2C                     	;# 
  6359  0E2D                     	;# 
  6360  0E2E                     	;# 
  6361  0E2F                     	;# 
  6362  0E90                     	;# 
  6363  0E91                     	;# 
  6364  0E92                     	;# 
  6365  0E94                     	;# 
  6366  0E95                     	;# 
  6367  0E9C                     	;# 
  6368  0E9D                     	;# 
  6369  0E9E                     	;# 
  6370  0E9F                     	;# 
  6371  0EA0                     	;# 
  6372  0EA1                     	;# 
  6373  0EA2                     	;# 
  6374  0EA3                     	;# 
  6375  0EA4                     	;# 
  6376  0EA5                     	;# 
  6377  0EA6                     	;# 
  6378  0EA7                     	;# 
  6379  0F0F                     	;# 
  6380  0F10                     	;# 
  6381  0F11                     	;# 
  6382  0F12                     	;# 
  6383  0F13                     	;# 
  6384  0F14                     	;# 
  6385  0F15                     	;# 
  6386  0F16                     	;# 
  6387  0F17                     	;# 
  6388  0F18                     	;# 
  6389  0F19                     	;# 
  6390  0F1A                     	;# 
  6391  0F1B                     	;# 
  6392  0F1C                     	;# 
  6393  0F1D                     	;# 
  6394  0F1E                     	;# 
  6395  0F1F                     	;# 
  6396  0F20                     	;# 
  6397  0F21                     	;# 
  6398  0F22                     	;# 
  6399  0F23                     	;# 
  6400  0F24                     	;# 
  6401  0F25                     	;# 
  6402  0F26                     	;# 
  6403  0F27                     	;# 
  6404  0F28                     	;# 
  6405  0F29                     	;# 
  6406  0F2A                     	;# 
  6407  0F2B                     	;# 
  6408  0F2C                     	;# 
  6409  0F2D                     	;# 
  6410  0F2E                     	;# 
  6411  0F2F                     	;# 
  6412  0F30                     	;# 
  6413  0F31                     	;# 
  6414  0F32                     	;# 
  6415  0F33                     	;# 
  6416  0F34                     	;# 
  6417  0F35                     	;# 
  6418  0F36                     	;# 
  6419  0F37                     	;# 
  6420  0FE4                     	;# 
  6421  0FE5                     	;# 
  6422  0FE6                     	;# 
  6423  0FE7                     	;# 
  6424  0FE8                     	;# 
  6425  0FE9                     	;# 
  6426  0FEA                     	;# 
  6427  0FEB                     	;# 
  6428  0FED                     	;# 
  6429  0FEE                     	;# 
  6430  0FEF                     	;# 
  6431  0000                     	;# 
  6432  0001                     	;# 
  6433  0002                     	;# 
  6434  0003                     	;# 
  6435  0004                     	;# 
  6436  0005                     	;# 
  6437  0006                     	;# 
  6438  0007                     	;# 
  6439  0008                     	;# 
  6440  0009                     	;# 
  6441  000A                     	;# 
  6442  000B                     	;# 
  6443  000C                     	;# 
  6444  000D                     	;# 
  6445  000E                     	;# 
  6446  0010                     	;# 
  6447  0011                     	;# 
  6448  0012                     	;# 
  6449  0013                     	;# 
  6450  0014                     	;# 
  6451  0015                     	;# 
  6452  0015                     	;# 
  6453  0016                     	;# 
  6454  0016                     	;# 
  6455  0017                     	;# 
  6456  0018                     	;# 
  6457  0019                     	;# 
  6458  0019                     	;# 
  6459  001A                     	;# 
  6460  001B                     	;# 
  6461  001C                     	;# 
  6462  001D                     	;# 
  6463  001E                     	;# 
  6464  001F                     	;# 
  6465  008C                     	;# 
  6466  008D                     	;# 
  6467  008E                     	;# 
  6468  0090                     	;# 
  6469  0091                     	;# 
  6470  0092                     	;# 
  6471  0093                     	;# 
  6472  0094                     	;# 
  6473  0097                     	;# 
  6474  009B                     	;# 
  6475  009B                     	;# 
  6476  009C                     	;# 
  6477  009D                     	;# 
  6478  009E                     	;# 
  6479  009F                     	;# 
  6480  010C                     	;# 
  6481  010D                     	;# 
  6482  010E                     	;# 
  6483  0111                     	;# 
  6484  0112                     	;# 
  6485  0113                     	;# 
  6486  0114                     	;# 
  6487  0115                     	;# 
  6488  0116                     	;# 
  6489  0117                     	;# 
  6490  0118                     	;# 
  6491  0119                     	;# 
  6492  018C                     	;# 
  6493  018D                     	;# 
  6494  018E                     	;# 
  6495  0197                     	;# 
  6496  0199                     	;# 
  6497  0199                     	;# 
  6498  0199                     	;# 
  6499  019A                     	;# 
  6500  019A                     	;# 
  6501  019A                     	;# 
  6502  019B                     	;# 
  6503  019B                     	;# 
  6504  019B                     	;# 
  6505  019B                     	;# 
  6506  019B                     	;# 
  6507  019C                     	;# 
  6508  019C                     	;# 
  6509  019C                     	;# 
  6510  019D                     	;# 
  6511  019D                     	;# 
  6512  019D                     	;# 
  6513  019E                     	;# 
  6514  019E                     	;# 
  6515  019E                     	;# 
  6516  019F                     	;# 
  6517  019F                     	;# 
  6518  019F                     	;# 
  6519  019F                     	;# 
  6520  019F                     	;# 
  6521  020C                     	;# 
  6522  020D                     	;# 
  6523  020E                     	;# 
  6524  0211                     	;# 
  6525  0211                     	;# 
  6526  0212                     	;# 
  6527  0212                     	;# 
  6528  0213                     	;# 
  6529  0213                     	;# 
  6530  0214                     	;# 
  6531  0214                     	;# 
  6532  0215                     	;# 
  6533  0215                     	;# 
  6534  0215                     	;# 
  6535  0215                     	;# 
  6536  0216                     	;# 
  6537  0216                     	;# 
  6538  0217                     	;# 
  6539  0217                     	;# 
  6540  0219                     	;# 
  6541  021A                     	;# 
  6542  021B                     	;# 
  6543  021C                     	;# 
  6544  021D                     	;# 
  6545  021D                     	;# 
  6546  021E                     	;# 
  6547  021F                     	;# 
  6548  028C                     	;# 
  6549  028D                     	;# 
  6550  028E                     	;# 
  6551  0291                     	;# 
  6552  0291                     	;# 
  6553  0292                     	;# 
  6554  0293                     	;# 
  6555  0294                     	;# 
  6556  0295                     	;# 
  6557  0295                     	;# 
  6558  0296                     	;# 
  6559  0297                     	;# 
  6560  0298                     	;# 
  6561  029F                     	;# 
  6562  030C                     	;# 
  6563  030D                     	;# 
  6564  030E                     	;# 
  6565  0311                     	;# 
  6566  0311                     	;# 
  6567  0312                     	;# 
  6568  0313                     	;# 
  6569  0314                     	;# 
  6570  0315                     	;# 
  6571  0315                     	;# 
  6572  0316                     	;# 
  6573  0317                     	;# 
  6574  0318                     	;# 
  6575  038C                     	;# 
  6576  038D                     	;# 
  6577  038E                     	;# 
  6578  0391                     	;# 
  6579  0392                     	;# 
  6580  0393                     	;# 
  6581  0394                     	;# 
  6582  0395                     	;# 
  6583  0396                     	;# 
  6584  0397                     	;# 
  6585  0398                     	;# 
  6586  0399                     	;# 
  6587  039A                     	;# 
  6588  039C                     	;# 
  6589  039D                     	;# 
  6590  039E                     	;# 
  6591  039F                     	;# 
  6592  0411                     	;# 
  6593  0411                     	;# 
  6594  0412                     	;# 
  6595  0413                     	;# 
  6596  0414                     	;# 
  6597  0415                     	;# 
  6598  0416                     	;# 
  6599  0417                     	;# 
  6600  0418                     	;# 
  6601  0418                     	;# 
  6602  0419                     	;# 
  6603  041A                     	;# 
  6604  041B                     	;# 
  6605  041C                     	;# 
  6606  041D                     	;# 
  6607  041E                     	;# 
  6608  041F                     	;# 
  6609  0498                     	;# 
  6610  0498                     	;# 
  6611  0499                     	;# 
  6612  049A                     	;# 
  6613  049B                     	;# 
  6614  049B                     	;# 
  6615  049C                     	;# 
  6616  049D                     	;# 
  6617  049E                     	;# 
  6618  049F                     	;# 
  6619  0617                     	;# 
  6620  0618                     	;# 
  6621  0619                     	;# 
  6622  0619                     	;# 
  6623  061A                     	;# 
  6624  061B                     	;# 
  6625  061C                     	;# 
  6626  061C                     	;# 
  6627  061F                     	;# 
  6628  0691                     	;# 
  6629  0692                     	;# 
  6630  0693                     	;# 
  6631  0694                     	;# 
  6632  0695                     	;# 
  6633  0696                     	;# 
  6634  0697                     	;# 
  6635  0698                     	;# 
  6636  0699                     	;# 
  6637  0711                     	;# 
  6638  0712                     	;# 
  6639  0713                     	;# 
  6640  0714                     	;# 
  6641  0715                     	;# 
  6642  0716                     	;# 
  6643  0717                     	;# 
  6644  0718                     	;# 
  6645  0719                     	;# 
  6646  0891                     	;# 
  6647  0891                     	;# 
  6648  0891                     	;# 
  6649  0891                     	;# 
  6650  0891                     	;# 
  6651  0891                     	;# 
  6652  0892                     	;# 
  6653  0892                     	;# 
  6654  0892                     	;# 
  6655  0893                     	;# 
  6656  0893                     	;# 
  6657  0893                     	;# 
  6658  0893                     	;# 
  6659  0893                     	;# 
  6660  0893                     	;# 
  6661  0894                     	;# 
  6662  0894                     	;# 
  6663  0894                     	;# 
  6664  0895                     	;# 
  6665  0895                     	;# 
  6666  0895                     	;# 
  6667  0896                     	;# 
  6668  0896                     	;# 
  6669  0896                     	;# 
  6670  089B                     	;# 
  6671  0911                     	;# 
  6672  0912                     	;# 
  6673  0913                     	;# 
  6674  0914                     	;# 
  6675  0915                     	;# 
  6676  0916                     	;# 
  6677  0918                     	;# 
  6678  0919                     	;# 
  6679  091A                     	;# 
  6680  091B                     	;# 
  6681  091C                     	;# 
  6682  091D                     	;# 
  6683  091E                     	;# 
  6684  091F                     	;# 
  6685  0E0F                     	;# 
  6686  0E10                     	;# 
  6687  0E11                     	;# 
  6688  0E12                     	;# 
  6689  0E13                     	;# 
  6690  0E14                     	;# 
  6691  0E15                     	;# 
  6692  0E16                     	;# 
  6693  0E17                     	;# 
  6694  0E18                     	;# 
  6695  0E19                     	;# 
  6696  0E1A                     	;# 
  6697  0E1B                     	;# 
  6698  0E1C                     	;# 
  6699  0E1D                     	;# 
  6700  0E1E                     	;# 
  6701  0E1F                     	;# 
  6702  0E20                     	;# 
  6703  0E21                     	;# 
  6704  0E22                     	;# 
  6705  0E24                     	;# 
  6706  0E25                     	;# 
  6707  0E28                     	;# 
  6708  0E29                     	;# 
  6709  0E2A                     	;# 
  6710  0E2B                     	;# 
  6711  0E2C                     	;# 
  6712  0E2D                     	;# 
  6713  0E2E                     	;# 
  6714  0E2F                     	;# 
  6715  0E90                     	;# 
  6716  0E91                     	;# 
  6717  0E92                     	;# 
  6718  0E94                     	;# 
  6719  0E95                     	;# 
  6720  0E9C                     	;# 
  6721  0E9D                     	;# 
  6722  0E9E                     	;# 
  6723  0E9F                     	;# 
  6724  0EA0                     	;# 
  6725  0EA1                     	;# 
  6726  0EA2                     	;# 
  6727  0EA3                     	;# 
  6728  0EA4                     	;# 
  6729  0EA5                     	;# 
  6730  0EA6                     	;# 
  6731  0EA7                     	;# 
  6732  0F0F                     	;# 
  6733  0F10                     	;# 
  6734  0F11                     	;# 
  6735  0F12                     	;# 
  6736  0F13                     	;# 
  6737  0F14                     	;# 
  6738  0F15                     	;# 
  6739  0F16                     	;# 
  6740  0F17                     	;# 
  6741  0F18                     	;# 
  6742  0F19                     	;# 
  6743  0F1A                     	;# 
  6744  0F1B                     	;# 
  6745  0F1C                     	;# 
  6746  0F1D                     	;# 
  6747  0F1E                     	;# 
  6748  0F1F                     	;# 
  6749  0F20                     	;# 
  6750  0F21                     	;# 
  6751  0F22                     	;# 
  6752  0F23                     	;# 
  6753  0F24                     	;# 
  6754  0F25                     	;# 
  6755  0F26                     	;# 
  6756  0F27                     	;# 
  6757  0F28                     	;# 
  6758  0F29                     	;# 
  6759  0F2A                     	;# 
  6760  0F2B                     	;# 
  6761  0F2C                     	;# 
  6762  0F2D                     	;# 
  6763  0F2E                     	;# 
  6764  0F2F                     	;# 
  6765  0F30                     	;# 
  6766  0F31                     	;# 
  6767  0F32                     	;# 
  6768  0F33                     	;# 
  6769  0F34                     	;# 
  6770  0F35                     	;# 
  6771  0F36                     	;# 
  6772  0F37                     	;# 
  6773  0FE4                     	;# 
  6774  0FE5                     	;# 
  6775  0FE6                     	;# 
  6776  0FE7                     	;# 
  6777  0FE8                     	;# 
  6778  0FE9                     	;# 
  6779  0FEA                     	;# 
  6780  0FEB                     	;# 
  6781  0FED                     	;# 
  6782  0FEE                     	;# 
  6783  0FEF                     	;# 
  6784  0000                     	;# 
  6785  0001                     	;# 
  6786  0002                     	;# 
  6787  0003                     	;# 
  6788  0004                     	;# 
  6789  0005                     	;# 
  6790  0006                     	;# 
  6791  0007                     	;# 
  6792  0008                     	;# 
  6793  0009                     	;# 
  6794  000A                     	;# 
  6795  000B                     	;# 
  6796  000C                     	;# 
  6797  000D                     	;# 
  6798  000E                     	;# 
  6799  0010                     	;# 
  6800  0011                     	;# 
  6801  0012                     	;# 
  6802  0013                     	;# 
  6803  0014                     	;# 
  6804  0015                     	;# 
  6805  0015                     	;# 
  6806  0016                     	;# 
  6807  0016                     	;# 
  6808  0017                     	;# 
  6809  0018                     	;# 
  6810  0019                     	;# 
  6811  0019                     	;# 
  6812  001A                     	;# 
  6813  001B                     	;# 
  6814  001C                     	;# 
  6815  001D                     	;# 
  6816  001E                     	;# 
  6817  001F                     	;# 
  6818  008C                     	;# 
  6819  008D                     	;# 
  6820  008E                     	;# 
  6821  0090                     	;# 
  6822  0091                     	;# 
  6823  0092                     	;# 
  6824  0093                     	;# 
  6825  0094                     	;# 
  6826  0097                     	;# 
  6827  009B                     	;# 
  6828  009B                     	;# 
  6829  009C                     	;# 
  6830  009D                     	;# 
  6831  009E                     	;# 
  6832  009F                     	;# 
  6833  010C                     	;# 
  6834  010D                     	;# 
  6835  010E                     	;# 
  6836  0111                     	;# 
  6837  0112                     	;# 
  6838  0113                     	;# 
  6839  0114                     	;# 
  6840  0115                     	;# 
  6841  0116                     	;# 
  6842  0117                     	;# 
  6843  0118                     	;# 
  6844  0119                     	;# 
  6845  018C                     	;# 
  6846  018D                     	;# 
  6847  018E                     	;# 
  6848  0197                     	;# 
  6849  0199                     	;# 
  6850  0199                     	;# 
  6851  0199                     	;# 
  6852  019A                     	;# 
  6853  019A                     	;# 
  6854  019A                     	;# 
  6855  019B                     	;# 
  6856  019B                     	;# 
  6857  019B                     	;# 
  6858  019B                     	;# 
  6859  019B                     	;# 
  6860  019C                     	;# 
  6861  019C                     	;# 
  6862  019C                     	;# 
  6863  019D                     	;# 
  6864  019D                     	;# 
  6865  019D                     	;# 
  6866  019E                     	;# 
  6867  019E                     	;# 
  6868  019E                     	;# 
  6869  019F                     	;# 
  6870  019F                     	;# 
  6871  019F                     	;# 
  6872  019F                     	;# 
  6873  019F                     	;# 
  6874  020C                     	;# 
  6875  020D                     	;# 
  6876  020E                     	;# 
  6877  0211                     	;# 
  6878  0211                     	;# 
  6879  0212                     	;# 
  6880  0212                     	;# 
  6881  0213                     	;# 
  6882  0213                     	;# 
  6883  0214                     	;# 
  6884  0214                     	;# 
  6885  0215                     	;# 
  6886  0215                     	;# 
  6887  0215                     	;# 
  6888  0215                     	;# 
  6889  0216                     	;# 
  6890  0216                     	;# 
  6891  0217                     	;# 
  6892  0217                     	;# 
  6893  0219                     	;# 
  6894  021A                     	;# 
  6895  021B                     	;# 
  6896  021C                     	;# 
  6897  021D                     	;# 
  6898  021D                     	;# 
  6899  021E                     	;# 
  6900  021F                     	;# 
  6901  028C                     	;# 
  6902  028D                     	;# 
  6903  028E                     	;# 
  6904  0291                     	;# 
  6905  0291                     	;# 
  6906  0292                     	;# 
  6907  0293                     	;# 
  6908  0294                     	;# 
  6909  0295                     	;# 
  6910  0295                     	;# 
  6911  0296                     	;# 
  6912  0297                     	;# 
  6913  0298                     	;# 
  6914  029F                     	;# 
  6915  030C                     	;# 
  6916  030D                     	;# 
  6917  030E                     	;# 
  6918  0311                     	;# 
  6919  0311                     	;# 
  6920  0312                     	;# 
  6921  0313                     	;# 
  6922  0314                     	;# 
  6923  0315                     	;# 
  6924  0315                     	;# 
  6925  0316                     	;# 
  6926  0317                     	;# 
  6927  0318                     	;# 
  6928  038C                     	;# 
  6929  038D                     	;# 
  6930  038E                     	;# 
  6931  0391                     	;# 
  6932  0392                     	;# 
  6933  0393                     	;# 
  6934  0394                     	;# 
  6935  0395                     	;# 
  6936  0396                     	;# 
  6937  0397                     	;# 
  6938  0398                     	;# 
  6939  0399                     	;# 
  6940  039A                     	;# 
  6941  039C                     	;# 
  6942  039D                     	;# 
  6943  039E                     	;# 
  6944  039F                     	;# 
  6945  0411                     	;# 
  6946  0411                     	;# 
  6947  0412                     	;# 
  6948  0413                     	;# 
  6949  0414                     	;# 
  6950  0415                     	;# 
  6951  0416                     	;# 
  6952  0417                     	;# 
  6953  0418                     	;# 
  6954  0418                     	;# 
  6955  0419                     	;# 
  6956  041A                     	;# 
  6957  041B                     	;# 
  6958  041C                     	;# 
  6959  041D                     	;# 
  6960  041E                     	;# 
  6961  041F                     	;# 
  6962  0498                     	;# 
  6963  0498                     	;# 
  6964  0499                     	;# 
  6965  049A                     	;# 
  6966  049B                     	;# 
  6967  049B                     	;# 
  6968  049C                     	;# 
  6969  049D                     	;# 
  6970  049E                     	;# 
  6971  049F                     	;# 
  6972  0617                     	;# 
  6973  0618                     	;# 
  6974  0619                     	;# 
  6975  0619                     	;# 
  6976  061A                     	;# 
  6977  061B                     	;# 
  6978  061C                     	;# 
  6979  061C                     	;# 
  6980  061F                     	;# 
  6981  0691                     	;# 
  6982  0692                     	;# 
  6983  0693                     	;# 
  6984  0694                     	;# 
  6985  0695                     	;# 
  6986  0696                     	;# 
  6987  0697                     	;# 
  6988  0698                     	;# 
  6989  0699                     	;# 
  6990  0711                     	;# 
  6991  0712                     	;# 
  6992  0713                     	;# 
  6993  0714                     	;# 
  6994  0715                     	;# 
  6995  0716                     	;# 
  6996  0717                     	;# 
  6997  0718                     	;# 
  6998  0719                     	;# 
  6999  0891                     	;# 
  7000  0891                     	;# 
  7001  0891                     	;# 
  7002  0891                     	;# 
  7003  0891                     	;# 
  7004  0891                     	;# 
  7005  0892                     	;# 
  7006  0892                     	;# 
  7007  0892                     	;# 
  7008  0893                     	;# 
  7009  0893                     	;# 
  7010  0893                     	;# 
  7011  0893                     	;# 
  7012  0893                     	;# 
  7013  0893                     	;# 
  7014  0894                     	;# 
  7015  0894                     	;# 
  7016  0894                     	;# 
  7017  0895                     	;# 
  7018  0895                     	;# 
  7019  0895                     	;# 
  7020  0896                     	;# 
  7021  0896                     	;# 
  7022  0896                     	;# 
  7023  089B                     	;# 
  7024  0911                     	;# 
  7025  0912                     	;# 
  7026  0913                     	;# 
  7027  0914                     	;# 
  7028  0915                     	;# 
  7029  0916                     	;# 
  7030  0918                     	;# 
  7031  0919                     	;# 
  7032  091A                     	;# 
  7033  091B                     	;# 
  7034  091C                     	;# 
  7035  091D                     	;# 
  7036  091E                     	;# 
  7037  091F                     	;# 
  7038  0E0F                     	;# 
  7039  0E10                     	;# 
  7040  0E11                     	;# 
  7041  0E12                     	;# 
  7042  0E13                     	;# 
  7043  0E14                     	;# 
  7044  0E15                     	;# 
  7045  0E16                     	;# 
  7046  0E17                     	;# 
  7047  0E18                     	;# 
  7048  0E19                     	;# 
  7049  0E1A                     	;# 
  7050  0E1B                     	;# 
  7051  0E1C                     	;# 
  7052  0E1D                     	;# 
  7053  0E1E                     	;# 
  7054  0E1F                     	;# 
  7055  0E20                     	;# 
  7056  0E21                     	;# 
  7057  0E22                     	;# 
  7058  0E24                     	;# 
  7059  0E25                     	;# 
  7060  0E28                     	;# 
  7061  0E29                     	;# 
  7062  0E2A                     	;# 
  7063  0E2B                     	;# 
  7064  0E2C                     	;# 
  7065  0E2D                     	;# 
  7066  0E2E                     	;# 
  7067  0E2F                     	;# 
  7068  0E90                     	;# 
  7069  0E91                     	;# 
  7070  0E92                     	;# 
  7071  0E94                     	;# 
  7072  0E95                     	;# 
  7073  0E9C                     	;# 
  7074  0E9D                     	;# 
  7075  0E9E                     	;# 
  7076  0E9F                     	;# 
  7077  0EA0                     	;# 
  7078  0EA1                     	;# 
  7079  0EA2                     	;# 
  7080  0EA3                     	;# 
  7081  0EA4                     	;# 
  7082  0EA5                     	;# 
  7083  0EA6                     	;# 
  7084  0EA7                     	;# 
  7085  0F0F                     	;# 
  7086  0F10                     	;# 
  7087  0F11                     	;# 
  7088  0F12                     	;# 
  7089  0F13                     	;# 
  7090  0F14                     	;# 
  7091  0F15                     	;# 
  7092  0F16                     	;# 
  7093  0F17                     	;# 
  7094  0F18                     	;# 
  7095  0F19                     	;# 
  7096  0F1A                     	;# 
  7097  0F1B                     	;# 
  7098  0F1C                     	;# 
  7099  0F1D                     	;# 
  7100  0F1E                     	;# 
  7101  0F1F                     	;# 
  7102  0F20                     	;# 
  7103  0F21                     	;# 
  7104  0F22                     	;# 
  7105  0F23                     	;# 
  7106  0F24                     	;# 
  7107  0F25                     	;# 
  7108  0F26                     	;# 
  7109  0F27                     	;# 
  7110  0F28                     	;# 
  7111  0F29                     	;# 
  7112  0F2A                     	;# 
  7113  0F2B                     	;# 
  7114  0F2C                     	;# 
  7115  0F2D                     	;# 
  7116  0F2E                     	;# 
  7117  0F2F                     	;# 
  7118  0F30                     	;# 
  7119  0F31                     	;# 
  7120  0F32                     	;# 
  7121  0F33                     	;# 
  7122  0F34                     	;# 
  7123  0F35                     	;# 
  7124  0F36                     	;# 
  7125  0F37                     	;# 
  7126  0FE4                     	;# 
  7127  0FE5                     	;# 
  7128  0FE6                     	;# 
  7129  0FE7                     	;# 
  7130  0FE8                     	;# 
  7131  0FE9                     	;# 
  7132  0FEA                     	;# 
  7133  0FEB                     	;# 
  7134  0FED                     	;# 
  7135  0FEE                     	;# 
  7136  0FEF                     	;# 
  7137  0000                     	;# 
  7138  0001                     	;# 
  7139  0002                     	;# 
  7140  0003                     	;# 
  7141  0004                     	;# 
  7142  0005                     	;# 
  7143  0006                     	;# 
  7144  0007                     	;# 
  7145  0008                     	;# 
  7146  0009                     	;# 
  7147  000A                     	;# 
  7148  000B                     	;# 
  7149  000C                     	;# 
  7150  000D                     	;# 
  7151  000E                     	;# 
  7152  0010                     	;# 
  7153  0011                     	;# 
  7154  0012                     	;# 
  7155  0013                     	;# 
  7156  0014                     	;# 
  7157  0015                     	;# 
  7158  0015                     	;# 
  7159  0016                     	;# 
  7160  0016                     	;# 
  7161  0017                     	;# 
  7162  0018                     	;# 
  7163  0019                     	;# 
  7164  0019                     	;# 
  7165  001A                     	;# 
  7166  001B                     	;# 
  7167  001C                     	;# 
  7168  001D                     	;# 
  7169  001E                     	;# 
  7170  001F                     	;# 
  7171  008C                     	;# 
  7172  008D                     	;# 
  7173  008E                     	;# 
  7174  0090                     	;# 
  7175  0091                     	;# 
  7176  0092                     	;# 
  7177  0093                     	;# 
  7178  0094                     	;# 
  7179  0097                     	;# 
  7180  009B                     	;# 
  7181  009B                     	;# 
  7182  009C                     	;# 
  7183  009D                     	;# 
  7184  009E                     	;# 
  7185  009F                     	;# 
  7186  010C                     	;# 
  7187  010D                     	;# 
  7188  010E                     	;# 
  7189  0111                     	;# 
  7190  0112                     	;# 
  7191  0113                     	;# 
  7192  0114                     	;# 
  7193  0115                     	;# 
  7194  0116                     	;# 
  7195  0117                     	;# 
  7196  0118                     	;# 
  7197  0119                     	;# 
  7198  018C                     	;# 
  7199  018D                     	;# 
  7200  018E                     	;# 
  7201  0197                     	;# 
  7202  0199                     	;# 
  7203  0199                     	;# 
  7204  0199                     	;# 
  7205  019A                     	;# 
  7206  019A                     	;# 
  7207  019A                     	;# 
  7208  019B                     	;# 
  7209  019B                     	;# 
  7210  019B                     	;# 
  7211  019B                     	;# 
  7212  019B                     	;# 
  7213  019C                     	;# 
  7214  019C                     	;# 
  7215  019C                     	;# 
  7216  019D                     	;# 
  7217  019D                     	;# 
  7218  019D                     	;# 
  7219  019E                     	;# 
  7220  019E                     	;# 
  7221  019E                     	;# 
  7222  019F                     	;# 
  7223  019F                     	;# 
  7224  019F                     	;# 
  7225  019F                     	;# 
  7226  019F                     	;# 
  7227  020C                     	;# 
  7228  020D                     	;# 
  7229  020E                     	;# 
  7230  0211                     	;# 
  7231  0211                     	;# 
  7232  0212                     	;# 
  7233  0212                     	;# 
  7234  0213                     	;# 
  7235  0213                     	;# 
  7236  0214                     	;# 
  7237  0214                     	;# 
  7238  0215                     	;# 
  7239  0215                     	;# 
  7240  0215                     	;# 
  7241  0215                     	;# 
  7242  0216                     	;# 
  7243  0216                     	;# 
  7244  0217                     	;# 
  7245  0217                     	;# 
  7246  0219                     	;# 
  7247  021A                     	;# 
  7248  021B                     	;# 
  7249  021C                     	;# 
  7250  021D                     	;# 
  7251  021D                     	;# 
  7252  021E                     	;# 
  7253  021F                     	;# 
  7254  028C                     	;# 
  7255  028D                     	;# 
  7256  028E                     	;# 
  7257  0291                     	;# 
  7258  0291                     	;# 
  7259  0292                     	;# 
  7260  0293                     	;# 
  7261  0294                     	;# 
  7262  0295                     	;# 
  7263  0295                     	;# 
  7264  0296                     	;# 
  7265  0297                     	;# 
  7266  0298                     	;# 
  7267  029F                     	;# 
  7268  030C                     	;# 
  7269  030D                     	;# 
  7270  030E                     	;# 
  7271  0311                     	;# 
  7272  0311                     	;# 
  7273  0312                     	;# 
  7274  0313                     	;# 
  7275  0314                     	;# 
  7276  0315                     	;# 
  7277  0315                     	;# 
  7278  0316                     	;# 
  7279  0317                     	;# 
  7280  0318                     	;# 
  7281  038C                     	;# 
  7282  038D                     	;# 
  7283  038E                     	;# 
  7284  0391                     	;# 
  7285  0392                     	;# 
  7286  0393                     	;# 
  7287  0394                     	;# 
  7288  0395                     	;# 
  7289  0396                     	;# 
  7290  0397                     	;# 
  7291  0398                     	;# 
  7292  0399                     	;# 
  7293  039A                     	;# 
  7294  039C                     	;# 
  7295  039D                     	;# 
  7296  039E                     	;# 
  7297  039F                     	;# 
  7298  0411                     	;# 
  7299  0411                     	;# 
  7300  0412                     	;# 
  7301  0413                     	;# 
  7302  0414                     	;# 
  7303  0415                     	;# 
  7304  0416                     	;# 
  7305  0417                     	;# 
  7306  0418                     	;# 
  7307  0418                     	;# 
  7308  0419                     	;# 
  7309  041A                     	;# 
  7310  041B                     	;# 
  7311  041C                     	;# 
  7312  041D                     	;# 
  7313  041E                     	;# 
  7314  041F                     	;# 
  7315  0498                     	;# 
  7316  0498                     	;# 
  7317  0499                     	;# 
  7318  049A                     	;# 
  7319  049B                     	;# 
  7320  049B                     	;# 
  7321  049C                     	;# 
  7322  049D                     	;# 
  7323  049E                     	;# 
  7324  049F                     	;# 
  7325  0617                     	;# 
  7326  0618                     	;# 
  7327  0619                     	;# 
  7328  0619                     	;# 
  7329  061A                     	;# 
  7330  061B                     	;# 
  7331  061C                     	;# 
  7332  061C                     	;# 
  7333  061F                     	;# 
  7334  0691                     	;# 
  7335  0692                     	;# 
  7336  0693                     	;# 
  7337  0694                     	;# 
  7338  0695                     	;# 
  7339  0696                     	;# 
  7340  0697                     	;# 
  7341  0698                     	;# 
  7342  0699                     	;# 
  7343  0711                     	;# 
  7344  0712                     	;# 
  7345  0713                     	;# 
  7346  0714                     	;# 
  7347  0715                     	;# 
  7348  0716                     	;# 
  7349  0717                     	;# 
  7350  0718                     	;# 
  7351  0719                     	;# 
  7352  0891                     	;# 
  7353  0891                     	;# 
  7354  0891                     	;# 
  7355  0891                     	;# 
  7356  0891                     	;# 
  7357  0891                     	;# 
  7358  0892                     	;# 
  7359  0892                     	;# 
  7360  0892                     	;# 
  7361  0893                     	;# 
  7362  0893                     	;# 
  7363  0893                     	;# 
  7364  0893                     	;# 
  7365  0893                     	;# 
  7366  0893                     	;# 
  7367  0894                     	;# 
  7368  0894                     	;# 
  7369  0894                     	;# 
  7370  0895                     	;# 
  7371  0895                     	;# 
  7372  0895                     	;# 
  7373  0896                     	;# 
  7374  0896                     	;# 
  7375  0896                     	;# 
  7376  089B                     	;# 
  7377  0911                     	;# 
  7378  0912                     	;# 
  7379  0913                     	;# 
  7380  0914                     	;# 
  7381  0915                     	;# 
  7382  0916                     	;# 
  7383  0918                     	;# 
  7384  0919                     	;# 
  7385  091A                     	;# 
  7386  091B                     	;# 
  7387  091C                     	;# 
  7388  091D                     	;# 
  7389  091E                     	;# 
  7390  091F                     	;# 
  7391  0E0F                     	;# 
  7392  0E10                     	;# 
  7393  0E11                     	;# 
  7394  0E12                     	;# 
  7395  0E13                     	;# 
  7396  0E14                     	;# 
  7397  0E15                     	;# 
  7398  0E16                     	;# 
  7399  0E17                     	;# 
  7400  0E18                     	;# 
  7401  0E19                     	;# 
  7402  0E1A                     	;# 
  7403  0E1B                     	;# 
  7404  0E1C                     	;# 
  7405  0E1D                     	;# 
  7406  0E1E                     	;# 
  7407  0E1F                     	;# 
  7408  0E20                     	;# 
  7409  0E21                     	;# 
  7410  0E22                     	;# 
  7411  0E24                     	;# 
  7412  0E25                     	;# 
  7413  0E28                     	;# 
  7414  0E29                     	;# 
  7415  0E2A                     	;# 
  7416  0E2B                     	;# 
  7417  0E2C                     	;# 
  7418  0E2D                     	;# 
  7419  0E2E                     	;# 
  7420  0E2F                     	;# 
  7421  0E90                     	;# 
  7422  0E91                     	;# 
  7423  0E92                     	;# 
  7424  0E94                     	;# 
  7425  0E95                     	;# 
  7426  0E9C                     	;# 
  7427  0E9D                     	;# 
  7428  0E9E                     	;# 
  7429  0E9F                     	;# 
  7430  0EA0                     	;# 
  7431  0EA1                     	;# 
  7432  0EA2                     	;# 
  7433  0EA3                     	;# 
  7434  0EA4                     	;# 
  7435  0EA5                     	;# 
  7436  0EA6                     	;# 
  7437  0EA7                     	;# 
  7438  0F0F                     	;# 
  7439  0F10                     	;# 
  7440  0F11                     	;# 
  7441  0F12                     	;# 
  7442  0F13                     	;# 
  7443  0F14                     	;# 
  7444  0F15                     	;# 
  7445  0F16                     	;# 
  7446  0F17                     	;# 
  7447  0F18                     	;# 
  7448  0F19                     	;# 
  7449  0F1A                     	;# 
  7450  0F1B                     	;# 
  7451  0F1C                     	;# 
  7452  0F1D                     	;# 
  7453  0F1E                     	;# 
  7454  0F1F                     	;# 
  7455  0F20                     	;# 
  7456  0F21                     	;# 
  7457  0F22                     	;# 
  7458  0F23                     	;# 
  7459  0F24                     	;# 
  7460  0F25                     	;# 
  7461  0F26                     	;# 
  7462  0F27                     	;# 
  7463  0F28                     	;# 
  7464  0F29                     	;# 
  7465  0F2A                     	;# 
  7466  0F2B                     	;# 
  7467  0F2C                     	;# 
  7468  0F2D                     	;# 
  7469  0F2E                     	;# 
  7470  0F2F                     	;# 
  7471  0F30                     	;# 
  7472  0F31                     	;# 
  7473  0F32                     	;# 
  7474  0F33                     	;# 
  7475  0F34                     	;# 
  7476  0F35                     	;# 
  7477  0F36                     	;# 
  7478  0F37                     	;# 
  7479  0FE4                     	;# 
  7480  0FE5                     	;# 
  7481  0FE6                     	;# 
  7482  0FE7                     	;# 
  7483  0FE8                     	;# 
  7484  0FE9                     	;# 
  7485  0FEA                     	;# 
  7486  0FEB                     	;# 
  7487  0FED                     	;# 
  7488  0FEE                     	;# 
  7489  0FEF                     	;# 
  7490                           
  7491                           	psect	idataBANK0
  7492  0000                     __pidataBANK0:	
  7493                           
  7494                           	psect	stringtext1
  7495  042B                     __pstringtext1:	
  7496  042B                     _gamma_table:	
  7497  042B  34F5               	retlw	245
  7498  042C  3403               	retlw	3
  7499  042D  34EB               	retlw	235
  7500  042E  3403               	retlw	3
  7501  042F  34E0               	retlw	224
  7502  0430  3403               	retlw	3
  7503  0431  34D6               	retlw	214
  7504  0432  3403               	retlw	3
  7505  0433  34CC               	retlw	204
  7506  0434  3403               	retlw	3
  7507  0435  34C2               	retlw	194
  7508  0436  3403               	retlw	3
  7509  0437  34B7               	retlw	183
  7510  0438  3403               	retlw	3
  7511  0439  34AD               	retlw	173
  7512  043A  3403               	retlw	3
  7513  043B  34A3               	retlw	163
  7514  043C  3403               	retlw	3
  7515  043D  3499               	retlw	153
  7516  043E  3403               	retlw	3
  7517  043F  348E               	retlw	142
  7518  0440  3403               	retlw	3
  7519  0441  3484               	retlw	132
  7520  0442  3403               	retlw	3
  7521  0443  347A               	retlw	122
  7522  0444  3403               	retlw	3
  7523  0445  3470               	retlw	112
  7524  0446  3403               	retlw	3
  7525  0447  3466               	retlw	102
  7526  0448  3403               	retlw	3
  7527  0449  345B               	retlw	91
  7528  044A  3403               	retlw	3
  7529  044B  3451               	retlw	81
  7530  044C  3403               	retlw	3
  7531  044D  3447               	retlw	71
  7532  044E  3403               	retlw	3
  7533  044F  343D               	retlw	61
  7534  0450  3403               	retlw	3
  7535  0451  3432               	retlw	50
  7536  0452  3403               	retlw	3
  7537  0453  3428               	retlw	40
  7538  0454  3403               	retlw	3
  7539  0455  341E               	retlw	30
  7540  0456  3403               	retlw	3
  7541  0457  3414               	retlw	20
  7542  0458  3403               	retlw	3
  7543  0459  3409               	retlw	9
  7544  045A  3403               	retlw	3
  7545  045B  34FF               	retlw	255
  7546  045C  3402               	retlw	2
  7547  045D  34F5               	retlw	245
  7548  045E  3402               	retlw	2
  7549  045F  34EB               	retlw	235
  7550  0460  3402               	retlw	2
  7551  0461  34E1               	retlw	225
  7552  0462  3402               	retlw	2
  7553  0463  34D6               	retlw	214
  7554  0464  3402               	retlw	2
  7555  0465  34CC               	retlw	204
  7556  0466  3402               	retlw	2
  7557  0467  34C2               	retlw	194
  7558  0468  3402               	retlw	2
  7559  0469  34B8               	retlw	184
  7560  046A  3402               	retlw	2
  7561  046B  34AD               	retlw	173
  7562  046C  3402               	retlw	2
  7563  046D  34A3               	retlw	163
  7564  046E  3402               	retlw	2
  7565  046F  3499               	retlw	153
  7566  0470  3402               	retlw	2
  7567  0471  348F               	retlw	143
  7568  0472  3402               	retlw	2
  7569  0473  3484               	retlw	132
  7570  0474  3402               	retlw	2
  7571  0475  347A               	retlw	122
  7572  0476  3402               	retlw	2
  7573  0477  3470               	retlw	112
  7574  0478  3402               	retlw	2
  7575  0479  3466               	retlw	102
  7576  047A  3402               	retlw	2
  7577  047B  345C               	retlw	92
  7578  047C  3402               	retlw	2
  7579  047D  3451               	retlw	81
  7580  047E  3402               	retlw	2
  7581  047F  3447               	retlw	71
  7582  0480  3402               	retlw	2
  7583  0481  343D               	retlw	61
  7584  0482  3402               	retlw	2
  7585  0483  3433               	retlw	51
  7586  0484  3402               	retlw	2
  7587  0485  3428               	retlw	40
  7588  0486  3402               	retlw	2
  7589  0487  341E               	retlw	30
  7590  0488  3402               	retlw	2
  7591  0489  3414               	retlw	20
  7592  048A  3402               	retlw	2
  7593  048B  340A               	retlw	10
  7594  048C  3402               	retlw	2
  7595  048D  34FF               	retlw	255
  7596  048E  3401               	retlw	1
  7597  048F  34F5               	retlw	245
  7598  0490  3401               	retlw	1
  7599  0491  34EB               	retlw	235
  7600  0492  3401               	retlw	1
  7601  0493  34E1               	retlw	225
  7602  0494  3401               	retlw	1
  7603  0495  34D7               	retlw	215
  7604  0496  3401               	retlw	1
  7605  0497  34CC               	retlw	204
  7606  0498  3401               	retlw	1
  7607  0499  34C2               	retlw	194
  7608  049A  3401               	retlw	1
  7609  049B  34B8               	retlw	184
  7610  049C  3401               	retlw	1
  7611  049D  34AE               	retlw	174
  7612  049E  3401               	retlw	1
  7613  049F  34A3               	retlw	163
  7614  04A0  3401               	retlw	1
  7615  04A1  3499               	retlw	153
  7616  04A2  3401               	retlw	1
  7617  04A3  348F               	retlw	143
  7618  04A4  3401               	retlw	1
  7619  04A5  3485               	retlw	133
  7620  04A6  3401               	retlw	1
  7621  04A7  347B               	retlw	123
  7622  04A8  3401               	retlw	1
  7623  04A9  3470               	retlw	112
  7624  04AA  3401               	retlw	1
  7625  04AB  3466               	retlw	102
  7626  04AC  3401               	retlw	1
  7627  04AD  345C               	retlw	92
  7628  04AE  3401               	retlw	1
  7629  04AF  3452               	retlw	82
  7630  04B0  3401               	retlw	1
  7631  04B1  3447               	retlw	71
  7632  04B2  3401               	retlw	1
  7633  04B3  343D               	retlw	61
  7634  04B4  3401               	retlw	1
  7635  04B5  3433               	retlw	51
  7636  04B6  3401               	retlw	1
  7637  04B7  3429               	retlw	41
  7638  04B8  3401               	retlw	1
  7639  04B9  341E               	retlw	30
  7640  04BA  3401               	retlw	1
  7641  04BB  3414               	retlw	20
  7642  04BC  3401               	retlw	1
  7643  04BD  340A               	retlw	10
  7644  04BE  3401               	retlw	1
  7645  04BF  3400               	retlw	0
  7646  04C0  3401               	retlw	1
  7647  04C1  34F6               	retlw	246
  7648  04C2  3400               	retlw	0
  7649  04C3  34EB               	retlw	235
  7650  04C4  3400               	retlw	0
  7651  04C5  34E1               	retlw	225
  7652  04C6  3400               	retlw	0
  7653  04C7  34D7               	retlw	215
  7654  04C8  3400               	retlw	0
  7655  04C9  34CD               	retlw	205
  7656  04CA  3400               	retlw	0
  7657  04CB  34C2               	retlw	194
  7658  04CC  3400               	retlw	0
  7659  04CD  34B8               	retlw	184
  7660  04CE  3400               	retlw	0
  7661  04CF  34AE               	retlw	174
  7662  04D0  3400               	retlw	0
  7663  04D1  34A4               	retlw	164
  7664  04D2  3400               	retlw	0
  7665  04D3  3499               	retlw	153
  7666  04D4  3400               	retlw	0
  7667  04D5  348F               	retlw	143
  7668  04D6  3400               	retlw	0
  7669  04D7  3485               	retlw	133
  7670  04D8  3400               	retlw	0
  7671  04D9  347B               	retlw	123
  7672  04DA  3400               	retlw	0
  7673  04DB  3471               	retlw	113
  7674  04DC  3400               	retlw	0
  7675  04DD  3466               	retlw	102
  7676  04DE  3400               	retlw	0
  7677  04DF  345C               	retlw	92
  7678  04E0  3400               	retlw	0
  7679  04E1  3452               	retlw	82
  7680  04E2  3400               	retlw	0
  7681  04E3  3448               	retlw	72
  7682  04E4  3400               	retlw	0
  7683  04E5  343D               	retlw	61
  7684  04E6  3400               	retlw	0
  7685  04E7  3433               	retlw	51
  7686  04E8  3400               	retlw	0
  7687  04E9  3429               	retlw	41
  7688  04EA  3400               	retlw	0
  7689  04EB  341F               	retlw	31
  7690  04EC  3400               	retlw	0
  7691  04ED  3414               	retlw	20
  7692  04EE  3400               	retlw	0
  7693  04EF  340A               	retlw	10
  7694  04F0  3400               	retlw	0
  7695  04F1  3400               	retlw	0
  7696  04F2  3400               	retlw	0
  7697  04F3  34FF               	retlw	255
  7698  04F4  3403               	retlw	3
  7699  04F5  34FE               	retlw	254
  7700  04F6  3403               	retlw	3
  7701  04F7  34FD               	retlw	253
  7702  04F8  3403               	retlw	3
  7703  04F9  34FC               	retlw	252
  7704  04FA  3403               	retlw	3
  7705  04FB  34FA               	retlw	250
  7706  04FC  3403               	retlw	3
  7707  04FD  34F9               	retlw	249
  7708  04FE  3403               	retlw	3
  7709  04FF  34F6               	retlw	246
  7710  0500  3403               	retlw	3
  7711  0501  34F4               	retlw	244
  7712  0502  3403               	retlw	3
  7713  0503  34F2               	retlw	242
  7714  0504  3403               	retlw	3
  7715  0505  34EF               	retlw	239
  7716  0506  3403               	retlw	3
  7717  0507  34EC               	retlw	236
  7718  0508  3403               	retlw	3
  7719  0509  34E8               	retlw	232
  7720  050A  3403               	retlw	3
  7721  050B  34E5               	retlw	229
  7722  050C  3403               	retlw	3
  7723  050D  34E1               	retlw	225
  7724  050E  3403               	retlw	3
  7725  050F  34DD               	retlw	221
  7726  0510  3403               	retlw	3
  7727  0511  34D9               	retlw	217
  7728  0512  3403               	retlw	3
  7729  0513  34D5               	retlw	213
  7730  0514  3403               	retlw	3
  7731  0515  34D0               	retlw	208
  7732  0516  3403               	retlw	3
  7733  0517  34CC               	retlw	204
  7734  0518  3403               	retlw	3
  7735  0519  34C7               	retlw	199
  7736  051A  3403               	retlw	3
  7737  051B  34C1               	retlw	193
  7738  051C  3403               	retlw	3
  7739  051D  34BC               	retlw	188
  7740  051E  3403               	retlw	3
  7741  051F  34B6               	retlw	182
  7742  0520  3403               	retlw	3
  7743  0521  34B1               	retlw	177
  7744  0522  3403               	retlw	3
  7745  0523  34AB               	retlw	171
  7746  0524  3403               	retlw	3
  7747  0525  34A4               	retlw	164
  7748  0526  3403               	retlw	3
  7749  0527  349E               	retlw	158
  7750  0528  3403               	retlw	3
  7751  0529  3498               	retlw	152
  7752  052A  3403               	retlw	3
  7753  052B  3491               	retlw	145
  7754  052C  3403               	retlw	3
  7755  052D  348A               	retlw	138
  7756  052E  3403               	retlw	3
  7757  052F  3483               	retlw	131
  7758  0530  3403               	retlw	3
  7759  0531  347B               	retlw	123
  7760  0532  3403               	retlw	3
  7761  0533  3474               	retlw	116
  7762  0534  3403               	retlw	3
  7763  0535  346C               	retlw	108
  7764  0536  3403               	retlw	3
  7765  0537  3464               	retlw	100
  7766  0538  3403               	retlw	3
  7767  0539  345C               	retlw	92
  7768  053A  3403               	retlw	3
  7769  053B  3454               	retlw	84
  7770  053C  3403               	retlw	3
  7771  053D  344C               	retlw	76
  7772  053E  3403               	retlw	3
  7773  053F  3443               	retlw	67
  7774  0540  3403               	retlw	3
  7775  0541  343A               	retlw	58
  7776  0542  3403               	retlw	3
  7777  0543  3431               	retlw	49
  7778  0544  3403               	retlw	3
  7779  0545  3428               	retlw	40
  7780  0546  3403               	retlw	3
  7781  0547  341F               	retlw	31
  7782  0548  3403               	retlw	3
  7783  0549  3416               	retlw	22
  7784  054A  3403               	retlw	3
  7785  054B  340C               	retlw	12
  7786  054C  3403               	retlw	3
  7787  054D  3402               	retlw	2
  7788  054E  3403               	retlw	3
  7789  054F  34F8               	retlw	248
  7790  0550  3402               	retlw	2
  7791  0551  34EE               	retlw	238
  7792  0552  3402               	retlw	2
  7793  0553  34E4               	retlw	228
  7794  0554  3402               	retlw	2
  7795  0555  34D9               	retlw	217
  7796  0556  3402               	retlw	2
  7797  0557  34CF               	retlw	207
  7798  0558  3402               	retlw	2
  7799  0559  34C4               	retlw	196
  7800  055A  3402               	retlw	2
  7801  055B  34B9               	retlw	185
  7802  055C  3402               	retlw	2
  7803  055D  34AE               	retlw	174
  7804  055E  3402               	retlw	2
  7805  055F  34A2               	retlw	162
  7806  0560  3402               	retlw	2
  7807  0561  3497               	retlw	151
  7808  0562  3402               	retlw	2
  7809  0563  348B               	retlw	139
  7810  0564  3402               	retlw	2
  7811  0565  347F               	retlw	127
  7812  0566  3402               	retlw	2
  7813  0567  3473               	retlw	115
  7814  0568  3402               	retlw	2
  7815  0569  3467               	retlw	103
  7816  056A  3402               	retlw	2
  7817  056B  345B               	retlw	91
  7818  056C  3402               	retlw	2
  7819  056D  344E               	retlw	78
  7820  056E  3402               	retlw	2
  7821  056F  3442               	retlw	66
  7822  0570  3402               	retlw	2
  7823  0571  3435               	retlw	53
  7824  0572  3402               	retlw	2
  7825  0573  3428               	retlw	40
  7826  0574  3402               	retlw	2
  7827  0575  341B               	retlw	27
  7828  0576  3402               	retlw	2
  7829  0577  340D               	retlw	13
  7830  0578  3402               	retlw	2
  7831  0579  3400               	retlw	0
  7832  057A  3402               	retlw	2
  7833  057B  34F2               	retlw	242
  7834  057C  3401               	retlw	1
  7835  057D  34E5               	retlw	229
  7836  057E  3401               	retlw	1
  7837  057F  34D7               	retlw	215
  7838  0580  3401               	retlw	1
  7839  0581  34C9               	retlw	201
  7840  0582  3401               	retlw	1
  7841  0583  34BA               	retlw	186
  7842  0584  3401               	retlw	1
  7843  0585  34AC               	retlw	172
  7844  0586  3401               	retlw	1
  7845  0587  349D               	retlw	157
  7846  0588  3401               	retlw	1
  7847  0589  348F               	retlw	143
  7848  058A  3401               	retlw	1
  7849  058B  3480               	retlw	128
  7850  058C  3401               	retlw	1
  7851  058D  3471               	retlw	113
  7852  058E  3401               	retlw	1
  7853  058F  3462               	retlw	98
  7854  0590  3401               	retlw	1
  7855  0591  3452               	retlw	82
  7856  0592  3401               	retlw	1
  7857  0593  3443               	retlw	67
  7858  0594  3401               	retlw	1
  7859  0595  3433               	retlw	51
  7860  0596  3401               	retlw	1
  7861  0597  3423               	retlw	35
  7862  0598  3401               	retlw	1
  7863  0599  3414               	retlw	20
  7864  059A  3401               	retlw	1
  7865  059B  3403               	retlw	3
  7866  059C  3401               	retlw	1
  7867  059D  34F3               	retlw	243
  7868  059E  3400               	retlw	0
  7869  059F  34E3               	retlw	227
  7870  05A0  3400               	retlw	0
  7871  05A1  34D2               	retlw	210
  7872  05A2  3400               	retlw	0
  7873  05A3  34C2               	retlw	194
  7874  05A4  3400               	retlw	0
  7875  05A5  34B1               	retlw	177
  7876  05A6  3400               	retlw	0
  7877  05A7  34A0               	retlw	160
  7878  05A8  3400               	retlw	0
  7879  05A9  348F               	retlw	143
  7880  05AA  3400               	retlw	0
  7881  05AB  347D               	retlw	125
  7882  05AC  3400               	retlw	0
  7883  05AD  346C               	retlw	108
  7884  05AE  3400               	retlw	0
  7885  05AF  345A               	retlw	90
  7886  05B0  3400               	retlw	0
  7887  05B1  3448               	retlw	72
  7888  05B2  3400               	retlw	0
  7889  05B3  3437               	retlw	55
  7890  05B4  3400               	retlw	0
  7891  05B5  3425               	retlw	37
  7892  05B6  3400               	retlw	0
  7893  05B7  3412               	retlw	18
  7894  05B8  3400               	retlw	0
  7895  05B9  3400               	retlw	0
  7896  05BA  3400               	retlw	0
  7897  05BB  34FF               	retlw	255
  7898  05BC  3403               	retlw	3
  7899  05BD  34FF               	retlw	255
  7900  05BE  3403               	retlw	3
  7901  05BF  34FE               	retlw	254
  7902  05C0  3403               	retlw	3
  7903  05C1  34FD               	retlw	253
  7904  05C2  3403               	retlw	3
  7905  05C3  34FC               	retlw	252
  7906  05C4  3403               	retlw	3
  7907  05C5  34FB               	retlw	251
  7908  05C6  3403               	retlw	3
  7909  05C7  34FA               	retlw	250
  7910  05C8  3403               	retlw	3
  7911  05C9  34F8               	retlw	248
  7912  05CA  3403               	retlw	3
  7913  05CB  34F7               	retlw	247
  7914  05CC  3403               	retlw	3
  7915  05CD  34F5               	retlw	245
  7916  05CE  3403               	retlw	3
  7917  05CF  34F3               	retlw	243
  7918  05D0  3403               	retlw	3
  7919  05D1  34F0               	retlw	240
  7920  05D2  3403               	retlw	3
  7921  05D3  34EE               	retlw	238
  7922  05D4  3403               	retlw	3
  7923  05D5  34EB               	retlw	235
  7924  05D6  3403               	retlw	3
  7925  05D7  34E8               	retlw	232
  7926  05D8  3403               	retlw	3
  7927  05D9  34E5               	retlw	229
  7928  05DA  3403               	retlw	3
  7929  05DB  34E1               	retlw	225
  7930  05DC  3403               	retlw	3
  7931  05DD  34DE               	retlw	222
  7932  05DE  3403               	retlw	3
  7933  05DF  34DA               	retlw	218
  7934  05E0  3403               	retlw	3
  7935  05E1  34D6               	retlw	214
  7936  05E2  3403               	retlw	3
  7937  05E3  34D2               	retlw	210
  7938  05E4  3403               	retlw	3
  7939  05E5  34CD               	retlw	205
  7940  05E6  3403               	retlw	3
  7941  05E7  34C9               	retlw	201
  7942  05E8  3403               	retlw	3
  7943  05E9  34C4               	retlw	196
  7944  05EA  3403               	retlw	3
  7945  05EB  34BF               	retlw	191
  7946  05EC  3403               	retlw	3
  7947  05ED  34BA               	retlw	186
  7948  05EE  3403               	retlw	3
  7949  05EF  34B4               	retlw	180
  7950  05F0  3403               	retlw	3
  7951  05F1  34AF               	retlw	175
  7952  05F2  3403               	retlw	3
  7953  05F3  34A9               	retlw	169
  7954  05F4  3403               	retlw	3
  7955  05F5  34A3               	retlw	163
  7956  05F6  3403               	retlw	3
  7957  05F7  349D               	retlw	157
  7958  05F8  3403               	retlw	3
  7959  05F9  3496               	retlw	150
  7960  05FA  3403               	retlw	3
  7961  05FB  3490               	retlw	144
  7962  05FC  3403               	retlw	3
  7963  05FD  3489               	retlw	137
  7964  05FE  3403               	retlw	3
  7965  05FF  3482               	retlw	130
  7966  0600  3403               	retlw	3
  7967  0601  347A               	retlw	122
  7968  0602  3403               	retlw	3
  7969  0603  3473               	retlw	115
  7970  0604  3403               	retlw	3
  7971  0605  346B               	retlw	107
  7972  0606  3403               	retlw	3
  7973  0607  3463               	retlw	99
  7974  0608  3403               	retlw	3
  7975  0609  345B               	retlw	91
  7976  060A  3403               	retlw	3
  7977  060B  3453               	retlw	83
  7978  060C  3403               	retlw	3
  7979  060D  344B               	retlw	75
  7980  060E  3403               	retlw	3
  7981  060F  3442               	retlw	66
  7982  0610  3403               	retlw	3
  7983  0611  3439               	retlw	57
  7984  0612  3403               	retlw	3
  7985  0613  3430               	retlw	48
  7986  0614  3403               	retlw	3
  7987  0615  3427               	retlw	39
  7988  0616  3403               	retlw	3
  7989  0617  341D               	retlw	29
  7990  0618  3403               	retlw	3
  7991  0619  3413               	retlw	19
  7992  061A  3403               	retlw	3
  7993  061B  3409               	retlw	9
  7994  061C  3403               	retlw	3
  7995  061D  34FF               	retlw	255
  7996  061E  3402               	retlw	2
  7997  061F  34F5               	retlw	245
  7998  0620  3402               	retlw	2
  7999  0621  34EA               	retlw	234
  8000  0622  3402               	retlw	2
  8001  0623  34E0               	retlw	224
  8002  0624  3402               	retlw	2
  8003  0625  34D5               	retlw	213
  8004  0626  3402               	retlw	2
  8005  0627  34CA               	retlw	202
  8006  0628  3402               	retlw	2
  8007  0629  34BE               	retlw	190
  8008  062A  3402               	retlw	2
  8009  062B  34B3               	retlw	179
  8010  062C  3402               	retlw	2
  8011  062D  34A7               	retlw	167
  8012  062E  3402               	retlw	2
  8013  062F  349B               	retlw	155
  8014  0630  3402               	retlw	2
  8015  0631  348F               	retlw	143
  8016  0632  3402               	retlw	2
  8017  0633  3482               	retlw	130
  8018  0634  3402               	retlw	2
  8019  0635  3476               	retlw	118
  8020  0636  3402               	retlw	2
  8021  0637  3469               	retlw	105
  8022  0638  3402               	retlw	2
  8023  0639  345C               	retlw	92
  8024  063A  3402               	retlw	2
  8025  063B  344F               	retlw	79
  8026  063C  3402               	retlw	2
  8027  063D  3441               	retlw	65
  8028  063E  3402               	retlw	2
  8029  063F  3434               	retlw	52
  8030  0640  3402               	retlw	2
  8031  0641  3426               	retlw	38
  8032  0642  3402               	retlw	2
  8033  0643  3418               	retlw	24
  8034  0644  3402               	retlw	2
  8035  0645  340A               	retlw	10
  8036  0646  3402               	retlw	2
  8037  0647  34FB               	retlw	251
  8038  0648  3401               	retlw	1
  8039  0649  34ED               	retlw	237
  8040  064A  3401               	retlw	1
  8041  064B  34DE               	retlw	222
  8042  064C  3401               	retlw	1
  8043  064D  34CF               	retlw	207
  8044  064E  3401               	retlw	1
  8045  064F  34C0               	retlw	192
  8046  0650  3401               	retlw	1
  8047  0651  34B0               	retlw	176
  8048  0652  3401               	retlw	1
  8049  0653  34A0               	retlw	160
  8050  0654  3401               	retlw	1
  8051  0655  3491               	retlw	145
  8052  0656  3401               	retlw	1
  8053  0657  3481               	retlw	129
  8054  0658  3401               	retlw	1
  8055  0659  3470               	retlw	112
  8056  065A  3401               	retlw	1
  8057  065B  3460               	retlw	96
  8058  065C  3401               	retlw	1
  8059  065D  344F               	retlw	79
  8060  065E  3401               	retlw	1
  8061  065F  343E               	retlw	62
  8062  0660  3401               	retlw	1
  8063  0661  342D               	retlw	45
  8064  0662  3401               	retlw	1
  8065  0663  341C               	retlw	28
  8066  0664  3401               	retlw	1
  8067  0665  340A               	retlw	10
  8068  0666  3401               	retlw	1
  8069  0667  34F9               	retlw	249
  8070  0668  3400               	retlw	0
  8071  0669  34E7               	retlw	231
  8072  066A  3400               	retlw	0
  8073  066B  34D5               	retlw	213
  8074  066C  3400               	retlw	0
  8075  066D  34C2               	retlw	194
  8076  066E  3400               	retlw	0
  8077  066F  34B0               	retlw	176
  8078  0670  3400               	retlw	0
  8079  0671  349D               	retlw	157
  8080  0672  3400               	retlw	0
  8081  0673  348A               	retlw	138
  8082  0674  3400               	retlw	0
  8083  0675  3477               	retlw	119
  8084  0676  3400               	retlw	0
  8085  0677  3464               	retlw	100
  8086  0678  3400               	retlw	0
  8087  0679  3450               	retlw	80
  8088  067A  3400               	retlw	0
  8089  067B  343C               	retlw	60
  8090  067C  3400               	retlw	0
  8091  067D  3429               	retlw	41
  8092  067E  3400               	retlw	0
  8093  067F  3414               	retlw	20
  8094  0680  3400               	retlw	0
  8095  0681  3400               	retlw	0
  8096  0682  3400               	retlw	0
  8097  0683  34FF               	retlw	255
  8098  0684  3403               	retlw	3
  8099  0685  34FF               	retlw	255
  8100  0686  3403               	retlw	3
  8101  0687  34FF               	retlw	255
  8102  0688  3403               	retlw	3
  8103  0689  34FE               	retlw	254
  8104  068A  3403               	retlw	3
  8105  068B  34FE               	retlw	254
  8106  068C  3403               	retlw	3
  8107  068D  34FD               	retlw	253
  8108  068E  3403               	retlw	3
  8109  068F  34FC               	retlw	252
  8110  0690  3403               	retlw	3
  8111  0691  34FB               	retlw	251
  8112  0692  3403               	retlw	3
  8113  0693  34FA               	retlw	250
  8114  0694  3403               	retlw	3
  8115  0695  34F9               	retlw	249
  8116  0696  3403               	retlw	3
  8117  0697  34F7               	retlw	247
  8118  0698  3403               	retlw	3
  8119  0699  34F5               	retlw	245
  8120  069A  3403               	retlw	3
  8121  069B  34F4               	retlw	244
  8122  069C  3403               	retlw	3
  8123  069D  34F1               	retlw	241
  8124  069E  3403               	retlw	3
  8125  069F  34EF               	retlw	239
  8126  06A0  3403               	retlw	3
  8127  06A1  34ED               	retlw	237
  8128  06A2  3403               	retlw	3
  8129  06A3  34EA               	retlw	234
  8130  06A4  3403               	retlw	3
  8131  06A5  34E7               	retlw	231
  8132  06A6  3403               	retlw	3
  8133  06A7  34E5               	retlw	229
  8134  06A8  3403               	retlw	3
  8135  06A9  34E1               	retlw	225
  8136  06AA  3403               	retlw	3
  8137  06AB  34DE               	retlw	222
  8138  06AC  3403               	retlw	3
  8139  06AD  34DA               	retlw	218
  8140  06AE  3403               	retlw	3
  8141  06AF  34D7               	retlw	215
  8142  06B0  3403               	retlw	3
  8143  06B1  34D3               	retlw	211
  8144  06B2  3403               	retlw	3
  8145  06B3  34CF               	retlw	207
  8146  06B4  3403               	retlw	3
  8147  06B5  34CA               	retlw	202
  8148  06B6  3403               	retlw	3
  8149  06B7  34C6               	retlw	198
  8150  06B8  3403               	retlw	3
  8151  06B9  34C1               	retlw	193
  8152  06BA  3403               	retlw	3
  8153  06BB  34BC               	retlw	188
  8154  06BC  3403               	retlw	3
  8155  06BD  34B7               	retlw	183
  8156  06BE  3403               	retlw	3
  8157  06BF  34B1               	retlw	177
  8158  06C0  3403               	retlw	3
  8159  06C1  34AC               	retlw	172
  8160  06C2  3403               	retlw	3
  8161  06C3  34A6               	retlw	166
  8162  06C4  3403               	retlw	3
  8163  06C5  34A0               	retlw	160
  8164  06C6  3403               	retlw	3
  8165  06C7  3499               	retlw	153
  8166  06C8  3403               	retlw	3
  8167  06C9  3493               	retlw	147
  8168  06CA  3403               	retlw	3
  8169  06CB  348C               	retlw	140
  8170  06CC  3403               	retlw	3
  8171  06CD  3485               	retlw	133
  8172  06CE  3403               	retlw	3
  8173  06CF  347E               	retlw	126
  8174  06D0  3403               	retlw	3
  8175  06D1  3477               	retlw	119
  8176  06D2  3403               	retlw	3
  8177  06D3  346F               	retlw	111
  8178  06D4  3403               	retlw	3
  8179  06D5  3467               	retlw	103
  8180  06D6  3403               	retlw	3
  8181  06D7  345F               	retlw	95
  8182  06D8  3403               	retlw	3
  8183  06D9  3457               	retlw	87
  8184  06DA  3403               	retlw	3
  8185  06DB  344E               	retlw	78
  8186  06DC  3403               	retlw	3
  8187  06DD  3446               	retlw	70
  8188  06DE  3403               	retlw	3
  8189  06DF  343D               	retlw	61
  8190  06E0  3403               	retlw	3
  8191  06E1  3433               	retlw	51
  8192  06E2  3403               	retlw	3
  8193  06E3  342A               	retlw	42
  8194  06E4  3403               	retlw	3
  8195  06E5  3420               	retlw	32
  8196  06E6  3403               	retlw	3
  8197  06E7  3416               	retlw	22
  8198  06E8  3403               	retlw	3
  8199  06E9  340C               	retlw	12
  8200  06EA  3403               	retlw	3
  8201  06EB  3402               	retlw	2
  8202  06EC  3403               	retlw	3
  8203  06ED  34F7               	retlw	247
  8204  06EE  3402               	retlw	2
  8205  06EF  34EC               	retlw	236
  8206  06F0  3402               	retlw	2
  8207  06F1  34E1               	retlw	225
  8208  06F2  3402               	retlw	2
  8209  06F3  34D6               	retlw	214
  8210  06F4  3402               	retlw	2
  8211  06F5  34CA               	retlw	202
  8212  06F6  3402               	retlw	2
  8213  06F7  34BF               	retlw	191
  8214  06F8  3402               	retlw	2
  8215  06F9  34B2               	retlw	178
  8216  06FA  3402               	retlw	2
  8217  06FB  34A6               	retlw	166
  8218  06FC  3402               	retlw	2
  8219  06FD  349A               	retlw	154
  8220  06FE  3402               	retlw	2
  8221  06FF  348D               	retlw	141
  8222  0700  3402               	retlw	2
  8223  0701  3480               	retlw	128
  8224  0702  3402               	retlw	2
  8225  0703  3472               	retlw	114
  8226  0704  3402               	retlw	2
  8227  0705  3465               	retlw	101
  8228  0706  3402               	retlw	2
  8229  0707  3457               	retlw	87
  8230  0708  3402               	retlw	2
  8231  0709  3449               	retlw	73
  8232  070A  3402               	retlw	2
  8233  070B  343B               	retlw	59
  8234  070C  3402               	retlw	2
  8235  070D  342C               	retlw	44
  8236  070E  3402               	retlw	2
  8237  070F  341D               	retlw	29
  8238  0710  3402               	retlw	2
  8239  0711  340E               	retlw	14
  8240  0712  3402               	retlw	2
  8241  0713  34FF               	retlw	255
  8242  0714  3401               	retlw	1
  8243  0715  34F0               	retlw	240
  8244  0716  3401               	retlw	1
  8245  0717  34E0               	retlw	224
  8246  0718  3401               	retlw	1
  8247  0719  34D0               	retlw	208
  8248  071A  3401               	retlw	1
  8249  071B  34BF               	retlw	191
  8250  071C  3401               	retlw	1
  8251  071D  34AF               	retlw	175
  8252  071E  3401               	retlw	1
  8253  071F  349E               	retlw	158
  8254  0720  3401               	retlw	1
  8255  0721  348D               	retlw	141
  8256  0722  3401               	retlw	1
  8257  0723  347C               	retlw	124
  8258  0724  3401               	retlw	1
  8259  0725  346A               	retlw	106
  8260  0726  3401               	retlw	1
  8261  0727  3458               	retlw	88
  8262  0728  3401               	retlw	1
  8263  0729  3446               	retlw	70
  8264  072A  3401               	retlw	1
  8265  072B  3434               	retlw	52
  8266  072C  3401               	retlw	1
  8267  072D  3421               	retlw	33
  8268  072E  3401               	retlw	1
  8269  072F  340E               	retlw	14
  8270  0730  3401               	retlw	1
  8271  0731  34FB               	retlw	251
  8272  0732  3400               	retlw	0
  8273  0733  34E7               	retlw	231
  8274  0734  3400               	retlw	0
  8275  0735  34D4               	retlw	212
  8276  0736  3400               	retlw	0
  8277  0737  34C0               	retlw	192
  8278  0738  3400               	retlw	0
  8279  0739  34AB               	retlw	171
  8280  073A  3400               	retlw	0
  8281  073B  3497               	retlw	151
  8282  073C  3400               	retlw	0
  8283  073D  3482               	retlw	130
  8284  073E  3400               	retlw	0
  8285  073F  346D               	retlw	109
  8286  0740  3400               	retlw	0
  8287  0741  3458               	retlw	88
  8288  0742  3400               	retlw	0
  8289  0743  3442               	retlw	66
  8290  0744  3400               	retlw	0
  8291  0745  342C               	retlw	44
  8292  0746  3400               	retlw	0
  8293  0747  3416               	retlw	22
  8294  0748  3400               	retlw	0
  8295  0749  3400               	retlw	0
  8296  074A  3400               	retlw	0
  8297  074B  34FF               	retlw	255
  8298  074C  3403               	retlw	3
  8299  074D  34FF               	retlw	255
  8300  074E  3403               	retlw	3
  8301  074F  34FF               	retlw	255
  8302  0750  3403               	retlw	3
  8303  0751  34FF               	retlw	255
  8304  0752  3403               	retlw	3
  8305  0753  34FE               	retlw	254
  8306  0754  3403               	retlw	3
  8307  0755  34FE               	retlw	254
  8308  0756  3403               	retlw	3
  8309  0757  34FD               	retlw	253
  8310  0758  3403               	retlw	3
  8311  0759  34FD               	retlw	253
  8312  075A  3403               	retlw	3
  8313  075B  34FC               	retlw	252
  8314  075C  3403               	retlw	3
  8315  075D  34FB               	retlw	251
  8316  075E  3403               	retlw	3
  8317  075F  34FA               	retlw	250
  8318  0760  3403               	retlw	3
  8319  0761  34F9               	retlw	249
  8320  0762  3403               	retlw	3
  8321  0763  34F7               	retlw	247
  8322  0764  3403               	retlw	3
  8323  0765  34F6               	retlw	246
  8324  0766  3403               	retlw	3
  8325  0767  34F4               	retlw	244
  8326  0768  3403               	retlw	3
  8327  0769  34F2               	retlw	242
  8328  076A  3403               	retlw	3
  8329  076B  34F0               	retlw	240
  8330  076C  3403               	retlw	3
  8331  076D  34EE               	retlw	238
  8332  076E  3403               	retlw	3
  8333  076F  34EC               	retlw	236
  8334  0770  3403               	retlw	3
  8335  0771  34EA               	retlw	234
  8336  0772  3403               	retlw	3
  8337  0773  34E7               	retlw	231
  8338  0774  3403               	retlw	3
  8339  0775  34E4               	retlw	228
  8340  0776  3403               	retlw	3
  8341  0777  34E1               	retlw	225
  8342  0778  3403               	retlw	3
  8343  0779  34DE               	retlw	222
  8344  077A  3403               	retlw	3
  8345  077B  34DA               	retlw	218
  8346  077C  3403               	retlw	3
  8347  077D  34D7               	retlw	215
  8348  077E  3403               	retlw	3
  8349  077F  34D3               	retlw	211
  8350  0780  3403               	retlw	3
  8351  0781  34CF               	retlw	207
  8352  0782  3403               	retlw	3
  8353  0783  34CB               	retlw	203
  8354  0784  3403               	retlw	3
  8355  0785  34C6               	retlw	198
  8356  0786  3403               	retlw	3
  8357  0787  34C1               	retlw	193
  8358  0788  3403               	retlw	3
  8359  0789  34BD               	retlw	189
  8360  078A  3403               	retlw	3
  8361  078B  34B7               	retlw	183
  8362  078C  3403               	retlw	3
  8363  078D  34B2               	retlw	178
  8364  078E  3403               	retlw	3
  8365  078F  34AD               	retlw	173
  8366  0790  3403               	retlw	3
  8367  0791  34A7               	retlw	167
  8368  0792  3403               	retlw	3
  8369  0793  34A1               	retlw	161
  8370  0794  3403               	retlw	3
  8371  0795  349B               	retlw	155
  8372  0796  3403               	retlw	3
  8373  0797  3494               	retlw	148
  8374  0798  3403               	retlw	3
  8375  0799  348E               	retlw	142
  8376  079A  3403               	retlw	3
  8377  079B  3487               	retlw	135
  8378  079C  3403               	retlw	3
  8379  079D  347F               	retlw	127
  8380  079E  3403               	retlw	3
  8381  079F  3478               	retlw	120
  8382  07A0  3403               	retlw	3
  8383  07A1  3470               	retlw	112
  8384  07A2  3403               	retlw	3
  8385  07A3  3468               	retlw	104
  8386  07A4  3403               	retlw	3
  8387  07A5  3460               	retlw	96
  8388  07A6  3403               	retlw	3
  8389  07A7  3458               	retlw	88
  8390  07A8  3403               	retlw	3
  8391  07A9  344F               	retlw	79
  8392  07AA  3403               	retlw	3
  8393  07AB  3446               	retlw	70
  8394  07AC  3403               	retlw	3
  8395  07AD  343D               	retlw	61
  8396  07AE  3403               	retlw	3
  8397  07AF  3434               	retlw	52
  8398  07B0  3403               	retlw	3
  8399  07B1  342A               	retlw	42
  8400  07B2  3403               	retlw	3
  8401  07B3  3420               	retlw	32
  8402  07B4  3403               	retlw	3
  8403  07B5  3416               	retlw	22
  8404  07B6  3403               	retlw	3
  8405  07B7  340B               	retlw	11
  8406  07B8  3403               	retlw	3
  8407  07B9  3401               	retlw	1
  8408  07BA  3403               	retlw	3
  8409  07BB  34F6               	retlw	246
  8410  07BC  3402               	retlw	2
  8411  07BD  34EA               	retlw	234
  8412  07BE  3402               	retlw	2
  8413  07BF  34DF               	retlw	223
  8414  07C0  3402               	retlw	2
  8415  07C1  34D3               	retlw	211
  8416  07C2  3402               	retlw	2
  8417  07C3  34C7               	retlw	199
  8418  07C4  3402               	retlw	2
  8419  07C5  34BA               	retlw	186
  8420  07C6  3402               	retlw	2
  8421  07C7  34AD               	retlw	173
  8422  07C8  3402               	retlw	2
  8423  07C9  34A0               	retlw	160
  8424  07CA  3402               	retlw	2
  8425  07CB  3493               	retlw	147
  8426  07CC  3402               	retlw	2
  8427  07CD  3486               	retlw	134
  8428  07CE  3402               	retlw	2
  8429  07CF  3478               	retlw	120
  8430  07D0  3402               	retlw	2
  8431  07D1  346A               	retlw	106
  8432  07D2  3402               	retlw	2
  8433  07D3  345B               	retlw	91
  8434  07D4  3402               	retlw	2
  8435  07D5  344C               	retlw	76
  8436  07D6  3402               	retlw	2
  8437  07D7  343D               	retlw	61
  8438  07D8  3402               	retlw	2
  8439  07D9  342E               	retlw	46
  8440  07DA  3402               	retlw	2
  8441  07DB  341E               	retlw	30
  8442  07DC  3402               	retlw	2
  8443  07DD  340E               	retlw	14
  8444  07DE  3402               	retlw	2
  8445  07DF  34FE               	retlw	254
  8446  07E0  3401               	retlw	1
  8447  07E1  34EE               	retlw	238
  8448  07E2  3401               	retlw	1
  8449  07E3  34DD               	retlw	221
  8450  07E4  3401               	retlw	1
  8451  07E5  34CB               	retlw	203
  8452  07E6  3401               	retlw	1
  8453  07E7  34BA               	retlw	186
  8454  07E8  3401               	retlw	1
  8455  07E9  34A8               	retlw	168
  8456  07EA  3401               	retlw	1
  8457  07EB  3496               	retlw	150
  8458  07EC  3401               	retlw	1
  8459  07ED  3484               	retlw	132
  8460  07EE  3401               	retlw	1
  8461  07EF  3471               	retlw	113
  8462  07F0  3401               	retlw	1
  8463  07F1  345E               	retlw	94
  8464  07F2  3401               	retlw	1
  8465  07F3  344A               	retlw	74
  8466  07F4  3401               	retlw	1
  8467  07F5  3437               	retlw	55
  8468  07F6  3401               	retlw	1
  8469  07F7  3423               	retlw	35
  8470  07F8  3401               	retlw	1
  8471  07F9  340E               	retlw	14
  8472  07FA  3401               	retlw	1
  8473  07FB  34FA               	retlw	250
  8474  07FC  3400               	retlw	0
  8475  07FD  34E5               	retlw	229
  8476  07FE  3400               	retlw	0
  8477  07FF  34CF               	retlw	207
  8478  0800  3400               	retlw	0
  8479  0801  34BA               	retlw	186
  8480  0802  3400               	retlw	0
  8481  0803  34A4               	retlw	164
  8482  0804  3400               	retlw	0
  8483  0805  348D               	retlw	141
  8484  0806  3400               	retlw	0
  8485  0807  3476               	retlw	118
  8486  0808  3400               	retlw	0
  8487  0809  345F               	retlw	95
  8488  080A  3400               	retlw	0
  8489  080B  3448               	retlw	72
  8490  080C  3400               	retlw	0
  8491  080D  3430               	retlw	48
  8492  080E  3400               	retlw	0
  8493  080F  3418               	retlw	24
  8494  0810  3400               	retlw	0
  8495  0811  3400               	retlw	0
  8496  0812  3400               	retlw	0
  8497  0813  34FF               	retlw	255
  8498  0814  3403               	retlw	3
  8499  0815  34FF               	retlw	255
  8500  0816  3403               	retlw	3
  8501  0817  34FF               	retlw	255
  8502  0818  3403               	retlw	3
  8503  0819  34FF               	retlw	255
  8504  081A  3403               	retlw	3
  8505  081B  34FF               	retlw	255
  8506  081C  3403               	retlw	3
  8507  081D  34FE               	retlw	254
  8508  081E  3403               	retlw	3
  8509  081F  34FE               	retlw	254
  8510  0820  3403               	retlw	3
  8511  0821  34FE               	retlw	254
  8512  0822  3403               	retlw	3
  8513  0823  34FD               	retlw	253
  8514  0824  3403               	retlw	3
  8515  0825  34FC               	retlw	252
  8516  0826  3403               	retlw	3
  8517  0827  34FC               	retlw	252
  8518  0828  3403               	retlw	3
  8519  0829  34FB               	retlw	251
  8520  082A  3403               	retlw	3
  8521  082B  34FA               	retlw	250
  8522  082C  3403               	retlw	3
  8523  082D  34F9               	retlw	249
  8524  082E  3403               	retlw	3
  8525  082F  34F8               	retlw	248
  8526  0830  3403               	retlw	3
  8527  0831  34F6               	retlw	246
  8528  0832  3403               	retlw	3
  8529  0833  34F5               	retlw	245
  8530  0834  3403               	retlw	3
  8531  0835  34F3               	retlw	243
  8532  0836  3403               	retlw	3
  8533  0837  34F1               	retlw	241
  8534  0838  3403               	retlw	3
  8535  0839  34EF               	retlw	239
  8536  083A  3403               	retlw	3
  8537  083B  34ED               	retlw	237
  8538  083C  3403               	retlw	3
  8539  083D  34EB               	retlw	235
  8540  083E  3403               	retlw	3
  8541  083F  34E9               	retlw	233
  8542  0840  3403               	retlw	3
  8543  0841  34E6               	retlw	230
  8544  0842  3403               	retlw	3
  8545  0843  34E3               	retlw	227
  8546  0844  3403               	retlw	3
  8547  0845  34E0               	retlw	224
  8548  0846  3403               	retlw	3
  8549  0847  34DD               	retlw	221
  8550  0848  3403               	retlw	3
  8551  0849  34DA               	retlw	218
  8552  084A  3403               	retlw	3
  8553  084B  34D6               	retlw	214
  8554  084C  3403               	retlw	3
  8555  084D  34D2               	retlw	210
  8556  084E  3403               	retlw	3
  8557  084F  34CE               	retlw	206
  8558  0850  3403               	retlw	3
  8559  0851  34CA               	retlw	202
  8560  0852  3403               	retlw	3
  8561  0853  34C6               	retlw	198
  8562  0854  3403               	retlw	3
  8563  0855  34C1               	retlw	193
  8564  0856  3403               	retlw	3
  8565  0857  34BC               	retlw	188
  8566  0858  3403               	retlw	3
  8567  0859  34B7               	retlw	183
  8568  085A  3403               	retlw	3
  8569  085B  34B2               	retlw	178
  8570  085C  3403               	retlw	3
  8571  085D  34AC               	retlw	172
  8572  085E  3403               	retlw	3
  8573  085F  34A7               	retlw	167
  8574  0860  3403               	retlw	3
  8575  0861  34A1               	retlw	161
  8576  0862  3403               	retlw	3
  8577  0863  349A               	retlw	154
  8578  0864  3403               	retlw	3
  8579  0865  3494               	retlw	148
  8580  0866  3403               	retlw	3
  8581  0867  348D               	retlw	141
  8582  0868  3403               	retlw	3
  8583  0869  3486               	retlw	134
  8584  086A  3403               	retlw	3
  8585  086B  347F               	retlw	127
  8586  086C  3403               	retlw	3
  8587  086D  3477               	retlw	119
  8588  086E  3403               	retlw	3
  8589  086F  346F               	retlw	111
  8590  0870  3403               	retlw	3
  8591  0871  3467               	retlw	103
  8592  0872  3403               	retlw	3
  8593  0873  345F               	retlw	95
  8594  0874  3403               	retlw	3
  8595  0875  3456               	retlw	86
  8596  0876  3403               	retlw	3
  8597  0877  344D               	retlw	77
  8598  0878  3403               	retlw	3
  8599  0879  3444               	retlw	68
  8600  087A  3403               	retlw	3
  8601  087B  343B               	retlw	59
  8602  087C  3403               	retlw	3
  8603  087D  3431               	retlw	49
  8604  087E  3403               	retlw	3
  8605  087F  3427               	retlw	39
  8606  0880  3403               	retlw	3
  8607  0881  341C               	retlw	28
  8608  0882  3403               	retlw	3
  8609  0883  3412               	retlw	18
  8610  0884  3403               	retlw	3
  8611  0885  3407               	retlw	7
  8612  0886  3403               	retlw	3
  8613  0887  34FC               	retlw	252
  8614  0888  3402               	retlw	2
  8615  0889  34F0               	retlw	240
  8616  088A  3402               	retlw	2
  8617  088B  34E4               	retlw	228
  8618  088C  3402               	retlw	2
  8619  088D  34D8               	retlw	216
  8620  088E  3402               	retlw	2
  8621  088F  34CB               	retlw	203
  8622  0890  3402               	retlw	2
  8623  0891  34BE               	retlw	190
  8624  0892  3402               	retlw	2
  8625  0893  34B1               	retlw	177
  8626  0894  3402               	retlw	2
  8627  0895  34A4               	retlw	164
  8628  0896  3402               	retlw	2
  8629  0897  3496               	retlw	150
  8630  0898  3402               	retlw	2
  8631  0899  3488               	retlw	136
  8632  089A  3402               	retlw	2
  8633  089B  3479               	retlw	121
  8634  089C  3402               	retlw	2
  8635  089D  346A               	retlw	106
  8636  089E  3402               	retlw	2
  8637  089F  345B               	retlw	91
  8638  08A0  3402               	retlw	2
  8639  08A1  344C               	retlw	76
  8640  08A2  3402               	retlw	2
  8641  08A3  343C               	retlw	60
  8642  08A4  3402               	retlw	2
  8643  08A5  342B               	retlw	43
  8644  08A6  3402               	retlw	2
  8645  08A7  341B               	retlw	27
  8646  08A8  3402               	retlw	2
  8647  08A9  340A               	retlw	10
  8648  08AA  3402               	retlw	2
  8649  08AB  34F8               	retlw	248
  8650  08AC  3401               	retlw	1
  8651  08AD  34E7               	retlw	231
  8652  08AE  3401               	retlw	1
  8653  08AF  34D5               	retlw	213
  8654  08B0  3401               	retlw	1
  8655  08B1  34C2               	retlw	194
  8656  08B2  3401               	retlw	1
  8657  08B3  34B0               	retlw	176
  8658  08B4  3401               	retlw	1
  8659  08B5  349C               	retlw	156
  8660  08B6  3401               	retlw	1
  8661  08B7  3489               	retlw	137
  8662  08B8  3401               	retlw	1
  8663  08B9  3475               	retlw	117
  8664  08BA  3401               	retlw	1
  8665  08BB  3461               	retlw	97
  8666  08BC  3401               	retlw	1
  8667  08BD  344C               	retlw	76
  8668  08BE  3401               	retlw	1
  8669  08BF  3437               	retlw	55
  8670  08C0  3401               	retlw	1
  8671  08C1  3421               	retlw	33
  8672  08C2  3401               	retlw	1
  8673  08C3  340B               	retlw	11
  8674  08C4  3401               	retlw	1
  8675  08C5  34F5               	retlw	245
  8676  08C6  3400               	retlw	0
  8677  08C7  34DE               	retlw	222
  8678  08C8  3400               	retlw	0
  8679  08C9  34C7               	retlw	199
  8680  08CA  3400               	retlw	0
  8681  08CB  34B0               	retlw	176
  8682  08CC  3400               	retlw	0
  8683  08CD  3498               	retlw	152
  8684  08CE  3400               	retlw	0
  8685  08CF  3480               	retlw	128
  8686  08D0  3400               	retlw	0
  8687  08D1  3467               	retlw	103
  8688  08D2  3400               	retlw	0
  8689  08D3  344E               	retlw	78
  8690  08D4  3400               	retlw	0
  8691  08D5  3434               	retlw	52
  8692  08D6  3400               	retlw	0
  8693  08D7  341A               	retlw	26
  8694  08D8  3400               	retlw	0
  8695  08D9  3400               	retlw	0
  8696  08DA  3400               	retlw	0
  8697  08DB  34FF               	retlw	255
  8698  08DC  3403               	retlw	3
  8699  08DD  34FF               	retlw	255
  8700  08DE  3403               	retlw	3
  8701  08DF  34FF               	retlw	255
  8702  08E0  3403               	retlw	3
  8703  08E1  34FF               	retlw	255
  8704  08E2  3403               	retlw	3
  8705  08E3  34FF               	retlw	255
  8706  08E4  3403               	retlw	3
  8707  08E5  34FF               	retlw	255
  8708  08E6  3403               	retlw	3
  8709  08E7  34FE               	retlw	254
  8710  08E8  3403               	retlw	3
  8711  08E9  34FE               	retlw	254
  8712  08EA  3403               	retlw	3
  8713  08EB  34FE               	retlw	254
  8714  08EC  3403               	retlw	3
  8715  08ED  34FD               	retlw	253
  8716  08EE  3403               	retlw	3
  8717  08EF  34FD               	retlw	253
  8718  08F0  3403               	retlw	3
  8719  08F1  34FC               	retlw	252
  8720  08F2  3403               	retlw	3
  8721  08F3  34FC               	retlw	252
  8722  08F4  3403               	retlw	3
  8723  08F5  34FB               	retlw	251
  8724  08F6  3403               	retlw	3
  8725  08F7  34FA               	retlw	250
  8726  08F8  3403               	retlw	3
  8727  08F9  34F9               	retlw	249
  8728  08FA  3403               	retlw	3
  8729  08FB  34F8               	retlw	248
  8730  08FC  3403               	retlw	3
  8731  08FD  34F7               	retlw	247
  8732  08FE  3403               	retlw	3
  8733  08FF  34F5               	retlw	245
  8734  0900  3403               	retlw	3
  8735  0901  34F4               	retlw	244
  8736  0902  3403               	retlw	3
  8737  0903  34F2               	retlw	242
  8738  0904  3403               	retlw	3
  8739  0905  34F0               	retlw	240
  8740  0906  3403               	retlw	3
  8741  0907  34EE               	retlw	238
  8742  0908  3403               	retlw	3
  8743  0909  34EC               	retlw	236
  8744  090A  3403               	retlw	3
  8745  090B  34EA               	retlw	234
  8746  090C  3403               	retlw	3
  8747  090D  34E7               	retlw	231
  8748  090E  3403               	retlw	3
  8749  090F  34E5               	retlw	229
  8750  0910  3403               	retlw	3
  8751  0911  34E2               	retlw	226
  8752  0912  3403               	retlw	3
  8753  0913  34DF               	retlw	223
  8754  0914  3403               	retlw	3
  8755  0915  34DC               	retlw	220
  8756  0916  3403               	retlw	3
  8757  0917  34D8               	retlw	216
  8758  0918  3403               	retlw	3
  8759  0919  34D5               	retlw	213
  8760  091A  3403               	retlw	3
  8761  091B  34D1               	retlw	209
  8762  091C  3403               	retlw	3
  8763  091D  34CD               	retlw	205
  8764  091E  3403               	retlw	3
  8765  091F  34C9               	retlw	201
  8766  0920  3403               	retlw	3
  8767  0921  34C4               	retlw	196
  8768  0922  3403               	retlw	3
  8769  0923  34C0               	retlw	192
  8770  0924  3403               	retlw	3
  8771  0925  34BB               	retlw	187
  8772  0926  3403               	retlw	3
  8773  0927  34B6               	retlw	182
  8774  0928  3403               	retlw	3
  8775  0929  34B0               	retlw	176
  8776  092A  3403               	retlw	3
  8777  092B  34AB               	retlw	171
  8778  092C  3403               	retlw	3
  8779  092D  34A5               	retlw	165
  8780  092E  3403               	retlw	3
  8781  092F  349F               	retlw	159
  8782  0930  3403               	retlw	3
  8783  0931  3498               	retlw	152
  8784  0932  3403               	retlw	3
  8785  0933  3492               	retlw	146
  8786  0934  3403               	retlw	3
  8787  0935  348B               	retlw	139
  8788  0936  3403               	retlw	3
  8789  0937  3483               	retlw	131
  8790  0938  3403               	retlw	3
  8791  0939  347C               	retlw	124
  8792  093A  3403               	retlw	3
  8793  093B  3474               	retlw	116
  8794  093C  3403               	retlw	3
  8795  093D  346C               	retlw	108
  8796  093E  3403               	retlw	3
  8797  093F  3464               	retlw	100
  8798  0940  3403               	retlw	3
  8799  0941  345B               	retlw	91
  8800  0942  3403               	retlw	3
  8801  0943  3452               	retlw	82
  8802  0944  3403               	retlw	3
  8803  0945  3449               	retlw	73
  8804  0946  3403               	retlw	3
  8805  0947  343F               	retlw	63
  8806  0948  3403               	retlw	3
  8807  0949  3435               	retlw	53
  8808  094A  3403               	retlw	3
  8809  094B  342B               	retlw	43
  8810  094C  3403               	retlw	3
  8811  094D  3420               	retlw	32
  8812  094E  3403               	retlw	3
  8813  094F  3416               	retlw	22
  8814  0950  3403               	retlw	3
  8815  0951  340A               	retlw	10
  8816  0952  3403               	retlw	3
  8817  0953  34FF               	retlw	255
  8818  0954  3402               	retlw	2
  8819  0955  34F3               	retlw	243
  8820  0956  3402               	retlw	2
  8821  0957  34E6               	retlw	230
  8822  0958  3402               	retlw	2
  8823  0959  34DA               	retlw	218
  8824  095A  3402               	retlw	2
  8825  095B  34CD               	retlw	205
  8826  095C  3402               	retlw	2
  8827  095D  34BF               	retlw	191
  8828  095E  3402               	retlw	2
  8829  095F  34B2               	retlw	178
  8830  0960  3402               	retlw	2
  8831  0961  34A4               	retlw	164
  8832  0962  3402               	retlw	2
  8833  0963  3495               	retlw	149
  8834  0964  3402               	retlw	2
  8835  0965  3486               	retlw	134
  8836  0966  3402               	retlw	2
  8837  0967  3477               	retlw	119
  8838  0968  3402               	retlw	2
  8839  0969  3467               	retlw	103
  8840  096A  3402               	retlw	2
  8841  096B  3457               	retlw	87
  8842  096C  3402               	retlw	2
  8843  096D  3447               	retlw	71
  8844  096E  3402               	retlw	2
  8845  096F  3436               	retlw	54
  8846  0970  3402               	retlw	2
  8847  0971  3425               	retlw	37
  8848  0972  3402               	retlw	2
  8849  0973  3413               	retlw	19
  8850  0974  3402               	retlw	2
  8851  0975  3401               	retlw	1
  8852  0976  3402               	retlw	2
  8853  0977  34EE               	retlw	238
  8854  0978  3401               	retlw	1
  8855  0979  34DB               	retlw	219
  8856  097A  3401               	retlw	1
  8857  097B  34C8               	retlw	200
  8858  097C  3401               	retlw	1
  8859  097D  34B4               	retlw	180
  8860  097E  3401               	retlw	1
  8861  097F  34A0               	retlw	160
  8862  0980  3401               	retlw	1
  8863  0981  348B               	retlw	139
  8864  0982  3401               	retlw	1
  8865  0983  3476               	retlw	118
  8866  0984  3401               	retlw	1
  8867  0985  3460               	retlw	96
  8868  0986  3401               	retlw	1
  8869  0987  344A               	retlw	74
  8870  0988  3401               	retlw	1
  8871  0989  3434               	retlw	52
  8872  098A  3401               	retlw	1
  8873  098B  341D               	retlw	29
  8874  098C  3401               	retlw	1
  8875  098D  3405               	retlw	5
  8876  098E  3401               	retlw	1
  8877  098F  34ED               	retlw	237
  8878  0990  3400               	retlw	0
  8879  0991  34D5               	retlw	213
  8880  0992  3400               	retlw	0
  8881  0993  34BC               	retlw	188
  8882  0994  3400               	retlw	0
  8883  0995  34A3               	retlw	163
  8884  0996  3400               	retlw	0
  8885  0997  3489               	retlw	137
  8886  0998  3400               	retlw	0
  8887  0999  346E               	retlw	110
  8888  099A  3400               	retlw	0
  8889  099B  3454               	retlw	84
  8890  099C  3400               	retlw	0
  8891  099D  3438               	retlw	56
  8892  099E  3400               	retlw	0
  8893  099F  341C               	retlw	28
  8894  09A0  3400               	retlw	0
  8895  09A1  3400               	retlw	0
  8896  09A2  3400               	retlw	0
  8897  09A3                     __end_of_gamma_table:	
  8898                           
  8899                           	psect	nvBANK0
  8900  005E                     __pnvBANK0:	
  8901  005E                     _i2c_address:	
  8902  005E                     	ds	1
  8903                           
  8904                           	psect	nvBANK1
  8905  00D7                     __pnvBANK1:	
  8906  00D7                     _TMR3_InterruptHandler:	
  8907  00D7                     	ds	2
  8908  00D9                     _timer3ReloadVal:	
  8909  00D9                     	ds	2
  8910  0003                     _STATUSbits	set	3
  8911  000C                     _PORTAbits	set	12
  8912  000D                     _PORTBbits	set	13
  8913  001F                     _T2CON	set	31
  8914  001D                     _TMR2	set	29
  8915  001E                     _PR2	set	30
  8916  000E                     _PORTCbits	set	14
  8917  0011                     _PIR1bits	set	17
  8918  0013                     _PIR3bits	set	19
  8919  000B                     _INTCONbits	set	11
  8920  008E                     _TRISCbits	set	142
  8921  009D                     _ADCON0bits	set	157
  8922  009C                     _ADRESH	set	156
  8923  009B                     _ADRESL	set	155
  8924  009F                     _ADACT	set	159
  8925  009E                     _ADCON1	set	158
  8926  009D                     _ADCON0	set	157
  8927  008E                     _TRISC	set	142
  8928  008D                     _TRISB	set	141
  8929  008C                     _TRISA	set	140
  8930  0091                     _PIE1bits	set	145
  8931  0093                     _PIE3bits	set	147
  8932  0097                     _WDTCON	set	151
  8933  010E                     _LATCbits	set	270
  8934  010D                     _LATBbits	set	269
  8935  010E                     _LATC	set	270
  8936  010D                     _LATB	set	269
  8937  010C                     _LATA	set	268
  8938  018E                     _ANSELCbits	set	398
  8939  018C                     _ANSELA	set	396
  8940  018D                     _ANSELB	set	397
  8941  018E                     _ANSELC	set	398
  8942  020E                     _WPUCbits	set	526
  8943  020D                     _WPUBbits	set	525
  8944  020E                     _WPUC	set	526
  8945  020C                     _WPUA	set	524
  8946  020D                     _WPUB	set	525
  8947  0215                     _SSP1CON1bits	set	533
  8948  0216                     _SSP1CON2bits	set	534
  8949  0214                     _SSP1STATbits	set	532
  8950  0211                     _SSP1BUF	set	529
  8951  0212                     _SSP1ADD	set	530
  8952  0213                     _SSP1MSK	set	531
  8953  0217                     _SSP1CON3	set	535
  8954  0214                     _SSP1STAT	set	532
  8955  0216                     _SSP1CON2	set	534
  8956  0215                     _SSP1CON1	set	533
  8957  028E                     _ODCONCbits	set	654
  8958  0295                     _CCPR2L	set	661
  8959  0296                     _CCPR2H	set	662
  8960  0297                     _CCP2CON	set	663
  8961  0291                     _CCPR1L	set	657
  8962  0292                     _CCPR1H	set	658
  8963  0293                     _CCP1CON	set	659
  8964  029F                     _CCPTMRSbits	set	671
  8965  028E                     _ODCONC	set	654
  8966  028D                     _ODCONB	set	653
  8967  028C                     _ODCONA	set	652
  8968  0311                     _CCPR3L	set	785
  8969  0312                     _CCPR3H	set	786
  8970  0313                     _CCP3CON	set	787
  8971  0413                     _T3CONbits	set	1043
  8972  0413                     _T3CON	set	1043
  8973  0411                     _TMR3L	set	1041
  8974  0412                     _TMR3H	set	1042
  8975  0414                     _T3GCON	set	1044
  8976  0896                     _NVMCON2	set	2198
  8977  0894                     _NVMDATH	set	2196
  8978  0893                     _NVMDATL	set	2195
  8979  0892                     _NVMADRH	set	2194
  8980  0891                     _NVMADRL	set	2193
  8981  0895                     _NVMCON1bits	set	2197
  8982  0916                     _PMD5	set	2326
  8983  0915                     _PMD4	set	2325
  8984  0914                     _PMD3	set	2324
  8985  0913                     _PMD2	set	2323
  8986  0912                     _PMD1	set	2322
  8987  0911                     _PMD0	set	2321
  8988  091E                     _OSCTUNE	set	2334
  8989  091F                     _OSCFRQ	set	2335
  8990  091D                     _OSCEN	set	2333
  8991  091B                     _OSCCON3	set	2331
  8992  0919                     _OSCCON1	set	2329
  8993  0E0F                     _PPSLOCKbits	set	3599
  8994  0E0F                     _PPSLOCK	set	3599
  8995  0E28                     _CLCIN0PPSbits	set	3624
  8996  0E29                     _CLCIN1PPSbits	set	3625
  8997  0E21                     _SSP1DATPPSbits	set	3617
  8998  0E20                     _SSP1CLKPPSbits	set	3616
  8999  0EA0                     _RC0PPSbits	set	3744
  9000  0EA1                     _RC1PPSbits	set	3745
  9001  0EA2                     _RC2PPSbits	set	3746
  9002  0E9E                     _RB6PPSbits	set	3742
  9003  0E9F                     _RB7PPSbits	set	3743
  9004  0F10                     _CLC1CON	set	3856
  9005  0F19                     _CLC1GLS3	set	3865
  9006  0F18                     _CLC1GLS2	set	3864
  9007  0F17                     _CLC1GLS1	set	3863
  9008  0F16                     _CLC1GLS0	set	3862
  9009  0F15                     _CLC1SEL3	set	3861
  9010  0F14                     _CLC1SEL2	set	3860
  9011  0F13                     _CLC1SEL1	set	3859
  9012  0F12                     _CLC1SEL0	set	3858
  9013  0F11                     _CLC1POL	set	3857
  9014  0F1A                     _CLC2CON	set	3866
  9015  0F23                     _CLC2GLS3	set	3875
  9016  0F22                     _CLC2GLS2	set	3874
  9017  0F21                     _CLC2GLS1	set	3873
  9018  0F20                     _CLC2GLS0	set	3872
  9019  0F1F                     _CLC2SEL3	set	3871
  9020  0F1E                     _CLC2SEL2	set	3870
  9021  0F1D                     _CLC2SEL1	set	3869
  9022  0F1C                     _CLC2SEL0	set	3868
  9023  0F1B                     _CLC2POL	set	3867
  9024                           
  9025                           ; #config settings
  9026  0000                     
  9027                           	psect	cinit
  9028  0032                     start_initialization:	
  9029  0032                     __initialization:	
  9030                           
  9031                           ;initializer for _I2C1_slaveWriteData
  9032  0032  3055               	movlw	85
  9033  0033  00DF               	movwf	__pdataBANK0& (0+127)
  9034                           
  9035                           ; Clear objects allocated to BANK0
  9036  0034  3020               	movlw	low __pbssBANK0
  9037  0035  0084               	movwf	4
  9038  0036  3000               	movlw	high __pbssBANK0
  9039  0037  0085               	movwf	5
  9040  0038  302A               	movlw	42
  9041  0039  318B  231B  3180   	fcall	clear_ram0
  9042                           
  9043                           ; Clear objects allocated to BANK1
  9044  003C  30A0               	movlw	low __pbssBANK1
  9045  003D  0084               	movwf	4
  9046  003E  3000               	movlw	high __pbssBANK1
  9047  003F  0085               	movwf	5
  9048  0040  3027               	movlw	39
  9049  0041  318B  231B  3180   	fcall	clear_ram0
  9050  0044                     end_of_initialization:	
  9051                           ;End of C runtime variable initialization code
  9052                           
  9053  0044                     __end_of__initialization:	
  9054  0044  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  9055  0045  0020               	movlb	0
  9056  0046  2847               	ljmp	l7396	;jump to C main() function
  9057  0047                     __pmaintext:	
  9058 ;;
  9059 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  9060 ;;
  9061 ;; *************** function _main *****************
  9062 ;; Defined at:
  9063 ;;		line 80 in file "main.c"
  9064 ;; Parameters:    Size  Location     Type
  9065 ;;		None
  9066 ;; Auto vars:     Size  Location     Type
  9067 ;;		None
  9068 ;; Return value:  Size  Location     Type
  9069 ;;                  1    wreg      void 
  9070 ;; Registers used:
  9071 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9072 ;; Tracked objects:
  9073 ;;		On entry : B1F/0
  9074 ;;		On exit  : 1E/0
  9075 ;;		Unchanged: 0/0
  9076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9081 ;;Total ram usage:        0 bytes
  9082 ;; Hardware stack levels required when called:   12
  9083 ;; This function calls:
  9084 ;;		_ClearInterrupt
  9085 ;;		_DataInitSet
  9086 ;;		_GP_Ports_FSM
  9087 ;;		_NavKey_FSM
  9088 ;;		_SYSTEM_Initialize
  9089 ;;		_TMR3_SetInterruptHandler
  9090 ;;		_TMR3_StartTimer
  9091 ;; This function is called by:
  9092 ;;		Startup code after reset
  9093 ;; This function uses a non-reentrant model
  9094 ;;
  9095                           
  9096                           
  9097                           ;psect for function _main
  9098  0047                     _main:	
  9099  0047                     l7396:	
  9100                           ;incstack = 0
  9101                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9102                           
  9103                           
  9104                           ;main.c: 82: SYSTEM_Initialize();
  9105  0047  3193  2355  3180   	fcall	_SYSTEM_Initialize
  9106                           
  9107                           ;main.c: 88: (INTCONbits.GIE = 1);
  9108  004A  178B               	bsf	11,7	;volatile
  9109                           
  9110                           ;main.c: 91: (INTCONbits.PEIE = 1);
  9111  004B  170B               	bsf	11,6	;volatile
  9112                           
  9113                           ;main.c: 99: TMR3_SetInterruptHandler(TimerInt);
  9114  004C  30AB               	movlw	low _TimerInt
  9115  004D  0021               	movlb	1	; select bank1
  9116  004E  00C7               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
  9117  004F  3009               	movlw	high _TimerInt
  9118  0050  00C8               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  9119  0051  2423  3180         	fcall	_TMR3_SetInterruptHandler
  9120                           
  9121                           ;main.c: 100: DataInitSet();
  9122  0053  2068  3180         	fcall	_DataInitSet
  9123  0055  150E               	bsf	14,2	;volatile
  9124  0056  148E               	bsf	14,1	;volatile
  9125  0057  140E               	bsf	14,0	;volatile
  9126                           
  9127                           ;main.c: 105: TMR3_StartTimer();
  9128  0058  2428  3180         	fcall	_TMR3_StartTimer
  9129                           
  9130                           ;main.c: 106: ClearInterrupt();
  9131  005A  2065  3180         	fcall	_ClearInterrupt
  9132  005C                     l7412:	
  9133                           
  9134                           ;main.c: 109: if (fsm_tmr == 1) {
  9135  005C  0021               	movlb	1	; select bank1
  9136  005D  0B46               	decfsz	_fsm_tmr^(0+128),w
  9137  005E  285C               	goto	l7412
  9138                           
  9139                           ;main.c: 111: fsm_tmr = 0;
  9140  005F  01C6               	clrf	_fsm_tmr^(0+128)
  9141                           
  9142                           ;main.c: 112: NavKey_FSM();
  9143  0060  2409  3180         	fcall	_NavKey_FSM
  9144                           
  9145                           ;main.c: 113: GP_Ports_FSM();
  9146  0062  20C1  3180         	fcall	_GP_Ports_FSM
  9147  0064  285C               	goto	l7412
  9148  0065                     __end_of_main:	
  9149  0065                     __ptext40:	
  9150 ;; *************** function _ClearInterrupt *****************
  9151 ;; Defined at:
  9152 ;;		line 66 in file "main.c"
  9153 ;; Parameters:    Size  Location     Type
  9154 ;;		None
  9155 ;; Auto vars:     Size  Location     Type
  9156 ;;		None
  9157 ;; Return value:  Size  Location     Type
  9158 ;;                  1    wreg      void 
  9159 ;; Registers used:
  9160 ;;		None
  9161 ;; Tracked objects:
  9162 ;;		On entry : 1F/8
  9163 ;;		On exit  : 1F/2
  9164 ;;		Unchanged: 0/0
  9165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9170 ;;Total ram usage:        0 bytes
  9171 ;; Hardware stack levels used:    1
  9172 ;; Hardware stack levels required when called:    7
  9173 ;; This function calls:
  9174 ;;		Nothing
  9175 ;; This function is called by:
  9176 ;;		_main
  9177 ;; This function uses a non-reentrant model
  9178 ;;
  9179                           
  9180                           
  9181                           ;psect for function _ClearInterrupt
  9182  0065                     _ClearInterrupt:	
  9183                           
  9184                           ;incstack = 0
  9185                           ; Regs used in _ClearInterrupt: []
  9186                           ;main.c: 67: do { LATBbits.LATB5 = 1; } while(0);
  9187  0065  0022               	movlb	2	; select bank2
  9188  0066  168D               	bsf	13,5	;volatile
  9189  0067  0008               	return
  9190  0068                     __end_of_ClearInterrupt:	
  9191  0068                     __ptext39:	
  9192 ;; *************** function _DataInitSet *****************
  9193 ;; Defined at:
  9194 ;;		line 54 in file "DataVariable.c"
  9195 ;; Parameters:    Size  Location     Type
  9196 ;;		None
  9197 ;; Auto vars:     Size  Location     Type
  9198 ;;		None
  9199 ;; Return value:  Size  Location     Type
  9200 ;;                  1    wreg      void 
  9201 ;; Registers used:
  9202 ;;		wreg, status,2
  9203 ;; Tracked objects:
  9204 ;;		On entry : 1F/1
  9205 ;;		On exit  : 1F/1
  9206 ;;		Unchanged: 0/0
  9207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9212 ;;Total ram usage:        0 bytes
  9213 ;; Hardware stack levels used:    1
  9214 ;; Hardware stack levels required when called:    7
  9215 ;; This function calls:
  9216 ;;		Nothing
  9217 ;; This function is called by:
  9218 ;;		_main
  9219 ;; This function uses a non-reentrant model
  9220 ;;
  9221                           
  9222                           
  9223                           ;psect for function _DataInitSet
  9224  0068                     _DataInitSet:	
  9225                           
  9226                           ;DataVariable.c: 55: GCONF = 0;
  9227                           
  9228                           ;incstack = 0
  9229                           ; Regs used in _DataInitSet: [wreg+status,2]
  9230  0068  0020               	movlb	0	; select bank0
  9231  0069  01C9               	clrf	_GCONF	;volatile
  9232                           
  9233                           ;DataVariable.c: 56: GP1CONF = 0;
  9234  006A  01C8               	clrf	_GP1CONF	;volatile
  9235                           
  9236                           ;DataVariable.c: 57: GP3CONF = 0;
  9237  006B  01C6               	clrf	_GP3CONF	;volatile
  9238                           
  9239                           ;DataVariable.c: 58: INTCONF.val = 0;
  9240  006C  01B0               	clrf	_INTCONF	;volatile
  9241  006D  01B1               	clrf	_INTCONF+1	;volatile
  9242                           
  9243                           ;DataVariable.c: 59: NSTATUS.val = 0;
  9244  006E  01B2               	clrf	_NSTATUS	;volatile
  9245  006F  01B3               	clrf	_NSTATUS+1	;volatile
  9246                           
  9247                           ;DataVariable.c: 60: CVAL.val = 0;
  9248  0070  01AC               	clrf	_CVAL	;volatile
  9249  0071  01AD               	clrf	_CVAL+1	;volatile
  9250  0072  01AE               	clrf	_CVAL+2	;volatile
  9251  0073  01AF               	clrf	_CVAL+3	;volatile
  9252                           
  9253                           ;DataVariable.c: 61: CMAX.val = 0;
  9254  0074  01A8               	clrf	_CMAX	;volatile
  9255  0075  01A9               	clrf	_CMAX+1	;volatile
  9256  0076  01AA               	clrf	_CMAX+2	;volatile
  9257  0077  01AB               	clrf	_CMAX+3	;volatile
  9258                           
  9259                           ;DataVariable.c: 62: CMIN.val = 0;
  9260  0078  01A4               	clrf	_CMIN	;volatile
  9261  0079  01A5               	clrf	_CMIN+1	;volatile
  9262  007A  01A6               	clrf	_CMIN+2	;volatile
  9263  007B  01A7               	clrf	_CMIN+3	;volatile
  9264                           
  9265                           ;DataVariable.c: 63: ISTEP.val = 1;
  9266  007C  3001               	movlw	1
  9267  007D  00A0               	movwf	_ISTEP	;volatile
  9268  007E  01A1               	clrf	_ISTEP+1	;volatile
  9269  007F  01A2               	clrf	_ISTEP+2	;volatile
  9270  0080  01A3               	clrf	_ISTEP+3	;volatile
  9271                           
  9272                           ;DataVariable.c: 64: GP1REG = 0;
  9273  0081  01C3               	clrf	_GP1REG	;volatile
  9274                           
  9275                           ;DataVariable.c: 65: GP2REG = 0;
  9276  0082  01C2               	clrf	_GP2REG	;volatile
  9277                           
  9278                           ;DataVariable.c: 66: GP3REG = 0;
  9279  0083  01C1               	clrf	_GP3REG	;volatile
  9280                           
  9281                           ;DataVariable.c: 67: C_RESET = 0;
  9282  0084  0021               	movlb	1	; select bank1
  9283  0085  01C5               	clrf	_C_RESET^(0+128)	;volatile
  9284                           
  9285                           ;DataVariable.c: 68: C_MBANK = 0;
  9286  0086  0020               	movlb	0	; select bank0
  9287  0087  01BB               	clrf	_C_MBANK	;volatile
  9288                           
  9289                           ;DataVariable.c: 69: C_CKSRC = 0;
  9290  0088  0021               	movlb	1	; select bank1
  9291  0089  01C4               	clrf	_C_CKSRC^(0+128)	;volatile
  9292                           
  9293                           ;DataVariable.c: 70: C_IPUD = 0;
  9294  008A  01C3               	clrf	_C_IPUD^(0+128)	;volatile
  9295                           
  9296                           ;DataVariable.c: 71: C_DIRE = 0;
  9297  008B  01C2               	clrf	_C_DIRE^(0+128)	;volatile
  9298                           
  9299                           ;DataVariable.c: 72: C_WRAPE = 0;
  9300  008C  0020               	movlb	0	; select bank0
  9301  008D  01BA               	clrf	_C_WRAPE	;volatile
  9302                           
  9303                           ;DataVariable.c: 73: C_DTYPE = 0;
  9304  008E  01B9               	clrf	_C_DTYPE	;volatile
  9305                           
  9306                           ;DataVariable.c: 75: DPPERIOD = 0;
  9307  008F  01C0               	clrf	_DPPERIOD	;volatile
  9308                           
  9309                           ;DataVariable.c: 76: FADEGP = 0;
  9310  0090  01BF               	clrf	_FADEGP	;volatile
  9311                           
  9312                           ;DataVariable.c: 77: GAMMAGP1=0;
  9313  0091  01BE               	clrf	_GAMMAGP1	;volatile
  9314                           
  9315                           ;DataVariable.c: 78: GAMMAGP2=0;
  9316  0092  01BD               	clrf	_GAMMAGP2	;volatile
  9317                           
  9318                           ;DataVariable.c: 79: GAMMAGP3=0;
  9319  0093  01BC               	clrf	_GAMMAGP3	;volatile
  9320                           
  9321                           ;DataVariable.c: 80: DoublePush = 0;
  9322  0094  0021               	movlb	1	; select bank1
  9323  0095  01B3               	clrf	_DoublePush^(0+128)	;volatile
  9324  0096  01B4               	clrf	(_DoublePush+1)^(0+128)	;volatile
  9325  0097  0008               	return
  9326  0098                     __end_of_DataInitSet:	
  9327  0098                     __ptext31:	
  9328 ;; *************** function _FADE_GP1 *****************
  9329 ;; Defined at:
  9330 ;;		line 26 in file "GPports.c"
  9331 ;; Parameters:    Size  Location     Type
  9332 ;;		None
  9333 ;; Auto vars:     Size  Location     Type
  9334 ;;		None
  9335 ;; Return value:  Size  Location     Type
  9336 ;;                  1    wreg      void 
  9337 ;; Registers used:
  9338 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9339 ;; Tracked objects:
  9340 ;;		On entry : 1F/0
  9341 ;;		On exit  : 18/0
  9342 ;;		Unchanged: 0/0
  9343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9348 ;;Total ram usage:        0 bytes
  9349 ;; Hardware stack levels used:    1
  9350 ;; Hardware stack levels required when called:   10
  9351 ;; This function calls:
  9352 ;;		_FadeProcessClear
  9353 ;;		_FadeProcessSet
  9354 ;;		_PWM_GP1
  9355 ;; This function is called by:
  9356 ;;		_GP_Ports_FSM
  9357 ;; This function uses a non-reentrant model
  9358 ;;
  9359                           
  9360                           
  9361                           ;psect for function _FADE_GP1
  9362  0098                     _FADE_GP1:	
  9363                           
  9364                           ;GPports.c: 28: if ((GP1CONF & 0x03) != 0x00)
  9365                           
  9366                           ;incstack = 0
  9367                           ; Regs used in _FADE_GP1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9368  0098  0848               	movf	_GP1CONF,w	;volatile
  9369  0099  3903               	andlw	3
  9370  009A  1D03               	btfss	3,2
  9371  009B  0008               	return
  9372                           
  9373                           ;GPports.c: 31: if (FADEGP == 0) {
  9374  009C  083F               	movf	_FADEGP,w	;volatile
  9375  009D  1D03               	btfss	3,2
  9376  009E  28A6               	goto	l6922
  9377                           
  9378                           ;GPports.c: 32: if (temp_gp1 != GP1REG) {
  9379  009F  0837               	movf	_temp_gp1,w
  9380  00A0  0643               	xorwf	_GP1REG,w	;volatile
  9381  00A1  1903               	skipnz
  9382  00A2  0008               	return
  9383                           
  9384                           ;GPports.c: 33: temp_gp1 = GP1REG;
  9385  00A3  0843               	movf	_GP1REG,w	;volatile
  9386  00A4  00B7               	movwf	_temp_gp1
  9387                           
  9388                           ;GPports.c: 34: PWM_GP1(temp_gp1);
  9389  00A5  2B63               	ljmp	_PWM_GP1
  9390  00A6                     l6922:	
  9391                           
  9392                           ;GPports.c: 37: };GPports.c: 39: if (gp_fade_cnt >= FADEGP) {
  9393  00A6  083F               	movf	_FADEGP,w	;volatile
  9394  00A7  0234               	subwf	_gp_fade_cnt,w
  9395  00A8  1C03               	skipc
  9396  00A9  0008               	return
  9397                           
  9398                           ;GPports.c: 40: if (temp_gp1 != GP1REG) {
  9399  00AA  0837               	movf	_temp_gp1,w
  9400  00AB  0643               	xorwf	_GP1REG,w	;volatile
  9401  00AC  1903               	skipnz
  9402  00AD  0008               	return
  9403                           
  9404                           ;GPports.c: 42: if (temp_gp1 < GP1REG) {
  9405  00AE  0843               	movf	_GP1REG,w	;volatile
  9406  00AF  0237               	subwf	_temp_gp1,w
  9407  00B0  1C03               	btfss	3,0
  9408                           
  9409                           ;GPports.c: 43: temp_gp1++;
  9410  00B1  0AB7               	incf	_temp_gp1,f
  9411                           
  9412                           ;GPports.c: 44: };GPports.c: 45: if (temp_gp1 > GP1REG) {
  9413  00B2  0837               	movf	_temp_gp1,w
  9414  00B3  0243               	subwf	_GP1REG,w	;volatile
  9415  00B4  1C03               	btfss	3,0
  9416                           
  9417                           ;GPports.c: 46: temp_gp1--;
  9418  00B5  03B7               	decf	_temp_gp1,f
  9419                           
  9420                           ;GPports.c: 47: };GPports.c: 49: PWM_GP1(temp_gp1);
  9421  00B6  0837               	movf	_temp_gp1,w
  9422  00B7  2363  3180         	fcall	_PWM_GP1
  9423                           
  9424                           ;GPports.c: 50: if (temp_gp1 == GP1REG) {
  9425  00B9  0020               	movlb	0	; select bank0
  9426  00BA  0837               	movf	_temp_gp1,w
  9427  00BB  0643               	xorwf	_GP1REG,w	;volatile
  9428                           
  9429                           ;GPports.c: 51: FadeProcessClear(F_FGP1);
  9430  00BC  3001               	movlw	1
  9431  00BD  1D03               	skipz
  9432  00BE  28C0               	goto	L5
  9433  00BF  2BFB               	ljmp	_FadeProcessClear
  9434  00C0                     L5:	
  9435                           ;GPports.c: 53: FadeProcessSet(F_FGP1);
  9436                           
  9437                           ;GPports.c: 52: } else {
  9438                           
  9439  00C0  2C04               	ljmp	_FadeProcessSet
  9440  00C1                     __end_of_FADE_GP1:	
  9441  00C1                     __ptext21:	
  9442 ;; *************** function _GP_Ports_FSM *****************
  9443 ;; Defined at:
  9444 ;;		line 489 in file "GPports.c"
  9445 ;; Parameters:    Size  Location     Type
  9446 ;;		None
  9447 ;; Auto vars:     Size  Location     Type
  9448 ;;		None
  9449 ;; Return value:  Size  Location     Type
  9450 ;;                  1    wreg      void 
  9451 ;; Registers used:
  9452 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9453 ;; Tracked objects:
  9454 ;;		On entry : 1C/1
  9455 ;;		On exit  : 1E/0
  9456 ;;		Unchanged: 0/0
  9457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9460 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9461 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9462 ;;Total ram usage:        1 bytes
  9463 ;; Hardware stack levels used:    1
  9464 ;; Hardware stack levels required when called:   11
  9465 ;; This function calls:
  9466 ;;		_FADE_GP1
  9467 ;;		_FADE_GP2
  9468 ;;		_FADE_GP3
  9469 ;;		_GP1_FSM
  9470 ;;		_GP2_FSM
  9471 ;;		_GP3_FSM
  9472 ;; This function is called by:
  9473 ;;		_main
  9474 ;; This function uses a non-reentrant model
  9475 ;;
  9476                           
  9477                           
  9478                           ;psect for function _GP_Ports_FSM
  9479  00C1                     _GP_Ports_FSM:	
  9480                           
  9481                           ;GPports.c: 491: if (FADEGP > 0) {
  9482                           
  9483                           ;incstack = 0
  9484                           ; Regs used in _GP_Ports_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9485  00C1  0020               	movlb	0	; select bank0
  9486  00C2  083F               	movf	_FADEGP,w	;volatile
  9487  00C3  1903               	btfsc	3,2
  9488  00C4  28D8               	goto	l7386
  9489                           
  9490                           ;GPports.c: 492: FADE_GP1();
  9491  00C5  2098  3180         	fcall	_FADE_GP1
  9492                           
  9493                           ;GPports.c: 493: FADE_GP2();
  9494  00C7  2233  3180         	fcall	_FADE_GP2
  9495                           
  9496                           ;GPports.c: 494: FADE_GP3();
  9497  00C9  2209  3180         	fcall	_FADE_GP3
  9498                           
  9499                           ;GPports.c: 496: if (gp_fade_cnt++ >= FADEGP) {
  9500  00CB  0020               	movlb	0	; select bank0
  9501  00CC  0834               	movf	_gp_fade_cnt,w
  9502  00CD  0AB4               	incf	_gp_fade_cnt,f
  9503  00CE  0021               	movlb	1	; select bank1
  9504  00CF  00D6               	movwf	??_GP_Ports_FSM^(0+128)
  9505  00D0  0020               	movlb	0	; select bank0
  9506  00D1  083F               	movf	_FADEGP,w	;volatile
  9507  00D2  0021               	movlb	1	; select bank1
  9508  00D3  0256               	subwf	??_GP_Ports_FSM^(0+128),w
  9509  00D4  1C03               	skipc
  9510  00D5  28D8               	goto	l7386
  9511                           
  9512                           ;GPports.c: 497: gp_fade_cnt = 0;
  9513  00D6  0020               	movlb	0	; select bank0
  9514  00D7  01B4               	clrf	_gp_fade_cnt
  9515  00D8                     l7386:	
  9516                           
  9517                           ;GPports.c: 498: };GPports.c: 499: };GPports.c: 503: if (gp_timer++ > 10) {
  9518  00D8  0021               	movlb	1	; select bank1
  9519  00D9  083E               	movf	_gp_timer^(0+128),w
  9520  00DA  0ABE               	incf	_gp_timer^(0+128),f
  9521  00DB  00D6               	movwf	??_GP_Ports_FSM^(0+128)
  9522  00DC  300B               	movlw	11
  9523  00DD  0256               	subwf	??_GP_Ports_FSM^(0+128),w
  9524  00DE  1C03               	skipc
  9525  00DF  0008               	return
  9526                           
  9527                           ;GPports.c: 504: gp_timer = 0;
  9528  00E0  01BE               	clrf	_gp_timer^(0+128)
  9529                           
  9530                           ;GPports.c: 505: GP1_FSM();
  9531  00E1  20E6  3180         	fcall	_GP1_FSM
  9532                           
  9533                           ;GPports.c: 506: GP2_FSM();
  9534  00E3  217E  3180         	fcall	_GP2_FSM
  9535                           
  9536                           ;GPports.c: 507: GP3_FSM();
  9537  00E5  2931               	ljmp	l7102
  9538  00E6                     __end_of_GP_Ports_FSM:	
  9539  00E6                     __ptext24:	
  9540 ;; *************** function _GP1_FSM *****************
  9541 ;; Defined at:
  9542 ;;		line 350 in file "GPports.c"
  9543 ;; Parameters:    Size  Location     Type
  9544 ;;		None
  9545 ;; Auto vars:     Size  Location     Type
  9546 ;;		None
  9547 ;; Return value:  Size  Location     Type
  9548 ;;                  1    wreg      void 
  9549 ;; Registers used:
  9550 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9551 ;; Tracked objects:
  9552 ;;		On entry : 1F/1
  9553 ;;		On exit  : 1E/0
  9554 ;;		Unchanged: 0/0
  9555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9558 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9559 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9560 ;;Total ram usage:        2 bytes
  9561 ;; Hardware stack levels used:    1
  9562 ;; Hardware stack levels required when called:    9
  9563 ;; This function calls:
  9564 ;;		_ADC_GetConversion
  9565 ;;		_ADC_Initialize
  9566 ;;		_Int2StatusUpdate
  9567 ;;		_SetInterrupt
  9568 ;; This function is called by:
  9569 ;;		_GP_Ports_FSM
  9570 ;; This function uses a non-reentrant model
  9571 ;;
  9572                           
  9573                           
  9574                           ;psect for function _GP1_FSM
  9575  00E6                     _GP1_FSM:	
  9576                           
  9577                           ;GPports.c: 351: switch (gp1_fsm) {
  9578                           
  9579                           ;incstack = 0
  9580                           ; Regs used in _GP1_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9581  00E6  2926               	goto	l7050
  9582  00E7                     l7012:	
  9583                           
  9584                           ;GPports.c: 353: if ((GP1CONF & 0x03) == 0x02) {
  9585  00E7  3003               	movlw	3
  9586  00E8  0020               	movlb	0	; select bank0
  9587  00E9  0548               	andwf	_GP1CONF,w	;volatile
  9588  00EA  0021               	movlb	1	; select bank1
  9589  00EB  00CB               	movwf	??_GP1_FSM^(0+128)
  9590  00EC  3A02               	xorlw	2
  9591  00ED  1D03               	btfss	3,2
  9592  00EE  28F2               	goto	l7020
  9593                           
  9594                           ;GPports.c: 354: gp1_fsm = GP_ADC_MODE;
  9595  00EF  01BD               	clrf	_gp1_fsm^(0+128)
  9596  00F0  0ABD               	incf	_gp1_fsm^(0+128),f
  9597                           
  9598                           ;GPports.c: 355: ADC_Initialize();
  9599  00F1  2A01               	ljmp	l6612
  9600  00F2                     l7020:	
  9601                           
  9602                           ;GPports.c: 357: };GPports.c: 358: if ((GP1CONF & 0x03) == 0x03) {
  9603  00F2  3003               	movlw	3
  9604  00F3  0020               	movlb	0	; select bank0
  9605  00F4  0548               	andwf	_GP1CONF,w	;volatile
  9606  00F5  0021               	movlb	1	; select bank1
  9607  00F6  00CB               	movwf	??_GP1_FSM^(0+128)
  9608  00F7  3A03               	xorlw	3
  9609  00F8  1D03               	btfss	3,2
  9610  00F9  0008               	return
  9611  00FA                     l7022:	
  9612                           
  9613                           ;GPports.c: 359: gp1_fsm = GP_WAITRISE;
  9614  00FA  3002               	movlw	2
  9615  00FB  0021               	movlb	1	; select bank1
  9616  00FC  00BD               	movwf	_gp1_fsm^(0+128)
  9617  00FD  0008               	return
  9618  00FE                     l7026:	
  9619                           
  9620                           ;GPports.c: 365: GP1REG = (ADC_GetConversion(A_GP1) >> 2);
  9621  00FE  3012               	movlw	18
  9622  00FF  21E6               	fcall	_ADC_GetConversion
  9623  0100  0847               	movf	?_ADC_GetConversion^(0+128),w
  9624  0101  00CB               	movwf	??_GP1_FSM^(0+128)
  9625  0102  0848               	movf	(?_ADC_GetConversion+1)^(0+128),w
  9626  0103  00CC               	movwf	(??_GP1_FSM^(0+128)+1)
  9627  0104  36CC               	lsrf	(??_GP1_FSM^(0+128)+1),f
  9628  0105  0CCB               	rrf	??_GP1_FSM^(0+128),f
  9629  0106  36CC               	lsrf	(??_GP1_FSM^(0+128)+1),f
  9630  0107  0CCB               	rrf	??_GP1_FSM^(0+128),f
  9631  0108  084B               	movf	??_GP1_FSM^(0+128),w
  9632  0109  0020               	movlb	0	; select bank0
  9633  010A  00C3               	movwf	_GP1REG	;volatile
  9634                           
  9635                           ;GPports.c: 366: break;
  9636  010B  0008               	return
  9637  010C                     l1118:	
  9638                           ;GPports.c: 368: case GP_WAITRISE:
  9639                           
  9640                           
  9641                           ;GPports.c: 369: if (PORTCbits.RC2 == 1) {
  9642  010C  0020               	movlb	0	; select bank0
  9643  010D  1D0E               	btfss	14,2	;volatile
  9644  010E  0008               	return
  9645                           
  9646                           ;GPports.c: 370: GP1REG = 1;
  9647  010F  3001               	movlw	1
  9648  0110  00C3               	movwf	_GP1REG	;volatile
  9649                           
  9650                           ;GPports.c: 371: Int2StatusUpdate(E_GP1POS);
  9651  0111  21CB  3180         	fcall	_Int2StatusUpdate
  9652                           
  9653                           ;GPports.c: 372: if ((GP1CONF & 0x08) != 0) {
  9654  0113  1DC8               	btfss	_GP1CONF,3	;volatile
  9655  0114  2916               	goto	l7036
  9656                           
  9657                           ;GPports.c: 373: SetInterrupt();
  9658  0115  21D5               	fcall	_SetInterrupt
  9659  0116                     l7036:	
  9660                           
  9661                           ;GPports.c: 374: };GPports.c: 375: gp1_fsm = GP_WAITFALL;
  9662  0116  3003               	movlw	3
  9663  0117  0021               	movlb	1	; select bank1
  9664  0118  00BD               	movwf	_gp1_fsm^(0+128)
  9665  0119  0008               	return
  9666  011A                     l1121:	
  9667                           ;GPports.c: 379: case GP_WAITFALL:
  9668                           
  9669                           
  9670                           ;GPports.c: 380: if (PORTCbits.RC2 == 0) {
  9671  011A  0020               	movlb	0	; select bank0
  9672  011B  190E               	btfsc	14,2	;volatile
  9673  011C  0008               	return
  9674                           
  9675                           ;GPports.c: 381: GP1REG = 0;
  9676  011D  01C3               	clrf	_GP1REG	;volatile
  9677                           
  9678                           ;GPports.c: 382: Int2StatusUpdate(E_GP1NEG);
  9679  011E  3002               	movlw	2
  9680  011F  21CB  3180         	fcall	_Int2StatusUpdate
  9681                           
  9682                           ;GPports.c: 383: if ((GP1CONF & 0x10) != 0) {
  9683  0121  1E48               	btfss	_GP1CONF,4	;volatile
  9684  0122  28FA               	goto	l7022
  9685                           
  9686                           ;GPports.c: 384: SetInterrupt();
  9687  0123  21D5  3180         	fcall	_SetInterrupt
  9688  0125  28FA               	goto	l7022
  9689  0126                     l7050:	
  9690  0126  083D               	movf	_gp1_fsm^(0+128),w
  9691                           
  9692                           ; Switch size 1, requested type "speed"
  9693                           ; Number of cases is 4, Range of values is 0 to 3
  9694                           ; switch strategies available:
  9695                           ; Name         Instructions Cycles
  9696                           ; direct_byte           14     6 (fixed)
  9697                           ; simple_byte           13     7 (average)
  9698                           ; jumptable            260     6 (fixed)
  9699                           ;	Chosen strategy is direct_byte
  9700  0127  0084               	movwf	4
  9701  0128  3004               	movlw	4
  9702  0129  0204               	subwf	4,w
  9703  012A  1803               	skipnc
  9704  012B  0008               	return
  9705  012C  3190               	movlp	high S7756
  9706  012D  3504               	lslf	4,w
  9707  012E  3E44               	addlw	low S7756
  9708  012F  0082               	movwf	2
  9709  0130  0008               	return
  9710  0131                     __end_of_GP1_FSM:	
  9711  0131                     __ptext22:	
  9712 ;; *************** function _GP3_FSM *****************
  9713 ;; Defined at:
  9714 ;;		line 444 in file "GPports.c"
  9715 ;; Parameters:    Size  Location     Type
  9716 ;;		None
  9717 ;; Auto vars:     Size  Location     Type
  9718 ;;		None
  9719 ;; Return value:  Size  Location     Type
  9720 ;;                  1    wreg      void 
  9721 ;; Registers used:
  9722 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9723 ;; Tracked objects:
  9724 ;;		On entry : 1E/1
  9725 ;;		On exit  : 1E/0
  9726 ;;		Unchanged: 0/0
  9727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9730 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9731 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9732 ;;Total ram usage:        2 bytes
  9733 ;; Hardware stack levels used:    1
  9734 ;; Hardware stack levels required when called:    9
  9735 ;; This function calls:
  9736 ;;		_ADC_GetConversion
  9737 ;;		_ADC_Initialize
  9738 ;;		_Int2StatusUpdate
  9739 ;;		_SetInterrupt
  9740 ;; This function is called by:
  9741 ;;		_GP_Ports_FSM
  9742 ;; This function uses a non-reentrant model
  9743 ;;
  9744                           
  9745                           
  9746                           ;psect for function _GP3_FSM
  9747  0131                     _GP3_FSM:	
  9748  0131                     l7102:	
  9749                           ;incstack = 0
  9750                           ; Regs used in _GP3_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9751                           
  9752                           
  9753                           ;GPports.c: 446: switch (gp3_fsm) {
  9754  0131  2972               	goto	l7142
  9755  0132                     l7104:	
  9756                           
  9757                           ;GPports.c: 448: if ((GP3CONF & 0x03) == 0x02) {
  9758  0132  3003               	movlw	3
  9759  0133  0020               	movlb	0	; select bank0
  9760  0134  0546               	andwf	_GP3CONF,w	;volatile
  9761  0135  0021               	movlb	1	; select bank1
  9762  0136  00CB               	movwf	??_GP3_FSM^(0+128)
  9763  0137  3A02               	xorlw	2
  9764  0138  1D03               	btfss	3,2
  9765  0139  293D               	goto	l7112
  9766                           
  9767                           ;GPports.c: 449: gp3_fsm = GP_ADC_MODE;
  9768  013A  01BB               	clrf	_gp3_fsm^(0+128)
  9769  013B  0ABB               	incf	_gp3_fsm^(0+128),f
  9770                           
  9771                           ;GPports.c: 450: ADC_Initialize();
  9772  013C  2A01               	ljmp	l6612
  9773  013D                     l7112:	
  9774                           
  9775                           ;GPports.c: 452: };GPports.c: 454: if ((GP3CONF & 0x03) == 0x03) {
  9776  013D  3003               	movlw	3
  9777  013E  0020               	movlb	0	; select bank0
  9778  013F  0546               	andwf	_GP3CONF,w	;volatile
  9779  0140  0021               	movlb	1	; select bank1
  9780  0141  00CB               	movwf	??_GP3_FSM^(0+128)
  9781  0142  3A03               	xorlw	3
  9782  0143  1D03               	btfss	3,2
  9783  0144  0008               	return
  9784  0145                     l7114:	
  9785                           
  9786                           ;GPports.c: 455: gp3_fsm = GP_WAITRISE;
  9787  0145  3002               	movlw	2
  9788  0146  0021               	movlb	1	; select bank1
  9789  0147  00BB               	movwf	_gp3_fsm^(0+128)
  9790  0148  0008               	return
  9791  0149                     l7118:	
  9792                           
  9793                           ;GPports.c: 461: GP3REG = (ADC_GetConversion(A_GP3) >> 2);
  9794  0149  3010               	movlw	16
  9795  014A  21E6               	fcall	_ADC_GetConversion
  9796  014B  0847               	movf	?_ADC_GetConversion^(0+128),w
  9797  014C  00CB               	movwf	??_GP3_FSM^(0+128)
  9798  014D  0848               	movf	(?_ADC_GetConversion+1)^(0+128),w
  9799  014E  00CC               	movwf	(??_GP3_FSM^(0+128)+1)
  9800  014F  36CC               	lsrf	(??_GP3_FSM^(0+128)+1),f
  9801  0150  0CCB               	rrf	??_GP3_FSM^(0+128),f
  9802  0151  36CC               	lsrf	(??_GP3_FSM^(0+128)+1),f
  9803  0152  0CCB               	rrf	??_GP3_FSM^(0+128),f
  9804  0153  084B               	movf	??_GP3_FSM^(0+128),w
  9805  0154  0020               	movlb	0	; select bank0
  9806  0155  00C1               	movwf	_GP3REG	;volatile
  9807                           
  9808                           ;GPports.c: 462: break;
  9809  0156  0008               	return
  9810  0157                     l1148:	
  9811                           ;GPports.c: 464: case GP_WAITRISE:
  9812                           
  9813                           
  9814                           ;GPports.c: 465: if (PORTCbits.RC0 == 1) {
  9815  0157  0020               	movlb	0	; select bank0
  9816  0158  1C0E               	btfss	14,0	;volatile
  9817  0159  0008               	return
  9818                           
  9819                           ;GPports.c: 466: GP3REG = 1;
  9820  015A  3001               	movlw	1
  9821  015B  00C1               	movwf	_GP3REG	;volatile
  9822                           
  9823                           ;GPports.c: 467: Int2StatusUpdate(E_GP3POS);
  9824  015C  3010               	movlw	16
  9825  015D  21CB  3180         	fcall	_Int2StatusUpdate
  9826                           
  9827                           ;GPports.c: 468: if ((GP3CONF & 0x08) != 0) {
  9828  015F  1DC6               	btfss	_GP3CONF,3	;volatile
  9829  0160  2962               	goto	l7128
  9830                           
  9831                           ;GPports.c: 469: SetInterrupt();
  9832  0161  21D5               	fcall	_SetInterrupt
  9833  0162                     l7128:	
  9834                           
  9835                           ;GPports.c: 470: };GPports.c: 471: gp3_fsm = GP_WAITFALL;
  9836  0162  3003               	movlw	3
  9837  0163  0021               	movlb	1	; select bank1
  9838  0164  00BB               	movwf	_gp3_fsm^(0+128)
  9839  0165  0008               	return
  9840  0166                     l1151:	
  9841                           ;GPports.c: 475: case GP_WAITFALL:
  9842                           
  9843                           
  9844                           ;GPports.c: 476: if (PORTCbits.RC0 == 0) {
  9845  0166  0020               	movlb	0	; select bank0
  9846  0167  180E               	btfsc	14,0	;volatile
  9847  0168  0008               	return
  9848                           
  9849                           ;GPports.c: 478: GP3REG = 0;
  9850  0169  01C1               	clrf	_GP3REG	;volatile
  9851                           
  9852                           ;GPports.c: 479: Int2StatusUpdate(E_GP3NEG);
  9853  016A  3020               	movlw	32
  9854  016B  21CB  3180         	fcall	_Int2StatusUpdate
  9855                           
  9856                           ;GPports.c: 480: if ((GP3CONF & 0x10) != 0) {
  9857  016D  1E46               	btfss	_GP3CONF,4	;volatile
  9858  016E  2945               	goto	l7114
  9859                           
  9860                           ;GPports.c: 481: SetInterrupt();
  9861  016F  21D5  3180         	fcall	_SetInterrupt
  9862  0171  2945               	goto	l7114
  9863  0172                     l7142:	
  9864  0172  0021               	movlb	1	; select bank1
  9865  0173  083B               	movf	_gp3_fsm^(0+128),w
  9866                           
  9867                           ; Switch size 1, requested type "speed"
  9868                           ; Number of cases is 4, Range of values is 0 to 3
  9869                           ; switch strategies available:
  9870                           ; Name         Instructions Cycles
  9871                           ; direct_byte           14     6 (fixed)
  9872                           ; simple_byte           13     7 (average)
  9873                           ; jumptable            260     6 (fixed)
  9874                           ;	Chosen strategy is direct_byte
  9875  0174  0084               	movwf	4
  9876  0175  3004               	movlw	4
  9877  0176  0204               	subwf	4,w
  9878  0177  1803               	skipnc
  9879  0178  0008               	return
  9880  0179  3189               	movlp	high S7752
  9881  017A  3504               	lslf	4,w
  9882  017B  3EA3               	addlw	low S7752
  9883  017C  0082               	movwf	2
  9884  017D  0008               	return
  9885  017E                     __end_of_GP3_FSM:	
  9886  017E                     __ptext23:	
  9887 ;; *************** function _GP2_FSM *****************
  9888 ;; Defined at:
  9889 ;;		line 395 in file "GPports.c"
  9890 ;; Parameters:    Size  Location     Type
  9891 ;;		None
  9892 ;; Auto vars:     Size  Location     Type
  9893 ;;		None
  9894 ;; Return value:  Size  Location     Type
  9895 ;;                  1    wreg      void 
  9896 ;; Registers used:
  9897 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9898 ;; Tracked objects:
  9899 ;;		On entry : 1E/1
  9900 ;;		On exit  : 1E/0
  9901 ;;		Unchanged: 0/0
  9902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9905 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9906 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9907 ;;Total ram usage:        2 bytes
  9908 ;; Hardware stack levels used:    1
  9909 ;; Hardware stack levels required when called:    9
  9910 ;; This function calls:
  9911 ;;		_ADC_GetConversion
  9912 ;;		_ADC_Initialize
  9913 ;;		_Int2StatusUpdate
  9914 ;;		_SetInterrupt
  9915 ;; This function is called by:
  9916 ;;		_GP_Ports_FSM
  9917 ;; This function uses a non-reentrant model
  9918 ;;
  9919                           
  9920                           
  9921                           ;psect for function _GP2_FSM
  9922  017E                     _GP2_FSM:	
  9923                           
  9924                           ;GPports.c: 397: switch (gp2_fsm) {
  9925                           
  9926                           ;incstack = 0
  9927                           ; Regs used in _GP2_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9928  017E  29BF               	goto	l7096
  9929  017F                     l7058:	
  9930                           
  9931                           ;GPports.c: 399: if ((GP2CONF & 0x03) == 0x02) {
  9932  017F  3003               	movlw	3
  9933  0180  0020               	movlb	0	; select bank0
  9934  0181  0547               	andwf	_GP2CONF,w	;volatile
  9935  0182  0021               	movlb	1	; select bank1
  9936  0183  00CB               	movwf	??_GP2_FSM^(0+128)
  9937  0184  3A02               	xorlw	2
  9938  0185  1D03               	btfss	3,2
  9939  0186  298A               	goto	l7066
  9940                           
  9941                           ;GPports.c: 400: gp2_fsm = GP_ADC_MODE;
  9942  0187  01BC               	clrf	_gp2_fsm^(0+128)
  9943  0188  0ABC               	incf	_gp2_fsm^(0+128),f
  9944                           
  9945                           ;GPports.c: 401: ADC_Initialize();
  9946  0189  2A01               	ljmp	l6612
  9947  018A                     l7066:	
  9948                           
  9949                           ;GPports.c: 403: };GPports.c: 405: if ((GP2CONF & 0x03) == 0x03) {
  9950  018A  3003               	movlw	3
  9951  018B  0020               	movlb	0	; select bank0
  9952  018C  0547               	andwf	_GP2CONF,w	;volatile
  9953  018D  0021               	movlb	1	; select bank1
  9954  018E  00CB               	movwf	??_GP2_FSM^(0+128)
  9955  018F  3A03               	xorlw	3
  9956  0190  1D03               	btfss	3,2
  9957  0191  0008               	return
  9958  0192                     l7068:	
  9959                           
  9960                           ;GPports.c: 406: gp2_fsm = GP_WAITRISE;
  9961  0192  3002               	movlw	2
  9962  0193  0021               	movlb	1	; select bank1
  9963  0194  00BC               	movwf	_gp2_fsm^(0+128)
  9964  0195  0008               	return
  9965  0196                     l7072:	
  9966                           
  9967                           ;GPports.c: 412: GP2REG = (ADC_GetConversion(A_GP2) >> 2);
  9968  0196  3011               	movlw	17
  9969  0197  21E6               	fcall	_ADC_GetConversion
  9970  0198  0847               	movf	?_ADC_GetConversion^(0+128),w
  9971  0199  00CB               	movwf	??_GP2_FSM^(0+128)
  9972  019A  0848               	movf	(?_ADC_GetConversion+1)^(0+128),w
  9973  019B  00CC               	movwf	(??_GP2_FSM^(0+128)+1)
  9974  019C  36CC               	lsrf	(??_GP2_FSM^(0+128)+1),f
  9975  019D  0CCB               	rrf	??_GP2_FSM^(0+128),f
  9976  019E  36CC               	lsrf	(??_GP2_FSM^(0+128)+1),f
  9977  019F  0CCB               	rrf	??_GP2_FSM^(0+128),f
  9978  01A0  084B               	movf	??_GP2_FSM^(0+128),w
  9979  01A1  0020               	movlb	0	; select bank0
  9980  01A2  00C2               	movwf	_GP2REG	;volatile
  9981                           
  9982                           ;GPports.c: 413: break;
  9983  01A3  0008               	return
  9984  01A4                     l1133:	
  9985                           ;GPports.c: 415: case GP_WAITRISE:
  9986                           
  9987                           
  9988                           ;GPports.c: 416: if (PORTCbits.RC1 == 1) {
  9989  01A4  0020               	movlb	0	; select bank0
  9990  01A5  1C8E               	btfss	14,1	;volatile
  9991  01A6  0008               	return
  9992                           
  9993                           ;GPports.c: 417: GP2REG = 1;
  9994  01A7  3001               	movlw	1
  9995  01A8  00C2               	movwf	_GP2REG	;volatile
  9996                           
  9997                           ;GPports.c: 418: Int2StatusUpdate(E_GP2POS);
  9998  01A9  3004               	movlw	4
  9999  01AA  21CB  3180         	fcall	_Int2StatusUpdate
 10000                           
 10001                           ;GPports.c: 419: if ((GP2CONF & 0x08) != 0) {
 10002  01AC  1DC7               	btfss	_GP2CONF,3	;volatile
 10003  01AD  29AF               	goto	l7082
 10004                           
 10005                           ;GPports.c: 420: SetInterrupt();
 10006  01AE  21D5               	fcall	_SetInterrupt
 10007  01AF                     l7082:	
 10008                           
 10009                           ;GPports.c: 421: };GPports.c: 422: gp2_fsm = GP_WAITFALL;
 10010  01AF  3003               	movlw	3
 10011  01B0  0021               	movlb	1	; select bank1
 10012  01B1  00BC               	movwf	_gp2_fsm^(0+128)
 10013  01B2  0008               	return
 10014  01B3                     l1136:	
 10015                           ;GPports.c: 426: case GP_WAITFALL:
 10016                           
 10017                           
 10018                           ;GPports.c: 427: if (PORTCbits.RC1 == 0) {
 10019  01B3  0020               	movlb	0	; select bank0
 10020  01B4  188E               	btfsc	14,1	;volatile
 10021  01B5  0008               	return
 10022                           
 10023                           ;GPports.c: 429: GP2REG = 0;
 10024  01B6  01C2               	clrf	_GP2REG	;volatile
 10025                           
 10026                           ;GPports.c: 430: Int2StatusUpdate(E_GP2NEG);
 10027  01B7  3008               	movlw	8
 10028  01B8  21CB  3180         	fcall	_Int2StatusUpdate
 10029                           
 10030                           ;GPports.c: 431: if ((GP2CONF & 0x10) != 0) {
 10031  01BA  1E47               	btfss	_GP2CONF,4	;volatile
 10032  01BB  2992               	goto	l7068
 10033                           
 10034                           ;GPports.c: 432: SetInterrupt();
 10035  01BC  21D5  3180         	fcall	_SetInterrupt
 10036  01BE  2992               	goto	l7068
 10037  01BF                     l7096:	
 10038  01BF  0021               	movlb	1	; select bank1
 10039  01C0  083C               	movf	_gp2_fsm^(0+128),w
 10040                           
 10041                           ; Switch size 1, requested type "speed"
 10042                           ; Number of cases is 4, Range of values is 0 to 3
 10043                           ; switch strategies available:
 10044                           ; Name         Instructions Cycles
 10045                           ; direct_byte           14     6 (fixed)
 10046                           ; simple_byte           13     7 (average)
 10047                           ; jumptable            260     6 (fixed)
 10048                           ;	Chosen strategy is direct_byte
 10049  01C1  0084               	movwf	4
 10050  01C2  3004               	movlw	4
 10051  01C3  0204               	subwf	4,w
 10052  01C4  1803               	skipnc
 10053  01C5  0008               	return
 10054  01C6  318B               	movlp	high S7754
 10055  01C7  3504               	lslf	4,w
 10056  01C8  3E13               	addlw	low S7754
 10057  01C9  0082               	movwf	2
 10058  01CA  0008               	return
 10059  01CB                     __end_of_GP2_FSM:	
 10060  01CB                     __ptext37:	
 10061 ;; *************** function _Int2StatusUpdate *****************
 10062 ;; Defined at:
 10063 ;;		line 110 in file "DataVariable.c"
 10064 ;; Parameters:    Size  Location     Type
 10065 ;;  stat            1    wreg     enum E86
 10066 ;; Auto vars:     Size  Location     Type
 10067 ;;  stat            1    2[BANK1 ] enum E86
 10068 ;; Return value:  Size  Location     Type
 10069 ;;                  1    wreg      void 
 10070 ;; Registers used:
 10071 ;;		wreg, status,2, status,0, pclath, cstack
 10072 ;; Tracked objects:
 10073 ;;		On entry : 1F/0
 10074 ;;		On exit  : 1F/0
 10075 ;;		Unchanged: 0/0
 10076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10078 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10080 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10081 ;;Total ram usage:        1 bytes
 10082 ;; Hardware stack levels used:    1
 10083 ;; Hardware stack levels required when called:    8
 10084 ;; This function calls:
 10085 ;;		_NavKeyStatusUpdate
 10086 ;; This function is called by:
 10087 ;;		_FadeProcessClear
 10088 ;;		_GP1_FSM
 10089 ;;		_GP2_FSM
 10090 ;;		_GP3_FSM
 10091 ;; This function uses a non-reentrant model
 10092 ;;
 10093                           
 10094                           
 10095                           ;psect for function _Int2StatusUpdate
 10096  01CB                     _Int2StatusUpdate:	
 10097                           
 10098                           ;incstack = 0
 10099                           ; Regs used in _Int2StatusUpdate: [wreg+status,2+status,0+pclath+cstack]
 10100                           ;Int2StatusUpdate@stat stored from wreg
 10101  01CB  0021               	movlb	1	; select bank1
 10102  01CC  00C9               	movwf	Int2StatusUpdate@stat^(0+128)
 10103                           
 10104                           ;DataVariable.c: 111: SSTATUS |= (uint8_t) stat;
 10105  01CD  0020               	movlb	0	; select bank0
 10106  01CE  04C5               	iorwf	_SSTATUS,f	;volatile
 10107                           
 10108                           ;DataVariable.c: 112: NavKeyStatusUpdate(S_INT2);
 10109  01CF  0021               	movlb	1	; select bank1
 10110  01D0  3080               	movlw	128
 10111  01D1  01C7               	clrf	NavKeyStatusUpdate@stat^(0+128)
 10112  01D2  00C8               	movwf	(NavKeyStatusUpdate@stat^(0+128)+1)
 10113  01D3  3194  2CF2         	ljmp	l6588
 10114  01D5                     __end_of_Int2StatusUpdate:	
 10115  01D5                     __ptext36:	
 10116 ;; *************** function _SetInterrupt *****************
 10117 ;; Defined at:
 10118 ;;		line 56 in file "main.c"
 10119 ;; Parameters:    Size  Location     Type
 10120 ;;		None
 10121 ;; Auto vars:     Size  Location     Type
 10122 ;;		None
 10123 ;; Return value:  Size  Location     Type
 10124 ;;                  1    wreg      void 
 10125 ;; Registers used:
 10126 ;;		wreg, status,2, status,0
 10127 ;; Tracked objects:
 10128 ;;		On entry : 1E/0
 10129 ;;		On exit  : 1C/0
 10130 ;;		Unchanged: 0/0
 10131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10134 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10135 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10136 ;;Total ram usage:        2 bytes
 10137 ;; Hardware stack levels used:    1
 10138 ;; Hardware stack levels required when called:    7
 10139 ;; This function calls:
 10140 ;;		Nothing
 10141 ;; This function is called by:
 10142 ;;		_FadeProcessClear
 10143 ;;		_GP1_FSM
 10144 ;;		_GP2_FSM
 10145 ;;		_GP3_FSM
 10146 ;;		_NavKey_CentralButton_FSM
 10147 ;;		_NavKey_UPButton_FSM
 10148 ;;		_NavKey_DWButton_FSM
 10149 ;;		_NavKey_RTButton_FSM
 10150 ;;		_NavKey_LTButton_FSM
 10151 ;; This function uses a non-reentrant model
 10152 ;;
 10153                           
 10154                           
 10155                           ;psect for function _SetInterrupt
 10156  01D5                     _SetInterrupt:	
 10157  01D5                     l6590:	
 10158                           ;incstack = 0
 10159                           ; Regs used in _SetInterrupt: [wreg+status,2+status,0]
 10160                           
 10161                           
 10162                           ;main.c: 58: if ((NSTATUS.val & INTCONF.val) != 0) {
 10163  01D5  0020               	movlb	0	; select bank0
 10164  01D6  0830               	movf	_INTCONF,w	;volatile
 10165  01D7  0532               	andwf	_NSTATUS,w	;volatile
 10166  01D8  0021               	movlb	1	; select bank1
 10167  01D9  00C7               	movwf	??_SetInterrupt^(0+128)
 10168  01DA  0020               	movlb	0	; select bank0
 10169  01DB  0831               	movf	_INTCONF+1,w	;volatile
 10170  01DC  0533               	andwf	_NSTATUS+1,w	;volatile
 10171  01DD  0021               	movlb	1	; select bank1
 10172  01DE  00C8               	movwf	(??_SetInterrupt+1)^(0+128)
 10173  01DF  0847               	movf	??_SetInterrupt^(0+128),w
 10174  01E0  0448               	iorwf	(??_SetInterrupt^(0+128)+1),w
 10175  01E1  1903               	btfsc	3,2
 10176  01E2  0008               	return
 10177                           
 10178                           ;main.c: 59: do { LATBbits.LATB5 = 0; } while(0);
 10179  01E3  0022               	movlb	2	; select bank2
 10180  01E4  128D               	bcf	13,5	;volatile
 10181  01E5  0008               	return
 10182  01E6                     __end_of_SetInterrupt:	
 10183  01E6                     __ptext26:	
 10184 ;; *************** function _ADC_GetConversion *****************
 10185 ;; Defined at:
 10186 ;;		line 113 in file "mcc_generated_files/adc.c"
 10187 ;; Parameters:    Size  Location     Type
 10188 ;;  channel         1    wreg     enum E6505
 10189 ;; Auto vars:     Size  Location     Type
 10190 ;;  channel         1    3[BANK1 ] enum E6505
 10191 ;; Return value:  Size  Location     Type
 10192 ;;                  2    0[BANK1 ] unsigned int 
 10193 ;; Registers used:
 10194 ;;		wreg, status,2, status,0
 10195 ;; Tracked objects:
 10196 ;;		On entry : 1E/1
 10197 ;;		On exit  : 1F/1
 10198 ;;		Unchanged: 0/0
 10199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10200 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10201 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10202 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10203 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10204 ;;Total ram usage:        4 bytes
 10205 ;; Hardware stack levels used:    1
 10206 ;; Hardware stack levels required when called:    7
 10207 ;; This function calls:
 10208 ;;		Nothing
 10209 ;; This function is called by:
 10210 ;;		_GP1_FSM
 10211 ;;		_GP2_FSM
 10212 ;;		_GP3_FSM
 10213 ;; This function uses a non-reentrant model
 10214 ;;
 10215                           
 10216                           
 10217                           ;psect for function _ADC_GetConversion
 10218  01E6                     _ADC_GetConversion:	
 10219                           
 10220                           ;incstack = 0
 10221                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
 10222                           ;ADC_GetConversion@channel stored from wreg
 10223  01E6  0021               	movlb	1	; select bank1
 10224  01E7  00CA               	movwf	ADC_GetConversion@channel^(0+128)
 10225                           
 10226                           ;adc.c: 116: ADCON0bits.CHS = channel;
 10227  01E8  00C9               	movwf	??_ADC_GetConversion^(0+128)
 10228  01E9  0DC9               	rlf	??_ADC_GetConversion^(0+128),f
 10229  01EA  0DC9               	rlf	??_ADC_GetConversion^(0+128),f
 10230  01EB  081D               	movf	29,w	;volatile
 10231  01EC  0649               	xorwf	??_ADC_GetConversion^(0+128),w
 10232  01ED  3903               	andlw	-253
 10233  01EE  0649               	xorwf	??_ADC_GetConversion^(0+128),w
 10234  01EF  009D               	movwf	29	;volatile
 10235                           
 10236                           ;adc.c: 119: ADCON0bits.ADON = 1;
 10237  01F0  141D               	bsf	29,0	;volatile
 10238                           
 10239                           ;adc.c: 122: _delay((unsigned long)((5)*(32000000/4000000.0)));
 10240  01F1  300D               	movlw	13
 10241  01F2                     u4867:	
 10242  01F2  0B89               	decfsz	9,f
 10243  01F3  29F2               	goto	u4867
 10244  01F4  0000               	nop
 10245                           
 10246                           ;adc.c: 125: ADCON0bits.ADGO = 1;
 10247  01F5  0021               	movlb	1	; select bank1
 10248  01F6  149D               	bsf	29,1	;volatile
 10249  01F7                     l353:	
 10250                           ;adc.c: 129: {
 10251                           
 10252  01F7  189D               	btfsc	29,1	;volatile
 10253  01F8  29F7               	goto	l353
 10254                           
 10255                           ;adc.c: 130: };adc.c: 133: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 10256  01F9  081C               	movf	28,w	;volatile
 10257  01FA  00C8               	movwf	(?_ADC_GetConversion+1)^(0+128)
 10258  01FB  01C7               	clrf	?_ADC_GetConversion^(0+128)
 10259  01FC  081B               	movf	27,w	;volatile
 10260  01FD  07C7               	addwf	?_ADC_GetConversion^(0+128),f
 10261  01FE  1803               	skipnc
 10262  01FF  0AC8               	incf	(?_ADC_GetConversion+1)^(0+128),f
 10263  0200  0008               	return
 10264  0201                     __end_of_ADC_GetConversion:	
 10265  0201                     __ptext25:	
 10266 ;; *************** function _ADC_Initialize *****************
 10267 ;; Defined at:
 10268 ;;		line 65 in file "mcc_generated_files/adc.c"
 10269 ;; Parameters:    Size  Location     Type
 10270 ;;		None
 10271 ;; Auto vars:     Size  Location     Type
 10272 ;;		None
 10273 ;; Return value:  Size  Location     Type
 10274 ;;                  1    wreg      void 
 10275 ;; Registers used:
 10276 ;;		wreg, status,2
 10277 ;; Tracked objects:
 10278 ;;		On entry : 1F/1
 10279 ;;		On exit  : 1F/1
 10280 ;;		Unchanged: 0/0
 10281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10286 ;;Total ram usage:        0 bytes
 10287 ;; Hardware stack levels used:    1
 10288 ;; Hardware stack levels required when called:    7
 10289 ;; This function calls:
 10290 ;;		Nothing
 10291 ;; This function is called by:
 10292 ;;		_GP1_FSM
 10293 ;;		_GP2_FSM
 10294 ;;		_GP3_FSM
 10295 ;; This function uses a non-reentrant model
 10296 ;;
 10297                           
 10298                           
 10299                           ;psect for function _ADC_Initialize
 10300  0201                     _ADC_Initialize:	
 10301  0201                     l6612:	
 10302                           ;incstack = 0
 10303                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 10304                           
 10305                           
 10306                           ;adc.c: 70: ADCON0 = 0x01;
 10307  0201  3001               	movlw	1
 10308  0202  009D               	movwf	29	;volatile
 10309                           
 10310                           ;adc.c: 73: ADCON1 = 0xE0;
 10311  0203  30E0               	movlw	224
 10312  0204  009E               	movwf	30	;volatile
 10313                           
 10314                           ;adc.c: 76: ADACT = 0x00;
 10315  0205  019F               	clrf	31	;volatile
 10316                           
 10317                           ;adc.c: 79: ADRESL = 0x00;
 10318  0206  019B               	clrf	27	;volatile
 10319                           
 10320                           ;adc.c: 82: ADRESH = 0x00;
 10321  0207  019C               	clrf	28	;volatile
 10322  0208  0008               	return
 10323  0209                     __end_of_ADC_Initialize:	
 10324  0209                     __ptext27:	
 10325 ;; *************** function _FADE_GP3 *****************
 10326 ;; Defined at:
 10327 ;;		line 101 in file "GPports.c"
 10328 ;; Parameters:    Size  Location     Type
 10329 ;;		None
 10330 ;; Auto vars:     Size  Location     Type
 10331 ;;		None
 10332 ;; Return value:  Size  Location     Type
 10333 ;;                  1    wreg      void 
 10334 ;; Registers used:
 10335 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10336 ;; Tracked objects:
 10337 ;;		On entry : 18/0
 10338 ;;		On exit  : 18/0
 10339 ;;		Unchanged: 0/0
 10340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10345 ;;Total ram usage:        0 bytes
 10346 ;; Hardware stack levels used:    1
 10347 ;; Hardware stack levels required when called:   10
 10348 ;; This function calls:
 10349 ;;		_FadeProcessClear
 10350 ;;		_FadeProcessSet
 10351 ;;		_PWM_GP3
 10352 ;; This function is called by:
 10353 ;;		_GP_Ports_FSM
 10354 ;; This function uses a non-reentrant model
 10355 ;;
 10356                           
 10357                           
 10358                           ;psect for function _FADE_GP3
 10359  0209                     _FADE_GP3:	
 10360                           
 10361                           ;GPports.c: 103: if ((GP3CONF & 0x03) != 0x00)
 10362                           
 10363                           ;incstack = 0
 10364                           ; Regs used in _FADE_GP3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10365  0209  0020               	movlb	0	; select bank0
 10366  020A  0846               	movf	_GP3CONF,w	;volatile
 10367  020B  3903               	andlw	3
 10368  020C  1D03               	btfss	3,2
 10369  020D  0008               	return
 10370                           
 10371                           ;GPports.c: 106: if (FADEGP == 0) {
 10372  020E  083F               	movf	_FADEGP,w	;volatile
 10373  020F  1D03               	btfss	3,2
 10374  0210  2A18               	goto	l6990
 10375                           
 10376                           ;GPports.c: 107: if (temp_gp3 != GP3REG) {
 10377  0211  0835               	movf	_temp_gp3,w
 10378  0212  0641               	xorwf	_GP3REG,w	;volatile
 10379  0213  1903               	skipnz
 10380  0214  0008               	return
 10381                           
 10382                           ;GPports.c: 108: temp_gp3 = GP3REG;
 10383  0215  0841               	movf	_GP3REG,w	;volatile
 10384  0216  00B5               	movwf	_temp_gp3
 10385                           
 10386                           ;GPports.c: 109: PWM_GP3(temp_gp3);
 10387  0217  2A5D               	ljmp	_PWM_GP3
 10388  0218                     l6990:	
 10389                           
 10390                           ;GPports.c: 112: };GPports.c: 114: if (gp_fade_cnt >= FADEGP) {
 10391  0218  083F               	movf	_FADEGP,w	;volatile
 10392  0219  0234               	subwf	_gp_fade_cnt,w
 10393  021A  1C03               	skipc
 10394  021B  0008               	return
 10395                           
 10396                           ;GPports.c: 115: if (temp_gp3 != GP3REG) {
 10397  021C  0835               	movf	_temp_gp3,w
 10398  021D  0641               	xorwf	_GP3REG,w	;volatile
 10399  021E  1903               	skipnz
 10400  021F  0008               	return
 10401                           
 10402                           ;GPports.c: 117: if (temp_gp3 < GP3REG) {
 10403  0220  0841               	movf	_GP3REG,w	;volatile
 10404  0221  0235               	subwf	_temp_gp3,w
 10405  0222  1C03               	btfss	3,0
 10406                           
 10407                           ;GPports.c: 118: temp_gp3++;
 10408  0223  0AB5               	incf	_temp_gp3,f
 10409                           
 10410                           ;GPports.c: 119: };GPports.c: 120: if (temp_gp3 > GP3REG) {
 10411  0224  0835               	movf	_temp_gp3,w
 10412  0225  0241               	subwf	_GP3REG,w	;volatile
 10413  0226  1C03               	btfss	3,0
 10414                           
 10415                           ;GPports.c: 121: temp_gp3--;
 10416  0227  03B5               	decf	_temp_gp3,f
 10417                           
 10418                           ;GPports.c: 122: };GPports.c: 124: PWM_GP3(temp_gp3);
 10419  0228  0835               	movf	_temp_gp3,w
 10420  0229  225D  3180         	fcall	_PWM_GP3
 10421                           
 10422                           ;GPports.c: 125: if (temp_gp3 == GP3REG) {
 10423  022B  0020               	movlb	0	; select bank0
 10424  022C  0835               	movf	_temp_gp3,w
 10425  022D  0641               	xorwf	_GP3REG,w	;volatile
 10426                           
 10427                           ;GPports.c: 126: FadeProcessClear(F_FGP3);
 10428  022E  3004               	movlw	4
 10429  022F  1D03               	skipz
 10430  0230  2A32               	goto	L3
 10431  0231  2BFB               	ljmp	_FadeProcessClear
 10432  0232                     L3:	
 10433                           ;GPports.c: 128: FadeProcessSet(F_FGP3);
 10434                           
 10435                           ;GPports.c: 127: } else {
 10436                           
 10437  0232  2C04               	ljmp	_FadeProcessSet
 10438  0233                     __end_of_FADE_GP3:	
 10439  0233                     __ptext29:	
 10440 ;; *************** function _FADE_GP2 *****************
 10441 ;; Defined at:
 10442 ;;		line 63 in file "GPports.c"
 10443 ;; Parameters:    Size  Location     Type
 10444 ;;		None
 10445 ;; Auto vars:     Size  Location     Type
 10446 ;;		None
 10447 ;; Return value:  Size  Location     Type
 10448 ;;                  1    wreg      void 
 10449 ;; Registers used:
 10450 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10451 ;; Tracked objects:
 10452 ;;		On entry : 18/0
 10453 ;;		On exit  : 18/0
 10454 ;;		Unchanged: 0/0
 10455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10460 ;;Total ram usage:        0 bytes
 10461 ;; Hardware stack levels used:    1
 10462 ;; Hardware stack levels required when called:   10
 10463 ;; This function calls:
 10464 ;;		_FadeProcessClear
 10465 ;;		_FadeProcessSet
 10466 ;;		_PWM_GP2
 10467 ;; This function is called by:
 10468 ;;		_GP_Ports_FSM
 10469 ;; This function uses a non-reentrant model
 10470 ;;
 10471                           
 10472                           
 10473                           ;psect for function _FADE_GP2
 10474  0233                     _FADE_GP2:	
 10475                           
 10476                           ;GPports.c: 65: if ((GP2CONF & 0x03) != 0x00)
 10477                           
 10478                           ;incstack = 0
 10479                           ; Regs used in _FADE_GP2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10480  0233  0020               	movlb	0	; select bank0
 10481  0234  0847               	movf	_GP2CONF,w	;volatile
 10482  0235  3903               	andlw	3
 10483  0236  1D03               	btfss	3,2
 10484  0237  0008               	return
 10485                           
 10486                           ;GPports.c: 68: if (FADEGP == 0) {
 10487  0238  083F               	movf	_FADEGP,w	;volatile
 10488  0239  1D03               	btfss	3,2
 10489  023A  2A42               	goto	l6956
 10490                           
 10491                           ;GPports.c: 69: if (temp_gp2 != GP2REG) {
 10492  023B  0836               	movf	_temp_gp2,w
 10493  023C  0642               	xorwf	_GP2REG,w	;volatile
 10494  023D  1903               	skipnz
 10495  023E  0008               	return
 10496                           
 10497                           ;GPports.c: 70: temp_gp2 = GP2REG;
 10498  023F  0842               	movf	_GP2REG,w	;volatile
 10499  0240  00B6               	movwf	_temp_gp2
 10500                           
 10501                           ;GPports.c: 71: PWM_GP2(temp_gp2);
 10502  0241  2AE0               	ljmp	_PWM_GP2
 10503  0242                     l6956:	
 10504                           
 10505                           ;GPports.c: 74: };GPports.c: 76: if (gp_fade_cnt >= FADEGP) {
 10506  0242  083F               	movf	_FADEGP,w	;volatile
 10507  0243  0234               	subwf	_gp_fade_cnt,w
 10508  0244  1C03               	skipc
 10509  0245  0008               	return
 10510                           
 10511                           ;GPports.c: 77: if (temp_gp2 != GP2REG) {
 10512  0246  0836               	movf	_temp_gp2,w
 10513  0247  0642               	xorwf	_GP2REG,w	;volatile
 10514  0248  1903               	skipnz
 10515  0249  0008               	return
 10516                           
 10517                           ;GPports.c: 79: if (temp_gp2 < GP2REG) {
 10518  024A  0842               	movf	_GP2REG,w	;volatile
 10519  024B  0236               	subwf	_temp_gp2,w
 10520  024C  1C03               	btfss	3,0
 10521                           
 10522                           ;GPports.c: 80: temp_gp2++;
 10523  024D  0AB6               	incf	_temp_gp2,f
 10524                           
 10525                           ;GPports.c: 81: };GPports.c: 82: if (temp_gp2 > GP2REG) {
 10526  024E  0836               	movf	_temp_gp2,w
 10527  024F  0242               	subwf	_GP2REG,w	;volatile
 10528  0250  1C03               	btfss	3,0
 10529                           
 10530                           ;GPports.c: 83: temp_gp2--;
 10531  0251  03B6               	decf	_temp_gp2,f
 10532                           
 10533                           ;GPports.c: 84: };GPports.c: 86: PWM_GP2(temp_gp2);
 10534  0252  0836               	movf	_temp_gp2,w
 10535  0253  22E0  3180         	fcall	_PWM_GP2
 10536                           
 10537                           ;GPports.c: 87: if (temp_gp2 == GP2REG) {
 10538  0255  0020               	movlb	0	; select bank0
 10539  0256  0836               	movf	_temp_gp2,w
 10540  0257  0642               	xorwf	_GP2REG,w	;volatile
 10541                           
 10542                           ;GPports.c: 88: FadeProcessClear(F_FGP2);
 10543  0258  3002               	movlw	2
 10544  0259  1D03               	skipz
 10545  025A  2A5C               	goto	L4
 10546  025B  2BFB               	ljmp	_FadeProcessClear
 10547  025C                     L4:	
 10548                           ;GPports.c: 90: FadeProcessSet(F_FGP2);
 10549                           
 10550                           ;GPports.c: 89: } else {
 10551                           
 10552  025C  2C04               	ljmp	_FadeProcessSet
 10553  025D                     __end_of_FADE_GP2:	
 10554  025D                     __ptext28:	
 10555 ;; *************** function _PWM_GP3 *****************
 10556 ;; Defined at:
 10557 ;;		line 90 in file "PWM.c"
 10558 ;; Parameters:    Size  Location     Type
 10559 ;;  duty            1    wreg     unsigned char 
 10560 ;; Auto vars:     Size  Location     Type
 10561 ;;  duty            1   14[BANK1 ] unsigned char 
 10562 ;; Return value:  Size  Location     Type
 10563 ;;                  1    wreg      void 
 10564 ;; Registers used:
 10565 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10566 ;; Tracked objects:
 10567 ;;		On entry : 1F/0
 10568 ;;		On exit  : 1F/6
 10569 ;;		Unchanged: 0/0
 10570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10572 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10573 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 10574 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 10575 ;;Total ram usage:        9 bytes
 10576 ;; Hardware stack levels used:    1
 10577 ;; Hardware stack levels required when called:    8
 10578 ;; This function calls:
 10579 ;;		___wmul
 10580 ;; This function is called by:
 10581 ;;		_FADE_GP3
 10582 ;; This function uses a non-reentrant model
 10583 ;;
 10584                           
 10585                           
 10586                           ;psect for function _PWM_GP3
 10587  025D                     _PWM_GP3:	
 10588                           
 10589                           ;incstack = 0
 10590                           ; Regs used in _PWM_GP3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10591                           ;PWM_GP3@duty stored from wreg
 10592  025D  0021               	movlb	1	; select bank1
 10593  025E  00D5               	movwf	PWM_GP3@duty^(0+128)
 10594                           
 10595                           ;PWM.c: 92: if (duty == 0) {
 10596  025F  0855               	movf	PWM_GP3@duty^(0+128),w
 10597  0260  1D03               	btfss	3,2
 10598  0261  2A76               	goto	l6744
 10599                           
 10600                           ;PWM.c: 94: do { LATCbits.LATC0 = 1; } while(0);
 10601  0262  0022               	movlb	2	; select bank2
 10602  0263  140E               	bsf	14,0	;volatile
 10603                           
 10604                           ;PWM.c: 95: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 10605  0264  3055               	movlw	85
 10606  0265  003C               	movlb	28	; select bank28
 10607  0266  008F               	movwf	15	;volsfr
 10608  0267  30AA               	movlw	170
 10609  0268  008F               	movwf	15	;volsfr
 10610  0269  100F               	bcf	15,0	;volsfr
 10611                           
 10612                           ;PWM.c: 96: RC0PPSbits.RC0PPS = 0x00;
 10613  026A  30E0               	movlw	-32
 10614  026B  003D               	movlb	29	; select bank29
 10615  026C  05A0               	andwf	32,f	;volatile
 10616                           
 10617                           ;PWM.c: 97: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 10618  026D  3055               	movlw	85
 10619  026E  003C               	movlb	28	; select bank28
 10620  026F  008F               	movwf	15	;volsfr
 10621  0270  30AA               	movlw	170
 10622  0271  008F               	movwf	15	;volsfr
 10623  0272  140F               	bsf	15,0	;volsfr
 10624                           
 10625                           ;PWM.c: 98: CCP3CON = 0;
 10626  0273  0026               	movlb	6	; select bank6
 10627  0274  0193               	clrf	19	;volatile
 10628  0275  0008               	return
 10629  0276                     l6744:	
 10630                           
 10631                           ;PWM.c: 100: };PWM.c: 102: if (duty > 100)
 10632  0276  3065               	movlw	101
 10633  0277  0255               	subwf	PWM_GP3@duty^(0+128),w
 10634  0278  1C03               	skipc
 10635  0279  2A7C               	goto	l6748
 10636                           
 10637                           ;PWM.c: 103: duty = 100;
 10638  027A  3064               	movlw	100
 10639  027B  00D5               	movwf	PWM_GP3@duty^(0+128)
 10640  027C                     l6748:	
 10641                           
 10642                           ;PWM.c: 105: if (CCP2CON == 0) {
 10643  027C  0025               	movlb	5	; select bank5
 10644  027D  0817               	movf	23,w	;volatile
 10645  027E  1D03               	btfss	3,2
 10646  027F  2A94               	goto	l6764
 10647                           
 10648                           ;PWM.c: 106: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 10649  0280  3055               	movlw	85
 10650  0281  003C               	movlb	28	; select bank28
 10651  0282  008F               	movwf	15	;volsfr
 10652  0283  30AA               	movlw	170
 10653  0284  008F               	movwf	15	;volsfr
 10654  0285  100F               	bcf	15,0	;volsfr
 10655                           
 10656                           ;PWM.c: 107: RC0PPSbits.RC0PPS = 0x0E;
 10657  0286  003D               	movlb	29	; select bank29
 10658  0287  0820               	movf	32,w	;volatile
 10659  0288  39E0               	andlw	-32
 10660  0289  380E               	iorlw	14
 10661  028A  00A0               	movwf	32	;volatile
 10662                           
 10663                           ;PWM.c: 108: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 10664  028B  3055               	movlw	85
 10665  028C  003C               	movlb	28	; select bank28
 10666  028D  008F               	movwf	15	;volsfr
 10667  028E  30AA               	movlw	170
 10668  028F  008F               	movwf	15	;volsfr
 10669  0290  140F               	bsf	15,0	;volsfr
 10670                           
 10671                           ;PWM.c: 109: CCP3CON = 0x8F;
 10672  0291  308F               	movlw	143
 10673  0292  0026               	movlb	6	; select bank6
 10674  0293  0093               	movwf	19	;volatile
 10675  0294                     l6764:	
 10676                           
 10677                           ;PWM.c: 110: };PWM.c: 112: CCPR3H = gamma_table[GAMMAGP3][(uint8_t) (duty - 1)] >> 8;
 10678  0294  0021               	movlb	1	; select bank1
 10679  0295  0855               	movf	PWM_GP3@duty^(0+128),w
 10680  0296  3EFF               	addlw	255
 10681  0297  00CD               	movwf	??_PWM_GP3^(0+128)
 10682  0298  01CE               	clrf	(??_PWM_GP3^(0+128)+1)
 10683  0299  35CD               	lslf	??_PWM_GP3^(0+128),f
 10684  029A  0DCE               	rlf	(??_PWM_GP3^(0+128)+1),f
 10685  029B  0020               	movlb	0	; select bank0
 10686  029C  083C               	movf	_GAMMAGP3,w	;volatile
 10687  029D  0021               	movlb	1	; select bank1
 10688  029E  00C7               	movwf	___wmul@multiplier^(0+128)
 10689  029F  30C8               	movlw	200
 10690  02A0  01C8               	clrf	(___wmul@multiplier+1)^(0+128)
 10691  02A1  00C9               	movwf	___wmul@multiplicand^(0+128)
 10692  02A2  01CA               	clrf	(___wmul@multiplicand+1)^(0+128)
 10693  02A3  23E6  3180         	fcall	___wmul
 10694  02A5  302B               	movlw	low (_gamma_table| (0+32768))
 10695  02A6  00CF               	movwf	(??_PWM_GP3+2)^(0+128)
 10696  02A7  3084               	movlw	high (_gamma_table| (0+32768))
 10697  02A8  00D0               	movwf	((??_PWM_GP3+2)^(0+128)+1)
 10698  02A9  0847               	movf	?___wmul^(0+128),w
 10699  02AA  074F               	addwf	(??_PWM_GP3+2)^(0+128),w
 10700  02AB  00D1               	movwf	(??_PWM_GP3+4)^(0+128)
 10701  02AC  0848               	movf	(?___wmul+1)^(0+128),w
 10702  02AD  3D50               	addwfc	(??_PWM_GP3+3)^(0+128),w
 10703  02AE  00D2               	movwf	(??_PWM_GP3+5)^(0+128)
 10704  02AF  0851               	movf	(??_PWM_GP3+4)^(0+128),w
 10705  02B0  074D               	addwf	??_PWM_GP3^(0+128),w
 10706  02B1  0084               	movwf	4
 10707  02B2  0852               	movf	(??_PWM_GP3+5)^(0+128),w
 10708  02B3  3D4E               	addwfc	(??_PWM_GP3+1)^(0+128),w
 10709  02B4  0085               	movwf	5
 10710  02B5  3F00               	moviw [0]fsr0
 10711  02B6  00D3               	movwf	(??_PWM_GP3+6)^(0+128)
 10712  02B7  3F01               	moviw [1]fsr0
 10713  02B8  00D4               	movwf	((??_PWM_GP3+6)^(0+128)+1)
 10714  02B9  0854               	movf	(??_PWM_GP3+7)^(0+128),w
 10715  02BA  0026               	movlb	6	; select bank6
 10716  02BB  0092               	movwf	18	;volatile
 10717                           
 10718                           ;PWM.c: 113: CCPR3L = gamma_table[GAMMAGP3][(uint8_t) (duty - 1)];
 10719  02BC  0021               	movlb	1	; select bank1
 10720  02BD  0855               	movf	PWM_GP3@duty^(0+128),w
 10721  02BE  3EFF               	addlw	255
 10722  02BF  00CD               	movwf	??_PWM_GP3^(0+128)
 10723  02C0  01CE               	clrf	(??_PWM_GP3^(0+128)+1)
 10724  02C1  35CD               	lslf	??_PWM_GP3^(0+128),f
 10725  02C2  0DCE               	rlf	(??_PWM_GP3^(0+128)+1),f
 10726  02C3  0020               	movlb	0	; select bank0
 10727  02C4  083C               	movf	_GAMMAGP3,w	;volatile
 10728  02C5  0021               	movlb	1	; select bank1
 10729  02C6  00C7               	movwf	___wmul@multiplier^(0+128)
 10730  02C7  30C8               	movlw	200
 10731  02C8  01C8               	clrf	(___wmul@multiplier+1)^(0+128)
 10732  02C9  00C9               	movwf	___wmul@multiplicand^(0+128)
 10733  02CA  01CA               	clrf	(___wmul@multiplicand+1)^(0+128)
 10734  02CB  23E6               	fcall	___wmul
 10735  02CC  302B               	movlw	low (_gamma_table| (0+32768))
 10736  02CD  00CF               	movwf	(??_PWM_GP3+2)^(0+128)
 10737  02CE  3084               	movlw	high (_gamma_table| (0+32768))
 10738  02CF  00D0               	movwf	((??_PWM_GP3+2)^(0+128)+1)
 10739  02D0  0847               	movf	?___wmul^(0+128),w
 10740  02D1  074F               	addwf	(??_PWM_GP3+2)^(0+128),w
 10741  02D2  00D1               	movwf	(??_PWM_GP3+4)^(0+128)
 10742  02D3  0848               	movf	(?___wmul+1)^(0+128),w
 10743  02D4  3D50               	addwfc	(??_PWM_GP3+3)^(0+128),w
 10744  02D5  00D2               	movwf	(??_PWM_GP3+5)^(0+128)
 10745  02D6  0851               	movf	(??_PWM_GP3+4)^(0+128),w
 10746  02D7  074D               	addwf	??_PWM_GP3^(0+128),w
 10747  02D8  0084               	movwf	4
 10748  02D9  0852               	movf	(??_PWM_GP3+5)^(0+128),w
 10749  02DA  3D4E               	addwfc	(??_PWM_GP3+1)^(0+128),w
 10750  02DB  0085               	movwf	5
 10751  02DC  0800               	movf	0,w	;code access
 10752  02DD  0026               	movlb	6	; select bank6
 10753  02DE  0091               	movwf	17	;volatile
 10754  02DF  0008               	return
 10755  02E0                     __end_of_PWM_GP3:	
 10756  02E0                     __ptext30:	
 10757 ;; *************** function _PWM_GP2 *****************
 10758 ;; Defined at:
 10759 ;;		line 61 in file "PWM.c"
 10760 ;; Parameters:    Size  Location     Type
 10761 ;;  duty            1    wreg     unsigned char 
 10762 ;; Auto vars:     Size  Location     Type
 10763 ;;  duty            1   14[BANK1 ] unsigned char 
 10764 ;; Return value:  Size  Location     Type
 10765 ;;                  1    wreg      void 
 10766 ;; Registers used:
 10767 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10768 ;; Tracked objects:
 10769 ;;		On entry : 1F/0
 10770 ;;		On exit  : 1F/5
 10771 ;;		Unchanged: 0/0
 10772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10774 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10775 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 10776 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 10777 ;;Total ram usage:        9 bytes
 10778 ;; Hardware stack levels used:    1
 10779 ;; Hardware stack levels required when called:    8
 10780 ;; This function calls:
 10781 ;;		___wmul
 10782 ;; This function is called by:
 10783 ;;		_FADE_GP2
 10784 ;; This function uses a non-reentrant model
 10785 ;;
 10786                           
 10787                           
 10788                           ;psect for function _PWM_GP2
 10789  02E0                     _PWM_GP2:	
 10790                           
 10791                           ;incstack = 0
 10792                           ; Regs used in _PWM_GP2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10793                           ;PWM_GP2@duty stored from wreg
 10794  02E0  0021               	movlb	1	; select bank1
 10795  02E1  00D5               	movwf	PWM_GP2@duty^(0+128)
 10796                           
 10797                           ;PWM.c: 63: if (duty == 0) {
 10798  02E2  0855               	movf	PWM_GP2@duty^(0+128),w
 10799  02E3  1D03               	btfss	3,2
 10800  02E4  2AF9               	goto	l6702
 10801                           
 10802                           ;PWM.c: 65: do { LATCbits.LATC1 = 1; } while(0);
 10803  02E5  0022               	movlb	2	; select bank2
 10804  02E6  148E               	bsf	14,1	;volatile
 10805                           
 10806                           ;PWM.c: 66: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 10807  02E7  3055               	movlw	85
 10808  02E8  003C               	movlb	28	; select bank28
 10809  02E9  008F               	movwf	15	;volsfr
 10810  02EA  30AA               	movlw	170
 10811  02EB  008F               	movwf	15	;volsfr
 10812  02EC  100F               	bcf	15,0	;volsfr
 10813                           
 10814                           ;PWM.c: 67: RC1PPSbits.RC1PPS = 0x00;
 10815  02ED  30E0               	movlw	-32
 10816  02EE  003D               	movlb	29	; select bank29
 10817  02EF  05A1               	andwf	33,f	;volatile
 10818                           
 10819                           ;PWM.c: 68: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 10820  02F0  3055               	movlw	85
 10821  02F1  003C               	movlb	28	; select bank28
 10822  02F2  008F               	movwf	15	;volsfr
 10823  02F3  30AA               	movlw	170
 10824  02F4  008F               	movwf	15	;volsfr
 10825  02F5  140F               	bsf	15,0	;volsfr
 10826                           
 10827                           ;PWM.c: 69: CCP2CON = 0;
 10828  02F6  0025               	movlb	5	; select bank5
 10829  02F7  0197               	clrf	23	;volatile
 10830  02F8  0008               	return
 10831  02F9                     l6702:	
 10832                           
 10833                           ;PWM.c: 71: };PWM.c: 73: if (duty > 100)
 10834  02F9  3065               	movlw	101
 10835  02FA  0255               	subwf	PWM_GP2@duty^(0+128),w
 10836  02FB  1C03               	skipc
 10837  02FC  2AFF               	goto	l6706
 10838                           
 10839                           ;PWM.c: 74: duty = 100;
 10840  02FD  3064               	movlw	100
 10841  02FE  00D5               	movwf	PWM_GP2@duty^(0+128)
 10842  02FF                     l6706:	
 10843                           
 10844                           ;PWM.c: 76: if (CCP2CON == 0) {
 10845  02FF  0025               	movlb	5	; select bank5
 10846  0300  0817               	movf	23,w	;volatile
 10847  0301  1D03               	btfss	3,2
 10848  0302  2B17               	goto	l6722
 10849                           
 10850                           ;PWM.c: 77: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 10851  0303  3055               	movlw	85
 10852  0304  003C               	movlb	28	; select bank28
 10853  0305  008F               	movwf	15	;volsfr
 10854  0306  30AA               	movlw	170
 10855  0307  008F               	movwf	15	;volsfr
 10856  0308  100F               	bcf	15,0	;volsfr
 10857                           
 10858                           ;PWM.c: 78: RC1PPSbits.RC1PPS = 0x0D;
 10859  0309  003D               	movlb	29	; select bank29
 10860  030A  0821               	movf	33,w	;volatile
 10861  030B  39E0               	andlw	-32
 10862  030C  380D               	iorlw	13
 10863  030D  00A1               	movwf	33	;volatile
 10864                           
 10865                           ;PWM.c: 79: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 10866  030E  3055               	movlw	85
 10867  030F  003C               	movlb	28	; select bank28
 10868  0310  008F               	movwf	15	;volsfr
 10869  0311  30AA               	movlw	170
 10870  0312  008F               	movwf	15	;volsfr
 10871  0313  140F               	bsf	15,0	;volsfr
 10872                           
 10873                           ;PWM.c: 80: CCP2CON = 0x8F;
 10874  0314  308F               	movlw	143
 10875  0315  0025               	movlb	5	; select bank5
 10876  0316  0097               	movwf	23	;volatile
 10877  0317                     l6722:	
 10878                           
 10879                           ;PWM.c: 81: };PWM.c: 83: CCPR2H = gamma_table[GAMMAGP2][(uint8_t) (duty - 1)] >> 8;
 10880  0317  0021               	movlb	1	; select bank1
 10881  0318  0855               	movf	PWM_GP2@duty^(0+128),w
 10882  0319  3EFF               	addlw	255
 10883  031A  00CD               	movwf	??_PWM_GP2^(0+128)
 10884  031B  01CE               	clrf	(??_PWM_GP2^(0+128)+1)
 10885  031C  35CD               	lslf	??_PWM_GP2^(0+128),f
 10886  031D  0DCE               	rlf	(??_PWM_GP2^(0+128)+1),f
 10887  031E  0020               	movlb	0	; select bank0
 10888  031F  083D               	movf	_GAMMAGP2,w	;volatile
 10889  0320  0021               	movlb	1	; select bank1
 10890  0321  00C7               	movwf	___wmul@multiplier^(0+128)
 10891  0322  30C8               	movlw	200
 10892  0323  01C8               	clrf	(___wmul@multiplier+1)^(0+128)
 10893  0324  00C9               	movwf	___wmul@multiplicand^(0+128)
 10894  0325  01CA               	clrf	(___wmul@multiplicand+1)^(0+128)
 10895  0326  23E6  3180         	fcall	___wmul
 10896  0328  302B               	movlw	low (_gamma_table| (0+32768))
 10897  0329  00CF               	movwf	(??_PWM_GP2+2)^(0+128)
 10898  032A  3084               	movlw	high (_gamma_table| (0+32768))
 10899  032B  00D0               	movwf	((??_PWM_GP2+2)^(0+128)+1)
 10900  032C  0847               	movf	?___wmul^(0+128),w
 10901  032D  074F               	addwf	(??_PWM_GP2+2)^(0+128),w
 10902  032E  00D1               	movwf	(??_PWM_GP2+4)^(0+128)
 10903  032F  0848               	movf	(?___wmul+1)^(0+128),w
 10904  0330  3D50               	addwfc	(??_PWM_GP2+3)^(0+128),w
 10905  0331  00D2               	movwf	(??_PWM_GP2+5)^(0+128)
 10906  0332  0851               	movf	(??_PWM_GP2+4)^(0+128),w
 10907  0333  074D               	addwf	??_PWM_GP2^(0+128),w
 10908  0334  0084               	movwf	4
 10909  0335  0852               	movf	(??_PWM_GP2+5)^(0+128),w
 10910  0336  3D4E               	addwfc	(??_PWM_GP2+1)^(0+128),w
 10911  0337  0085               	movwf	5
 10912  0338  3F00               	moviw [0]fsr0
 10913  0339  00D3               	movwf	(??_PWM_GP2+6)^(0+128)
 10914  033A  3F01               	moviw [1]fsr0
 10915  033B  00D4               	movwf	((??_PWM_GP2+6)^(0+128)+1)
 10916  033C  0854               	movf	(??_PWM_GP2+7)^(0+128),w
 10917  033D  0025               	movlb	5	; select bank5
 10918  033E  0096               	movwf	22	;volatile
 10919                           
 10920                           ;PWM.c: 84: CCPR2L = gamma_table[GAMMAGP2][(uint8_t) (duty - 1)];
 10921  033F  0021               	movlb	1	; select bank1
 10922  0340  0855               	movf	PWM_GP2@duty^(0+128),w
 10923  0341  3EFF               	addlw	255
 10924  0342  00CD               	movwf	??_PWM_GP2^(0+128)
 10925  0343  01CE               	clrf	(??_PWM_GP2^(0+128)+1)
 10926  0344  35CD               	lslf	??_PWM_GP2^(0+128),f
 10927  0345  0DCE               	rlf	(??_PWM_GP2^(0+128)+1),f
 10928  0346  0020               	movlb	0	; select bank0
 10929  0347  083D               	movf	_GAMMAGP2,w	;volatile
 10930  0348  0021               	movlb	1	; select bank1
 10931  0349  00C7               	movwf	___wmul@multiplier^(0+128)
 10932  034A  30C8               	movlw	200
 10933  034B  01C8               	clrf	(___wmul@multiplier+1)^(0+128)
 10934  034C  00C9               	movwf	___wmul@multiplicand^(0+128)
 10935  034D  01CA               	clrf	(___wmul@multiplicand+1)^(0+128)
 10936  034E  23E6               	fcall	___wmul
 10937  034F  302B               	movlw	low (_gamma_table| (0+32768))
 10938  0350  00CF               	movwf	(??_PWM_GP2+2)^(0+128)
 10939  0351  3084               	movlw	high (_gamma_table| (0+32768))
 10940  0352  00D0               	movwf	((??_PWM_GP2+2)^(0+128)+1)
 10941  0353  0847               	movf	?___wmul^(0+128),w
 10942  0354  074F               	addwf	(??_PWM_GP2+2)^(0+128),w
 10943  0355  00D1               	movwf	(??_PWM_GP2+4)^(0+128)
 10944  0356  0848               	movf	(?___wmul+1)^(0+128),w
 10945  0357  3D50               	addwfc	(??_PWM_GP2+3)^(0+128),w
 10946  0358  00D2               	movwf	(??_PWM_GP2+5)^(0+128)
 10947  0359  0851               	movf	(??_PWM_GP2+4)^(0+128),w
 10948  035A  074D               	addwf	??_PWM_GP2^(0+128),w
 10949  035B  0084               	movwf	4
 10950  035C  0852               	movf	(??_PWM_GP2+5)^(0+128),w
 10951  035D  3D4E               	addwfc	(??_PWM_GP2+1)^(0+128),w
 10952  035E  0085               	movwf	5
 10953  035F  0800               	movf	0,w	;code access
 10954  0360  0025               	movlb	5	; select bank5
 10955  0361  0095               	movwf	21	;volatile
 10956  0362  0008               	return
 10957  0363                     __end_of_PWM_GP2:	
 10958  0363                     __ptext32:	
 10959 ;; *************** function _PWM_GP1 *****************
 10960 ;; Defined at:
 10961 ;;		line 30 in file "PWM.c"
 10962 ;; Parameters:    Size  Location     Type
 10963 ;;  duty            1    wreg     unsigned char 
 10964 ;; Auto vars:     Size  Location     Type
 10965 ;;  duty            1   14[BANK1 ] unsigned char 
 10966 ;; Return value:  Size  Location     Type
 10967 ;;                  1    wreg      void 
 10968 ;; Registers used:
 10969 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10970 ;; Tracked objects:
 10971 ;;		On entry : 1F/0
 10972 ;;		On exit  : 1F/5
 10973 ;;		Unchanged: 0/0
 10974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10976 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10977 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 10978 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 10979 ;;Total ram usage:        9 bytes
 10980 ;; Hardware stack levels used:    1
 10981 ;; Hardware stack levels required when called:    8
 10982 ;; This function calls:
 10983 ;;		___wmul
 10984 ;; This function is called by:
 10985 ;;		_FADE_GP1
 10986 ;; This function uses a non-reentrant model
 10987 ;;
 10988                           
 10989                           
 10990                           ;psect for function _PWM_GP1
 10991  0363                     _PWM_GP1:	
 10992                           
 10993                           ;incstack = 0
 10994                           ; Regs used in _PWM_GP1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10995                           ;PWM_GP1@duty stored from wreg
 10996  0363  0021               	movlb	1	; select bank1
 10997  0364  00D5               	movwf	PWM_GP1@duty^(0+128)
 10998                           
 10999                           ;PWM.c: 32: if (duty == 0) {
 11000  0365  0855               	movf	PWM_GP1@duty^(0+128),w
 11001  0366  1D03               	btfss	3,2
 11002  0367  2B7C               	goto	l6660
 11003                           
 11004                           ;PWM.c: 34: do { LATCbits.LATC2 = 1; } while(0);
 11005  0368  0022               	movlb	2	; select bank2
 11006  0369  150E               	bsf	14,2	;volatile
 11007                           
 11008                           ;PWM.c: 35: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 11009  036A  3055               	movlw	85
 11010  036B  003C               	movlb	28	; select bank28
 11011  036C  008F               	movwf	15	;volsfr
 11012  036D  30AA               	movlw	170
 11013  036E  008F               	movwf	15	;volsfr
 11014  036F  100F               	bcf	15,0	;volsfr
 11015                           
 11016                           ;PWM.c: 36: RC2PPSbits.RC2PPS = 0x00;
 11017  0370  30E0               	movlw	-32
 11018  0371  003D               	movlb	29	; select bank29
 11019  0372  05A2               	andwf	34,f	;volatile
 11020                           
 11021                           ;PWM.c: 37: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 11022  0373  3055               	movlw	85
 11023  0374  003C               	movlb	28	; select bank28
 11024  0375  008F               	movwf	15	;volsfr
 11025  0376  30AA               	movlw	170
 11026  0377  008F               	movwf	15	;volsfr
 11027  0378  140F               	bsf	15,0	;volsfr
 11028                           
 11029                           ;PWM.c: 38: CCP1CON = 0;
 11030  0379  0025               	movlb	5	; select bank5
 11031  037A  0193               	clrf	19	;volatile
 11032  037B  0008               	return
 11033  037C                     l6660:	
 11034                           
 11035                           ;PWM.c: 40: };PWM.c: 42: if (duty > 100)
 11036  037C  3065               	movlw	101
 11037  037D  0255               	subwf	PWM_GP1@duty^(0+128),w
 11038  037E  1C03               	skipc
 11039  037F  2B82               	goto	l6664
 11040                           
 11041                           ;PWM.c: 43: duty = 100;
 11042  0380  3064               	movlw	100
 11043  0381  00D5               	movwf	PWM_GP1@duty^(0+128)
 11044  0382                     l6664:	
 11045                           
 11046                           ;PWM.c: 45: if (CCP1CON == 0) {
 11047  0382  0025               	movlb	5	; select bank5
 11048  0383  0813               	movf	19,w	;volatile
 11049  0384  1D03               	btfss	3,2
 11050  0385  2B9A               	goto	l6680
 11051                           
 11052                           ;PWM.c: 46: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 11053  0386  3055               	movlw	85
 11054  0387  003C               	movlb	28	; select bank28
 11055  0388  008F               	movwf	15	;volsfr
 11056  0389  30AA               	movlw	170
 11057  038A  008F               	movwf	15	;volsfr
 11058  038B  100F               	bcf	15,0	;volsfr
 11059                           
 11060                           ;PWM.c: 47: RC2PPSbits.RC2PPS = 0x0C;
 11061  038C  003D               	movlb	29	; select bank29
 11062  038D  0822               	movf	34,w	;volatile
 11063  038E  39E0               	andlw	-32
 11064  038F  380C               	iorlw	12
 11065  0390  00A2               	movwf	34	;volatile
 11066                           
 11067                           ;PWM.c: 48: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 11068  0391  3055               	movlw	85
 11069  0392  003C               	movlb	28	; select bank28
 11070  0393  008F               	movwf	15	;volsfr
 11071  0394  30AA               	movlw	170
 11072  0395  008F               	movwf	15	;volsfr
 11073  0396  140F               	bsf	15,0	;volsfr
 11074                           
 11075                           ;PWM.c: 49: CCP1CON = 0x8F;
 11076  0397  308F               	movlw	143
 11077  0398  0025               	movlb	5	; select bank5
 11078  0399  0093               	movwf	19	;volatile
 11079  039A                     l6680:	
 11080                           
 11081                           ;PWM.c: 50: };PWM.c: 52: CCPR1H = gamma_table[GAMMAGP1][(uint8_t) (duty - 1)] >> 8;
 11082  039A  0021               	movlb	1	; select bank1
 11083  039B  0855               	movf	PWM_GP1@duty^(0+128),w
 11084  039C  3EFF               	addlw	255
 11085  039D  00CD               	movwf	??_PWM_GP1^(0+128)
 11086  039E  01CE               	clrf	(??_PWM_GP1^(0+128)+1)
 11087  039F  35CD               	lslf	??_PWM_GP1^(0+128),f
 11088  03A0  0DCE               	rlf	(??_PWM_GP1^(0+128)+1),f
 11089  03A1  0020               	movlb	0	; select bank0
 11090  03A2  083E               	movf	_GAMMAGP1,w	;volatile
 11091  03A3  0021               	movlb	1	; select bank1
 11092  03A4  00C7               	movwf	___wmul@multiplier^(0+128)
 11093  03A5  30C8               	movlw	200
 11094  03A6  01C8               	clrf	(___wmul@multiplier+1)^(0+128)
 11095  03A7  00C9               	movwf	___wmul@multiplicand^(0+128)
 11096  03A8  01CA               	clrf	(___wmul@multiplicand+1)^(0+128)
 11097  03A9  23E6  3180         	fcall	___wmul
 11098  03AB  302B               	movlw	low (_gamma_table| (0+32768))
 11099  03AC  00CF               	movwf	(??_PWM_GP1+2)^(0+128)
 11100  03AD  3084               	movlw	high (_gamma_table| (0+32768))
 11101  03AE  00D0               	movwf	((??_PWM_GP1+2)^(0+128)+1)
 11102  03AF  0847               	movf	?___wmul^(0+128),w
 11103  03B0  074F               	addwf	(??_PWM_GP1+2)^(0+128),w
 11104  03B1  00D1               	movwf	(??_PWM_GP1+4)^(0+128)
 11105  03B2  0848               	movf	(?___wmul+1)^(0+128),w
 11106  03B3  3D50               	addwfc	(??_PWM_GP1+3)^(0+128),w
 11107  03B4  00D2               	movwf	(??_PWM_GP1+5)^(0+128)
 11108  03B5  0851               	movf	(??_PWM_GP1+4)^(0+128),w
 11109  03B6  074D               	addwf	??_PWM_GP1^(0+128),w
 11110  03B7  0084               	movwf	4
 11111  03B8  0852               	movf	(??_PWM_GP1+5)^(0+128),w
 11112  03B9  3D4E               	addwfc	(??_PWM_GP1+1)^(0+128),w
 11113  03BA  0085               	movwf	5
 11114  03BB  3F00               	moviw [0]fsr0
 11115  03BC  00D3               	movwf	(??_PWM_GP1+6)^(0+128)
 11116  03BD  3F01               	moviw [1]fsr0
 11117  03BE  00D4               	movwf	((??_PWM_GP1+6)^(0+128)+1)
 11118  03BF  0854               	movf	(??_PWM_GP1+7)^(0+128),w
 11119  03C0  0025               	movlb	5	; select bank5
 11120  03C1  0092               	movwf	18	;volatile
 11121                           
 11122                           ;PWM.c: 53: CCPR1L = gamma_table[GAMMAGP1][(uint8_t) (duty - 1)];
 11123  03C2  0021               	movlb	1	; select bank1
 11124  03C3  0855               	movf	PWM_GP1@duty^(0+128),w
 11125  03C4  3EFF               	addlw	255
 11126  03C5  00CD               	movwf	??_PWM_GP1^(0+128)
 11127  03C6  01CE               	clrf	(??_PWM_GP1^(0+128)+1)
 11128  03C7  35CD               	lslf	??_PWM_GP1^(0+128),f
 11129  03C8  0DCE               	rlf	(??_PWM_GP1^(0+128)+1),f
 11130  03C9  0020               	movlb	0	; select bank0
 11131  03CA  083E               	movf	_GAMMAGP1,w	;volatile
 11132  03CB  0021               	movlb	1	; select bank1
 11133  03CC  00C7               	movwf	___wmul@multiplier^(0+128)
 11134  03CD  30C8               	movlw	200
 11135  03CE  01C8               	clrf	(___wmul@multiplier+1)^(0+128)
 11136  03CF  00C9               	movwf	___wmul@multiplicand^(0+128)
 11137  03D0  01CA               	clrf	(___wmul@multiplicand+1)^(0+128)
 11138  03D1  23E6               	fcall	___wmul
 11139  03D2  302B               	movlw	low (_gamma_table| (0+32768))
 11140  03D3  00CF               	movwf	(??_PWM_GP1+2)^(0+128)
 11141  03D4  3084               	movlw	high (_gamma_table| (0+32768))
 11142  03D5  00D0               	movwf	((??_PWM_GP1+2)^(0+128)+1)
 11143  03D6  0847               	movf	?___wmul^(0+128),w
 11144  03D7  074F               	addwf	(??_PWM_GP1+2)^(0+128),w
 11145  03D8  00D1               	movwf	(??_PWM_GP1+4)^(0+128)
 11146  03D9  0848               	movf	(?___wmul+1)^(0+128),w
 11147  03DA  3D50               	addwfc	(??_PWM_GP1+3)^(0+128),w
 11148  03DB  00D2               	movwf	(??_PWM_GP1+5)^(0+128)
 11149  03DC  0851               	movf	(??_PWM_GP1+4)^(0+128),w
 11150  03DD  074D               	addwf	??_PWM_GP1^(0+128),w
 11151  03DE  0084               	movwf	4
 11152  03DF  0852               	movf	(??_PWM_GP1+5)^(0+128),w
 11153  03E0  3D4E               	addwfc	(??_PWM_GP1+1)^(0+128),w
 11154  03E1  0085               	movwf	5
 11155  03E2  0800               	movf	0,w	;code access
 11156  03E3  0025               	movlb	5	; select bank5
 11157  03E4  0091               	movwf	17	;volatile
 11158  03E5  0008               	return
 11159  03E6                     __end_of_PWM_GP1:	
 11160  03E6                     __ptext33:	
 11161 ;; *************** function ___wmul *****************
 11162 ;; Defined at:
 11163 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
 11164 ;; Parameters:    Size  Location     Type
 11165 ;;  multiplier      2    0[BANK1 ] unsigned int 
 11166 ;;  multiplicand    2    2[BANK1 ] unsigned int 
 11167 ;; Auto vars:     Size  Location     Type
 11168 ;;  product         2    4[BANK1 ] unsigned int 
 11169 ;; Return value:  Size  Location     Type
 11170 ;;                  2    0[BANK1 ] unsigned int 
 11171 ;; Registers used:
 11172 ;;		wreg, status,2, status,0
 11173 ;; Tracked objects:
 11174 ;;		On entry : 1F/1
 11175 ;;		On exit  : 1F/1
 11176 ;;		Unchanged: 0/0
 11177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11178 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11179 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11181 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 11182 ;;Total ram usage:        6 bytes
 11183 ;; Hardware stack levels used:    1
 11184 ;; Hardware stack levels required when called:    7
 11185 ;; This function calls:
 11186 ;;		Nothing
 11187 ;; This function is called by:
 11188 ;;		_PWM_GP1
 11189 ;;		_PWM_GP2
 11190 ;;		_PWM_GP3
 11191 ;; This function uses a non-reentrant model
 11192 ;;
 11193                           
 11194                           
 11195                           ;psect for function ___wmul
 11196  03E6                     ___wmul:	
 11197                           
 11198                           ;incstack = 0
 11199                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 11200  03E6  01CB               	clrf	___wmul@product^(0+128)
 11201  03E7  01CC               	clrf	(___wmul@product+1)^(0+128)
 11202  03E8                     l6598:	
 11203  03E8  1C47               	btfss	___wmul@multiplier^(0+128),0
 11204  03E9  2BEE               	goto	l6602
 11205  03EA  0849               	movf	___wmul@multiplicand^(0+128),w
 11206  03EB  07CB               	addwf	___wmul@product^(0+128),f
 11207  03EC  084A               	movf	(___wmul@multiplicand+1)^(0+128),w
 11208  03ED  3DCC               	addwfc	(___wmul@product+1)^(0+128),f
 11209  03EE                     l6602:	
 11210  03EE  35C9               	lslf	___wmul@multiplicand^(0+128),f
 11211  03EF  0DCA               	rlf	(___wmul@multiplicand+1)^(0+128),f
 11212  03F0  36C8               	lsrf	(___wmul@multiplier+1)^(0+128),f
 11213  03F1  0CC7               	rrf	___wmul@multiplier^(0+128),f
 11214  03F2  0847               	movf	___wmul@multiplier^(0+128),w
 11215  03F3  0448               	iorwf	(___wmul@multiplier+1)^(0+128),w
 11216  03F4  1D03               	btfss	3,2
 11217  03F5  2BE8               	goto	l6598
 11218  03F6  084C               	movf	(___wmul@product+1)^(0+128),w
 11219  03F7  00C8               	movwf	(?___wmul+1)^(0+128)
 11220  03F8  084B               	movf	___wmul@product^(0+128),w
 11221  03F9  00C7               	movwf	?___wmul^(0+128)
 11222  03FA  0008               	return
 11223  03FB                     __end_of___wmul:	
 11224  03FB                     __ptext35:	
 11225 ;; *************** function _FadeProcessClear *****************
 11226 ;; Defined at:
 11227 ;;		line 141 in file "DataVariable.c"
 11228 ;; Parameters:    Size  Location     Type
 11229 ;;  stat            1    wreg     enum E95
 11230 ;; Auto vars:     Size  Location     Type
 11231 ;;  stat            1    3[BANK1 ] enum E95
 11232 ;; Return value:  Size  Location     Type
 11233 ;;                  1    wreg      void 
 11234 ;; Registers used:
 11235 ;;		wreg, status,2, status,0, pclath, cstack
 11236 ;; Tracked objects:
 11237 ;;		On entry : 1F/0
 11238 ;;		On exit  : 1C/0
 11239 ;;		Unchanged: 0/0
 11240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11242 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11244 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11245 ;;Total ram usage:        1 bytes
 11246 ;; Hardware stack levels used:    1
 11247 ;; Hardware stack levels required when called:    9
 11248 ;; This function calls:
 11249 ;;		_Int2StatusUpdate
 11250 ;;		_SetInterrupt
 11251 ;; This function is called by:
 11252 ;;		_FADE_GP1
 11253 ;;		_FADE_GP2
 11254 ;;		_FADE_GP3
 11255 ;; This function uses a non-reentrant model
 11256 ;;
 11257                           
 11258                           
 11259                           ;psect for function _FadeProcessClear
 11260  03FB                     _FadeProcessClear:	
 11261                           
 11262                           ;incstack = 0
 11263                           ; Regs used in _FadeProcessClear: [wreg+status,2+status,0+pclath+cstack]
 11264                           ;FadeProcessClear@stat stored from wreg
 11265  03FB  0021               	movlb	1	; select bank1
 11266  03FC  00CA               	movwf	FadeProcessClear@stat^(0+128)
 11267                           
 11268                           ;DataVariable.c: 142: FSTATUS &= ~(uint8_t) stat;
 11269  03FD  094A               	comf	FadeProcessClear@stat^(0+128),w
 11270  03FE  0020               	movlb	0	; select bank0
 11271  03FF  05C4               	andwf	_FSTATUS,f	;volatile
 11272                           
 11273                           ;DataVariable.c: 143: Int2StatusUpdate(E_GPFADE);
 11274  0400  3040               	movlw	64
 11275  0401  21CB  3180         	fcall	_Int2StatusUpdate
 11276                           
 11277                           ;DataVariable.c: 145: SetInterrupt();
 11278  0403  29D5               	ljmp	l6590
 11279  0404                     __end_of_FadeProcessClear:	
 11280  0404                     __ptext34:	
 11281 ;; *************** function _FadeProcessSet *****************
 11282 ;; Defined at:
 11283 ;;		line 133 in file "DataVariable.c"
 11284 ;; Parameters:    Size  Location     Type
 11285 ;;  stat            1    wreg     enum E95
 11286 ;; Auto vars:     Size  Location     Type
 11287 ;;  stat            1    0[BANK1 ] enum E95
 11288 ;; Return value:  Size  Location     Type
 11289 ;;                  1    wreg      void 
 11290 ;; Registers used:
 11291 ;;		wreg, status,2, status,0
 11292 ;; Tracked objects:
 11293 ;;		On entry : 1F/0
 11294 ;;		On exit  : 1F/0
 11295 ;;		Unchanged: 0/0
 11296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11298 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11300 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11301 ;;Total ram usage:        1 bytes
 11302 ;; Hardware stack levels used:    1
 11303 ;; Hardware stack levels required when called:    7
 11304 ;; This function calls:
 11305 ;;		Nothing
 11306 ;; This function is called by:
 11307 ;;		_FADE_GP1
 11308 ;;		_FADE_GP2
 11309 ;;		_FADE_GP3
 11310 ;; This function uses a non-reentrant model
 11311 ;;
 11312                           
 11313                           
 11314                           ;psect for function _FadeProcessSet
 11315  0404                     _FadeProcessSet:	
 11316                           
 11317                           ;incstack = 0
 11318                           ; Regs used in _FadeProcessSet: [wreg+status,2+status,0]
 11319                           ;FadeProcessSet@stat stored from wreg
 11320  0404  0021               	movlb	1	; select bank1
 11321  0405  00C7               	movwf	FadeProcessSet@stat^(0+128)
 11322                           
 11323                           ;DataVariable.c: 134: FSTATUS |= (uint8_t) stat;
 11324  0406  0020               	movlb	0	; select bank0
 11325  0407  04C4               	iorwf	_FSTATUS,f	;volatile
 11326  0408  0008               	return
 11327  0409                     __end_of_FadeProcessSet:	
 11328  0409                     __ptext14:	
 11329 ;; *************** function _NavKey_FSM *****************
 11330 ;; Defined at:
 11331 ;;		line 324 in file "NavKey.c"
 11332 ;; Parameters:    Size  Location     Type
 11333 ;;		None
 11334 ;; Auto vars:     Size  Location     Type
 11335 ;;		None
 11336 ;; Return value:  Size  Location     Type
 11337 ;;                  1    wreg      void 
 11338 ;; Registers used:
 11339 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11340 ;; Tracked objects:
 11341 ;;		On entry : 1F/1
 11342 ;;		On exit  : 1C/0
 11343 ;;		Unchanged: 0/0
 11344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11349 ;;Total ram usage:        0 bytes
 11350 ;; Hardware stack levels used:    1
 11351 ;; Hardware stack levels required when called:    9
 11352 ;; This function calls:
 11353 ;;		_NavKeySwitch_KeyFilter
 11354 ;;		_NavKey_CentralButton_FSM
 11355 ;;		_NavKey_DWButton_FSM
 11356 ;;		_NavKey_LTButton_FSM
 11357 ;;		_NavKey_RTButton_FSM
 11358 ;;		_NavKey_UPButton_FSM
 11359 ;; This function is called by:
 11360 ;;		_main
 11361 ;; This function uses a non-reentrant model
 11362 ;;
 11363                           
 11364                           
 11365                           ;psect for function _NavKey_FSM
 11366  0409                     _NavKey_FSM:	
 11367                           
 11368                           ;NavKey.c: 327: if (en_deb < 10) {
 11369                           
 11370                           ;incstack = 0
 11371                           ; Regs used in _NavKey_FSM: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11372  0409  3000               	movlw	0
 11373  040A  0230               	subwf	(_en_deb+1)^(0+128),w
 11374  040B  300A               	movlw	10
 11375  040C  1903               	skipnz
 11376  040D  022F               	subwf	_en_deb^(0+128),w
 11377  040E  1803               	skipnc
 11378  040F  2C13               	goto	l7366
 11379                           
 11380                           ;NavKey.c: 328: en_deb++;
 11381  0410  0AAF               	incf	_en_deb^(0+128),f
 11382  0411  1903               	skipnz
 11383  0412  0AB0               	incf	(_en_deb+1)^(0+128),f
 11384  0413                     l7366:	
 11385                           
 11386                           ;NavKey.c: 329: };NavKey.c: 331: NavKeySwitch_KeyFilter();
 11387  0413  3189  21AE  3180   	fcall	_NavKeySwitch_KeyFilter
 11388                           
 11389                           ;NavKey.c: 332: NavKey_CentralButton_FSM();
 11390  0416  3194  24A5  3180   	fcall	_NavKey_CentralButton_FSM
 11391                           
 11392                           ;NavKey.c: 333: NavKey_UPButton_FSM();
 11393  0419  3194  2421  3180   	fcall	_NavKey_UPButton_FSM
 11394                           
 11395                           ;NavKey.c: 334: NavKey_DWButton_FSM();
 11396  041C  3194  2484  3180   	fcall	_NavKey_DWButton_FSM
 11397                           
 11398                           ;NavKey.c: 335: NavKey_RTButton_FSM();
 11399  041F  3194  2442         	fcall	_NavKey_RTButton_FSM
 11400                           
 11401                           ;NavKey.c: 336: NavKey_LTButton_FSM();
 11402  0421  3194  2C63         	ljmp	l7294
 11403  0423                     __end_of_NavKey_FSM:	
 11404  0423                     __ptext5:	
 11405 ;; *************** function _TMR3_SetInterruptHandler *****************
 11406 ;; Defined at:
 11407 ;;		line 178 in file "mcc_generated_files/tmr3.c"
 11408 ;; Parameters:    Size  Location     Type
 11409 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 11410 ;;		 -> TimerInt(1), TMR3_DefaultInterruptHandler(1), 
 11411 ;; Auto vars:     Size  Location     Type
 11412 ;;		None
 11413 ;; Return value:  Size  Location     Type
 11414 ;;                  1    wreg      void 
 11415 ;; Registers used:
 11416 ;;		wreg
 11417 ;; Tracked objects:
 11418 ;;		On entry : 1F/1
 11419 ;;		On exit  : 1F/1
 11420 ;;		Unchanged: 0/0
 11421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11422 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11425 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11426 ;;Total ram usage:        2 bytes
 11427 ;; Hardware stack levels used:    1
 11428 ;; Hardware stack levels required when called:    7
 11429 ;; This function calls:
 11430 ;;		Nothing
 11431 ;; This function is called by:
 11432 ;;		_TMR3_Initialize
 11433 ;;		_main
 11434 ;; This function uses a non-reentrant model
 11435 ;;
 11436                           
 11437                           
 11438                           ;psect for function _TMR3_SetInterruptHandler
 11439  0423                     _TMR3_SetInterruptHandler:	
 11440                           
 11441                           ;tmr3.c: 179: TMR3_InterruptHandler = InterruptHandler;
 11442                           
 11443                           ;incstack = 0
 11444                           ; Regs used in _TMR3_SetInterruptHandler: [wreg]
 11445  0423  0848               	movf	(TMR3_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 11446  0424  00D8               	movwf	(_TMR3_InterruptHandler+1)^(0+128)
 11447  0425  0847               	movf	TMR3_SetInterruptHandler@InterruptHandler^(0+128),w
 11448  0426  00D7               	movwf	_TMR3_InterruptHandler^(0+128)
 11449  0427  0008               	return
 11450  0428                     __end_of_TMR3_SetInterruptHandler:	
 11451  0428                     __ptext1:	
 11452 ;; *************** function _TMR3_StartTimer *****************
 11453 ;; Defined at:
 11454 ;;		line 93 in file "mcc_generated_files/tmr3.c"
 11455 ;; Parameters:    Size  Location     Type
 11456 ;;		None
 11457 ;; Auto vars:     Size  Location     Type
 11458 ;;		None
 11459 ;; Return value:  Size  Location     Type
 11460 ;;                  1    wreg      void 
 11461 ;; Registers used:
 11462 ;;		None
 11463 ;; Tracked objects:
 11464 ;;		On entry : 1F/1
 11465 ;;		On exit  : 1F/8
 11466 ;;		Unchanged: 0/0
 11467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11472 ;;Total ram usage:        0 bytes
 11473 ;; Hardware stack levels used:    1
 11474 ;; Hardware stack levels required when called:    7
 11475 ;; This function calls:
 11476 ;;		Nothing
 11477 ;; This function is called by:
 11478 ;;		_main
 11479 ;; This function uses a non-reentrant model
 11480 ;;
 11481                           
 11482                           
 11483                           ;psect for function _TMR3_StartTimer
 11484  0428                     _TMR3_StartTimer:	
 11485                           
 11486                           ;tmr3.c: 96: T3CONbits.TMR3ON = 1;
 11487                           
 11488                           ;incstack = 0
 11489                           ; Regs used in _TMR3_StartTimer: []
 11490  0428  0028               	movlb	8	; select bank8
 11491  0429  1413               	bsf	19,0	;volatile
 11492  042A  0008               	return
 11493  042B                     __end_of_TMR3_StartTimer:	
 11494                           
 11495                           	psect	bssBANK0
 11496  0020                     __pbssBANK0:	
 11497  0020                     _ISTEP:	
 11498  0020                     	ds	4
 11499  0024                     _CMIN:	
 11500  0024                     	ds	4
 11501  0028                     _CMAX:	
 11502  0028                     	ds	4
 11503  002C                     _CVAL:	
 11504  002C                     	ds	4
 11505  0030                     _INTCONF:	
 11506  0030                     	ds	2
 11507  0032                     _NSTATUS:	
 11508  0032                     	ds	2
 11509  0034                     _gp_fade_cnt:	
 11510  0034                     	ds	1
 11511  0035                     _temp_gp3:	
 11512  0035                     	ds	1
 11513  0036                     _temp_gp2:	
 11514  0036                     	ds	1
 11515  0037                     _temp_gp1:	
 11516  0037                     	ds	1
 11517  0038                     _EncoderReg:	
 11518  0038                     	ds	1
 11519  0039                     _C_DTYPE:	
 11520  0039                     	ds	1
 11521  003A                     _C_WRAPE:	
 11522  003A                     	ds	1
 11523  003B                     _C_MBANK:	
 11524  003B                     	ds	1
 11525  003C                     _GAMMAGP3:	
 11526  003C                     	ds	1
 11527  003D                     _GAMMAGP2:	
 11528  003D                     	ds	1
 11529  003E                     _GAMMAGP1:	
 11530  003E                     	ds	1
 11531  003F                     _FADEGP:	
 11532  003F                     	ds	1
 11533  0040                     _DPPERIOD:	
 11534  0040                     	ds	1
 11535  0041                     _GP3REG:	
 11536  0041                     	ds	1
 11537  0042                     _GP2REG:	
 11538  0042                     	ds	1
 11539  0043                     _GP1REG:	
 11540  0043                     	ds	1
 11541  0044                     _FSTATUS:	
 11542  0044                     	ds	1
 11543  0045                     _SSTATUS:	
 11544  0045                     	ds	1
 11545  0046                     _GP3CONF:	
 11546  0046                     	ds	1
 11547  0047                     _GP2CONF:	
 11548  0047                     	ds	1
 11549  0048                     _GP1CONF:	
 11550  0048                     	ds	1
 11551  0049                     _GCONF:	
 11552  0049                     	ds	1
 11553                           
 11554                           	psect	dataBANK0
 11555  005F                     __pdataBANK0:	
 11556  005F                     _I2C1_slaveWriteData:	
 11557  005F                     	ds	1
 11558                           
 11559                           	psect	bssBANK1
 11560  00A0                     __pbssBANK1:	
 11561  00A0                     _NavKey_PBstatus:	
 11562  00A0                     	ds	5
 11563  00A5                     _NavKey_PBtemp:	
 11564  00A5                     	ds	5
 11565  00AA                     _pb_cnt:	
 11566  00AA                     	ds	5
 11567  00AF                     _en_deb:	
 11568  00AF                     	ds	2
 11569  00B1                     _double_push_cnt:	
 11570  00B1                     	ds	2
 11571  00B3                     _DoublePush:	
 11572  00B3                     	ds	2
 11573  00B5                     NavKey_LTButton_FSM@lt_fsm:	
 11574  00B5                     	ds	1
 11575  00B6                     NavKey_RTButton_FSM@rt_fsm:	
 11576  00B6                     	ds	1
 11577  00B7                     NavKey_DWButton_FSM@dn_fsm:	
 11578  00B7                     	ds	1
 11579  00B8                     NavKey_UPButton_FSM@up_fsm:	
 11580  00B8                     	ds	1
 11581  00B9                     _en_prev:	
 11582  00B9                     	ds	1
 11583  00BA                     _pb_fsm:	
 11584  00BA                     	ds	1
 11585  00BB                     _gp3_fsm:	
 11586  00BB                     	ds	1
 11587  00BC                     _gp2_fsm:	
 11588  00BC                     	ds	1
 11589  00BD                     _gp1_fsm:	
 11590  00BD                     	ds	1
 11591  00BE                     _gp_timer:	
 11592  00BE                     	ds	1
 11593  00BF                     I2C1_StatusCallback@slaveWriteType:	
 11594  00BF                     	ds	1
 11595  00C0                     _int2clear:	
 11596  00C0                     	ds	1
 11597  00C1                     _intclear:	
 11598  00C1                     	ds	1
 11599  00C2                     _C_DIRE:	
 11600  00C2                     	ds	1
 11601  00C3                     _C_IPUD:	
 11602  00C3                     	ds	1
 11603  00C4                     _C_CKSRC:	
 11604  00C4                     	ds	1
 11605  00C5                     _C_RESET:	
 11606  00C5                     	ds	1
 11607  00C6                     _fsm_tmr:	
 11608  00C6                     	ds	1
 11609                           
 11610                           	psect	clrtext
 11611  0B1B                     clear_ram0:	
 11612                           ;	Called with FSR0 containing the base address, and
 11613                           ;	WREG with the size to clear
 11614                           
 11615  0B1B  0064               	clrwdt	;clear the watchdog before getting into this loop
 11616  0B1C                     clrloop0:	
 11617  0B1C  0180               	clrf	0	;clear RAM location pointed to by FSR
 11618  0B1D  3101               	addfsr 0,1
 11619  0B1E  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
 11620  0B1F  2B1C               	goto	clrloop0	;have we reached the end yet?
 11621  0B20  3400               	retlw	0	;all done for this memory range, return
 11622                           
 11623                           	psect	cstackBANK1
 11624  00C7                     __pcstackBANK1:	
 11625  00C7                     ??_PMD_Initialize:	
 11626  00C7                     ??_PIN_MANAGER_Initialize:	
 11627                           ; 1 bytes @ 0x0
 11628                           
 11629  00C7                     ??_OSCILLATOR_Initialize:	
 11630                           ; 1 bytes @ 0x0
 11631                           
 11632  00C7                     ??_WDT_Initialize:	
 11633                           ; 1 bytes @ 0x0
 11634                           
 11635  00C7                     ??_I2C1_AddressSet:	
 11636                           ; 1 bytes @ 0x0
 11637                           
 11638  00C7                     ??_I2C1_Initialize:	
 11639                           ; 1 bytes @ 0x0
 11640                           
 11641  00C7                     ??_CLC2_Initialize:	
 11642                           ; 1 bytes @ 0x0
 11643                           
 11644  00C7                     ??_TMR2_Initialize:	
 11645                           ; 1 bytes @ 0x0
 11646                           
 11647  00C7                     ??_CLC1_Initialize:	
 11648                           ; 1 bytes @ 0x0
 11649                           
 11650  00C7                     ?_TMR3_SetInterruptHandler:	
 11651                           ; 1 bytes @ 0x0
 11652                           
 11653  00C7                     ??_DataInitSet:	
 11654                           ; 1 bytes @ 0x0
 11655                           
 11656  00C7                     ??_ADC_Initialize:	
 11657                           ; 1 bytes @ 0x0
 11658                           
 11659  00C7                     ??_TMR3_StartTimer:	
 11660                           ; 1 bytes @ 0x0
 11661                           
 11662  00C7                     ??_SetInterrupt:	
 11663                           ; 1 bytes @ 0x0
 11664                           
 11665  00C7                     ??_ClearInterrupt:	
 11666                           ; 1 bytes @ 0x0
 11667                           
 11668  00C7                     ?_NavKeyStatusUpdate:	
 11669                           ; 1 bytes @ 0x0
 11670                           
 11671  00C7                     ??_FadeProcessSet:	
 11672                           ; 1 bytes @ 0x0
 11673                           
 11674  00C7                     ??_NavKeySwitch_KeyFilter:	
 11675                           ; 1 bytes @ 0x0
 11676                           
 11677  00C7                     ?_ADC_GetConversion:	
 11678                           ; 1 bytes @ 0x0
 11679                           
 11680  00C7                     ?___wmul:	
 11681                           ; 2 bytes @ 0x0
 11682                           
 11683  00C7                     FadeProcessSet@stat:	
 11684                           ; 2 bytes @ 0x0
 11685                           
 11686  00C7                     NavKeySwitch_KeyFilter@i:	
 11687                           ; 1 bytes @ 0x0
 11688                           
 11689  00C7                     TMR3_SetInterruptHandler@InterruptHandler:	
 11690                           ; 1 bytes @ 0x0
 11691                           
 11692  00C7                     NavKeyStatusUpdate@stat:	
 11693                           ; 2 bytes @ 0x0
 11694                           
 11695  00C7                     ___wmul@multiplier:	
 11696                           ; 2 bytes @ 0x0
 11697                           
 11698                           
 11699                           ; 2 bytes @ 0x0
 11700  00C7                     	ds	2
 11701  00C9                     ??_TMR3_Initialize:	
 11702  00C9                     ??_TMR3_SetInterruptHandler:	
 11703                           ; 1 bytes @ 0x2
 11704                           
 11705  00C9                     ??_NavKey_FSM:	
 11706                           ; 1 bytes @ 0x2
 11707                           
 11708  00C9                     ??_SYSTEM_Initialize:	
 11709                           ; 1 bytes @ 0x2
 11710                           
 11711  00C9                     ??_ADC_GetConversion:	
 11712                           ; 1 bytes @ 0x2
 11713                           
 11714  00C9                     ??_NavKeyStatusUpdate:	
 11715                           ; 1 bytes @ 0x2
 11716                           
 11717  00C9                     ??_Int2StatusUpdate:	
 11718                           ; 1 bytes @ 0x2
 11719                           
 11720  00C9                     ??_NavKey_CentralButton_FSM:	
 11721                           ; 1 bytes @ 0x2
 11722                           
 11723  00C9                     ??_NavKey_UPButton_FSM:	
 11724                           ; 1 bytes @ 0x2
 11725                           
 11726  00C9                     ??_NavKey_DWButton_FSM:	
 11727                           ; 1 bytes @ 0x2
 11728                           
 11729  00C9                     ??_NavKey_RTButton_FSM:	
 11730                           ; 1 bytes @ 0x2
 11731                           
 11732  00C9                     ??_NavKey_LTButton_FSM:	
 11733                           ; 1 bytes @ 0x2
 11734                           
 11735  00C9                     Int2StatusUpdate@stat:	
 11736                           ; 1 bytes @ 0x2
 11737                           
 11738  00C9                     ___wmul@multiplicand:	
 11739                           ; 1 bytes @ 0x2
 11740                           
 11741                           
 11742                           ; 2 bytes @ 0x2
 11743  00C9                     	ds	1
 11744  00CA                     ??_FadeProcessClear:	
 11745  00CA                     ADC_GetConversion@channel:	
 11746                           ; 1 bytes @ 0x3
 11747                           
 11748  00CA                     FadeProcessClear@stat:	
 11749                           ; 1 bytes @ 0x3
 11750                           
 11751                           
 11752                           ; 1 bytes @ 0x3
 11753  00CA                     	ds	1
 11754  00CB                     ??_GP1_FSM:	
 11755  00CB                     ??_GP2_FSM:	
 11756                           ; 1 bytes @ 0x4
 11757                           
 11758  00CB                     ??_GP3_FSM:	
 11759                           ; 1 bytes @ 0x4
 11760                           
 11761  00CB                     ??___wmul:	
 11762                           ; 1 bytes @ 0x4
 11763                           
 11764  00CB                     ___wmul@product:	
 11765                           ; 1 bytes @ 0x4
 11766                           
 11767                           
 11768                           ; 2 bytes @ 0x4
 11769  00CB                     	ds	2
 11770  00CD                     ??_PWM_GP1:	
 11771  00CD                     ??_PWM_GP2:	
 11772                           ; 1 bytes @ 0x6
 11773                           
 11774  00CD                     ??_PWM_GP3:	
 11775                           ; 1 bytes @ 0x6
 11776                           
 11777                           
 11778                           ; 1 bytes @ 0x6
 11779  00CD                     	ds	8
 11780  00D5                     PWM_GP1@duty:	
 11781  00D5                     PWM_GP2@duty:	
 11782                           ; 1 bytes @ 0xE
 11783                           
 11784  00D5                     PWM_GP3@duty:	
 11785                           ; 1 bytes @ 0xE
 11786                           
 11787                           
 11788                           ; 1 bytes @ 0xE
 11789  00D5                     	ds	1
 11790  00D6                     ??_GP_Ports_FSM:	
 11791  00D6                     ??_FADE_GP1:	
 11792                           ; 1 bytes @ 0xF
 11793                           
 11794  00D6                     ??_FADE_GP2:	
 11795                           ; 1 bytes @ 0xF
 11796                           
 11797  00D6                     ??_FADE_GP3:	
 11798                           ; 1 bytes @ 0xF
 11799                           
 11800                           
 11801                           ; 1 bytes @ 0xF
 11802  00D6                     	ds	1
 11803  00D7                     ??_main:	
 11804                           
 11805                           	psect	cstackCOMMON
 11806  0070                     __pcstackCOMMON:	
 11807                           ; 1 bytes @ 0x10
 11808                           
 11809  0070                     ?___flge:	
 11810  0070                     ?_PMD_Initialize:	
 11811                           ; 1 bit 
 11812                           
 11813  0070                     ?_PIN_MANAGER_Initialize:	
 11814                           ; 1 bytes @ 0x0
 11815                           
 11816  0070                     ?_OSCILLATOR_Initialize:	
 11817                           ; 1 bytes @ 0x0
 11818                           
 11819  0070                     ?_WDT_Initialize:	
 11820                           ; 1 bytes @ 0x0
 11821                           
 11822  0070                     ?_I2C1_AddressSet:	
 11823                           ; 1 bytes @ 0x0
 11824                           
 11825  0070                     ?_I2C1_Initialize:	
 11826                           ; 1 bytes @ 0x0
 11827                           
 11828  0070                     ?_CLC2_Initialize:	
 11829                           ; 1 bytes @ 0x0
 11830                           
 11831  0070                     ?_TMR2_Initialize:	
 11832                           ; 1 bytes @ 0x0
 11833                           
 11834  0070                     ?_CLC1_Initialize:	
 11835                           ; 1 bytes @ 0x0
 11836                           
 11837  0070                     ?_TMR3_Initialize:	
 11838                           ; 1 bytes @ 0x0
 11839                           
 11840  0070                     ?_CLC2_ISR:	
 11841                           ; 1 bytes @ 0x0
 11842                           
 11843  0070                     ?_CLC1_ISR:	
 11844                           ; 1 bytes @ 0x0
 11845                           
 11846  0070                     ?_I2C1_ISR:	
 11847                           ; 1 bytes @ 0x0
 11848                           
 11849  0070                     ?_TMR3_ISR:	
 11850                           ; 1 bytes @ 0x0
 11851                           
 11852  0070                     ?_CLC_1_Interrupt:	
 11853                           ; 1 bytes @ 0x0
 11854                           
 11855  0070                     ?_CLC_2_Interrupt:	
 11856                           ; 1 bytes @ 0x0
 11857                           
 11858  0070                     ?_I2C1_StatusCallback:	
 11859                           ; 1 bytes @ 0x0
 11860                           
 11861  0070                     ?_TMR3_DefaultInterruptHandler:	
 11862                           ; 1 bytes @ 0x0
 11863                           
 11864  0070                     ??_TMR3_DefaultInterruptHandler:	
 11865                           ; 1 bytes @ 0x0
 11866                           
 11867  0070                     ?_TMR3_CallBack:	
 11868                           ; 1 bytes @ 0x0
 11869                           
 11870  0070                     ??_TMR3_CallBack:	
 11871                           ; 1 bytes @ 0x0
 11872                           
 11873  0070                     ?_DataInitSet:	
 11874                           ; 1 bytes @ 0x0
 11875                           
 11876  0070                     ?_NavKey_FSM:	
 11877                           ; 1 bytes @ 0x0
 11878                           
 11879  0070                     ?_GP_Ports_FSM:	
 11880                           ; 1 bytes @ 0x0
 11881                           
 11882  0070                     ?_RegisterRead:	
 11883                           ; 1 bytes @ 0x0
 11884                           
 11885  0070                     ?_GeneralDataSet:	
 11886                           ; 1 bytes @ 0x0
 11887                           
 11888  0070                     ??_GeneralDataSet:	
 11889                           ; 1 bytes @ 0x0
 11890                           
 11891  0070                     ?_Config_GP1:	
 11892                           ; 1 bytes @ 0x0
 11893                           
 11894  0070                     ?_Config_GP2:	
 11895                           ; 1 bytes @ 0x0
 11896                           
 11897  0070                     ?_Config_GP3:	
 11898                           ; 1 bytes @ 0x0
 11899                           
 11900  0070                     ?_UpdateOut_GP1:	
 11901                           ; 1 bytes @ 0x0
 11902                           
 11903  0070                     ?_UpdateOut_GP2:	
 11904                           ; 1 bytes @ 0x0
 11905                           
 11906  0070                     ?_UpdateOut_GP3:	
 11907                           ; 1 bytes @ 0x0
 11908                           
 11909  0070                     ?_eeprom_write:	
 11910                           ; 1 bytes @ 0x0
 11911                           
 11912  0070                     ?_eeprom_read:	
 11913                           ; 1 bytes @ 0x0
 11914                           
 11915  0070                     ??_eeprom_read:	
 11916                           ; 1 bytes @ 0x0
 11917                           
 11918  0070                     ?_PWM_GP1:	
 11919                           ; 1 bytes @ 0x0
 11920                           
 11921  0070                     ?_PWM_GP2:	
 11922                           ; 1 bytes @ 0x0
 11923                           
 11924  0070                     ?_PWM_GP3:	
 11925                           ; 1 bytes @ 0x0
 11926                           
 11927  0070                     ?_SYSTEM_Initialize:	
 11928                           ; 1 bytes @ 0x0
 11929                           
 11930  0070                     ?_INTERRUPT_InterruptManager:	
 11931                           ; 1 bytes @ 0x0
 11932                           
 11933  0070                     ?_I2C1_Initialize_ClockStreach:	
 11934                           ; 1 bytes @ 0x0
 11935                           
 11936  0070                     ??_I2C1_Initialize_ClockStreach:	
 11937                           ; 1 bytes @ 0x0
 11938                           
 11939  0070                     ?_PWM3_Initialize:	
 11940                           ; 1 bytes @ 0x0
 11941                           
 11942  0070                     ??_PWM3_Initialize:	
 11943                           ; 1 bytes @ 0x0
 11944                           
 11945  0070                     ?_ADC_Initialize:	
 11946                           ; 1 bytes @ 0x0
 11947                           
 11948  0070                     ?_PWM1_Initialize:	
 11949                           ; 1 bytes @ 0x0
 11950                           
 11951  0070                     ??_PWM1_Initialize:	
 11952                           ; 1 bytes @ 0x0
 11953                           
 11954  0070                     ?_PWM2_Initialize:	
 11955                           ; 1 bytes @ 0x0
 11956                           
 11957  0070                     ??_PWM2_Initialize:	
 11958                           ; 1 bytes @ 0x0
 11959                           
 11960  0070                     ?_TMR3_StartTimer:	
 11961                           ; 1 bytes @ 0x0
 11962                           
 11963  0070                     ?_TMR3_WriteTimer:	
 11964                           ; 1 bytes @ 0x0
 11965                           
 11966  0070                     ?_SetInterrupt:	
 11967                           ; 1 bytes @ 0x0
 11968                           
 11969  0070                     ?_ClearInterrupt:	
 11970                           ; 1 bytes @ 0x0
 11971                           
 11972  0070                     ?_TimerInt:	
 11973                           ; 1 bytes @ 0x0
 11974                           
 11975  0070                     ??_TimerInt:	
 11976                           ; 1 bytes @ 0x0
 11977                           
 11978  0070                     ?_main:	
 11979                           ; 1 bytes @ 0x0
 11980                           
 11981  0070                     ?_GeneralDataSplit:	
 11982                           ; 1 bytes @ 0x0
 11983                           
 11984  0070                     ??_GeneralDataSplit:	
 11985                           ; 1 bytes @ 0x0
 11986                           
 11987  0070                     ?_Int2StatusUpdate:	
 11988                           ; 1 bytes @ 0x0
 11989                           
 11990  0070                     ?_StatusClear:	
 11991                           ; 1 bytes @ 0x0
 11992                           
 11993  0070                     ??_StatusClear:	
 11994                           ; 1 bytes @ 0x0
 11995                           
 11996  0070                     ?_Int2StatusClear:	
 11997                           ; 1 bytes @ 0x0
 11998                           
 11999  0070                     ??_Int2StatusClear:	
 12000                           ; 1 bytes @ 0x0
 12001                           
 12002  0070                     ?_FadeProcessSet:	
 12003                           ; 1 bytes @ 0x0
 12004                           
 12005  0070                     ?_FadeProcessClear:	
 12006                           ; 1 bytes @ 0x0
 12007                           
 12008  0070                     ?_FADE_GP1:	
 12009                           ; 1 bytes @ 0x0
 12010                           
 12011  0070                     ?_FADE_GP2:	
 12012                           ; 1 bytes @ 0x0
 12013                           
 12014  0070                     ?_FADE_GP3:	
 12015                           ; 1 bytes @ 0x0
 12016                           
 12017  0070                     ?_GP1_FSM:	
 12018                           ; 1 bytes @ 0x0
 12019                           
 12020  0070                     ?_GP2_FSM:	
 12021                           ; 1 bytes @ 0x0
 12022                           
 12023  0070                     ?_GP3_FSM:	
 12024                           ; 1 bytes @ 0x0
 12025                           
 12026  0070                     ?_NavKeySwitch_KeyFilter:	
 12027                           ; 1 bytes @ 0x0
 12028                           
 12029  0070                     ?_NavKey_CentralButton_FSM:	
 12030                           ; 1 bytes @ 0x0
 12031                           
 12032  0070                     ?_NavKey_UPButton_FSM:	
 12033                           ; 1 bytes @ 0x0
 12034                           
 12035  0070                     ?_NavKey_DWButton_FSM:	
 12036                           ; 1 bytes @ 0x0
 12037                           
 12038  0070                     ?_NavKey_RTButton_FSM:	
 12039                           ; 1 bytes @ 0x0
 12040                           
 12041  0070                     ?_NavKey_LTButton_FSM:	
 12042                           ; 1 bytes @ 0x0
 12043                           
 12044  0070                     ?i1_I2C1_Initialize:	
 12045                           ; 1 bytes @ 0x0
 12046                           
 12047  0070                     ??i1_I2C1_Initialize:	
 12048                           ; 1 bytes @ 0x0
 12049                           
 12050  0070                     ?i1_SetInterrupt:	
 12051                           ; 1 bytes @ 0x0
 12052                           
 12053  0070                     ??i1_SetInterrupt:	
 12054                           ; 1 bytes @ 0x0
 12055                           
 12056  0070                     ?i1_ClearInterrupt:	
 12057                           ; 1 bytes @ 0x0
 12058                           
 12059  0070                     ??i1_ClearInterrupt:	
 12060                           ; 1 bytes @ 0x0
 12061                           
 12062  0070                     ?i1_NavKeyStatusUpdate:	
 12063                           ; 1 bytes @ 0x0
 12064                           
 12065  0070                     ?i1_PWM_GP1:	
 12066                           ; 1 bytes @ 0x0
 12067                           
 12068  0070                     ?i1_PWM_GP2:	
 12069                           ; 1 bytes @ 0x0
 12070                           
 12071  0070                     ?i1_PWM_GP3:	
 12072                           ; 1 bytes @ 0x0
 12073                           
 12074  0070                     ?i1___wmul:	
 12075                           ; 1 bytes @ 0x0
 12076                           
 12077  0070                     ?___fladd:	
 12078                           ; 2 bytes @ 0x0
 12079                           
 12080  0070                     eeprom_read@addr:	
 12081                           ; 4 bytes @ 0x0
 12082                           
 12083  0070                     eeprom_write@value:	
 12084                           ; 1 bytes @ 0x0
 12085                           
 12086  0070                     TMR3_WriteTimer@timerVal:	
 12087                           ; 1 bytes @ 0x0
 12088                           
 12089  0070                     i1NavKeyStatusUpdate@stat:	
 12090                           ; 2 bytes @ 0x0
 12091                           
 12092  0070                     i1___wmul@multiplier:	
 12093                           ; 2 bytes @ 0x0
 12094                           
 12095  0070                     ___flge@ff1:	
 12096                           ; 2 bytes @ 0x0
 12097                           
 12098  0070                     ___fladd@b:	
 12099                           ; 4 bytes @ 0x0
 12100                           
 12101                           
 12102                           ; 4 bytes @ 0x0
 12103  0070                     	ds	1
 12104  0071                     ??_RegisterRead:	
 12105  0071                     ??_eeprom_write:	
 12106                           ; 1 bytes @ 0x1
 12107                           
 12108  0071                     RegisterRead@add:	
 12109                           ; 1 bytes @ 0x1
 12110                           
 12111  0071                     eeprom_write@addr:	
 12112                           ; 1 bytes @ 0x1
 12113                           
 12114                           
 12115                           ; 1 bytes @ 0x1
 12116  0071                     	ds	1
 12117  0072                     ??_TMR3_ISR:	
 12118  0072                     ??_TMR3_WriteTimer:	
 12119                           ; 1 bytes @ 0x2
 12120                           
 12121  0072                     ??i1_NavKeyStatusUpdate:	
 12122                           ; 1 bytes @ 0x2
 12123                           
 12124  0072                     RegisterRead@return_value:	
 12125                           ; 1 bytes @ 0x2
 12126                           
 12127  0072                     i1___wmul@multiplicand:	
 12128                           ; 1 bytes @ 0x2
 12129                           
 12130                           
 12131                           ; 2 bytes @ 0x2
 12132  0072                     	ds	2
 12133  0074                     ??i1___wmul:	
 12134  0074                     i1___wmul@product:	
 12135                           ; 1 bytes @ 0x4
 12136                           
 12137  0074                     ___flge@ff2:	
 12138                           ; 2 bytes @ 0x4
 12139                           
 12140  0074                     ___fladd@a:	
 12141                           ; 4 bytes @ 0x4
 12142                           
 12143                           
 12144                           ; 4 bytes @ 0x4
 12145  0074                     	ds	2
 12146  0076                     ??i1_PWM_GP1:	
 12147  0076                     ??i1_PWM_GP2:	
 12148                           ; 1 bytes @ 0x6
 12149                           
 12150  0076                     ??i1_PWM_GP3:	
 12151                           ; 1 bytes @ 0x6
 12152                           
 12153                           
 12154                           ; 1 bytes @ 0x6
 12155  0076                     	ds	2
 12156  0078                     ??___flge:	
 12157  0078                     ___fladd@signs:	
 12158                           ; 1 bytes @ 0x8
 12159                           
 12160                           
 12161                           ; 1 bytes @ 0x8
 12162  0078                     	ds	1
 12163  0079                     ___fladd@aexp:	
 12164                           
 12165                           ; 1 bytes @ 0x9
 12166  0079                     	ds	1
 12167  007A                     ___fladd@bexp:	
 12168                           
 12169                           ; 1 bytes @ 0xA
 12170  007A                     	ds	1
 12171  007B                     ___fladd@grs:	
 12172                           
 12173                           ; 1 bytes @ 0xB
 12174  007B                     	ds	1
 12175  007C                     ??_CLC2_ISR:	
 12176  007C                     ??_CLC1_ISR:	
 12177                           ; 1 bytes @ 0xC
 12178                           
 12179  007C                     ??___flsub:	
 12180                           ; 1 bytes @ 0xC
 12181                           
 12182                           
 12183                           ; 1 bytes @ 0xC
 12184  007C                     	ds	2
 12185  007E                     ??_I2C1_ISR:	
 12186  007E                     ??_I2C1_StatusCallback:	
 12187                           ; 1 bytes @ 0xE
 12188                           
 12189  007E                     ??_RegisterWrite:	
 12190                           ; 1 bytes @ 0xE
 12191                           
 12192  007E                     ??_INTERRUPT_InterruptManager:	
 12193                           ; 1 bytes @ 0xE
 12194                           
 12195                           
 12196                           	psect	cstackBANK0
 12197  004A                     __pcstackBANK0:	
 12198                           ; 1 bytes @ 0xE
 12199                           
 12200  004A                     ??___fladd:	
 12201  004A                     i1PWM_GP1@duty:	
 12202                           ; 1 bytes @ 0x0
 12203                           
 12204  004A                     i1PWM_GP2@duty:	
 12205                           ; 1 bytes @ 0x0
 12206                           
 12207  004A                     i1PWM_GP3@duty:	
 12208                           ; 1 bytes @ 0x0
 12209                           
 12210                           
 12211                           ; 1 bytes @ 0x0
 12212  004A                     	ds	1
 12213  004B                     ??_Config_GP1:	
 12214  004B                     ??_Config_GP2:	
 12215                           ; 1 bytes @ 0x1
 12216                           
 12217  004B                     ??_Config_GP3:	
 12218                           ; 1 bytes @ 0x1
 12219                           
 12220  004B                     ??_UpdateOut_GP1:	
 12221                           ; 1 bytes @ 0x1
 12222                           
 12223  004B                     ??_UpdateOut_GP2:	
 12224                           ; 1 bytes @ 0x1
 12225                           
 12226  004B                     ??_UpdateOut_GP3:	
 12227                           ; 1 bytes @ 0x1
 12228                           
 12229                           
 12230                           ; 1 bytes @ 0x1
 12231  004B                     	ds	2
 12232  004D                     ?_RegisterWrite:	
 12233  004D                     RegisterWrite@data:	
 12234                           ; 1 bytes @ 0x3
 12235                           
 12236                           
 12237                           ; 1 bytes @ 0x3
 12238  004D                     	ds	1
 12239  004E                     RegisterWrite@add:	
 12240                           
 12241                           ; 1 bytes @ 0x4
 12242  004E                     	ds	1
 12243  004F                     I2C1_StatusCallback@i2c_bus_state:	
 12244                           
 12245                           ; 1 bytes @ 0x5
 12246  004F                     	ds	1
 12247  0050                     I2C1_ISR@i2c_data:	
 12248                           
 12249                           ; 1 bytes @ 0x6
 12250  0050                     	ds	2
 12251  0052                     ??_CLC_1_Interrupt:	
 12252  0052                     ?___flsub:	
 12253                           ; 1 bytes @ 0x8
 12254                           
 12255  0052                     ___flsub@a:	
 12256                           ; 4 bytes @ 0x8
 12257                           
 12258                           
 12259                           ; 4 bytes @ 0x8
 12260  0052                     	ds	4
 12261  0056                     ___flsub@b:	
 12262                           
 12263                           ; 4 bytes @ 0xC
 12264  0056                     	ds	4
 12265  005A                     ??_CLC_2_Interrupt:	
 12266                           
 12267                           ; 1 bytes @ 0x10
 12268  005A                     	ds	4
 12269                           
 12270                           	psect	text2
 12271  1355                     __ptext2:	
 12272 ;; *************** function _SYSTEM_Initialize *****************
 12273 ;; Defined at:
 12274 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12275 ;; Parameters:    Size  Location     Type
 12276 ;;		None
 12277 ;; Auto vars:     Size  Location     Type
 12278 ;;		None
 12279 ;; Return value:  Size  Location     Type
 12280 ;;                  1    wreg      void 
 12281 ;; Registers used:
 12282 ;;		wreg, status,2, status,0, pclath, cstack
 12283 ;; Tracked objects:
 12284 ;;		On entry : B1F/0
 12285 ;;		On exit  : 1F/8
 12286 ;;		Unchanged: 0/0
 12287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12292 ;;Total ram usage:        0 bytes
 12293 ;; Hardware stack levels used:    1
 12294 ;; Hardware stack levels required when called:    9
 12295 ;; This function calls:
 12296 ;;		_CLC1_Initialize
 12297 ;;		_CLC2_Initialize
 12298 ;;		_I2C1_AddressSet
 12299 ;;		_I2C1_Initialize
 12300 ;;		_OSCILLATOR_Initialize
 12301 ;;		_PIN_MANAGER_Initialize
 12302 ;;		_PMD_Initialize
 12303 ;;		_TMR2_Initialize
 12304 ;;		_TMR3_Initialize
 12305 ;;		_WDT_Initialize
 12306 ;; This function is called by:
 12307 ;;		_main
 12308 ;; This function uses a non-reentrant model
 12309 ;;
 12310                           
 12311                           
 12312                           ;psect for function _SYSTEM_Initialize
 12313  1355                     _SYSTEM_Initialize:	
 12314                           
 12315                           ;mcc.c: 53: PMD_Initialize();
 12316                           
 12317                           ;incstack = 0
 12318                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12319  1355  23D6  3193         	fcall	_PMD_Initialize
 12320                           
 12321                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 12322  1357  239F  3193         	fcall	_PIN_MANAGER_Initialize
 12323                           
 12324                           ;mcc.c: 55: OSCILLATOR_Initialize();
 12325  1359  2396  3193         	fcall	_OSCILLATOR_Initialize
 12326                           
 12327                           ;mcc.c: 56: WDT_Initialize();
 12328  135B  23EC  3193         	fcall	_WDT_Initialize
 12329                           
 12330                           ;mcc.c: 57: I2C1_AddressSet();
 12331  135D  237D  3193         	fcall	_I2C1_AddressSet
 12332                           
 12333                           ;mcc.c: 58: I2C1_Initialize();
 12334  135F  2383  3193         	fcall	_I2C1_Initialize
 12335                           
 12336                           ;mcc.c: 59: CLC2_Initialize();
 12337  1361  2368  3193         	fcall	_CLC2_Initialize
 12338                           
 12339                           ;mcc.c: 60: TMR2_Initialize();
 12340  1363  23E4  3193         	fcall	_TMR2_Initialize
 12341                           
 12342                           ;mcc.c: 61: CLC1_Initialize();
 12343  1365  23F0  3193         	fcall	_CLC1_Initialize
 12344                           
 12345                           ;mcc.c: 62: TMR3_Initialize();
 12346  1367  2C05               	ljmp	l6890
 12347  1368                     __end_of_SYSTEM_Initialize:	
 12348  1368                     __ptext12:	
 12349 ;; *************** function _CLC2_Initialize *****************
 12350 ;; Defined at:
 12351 ;;		line 59 in file "mcc_generated_files/clc2.c"
 12352 ;; Parameters:    Size  Location     Type
 12353 ;;		None
 12354 ;; Auto vars:     Size  Location     Type
 12355 ;;		None
 12356 ;; Return value:  Size  Location     Type
 12357 ;;                  1    wreg      void 
 12358 ;; Registers used:
 12359 ;;		wreg, status,2
 12360 ;; Tracked objects:
 12361 ;;		On entry : B1F/1
 12362 ;;		On exit  : B1F/1
 12363 ;;		Unchanged: B00/0
 12364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12369 ;;Total ram usage:        0 bytes
 12370 ;; Hardware stack levels used:    1
 12371 ;; Hardware stack levels required when called:    7
 12372 ;; This function calls:
 12373 ;;		Nothing
 12374 ;; This function is called by:
 12375 ;;		_SYSTEM_Initialize
 12376 ;; This function uses a non-reentrant model
 12377 ;;
 12378                           
 12379                           
 12380                           ;psect for function _CLC2_Initialize
 12381  1368                     _CLC2_Initialize:	
 12382                           
 12383                           ;clc2.c: 63: CLC2POL = 0x04;
 12384                           
 12385                           ;incstack = 0
 12386                           ; Regs used in _CLC2_Initialize: [wreg+status,2]
 12387  1368  3004               	movlw	4
 12388  1369  003E               	movlb	30	; select bank30
 12389  136A  009B               	movwf	27	;volatile
 12390                           
 12391                           ;clc2.c: 65: CLC2SEL0 = 0x01;
 12392  136B  3001               	movlw	1
 12393  136C  009C               	movwf	28	;volatile
 12394                           
 12395                           ;clc2.c: 67: CLC2SEL1 = 0x00;
 12396  136D  019D               	clrf	29	;volatile
 12397                           
 12398                           ;clc2.c: 69: CLC2SEL2 = 0x00;
 12399  136E  019E               	clrf	30	;volatile
 12400                           
 12401                           ;clc2.c: 71: CLC2SEL3 = 0x00;
 12402  136F  019F               	clrf	31	;volatile
 12403                           
 12404                           ;clc2.c: 73: CLC2GLS0 = 0x02;
 12405  1370  3002               	movlw	2
 12406  1371  00A0               	movwf	32	;volatile
 12407                           
 12408                           ;clc2.c: 75: CLC2GLS1 = 0xA8;
 12409  1372  30A8               	movlw	168
 12410  1373  00A1               	movwf	33	;volatile
 12411                           
 12412                           ;clc2.c: 77: CLC2GLS2 = 0xA8;
 12413  1374  00A2               	movwf	34	;volatile
 12414                           
 12415                           ;clc2.c: 79: CLC2GLS3 = 0xA8;
 12416  1375  00A3               	movwf	35	;volatile
 12417                           
 12418                           ;clc2.c: 81: CLC2CON = 0x9D;
 12419  1376  309D               	movlw	157
 12420  1377  009A               	movwf	26	;volatile
 12421                           
 12422                           ;clc2.c: 84: PIR3bits.CLC2IF = 0;
 12423  1378  0020               	movlb	0	; select bank0
 12424  1379  1093               	bcf	19,1	;volatile
 12425                           
 12426                           ;clc2.c: 86: PIE3bits.CLC2IE = 1;
 12427  137A  0021               	movlb	1	; select bank1
 12428  137B  1493               	bsf	19,1	;volatile
 12429  137C  0008               	return
 12430  137D                     __end_of_CLC2_Initialize:	
 12431  137D                     __ptext11:	
 12432 ;; *************** function _I2C1_AddressSet *****************
 12433 ;; Defined at:
 12434 ;;		line 20 in file "i2c_register.c"
 12435 ;; Parameters:    Size  Location     Type
 12436 ;;		None
 12437 ;; Auto vars:     Size  Location     Type
 12438 ;;		None
 12439 ;; Return value:  Size  Location     Type
 12440 ;;                  1    wreg      void 
 12441 ;; Registers used:
 12442 ;;		wreg, status,2, status,0
 12443 ;; Tracked objects:
 12444 ;;		On entry : B1F/1
 12445 ;;		On exit  : B1F/0
 12446 ;;		Unchanged: B00/0
 12447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12452 ;;Total ram usage:        0 bytes
 12453 ;; Hardware stack levels used:    1
 12454 ;; Hardware stack levels required when called:    7
 12455 ;; This function calls:
 12456 ;;		Nothing
 12457 ;; This function is called by:
 12458 ;;		_SYSTEM_Initialize
 12459 ;; This function uses a non-reentrant model
 12460 ;;
 12461                           
 12462                           
 12463                           ;psect for function _I2C1_AddressSet
 12464  137D                     _I2C1_AddressSet:	
 12465                           
 12466                           ;i2c_register.c: 22: i2c_address = 0b0010000;
 12467                           
 12468                           ;incstack = 0
 12469                           ; Regs used in _I2C1_AddressSet: [wreg+status,2+status,0]
 12470  137D  3010               	movlw	16
 12471  137E  0020               	movlb	0	; select bank0
 12472  137F  00DE               	movwf	_i2c_address	;volatile
 12473                           
 12474                           ;i2c_register.c: 58: i2c_address = (uint8_t) (i2c_address << 1);
 12475  1380  355E               	lslf	_i2c_address,w	;volatile
 12476  1381  00DE               	movwf	_i2c_address	;volatile
 12477  1382  0008               	return
 12478  1383                     __end_of_I2C1_AddressSet:	
 12479  1383                     __ptext10:	
 12480 ;; *************** function _I2C1_Initialize *****************
 12481 ;; Defined at:
 12482 ;;		line 75 in file "mcc_generated_files/i2c1.c"
 12483 ;; Parameters:    Size  Location     Type
 12484 ;;		None
 12485 ;; Auto vars:     Size  Location     Type
 12486 ;;		None
 12487 ;; Return value:  Size  Location     Type
 12488 ;;                  1    wreg      void 
 12489 ;; Registers used:
 12490 ;;		wreg, status,2
 12491 ;; Tracked objects:
 12492 ;;		On entry : B1F/0
 12493 ;;		On exit  : B1F/1
 12494 ;;		Unchanged: B00/0
 12495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12500 ;;Total ram usage:        0 bytes
 12501 ;; Hardware stack levels used:    1
 12502 ;; Hardware stack levels required when called:    7
 12503 ;; This function calls:
 12504 ;;		Nothing
 12505 ;; This function is called by:
 12506 ;;		_SYSTEM_Initialize
 12507 ;; This function uses a non-reentrant model
 12508 ;;
 12509                           
 12510                           
 12511                           ;psect for function _I2C1_Initialize
 12512  1383                     _I2C1_Initialize:	
 12513                           
 12514                           ;i2c1.c: 78: SSP1CON1 = 0x00;
 12515                           
 12516                           ;incstack = 0
 12517                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 12518  1383  0024               	movlb	4	; select bank4
 12519  1384  0195               	clrf	21	;volatile
 12520                           
 12521                           ;i2c1.c: 79: SSP1CON2 = 0x00;
 12522  1385  0196               	clrf	22	;volatile
 12523                           
 12524                           ;i2c1.c: 81: SSP1STAT = 0x00;
 12525  1386  0194               	clrf	20	;volatile
 12526                           
 12527                           ;i2c1.c: 83: SSP1CON1 = 0x26;
 12528  1387  3026               	movlw	38
 12529  1388  0095               	movwf	21	;volatile
 12530                           
 12531                           ;i2c1.c: 85: SSP1CON2 = 0x00;
 12532  1389  0196               	clrf	22	;volatile
 12533                           
 12534                           ;i2c1.c: 87: SSP1CON3 = 0x00;
 12535  138A  0197               	clrf	23	;volatile
 12536                           
 12537                           ;i2c1.c: 89: SSP1MSK = (0x7F << 1);
 12538  138B  30FE               	movlw	254
 12539  138C  0093               	movwf	19	;volatile
 12540                           
 12541                           ;i2c1.c: 91: SSP1ADD = i2c_address;
 12542  138D  0020               	movlb	0	; select bank0
 12543  138E  085E               	movf	_i2c_address,w	;volatile
 12544  138F  0024               	movlb	4	; select bank4
 12545  1390  0092               	movwf	18	;volatile
 12546                           
 12547                           ;i2c1.c: 94: PIR1bits.SSP1IF = 0;
 12548  1391  0020               	movlb	0	; select bank0
 12549  1392  1191               	bcf	17,3	;volatile
 12550                           
 12551                           ;i2c1.c: 96: PIE1bits.SSP1IE = 1;
 12552  1393  0021               	movlb	1	; select bank1
 12553  1394  1591               	bsf	17,3	;volatile
 12554  1395  0008               	return
 12555  1396                     __end_of_I2C1_Initialize:	
 12556  1396                     __ptext9:	
 12557 ;; *************** function _OSCILLATOR_Initialize *****************
 12558 ;; Defined at:
 12559 ;;		line 66 in file "mcc_generated_files/mcc.c"
 12560 ;; Parameters:    Size  Location     Type
 12561 ;;		None
 12562 ;; Auto vars:     Size  Location     Type
 12563 ;;		None
 12564 ;; Return value:  Size  Location     Type
 12565 ;;                  1    wreg      void 
 12566 ;; Registers used:
 12567 ;;		wreg, status,2
 12568 ;; Tracked objects:
 12569 ;;		On entry : B1F/1D
 12570 ;;		On exit  : B1F/12
 12571 ;;		Unchanged: B00/0
 12572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12577 ;;Total ram usage:        0 bytes
 12578 ;; Hardware stack levels used:    1
 12579 ;; Hardware stack levels required when called:    7
 12580 ;; This function calls:
 12581 ;;		Nothing
 12582 ;; This function is called by:
 12583 ;;		_SYSTEM_Initialize
 12584 ;; This function uses a non-reentrant model
 12585 ;;
 12586                           
 12587                           
 12588                           ;psect for function _OSCILLATOR_Initialize
 12589  1396                     _OSCILLATOR_Initialize:	
 12590                           
 12591                           ;mcc.c: 69: OSCCON1 = 0x60;
 12592                           
 12593                           ;incstack = 0
 12594                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12595  1396  3060               	movlw	96
 12596  1397  0032               	movlb	18	; select bank18
 12597  1398  0099               	movwf	25	;volatile
 12598                           
 12599                           ;mcc.c: 71: OSCCON3 = 0x00;
 12600  1399  019B               	clrf	27	;volatile
 12601                           
 12602                           ;mcc.c: 73: OSCEN = 0x00;
 12603  139A  019D               	clrf	29	;volatile
 12604                           
 12605                           ;mcc.c: 75: OSCFRQ = 0x07;
 12606  139B  3007               	movlw	7
 12607  139C  009F               	movwf	31	;volatile
 12608                           
 12609                           ;mcc.c: 77: OSCTUNE = 0x00;
 12610  139D  019E               	clrf	30	;volatile
 12611  139E  0008               	return
 12612  139F                     __end_of_OSCILLATOR_Initialize:	
 12613  139F                     __ptext8:	
 12614 ;; *************** function _PIN_MANAGER_Initialize *****************
 12615 ;; Defined at:
 12616 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 12617 ;; Parameters:    Size  Location     Type
 12618 ;;		None
 12619 ;; Auto vars:     Size  Location     Type
 12620 ;;		None
 12621 ;; Return value:  Size  Location     Type
 12622 ;;                  1    wreg      void 
 12623 ;; Registers used:
 12624 ;;		wreg, status,2, status,0
 12625 ;; Tracked objects:
 12626 ;;		On entry : B1F/12
 12627 ;;		On exit  : B1F/1D
 12628 ;;		Unchanged: B00/0
 12629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12634 ;;Total ram usage:        0 bytes
 12635 ;; Hardware stack levels used:    1
 12636 ;; Hardware stack levels required when called:    7
 12637 ;; This function calls:
 12638 ;;		Nothing
 12639 ;; This function is called by:
 12640 ;;		_SYSTEM_Initialize
 12641 ;; This function uses a non-reentrant model
 12642 ;;
 12643                           
 12644                           
 12645                           ;psect for function _PIN_MANAGER_Initialize
 12646  139F                     _PIN_MANAGER_Initialize:	
 12647                           
 12648                           ;pin_manager.c: 62: LATA = 0x00;
 12649                           
 12650                           ;incstack = 0
 12651                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
 12652  139F  0022               	movlb	2	; select bank2
 12653  13A0  018C               	clrf	12	;volatile
 12654                           
 12655                           ;pin_manager.c: 63: LATB = 0x00;
 12656  13A1  018D               	clrf	13	;volatile
 12657                           
 12658                           ;pin_manager.c: 64: LATC = 0x00;
 12659  13A2  018E               	clrf	14	;volatile
 12660                           
 12661                           ;pin_manager.c: 69: TRISA = 0x37;
 12662  13A3  3037               	movlw	55
 12663  13A4  0021               	movlb	1	; select bank1
 12664  13A5  008C               	movwf	12	;volatile
 12665                           
 12666                           ;pin_manager.c: 70: TRISB = 0xD0;
 12667  13A6  30D0               	movlw	208
 12668  13A7  008D               	movwf	13	;volatile
 12669                           
 12670                           ;pin_manager.c: 71: TRISC = 0xFF;
 12671  13A8  30FF               	movlw	255
 12672  13A9  008E               	movwf	14	;volatile
 12673                           
 12674                           ;pin_manager.c: 76: ANSELC = 0x00;
 12675  13AA  0023               	movlb	3	; select bank3
 12676  13AB  018E               	clrf	14	;volatile
 12677                           
 12678                           ;pin_manager.c: 77: ANSELB = 0x00;
 12679  13AC  018D               	clrf	13	;volatile
 12680                           
 12681                           ;pin_manager.c: 78: ANSELA = 0x20;
 12682  13AD  3020               	movlw	32
 12683  13AE  008C               	movwf	12	;volatile
 12684                           
 12685                           ;pin_manager.c: 83: WPUB = 0x10;
 12686  13AF  3010               	movlw	16
 12687  13B0  0024               	movlb	4	; select bank4
 12688  13B1  008D               	movwf	13	;volatile
 12689                           
 12690                           ;pin_manager.c: 84: WPUA = 0x3F;
 12691  13B2  303F               	movlw	63
 12692  13B3  008C               	movwf	12	;volatile
 12693                           
 12694                           ;pin_manager.c: 85: WPUC = 0xCC;
 12695  13B4  30CC               	movlw	204
 12696  13B5  008E               	movwf	14	;volatile
 12697                           
 12698                           ;pin_manager.c: 90: ODCONA = 0x00;
 12699  13B6  0025               	movlb	5	; select bank5
 12700  13B7  018C               	clrf	12	;volatile
 12701                           
 12702                           ;pin_manager.c: 91: ODCONB = 0x20;
 12703  13B8  3020               	movlw	32
 12704  13B9  008D               	movwf	13	;volatile
 12705                           
 12706                           ;pin_manager.c: 92: ODCONC = 0x00;
 12707  13BA  018E               	clrf	14	;volatile
 12708                           
 12709                           ;pin_manager.c: 101: SSP1CLKPPSbits.SSP1CLKPPS = 0x0E;
 12710  13BB  003C               	movlb	28	; select bank28
 12711  13BC  0820               	movf	32,w	;volatile
 12712  13BD  39E0               	andlw	-32
 12713  13BE  380E               	iorlw	14
 12714  13BF  00A0               	movwf	32	;volatile
 12715                           
 12716                           ;pin_manager.c: 102: SSP1DATPPSbits.SSP1DATPPS = 0x0F;
 12717  13C0  0821               	movf	33,w	;volatile
 12718  13C1  39E0               	andlw	-32
 12719  13C2  380F               	iorlw	15
 12720  13C3  00A1               	movwf	33	;volatile
 12721                           
 12722                           ;pin_manager.c: 103: CLCIN1PPSbits.CLCIN1PPS = 0x15;
 12723  13C4  0829               	movf	41,w	;volatile
 12724  13C5  39E0               	andlw	-32
 12725  13C6  3815               	iorlw	21
 12726  13C7  00A9               	movwf	41	;volatile
 12727                           
 12728                           ;pin_manager.c: 104: CLCIN0PPSbits.CLCIN0PPS = 0x14;
 12729  13C8  0828               	movf	40,w	;volatile
 12730  13C9  39E0               	andlw	-32
 12731  13CA  3814               	iorlw	20
 12732  13CB  00A8               	movwf	40	;volatile
 12733                           
 12734                           ;pin_manager.c: 105: RB7PPSbits.RB7PPS = 0x19;
 12735  13CC  003D               	movlb	29	; select bank29
 12736  13CD  081F               	movf	31,w	;volatile
 12737  13CE  39E0               	andlw	-32
 12738  13CF  3819               	iorlw	25
 12739  13D0  009F               	movwf	31	;volatile
 12740                           
 12741                           ;pin_manager.c: 106: RB6PPSbits.RB6PPS = 0x18;
 12742  13D1  081E               	movf	30,w	;volatile
 12743  13D2  39E0               	andlw	-32
 12744  13D3  3818               	iorlw	24
 12745  13D4  009E               	movwf	30	;volatile
 12746  13D5  0008               	return
 12747  13D6                     __end_of_PIN_MANAGER_Initialize:	
 12748  13D6                     __ptext7:	
 12749 ;; *************** function _PMD_Initialize *****************
 12750 ;; Defined at:
 12751 ;;		line 86 in file "mcc_generated_files/mcc.c"
 12752 ;; Parameters:    Size  Location     Type
 12753 ;;		None
 12754 ;; Auto vars:     Size  Location     Type
 12755 ;;		None
 12756 ;; Return value:  Size  Location     Type
 12757 ;;                  1    wreg      void 
 12758 ;; Registers used:
 12759 ;;		wreg
 12760 ;; Tracked objects:
 12761 ;;		On entry : B1F/0
 12762 ;;		On exit  : B1F/12
 12763 ;;		Unchanged: B00/0
 12764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12769 ;;Total ram usage:        0 bytes
 12770 ;; Hardware stack levels used:    1
 12771 ;; Hardware stack levels required when called:    7
 12772 ;; This function calls:
 12773 ;;		Nothing
 12774 ;; This function is called by:
 12775 ;;		_SYSTEM_Initialize
 12776 ;; This function uses a non-reentrant model
 12777 ;;
 12778                           
 12779                           
 12780                           ;psect for function _PMD_Initialize
 12781  13D6                     _PMD_Initialize:	
 12782                           
 12783                           ;mcc.c: 89: PMD0 = 0x40;
 12784                           
 12785                           ;incstack = 0
 12786                           ; Regs used in _PMD_Initialize: [wreg]
 12787  13D6  3040               	movlw	64
 12788  13D7  0032               	movlb	18	; select bank18
 12789  13D8  0091               	movwf	17	;volatile
 12790                           
 12791                           ;mcc.c: 91: PMD1 = 0xF2;
 12792  13D9  30F2               	movlw	242
 12793  13DA  0092               	movwf	18	;volatile
 12794                           
 12795                           ;mcc.c: 93: PMD2 = 0x46;
 12796  13DB  3046               	movlw	70
 12797  13DC  0093               	movwf	19	;volatile
 12798                           
 12799                           ;mcc.c: 95: PMD3 = 0xF8;
 12800  13DD  30F8               	movlw	248
 12801  13DE  0094               	movwf	20	;volatile
 12802                           
 12803                           ;mcc.c: 97: PMD4 = 0x20;
 12804  13DF  3020               	movlw	32
 12805  13E0  0095               	movwf	21	;volatile
 12806                           
 12807                           ;mcc.c: 99: PMD5 = 0x19;
 12808  13E1  3019               	movlw	25
 12809  13E2  0096               	movwf	22	;volatile
 12810  13E3  0008               	return
 12811  13E4                     __end_of_PMD_Initialize:	
 12812  13E4                     __ptext6:	
 12813 ;; *************** function _TMR2_Initialize *****************
 12814 ;; Defined at:
 12815 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 12816 ;; Parameters:    Size  Location     Type
 12817 ;;		None
 12818 ;; Auto vars:     Size  Location     Type
 12819 ;;		None
 12820 ;; Return value:  Size  Location     Type
 12821 ;;                  1    wreg      void 
 12822 ;; Registers used:
 12823 ;;		wreg, status,2
 12824 ;; Tracked objects:
 12825 ;;		On entry : B1F/1
 12826 ;;		On exit  : B1F/0
 12827 ;;		Unchanged: B00/0
 12828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12833 ;;Total ram usage:        0 bytes
 12834 ;; Hardware stack levels used:    1
 12835 ;; Hardware stack levels required when called:    7
 12836 ;; This function calls:
 12837 ;;		Nothing
 12838 ;; This function is called by:
 12839 ;;		_SYSTEM_Initialize
 12840 ;; This function uses a non-reentrant model
 12841 ;;
 12842                           
 12843                           
 12844                           ;psect for function _TMR2_Initialize
 12845  13E4                     _TMR2_Initialize:	
 12846                           
 12847                           ;tmr2.c: 67: PR2 = 0xFF;
 12848                           
 12849                           ;incstack = 0
 12850                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 12851  13E4  30FF               	movlw	255
 12852  13E5  0020               	movlb	0	; select bank0
 12853  13E6  009E               	movwf	30	;volatile
 12854                           
 12855                           ;tmr2.c: 70: TMR2 = 0x00;
 12856  13E7  019D               	clrf	29	;volatile
 12857                           
 12858                           ;tmr2.c: 73: PIR1bits.TMR2IF = 0;
 12859  13E8  1091               	bcf	17,1	;volatile
 12860                           
 12861                           ;tmr2.c: 76: T2CON = 0x04;
 12862  13E9  3004               	movlw	4
 12863  13EA  009F               	movwf	31	;volatile
 12864  13EB  0008               	return
 12865  13EC                     __end_of_TMR2_Initialize:	
 12866  13EC                     __ptext3:	
 12867 ;; *************** function _WDT_Initialize *****************
 12868 ;; Defined at:
 12869 ;;		line 80 in file "mcc_generated_files/mcc.c"
 12870 ;; Parameters:    Size  Location     Type
 12871 ;;		None
 12872 ;; Auto vars:     Size  Location     Type
 12873 ;;		None
 12874 ;; Return value:  Size  Location     Type
 12875 ;;                  1    wreg      void 
 12876 ;; Registers used:
 12877 ;;		wreg
 12878 ;; Tracked objects:
 12879 ;;		On entry : B1F/12
 12880 ;;		On exit  : B1F/1
 12881 ;;		Unchanged: B00/0
 12882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12887 ;;Total ram usage:        0 bytes
 12888 ;; Hardware stack levels used:    1
 12889 ;; Hardware stack levels required when called:    7
 12890 ;; This function calls:
 12891 ;;		Nothing
 12892 ;; This function is called by:
 12893 ;;		_SYSTEM_Initialize
 12894 ;; This function uses a non-reentrant model
 12895 ;;
 12896                           
 12897                           
 12898                           ;psect for function _WDT_Initialize
 12899  13EC                     _WDT_Initialize:	
 12900                           
 12901                           ;mcc.c: 83: WDTCON = 0x16;
 12902                           
 12903                           ;incstack = 0
 12904                           ; Regs used in _WDT_Initialize: [wreg]
 12905  13EC  3016               	movlw	22
 12906  13ED  0021               	movlb	1	; select bank1
 12907  13EE  0097               	movwf	23	;volatile
 12908  13EF  0008               	return
 12909  13F0                     __end_of_WDT_Initialize:	
 12910  13F0                     __ptext13:	
 12911 ;; *************** function _CLC1_Initialize *****************
 12912 ;; Defined at:
 12913 ;;		line 59 in file "mcc_generated_files/clc1.c"
 12914 ;; Parameters:    Size  Location     Type
 12915 ;;		None
 12916 ;; Auto vars:     Size  Location     Type
 12917 ;;		None
 12918 ;; Return value:  Size  Location     Type
 12919 ;;                  1    wreg      void 
 12920 ;; Registers used:
 12921 ;;		wreg, status,2
 12922 ;; Tracked objects:
 12923 ;;		On entry : B1F/0
 12924 ;;		On exit  : B1F/1
 12925 ;;		Unchanged: B00/0
 12926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12931 ;;Total ram usage:        0 bytes
 12932 ;; Hardware stack levels used:    1
 12933 ;; Hardware stack levels required when called:    7
 12934 ;; This function calls:
 12935 ;;		Nothing
 12936 ;; This function is called by:
 12937 ;;		_SYSTEM_Initialize
 12938 ;; This function uses a non-reentrant model
 12939 ;;
 12940                           
 12941                           
 12942                           ;psect for function _CLC1_Initialize
 12943  13F0                     _CLC1_Initialize:	
 12944                           
 12945                           ;clc1.c: 63: CLC1POL = 0x04;
 12946                           
 12947                           ;incstack = 0
 12948                           ; Regs used in _CLC1_Initialize: [wreg+status,2]
 12949  13F0  3004               	movlw	4
 12950  13F1  003E               	movlb	30	; select bank30
 12951  13F2  0091               	movwf	17	;volatile
 12952                           
 12953                           ;clc1.c: 65: CLC1SEL0 = 0x00;
 12954  13F3  0192               	clrf	18	;volatile
 12955                           
 12956                           ;clc1.c: 67: CLC1SEL1 = 0x01;
 12957  13F4  3001               	movlw	1
 12958  13F5  0093               	movwf	19	;volatile
 12959                           
 12960                           ;clc1.c: 69: CLC1SEL2 = 0x01;
 12961  13F6  0094               	movwf	20	;volatile
 12962                           
 12963                           ;clc1.c: 71: CLC1SEL3 = 0x01;
 12964  13F7  0095               	movwf	21	;volatile
 12965                           
 12966                           ;clc1.c: 73: CLC1GLS0 = 0x02;
 12967  13F8  3002               	movlw	2
 12968  13F9  0096               	movwf	22	;volatile
 12969                           
 12970                           ;clc1.c: 75: CLC1GLS1 = 0xA8;
 12971  13FA  30A8               	movlw	168
 12972  13FB  0097               	movwf	23	;volatile
 12973                           
 12974                           ;clc1.c: 77: CLC1GLS2 = 0xA8;
 12975  13FC  0098               	movwf	24	;volatile
 12976                           
 12977                           ;clc1.c: 79: CLC1GLS3 = 0xA8;
 12978  13FD  0099               	movwf	25	;volatile
 12979                           
 12980                           ;clc1.c: 81: CLC1CON = 0x9D;
 12981  13FE  309D               	movlw	157
 12982  13FF  0090               	movwf	16	;volatile
 12983                           
 12984                           ;clc1.c: 84: PIR3bits.CLC1IF = 0;
 12985  1400  0020               	movlb	0	; select bank0
 12986  1401  1013               	bcf	19,0	;volatile
 12987                           
 12988                           ;clc1.c: 86: PIE3bits.CLC1IE = 1;
 12989  1402  0021               	movlb	1	; select bank1
 12990  1403  1413               	bsf	19,0	;volatile
 12991  1404  0008               	return
 12992  1405                     __end_of_CLC1_Initialize:	
 12993  1405                     __ptext4:	
 12994 ;; *************** function _TMR3_Initialize *****************
 12995 ;; Defined at:
 12996 ;;		line 64 in file "mcc_generated_files/tmr3.c"
 12997 ;; Parameters:    Size  Location     Type
 12998 ;;		None
 12999 ;; Auto vars:     Size  Location     Type
 13000 ;;		None
 13001 ;; Return value:  Size  Location     Type
 13002 ;;                  1    wreg      void 
 13003 ;; Registers used:
 13004 ;;		wreg, status,2, status,0, pclath, cstack
 13005 ;; Tracked objects:
 13006 ;;		On entry : B1F/1
 13007 ;;		On exit  : 1F/8
 13008 ;;		Unchanged: 0/0
 13009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13014 ;;Total ram usage:        0 bytes
 13015 ;; Hardware stack levels used:    1
 13016 ;; Hardware stack levels required when called:    8
 13017 ;; This function calls:
 13018 ;;		_TMR3_SetInterruptHandler
 13019 ;; This function is called by:
 13020 ;;		_SYSTEM_Initialize
 13021 ;; This function uses a non-reentrant model
 13022 ;;
 13023                           
 13024                           
 13025                           ;psect for function _TMR3_Initialize
 13026  1405                     _TMR3_Initialize:	
 13027  1405                     l6890:	
 13028                           ;incstack = 0
 13029                           ; Regs used in _TMR3_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13030                           
 13031                           
 13032                           ;tmr3.c: 69: T3GCON = 0x00;
 13033  1405  0028               	movlb	8	; select bank8
 13034  1406  0194               	clrf	20	;volatile
 13035                           
 13036                           ;tmr3.c: 72: TMR3H = 0xE0;
 13037  1407  30E0               	movlw	224
 13038  1408  0092               	movwf	18	;volatile
 13039                           
 13040                           ;tmr3.c: 75: TMR3L = 0xC0;
 13041  1409  30C0               	movlw	192
 13042  140A  0091               	movwf	17	;volatile
 13043                           
 13044                           ;tmr3.c: 78: timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 13045  140B  0812               	movf	18,w	;volatile
 13046  140C  0021               	movlb	1	; select bank1
 13047  140D  00DA               	movwf	(_timer3ReloadVal+1)^(0+128)	;volatile
 13048  140E  01D9               	clrf	_timer3ReloadVal^(0+128)	;volatile
 13049  140F  0028               	movlb	8	; select bank8
 13050  1410  0811               	movf	17,w	;volatile
 13051  1411  0021               	movlb	1	; select bank1
 13052  1412  04D9               	iorwf	_timer3ReloadVal^(0+128),f	;volatile
 13053                           
 13054                           ;tmr3.c: 81: PIR3bits.TMR3IF = 0;
 13055  1413  0020               	movlb	0	; select bank0
 13056  1414  1213               	bcf	19,4	;volatile
 13057                           
 13058                           ;tmr3.c: 84: PIE3bits.TMR3IE = 1;
 13059  1415  0021               	movlb	1	; select bank1
 13060  1416  1613               	bsf	19,4	;volatile
 13061                           
 13062                           ;tmr3.c: 87: TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler);
 13063  1417  3003               	movlw	low _TMR3_DefaultInterruptHandler
 13064  1418  00C7               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
 13065  1419  3000               	movlw	high _TMR3_DefaultInterruptHandler
 13066  141A  00C8               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
 13067  141B  3184  2423         	fcall	_TMR3_SetInterruptHandler
 13068                           
 13069                           ;tmr3.c: 90: T3CON = 0x01;
 13070  141D  3001               	movlw	1
 13071  141E  0028               	movlb	8	; select bank8
 13072  141F  0093               	movwf	19	;volatile
 13073  1420  0008               	return
 13074  1421                     __end_of_TMR3_Initialize:	
 13075                           
 13076                           	psect	text15
 13077  1421                     __ptext15:	
 13078 ;; *************** function _NavKey_UPButton_FSM *****************
 13079 ;; Defined at:
 13080 ;;		line 201 in file "NavKey.c"
 13081 ;; Parameters:    Size  Location     Type
 13082 ;;		None
 13083 ;; Auto vars:     Size  Location     Type
 13084 ;;		None
 13085 ;; Return value:  Size  Location     Type
 13086 ;;                  1    wreg      void 
 13087 ;; Registers used:
 13088 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13089 ;; Tracked objects:
 13090 ;;		On entry : 1C/1
 13091 ;;		On exit  : 1C/0
 13092 ;;		Unchanged: 0/0
 13093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13098 ;;Total ram usage:        0 bytes
 13099 ;; Hardware stack levels used:    1
 13100 ;; Hardware stack levels required when called:    8
 13101 ;; This function calls:
 13102 ;;		_NavKeyStatusUpdate
 13103 ;;		_SetInterrupt
 13104 ;; This function is called by:
 13105 ;;		_NavKey_FSM
 13106 ;; This function uses a non-reentrant model
 13107 ;;
 13108                           
 13109                           
 13110                           ;psect for function _NavKey_UPButton_FSM
 13111  1421                     _NavKey_UPButton_FSM:	
 13112                           
 13113                           ;NavKey.c: 202: static uint8_t up_fsm;;NavKey.c: 204: switch (up_fsm) {
 13114                           
 13115                           ;incstack = 0
 13116                           ; Regs used in _NavKey_UPButton_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13117  1421  2C38               	goto	l7248
 13118  1422                     l7230:	
 13119                           
 13120                           ;NavKey.c: 207: if (NavKey_PBstatus[3] == 1) {
 13121  1422  0B23               	decfsz	(_NavKey_PBstatus^(0+128)+3),w
 13122  1423  0008               	return
 13123  1424  3002               	movlw	2
 13124                           
 13125                           ;NavKey.c: 208: up_fsm = NavKey_WAITRELEASE;
 13126  1425  01B8               	clrf	NavKey_UPButton_FSM@up_fsm^(0+128)
 13127  1426  0AB8               	incf	NavKey_UPButton_FSM@up_fsm^(0+128),f
 13128                           
 13129                           ;NavKey.c: 209: NavKeyStatusUpdate(S_UPP);
 13130  1427  00C7               	movwf	NavKeyStatusUpdate@stat^(0+128)
 13131  1428  01C8               	clrf	(NavKeyStatusUpdate@stat+1)^(0+128)
 13132  1429  24F2               	fcall	_NavKeyStatusUpdate
 13133                           
 13134                           ;NavKey.c: 210: SetInterrupt();
 13135  142A  3181  29D5         	ljmp	l6590
 13136  142C                     l7236:	
 13137                           
 13138                           ;NavKey.c: 215: if (NavKey_PBstatus[3] == 0) {
 13139  142C  0823               	movf	(_NavKey_PBstatus^(0+128)+3),w
 13140  142D  1D03               	btfss	3,2
 13141  142E  0008               	return
 13142                           
 13143                           ;NavKey.c: 216: up_fsm = NavKey_WAITPUSH;
 13144  142F  01B8               	clrf	NavKey_UPButton_FSM@up_fsm^(0+128)
 13145                           
 13146                           ;NavKey.c: 217: NavKeyStatusUpdate(S_UPR);
 13147  1430  01C7               	clrf	NavKeyStatusUpdate@stat^(0+128)
 13148  1431  0AC7               	incf	NavKeyStatusUpdate@stat^(0+128),f
 13149  1432  01C8               	clrf	(NavKeyStatusUpdate@stat+1)^(0+128)
 13150  1433  24F2               	fcall	_NavKeyStatusUpdate
 13151                           
 13152                           ;NavKey.c: 218: SetInterrupt();
 13153  1434  3181  29D5         	ljmp	l6590
 13154  1436                     l7244:	
 13155                           
 13156                           ;NavKey.c: 223: up_fsm = NavKey_WAITPUSH;
 13157  1436  01B8               	clrf	NavKey_UPButton_FSM@up_fsm^(0+128)
 13158                           
 13159                           ;NavKey.c: 224: break;
 13160  1437  0008               	return
 13161  1438                     l7248:	
 13162  1438  0021               	movlb	1	; select bank1
 13163  1439  0838               	movf	NavKey_UPButton_FSM@up_fsm^(0+128),w
 13164                           
 13165                           ; Switch size 1, requested type "speed"
 13166                           ; Number of cases is 2, Range of values is 0 to 1
 13167                           ; switch strategies available:
 13168                           ; Name         Instructions Cycles
 13169                           ; simple_byte            7     4 (average)
 13170                           ; direct_byte           10     6 (fixed)
 13171                           ; jumptable            260     6 (fixed)
 13172                           ;	Chosen strategy is simple_byte
 13173  143A  3A00               	xorlw	0	; case 0
 13174  143B  1903               	skipnz
 13175  143C  2C22               	goto	l7230
 13176  143D  3A01               	xorlw	1	; case 1
 13177  143E  1903               	skipnz
 13178  143F  2C2C               	goto	l7236
 13179  1440  2C36               	goto	l7244
 13180  1441  0008               	return
 13181  1442                     __end_of_NavKey_UPButton_FSM:	
 13182  1442                     __ptext16:	
 13183 ;; *************** function _NavKey_RTButton_FSM *****************
 13184 ;; Defined at:
 13185 ;;		line 263 in file "NavKey.c"
 13186 ;; Parameters:    Size  Location     Type
 13187 ;;		None
 13188 ;; Auto vars:     Size  Location     Type
 13189 ;;		None
 13190 ;; Return value:  Size  Location     Type
 13191 ;;                  1    wreg      void 
 13192 ;; Registers used:
 13193 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13194 ;; Tracked objects:
 13195 ;;		On entry : 1C/1
 13196 ;;		On exit  : 1C/0
 13197 ;;		Unchanged: 0/0
 13198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13203 ;;Total ram usage:        0 bytes
 13204 ;; Hardware stack levels used:    1
 13205 ;; Hardware stack levels required when called:    8
 13206 ;; This function calls:
 13207 ;;		_NavKeyStatusUpdate
 13208 ;;		_SetInterrupt
 13209 ;; This function is called by:
 13210 ;;		_NavKey_FSM
 13211 ;; This function uses a non-reentrant model
 13212 ;;
 13213                           
 13214                           
 13215                           ;psect for function _NavKey_RTButton_FSM
 13216  1442                     _NavKey_RTButton_FSM:	
 13217                           
 13218                           ;NavKey.c: 264: static uint8_t rt_fsm;;NavKey.c: 266: switch (rt_fsm) {
 13219                           
 13220                           ;incstack = 0
 13221                           ; Regs used in _NavKey_RTButton_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13222  1442  2C59               	goto	l7292
 13223  1443                     l7274:	
 13224                           
 13225                           ;NavKey.c: 269: if (NavKey_PBstatus[2] == 1) {
 13226  1443  0B22               	decfsz	(_NavKey_PBstatus^(0+128)+2),w
 13227  1444  0008               	return
 13228  1445  3020               	movlw	32
 13229                           
 13230                           ;NavKey.c: 270: rt_fsm = NavKey_WAITRELEASE;
 13231  1446  01B6               	clrf	NavKey_RTButton_FSM@rt_fsm^(0+128)
 13232  1447  0AB6               	incf	NavKey_RTButton_FSM@rt_fsm^(0+128),f
 13233                           
 13234                           ;NavKey.c: 271: NavKeyStatusUpdate(S_RTP);
 13235  1448  00C7               	movwf	NavKeyStatusUpdate@stat^(0+128)
 13236  1449  01C8               	clrf	(NavKeyStatusUpdate@stat+1)^(0+128)
 13237  144A  24F2               	fcall	_NavKeyStatusUpdate
 13238                           
 13239                           ;NavKey.c: 272: SetInterrupt();
 13240  144B  3181  29D5         	ljmp	l6590
 13241  144D                     l7280:	
 13242                           
 13243                           ;NavKey.c: 277: if (NavKey_PBstatus[2] == 0) {
 13244  144D  0822               	movf	(_NavKey_PBstatus^(0+128)+2),w
 13245  144E  1D03               	btfss	3,2
 13246  144F  0008               	return
 13247  1450  3010               	movlw	16
 13248                           
 13249                           ;NavKey.c: 278: rt_fsm = NavKey_WAITPUSH;
 13250  1451  01B6               	clrf	NavKey_RTButton_FSM@rt_fsm^(0+128)
 13251                           
 13252                           ;NavKey.c: 279: NavKeyStatusUpdate(S_RTR);
 13253  1452  00C7               	movwf	NavKeyStatusUpdate@stat^(0+128)
 13254  1453  01C8               	clrf	(NavKeyStatusUpdate@stat+1)^(0+128)
 13255  1454  24F2               	fcall	_NavKeyStatusUpdate
 13256                           
 13257                           ;NavKey.c: 280: SetInterrupt();
 13258  1455  3181  29D5         	ljmp	l6590
 13259  1457                     l7288:	
 13260                           
 13261                           ;NavKey.c: 285: rt_fsm = NavKey_WAITPUSH;
 13262  1457  01B6               	clrf	NavKey_RTButton_FSM@rt_fsm^(0+128)
 13263                           
 13264                           ;NavKey.c: 286: break;
 13265  1458  0008               	return
 13266  1459                     l7292:	
 13267  1459  0021               	movlb	1	; select bank1
 13268  145A  0836               	movf	NavKey_RTButton_FSM@rt_fsm^(0+128),w
 13269                           
 13270                           ; Switch size 1, requested type "speed"
 13271                           ; Number of cases is 2, Range of values is 0 to 1
 13272                           ; switch strategies available:
 13273                           ; Name         Instructions Cycles
 13274                           ; simple_byte            7     4 (average)
 13275                           ; direct_byte           10     6 (fixed)
 13276                           ; jumptable            260     6 (fixed)
 13277                           ;	Chosen strategy is simple_byte
 13278  145B  3A00               	xorlw	0	; case 0
 13279  145C  1903               	skipnz
 13280  145D  2C43               	goto	l7274
 13281  145E  3A01               	xorlw	1	; case 1
 13282  145F  1903               	skipnz
 13283  1460  2C4D               	goto	l7280
 13284  1461  2C57               	goto	l7288
 13285  1462  0008               	return
 13286  1463                     __end_of_NavKey_RTButton_FSM:	
 13287  1463                     __ptext17:	
 13288 ;; *************** function _NavKey_LTButton_FSM *****************
 13289 ;; Defined at:
 13290 ;;		line 294 in file "NavKey.c"
 13291 ;; Parameters:    Size  Location     Type
 13292 ;;		None
 13293 ;; Auto vars:     Size  Location     Type
 13294 ;;		None
 13295 ;; Return value:  Size  Location     Type
 13296 ;;                  1    wreg      void 
 13297 ;; Registers used:
 13298 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13299 ;; Tracked objects:
 13300 ;;		On entry : 1C/1
 13301 ;;		On exit  : 1C/0
 13302 ;;		Unchanged: 0/0
 13303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13308 ;;Total ram usage:        0 bytes
 13309 ;; Hardware stack levels used:    1
 13310 ;; Hardware stack levels required when called:    8
 13311 ;; This function calls:
 13312 ;;		_NavKeyStatusUpdate
 13313 ;;		_SetInterrupt
 13314 ;; This function is called by:
 13315 ;;		_NavKey_FSM
 13316 ;; This function uses a non-reentrant model
 13317 ;;
 13318                           
 13319                           
 13320                           ;psect for function _NavKey_LTButton_FSM
 13321  1463                     _NavKey_LTButton_FSM:	
 13322  1463                     l7294:	
 13323                           ;incstack = 0
 13324                           ; Regs used in _NavKey_LTButton_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13325                           
 13326                           
 13327                           ;NavKey.c: 295: static uint8_t lt_fsm;;NavKey.c: 297: switch (lt_fsm) {
 13328  1463  2C7A               	goto	l7314
 13329  1464                     l7296:	
 13330                           
 13331                           ;NavKey.c: 300: if (NavKey_PBstatus[4] == 1) {
 13332  1464  0B24               	decfsz	(_NavKey_PBstatus^(0+128)+4),w
 13333  1465  0008               	return
 13334  1466  3080               	movlw	128
 13335                           
 13336                           ;NavKey.c: 301: lt_fsm = NavKey_WAITRELEASE;
 13337  1467  01B5               	clrf	NavKey_LTButton_FSM@lt_fsm^(0+128)
 13338  1468  0AB5               	incf	NavKey_LTButton_FSM@lt_fsm^(0+128),f
 13339                           
 13340                           ;NavKey.c: 302: NavKeyStatusUpdate(S_LTP);
 13341  1469  00C7               	movwf	NavKeyStatusUpdate@stat^(0+128)
 13342  146A  01C8               	clrf	(NavKeyStatusUpdate@stat+1)^(0+128)
 13343  146B  24F2               	fcall	_NavKeyStatusUpdate
 13344                           
 13345                           ;NavKey.c: 303: SetInterrupt();
 13346  146C  3181  29D5         	ljmp	l6590
 13347  146E                     l7302:	
 13348                           
 13349                           ;NavKey.c: 308: if (NavKey_PBstatus[4] == 0) {
 13350  146E  0824               	movf	(_NavKey_PBstatus^(0+128)+4),w
 13351  146F  1D03               	btfss	3,2
 13352  1470  0008               	return
 13353  1471  3040               	movlw	64
 13354                           
 13355                           ;NavKey.c: 309: lt_fsm = NavKey_WAITPUSH;
 13356  1472  01B5               	clrf	NavKey_LTButton_FSM@lt_fsm^(0+128)
 13357                           
 13358                           ;NavKey.c: 310: NavKeyStatusUpdate(S_LTR);
 13359  1473  00C7               	movwf	NavKeyStatusUpdate@stat^(0+128)
 13360  1474  01C8               	clrf	(NavKeyStatusUpdate@stat+1)^(0+128)
 13361  1475  24F2               	fcall	_NavKeyStatusUpdate
 13362                           
 13363                           ;NavKey.c: 311: SetInterrupt();
 13364  1476  3181  29D5         	ljmp	l6590
 13365  1478                     l7310:	
 13366                           
 13367                           ;NavKey.c: 316: lt_fsm = NavKey_WAITPUSH;
 13368  1478  01B5               	clrf	NavKey_LTButton_FSM@lt_fsm^(0+128)
 13369                           
 13370                           ;NavKey.c: 317: break;
 13371  1479  0008               	return
 13372  147A                     l7314:	
 13373  147A  0021               	movlb	1	; select bank1
 13374  147B  0835               	movf	NavKey_LTButton_FSM@lt_fsm^(0+128),w
 13375                           
 13376                           ; Switch size 1, requested type "speed"
 13377                           ; Number of cases is 2, Range of values is 0 to 1
 13378                           ; switch strategies available:
 13379                           ; Name         Instructions Cycles
 13380                           ; simple_byte            7     4 (average)
 13381                           ; direct_byte           10     6 (fixed)
 13382                           ; jumptable            260     6 (fixed)
 13383                           ;	Chosen strategy is simple_byte
 13384  147C  3A00               	xorlw	0	; case 0
 13385  147D  1903               	skipnz
 13386  147E  2C64               	goto	l7296
 13387  147F  3A01               	xorlw	1	; case 1
 13388  1480  1903               	skipnz
 13389  1481  2C6E               	goto	l7302
 13390  1482  2C78               	goto	l7310
 13391  1483  0008               	return
 13392  1484                     __end_of_NavKey_LTButton_FSM:	
 13393  1484                     __ptext18:	
 13394 ;; *************** function _NavKey_DWButton_FSM *****************
 13395 ;; Defined at:
 13396 ;;		line 232 in file "NavKey.c"
 13397 ;; Parameters:    Size  Location     Type
 13398 ;;		None
 13399 ;; Auto vars:     Size  Location     Type
 13400 ;;		None
 13401 ;; Return value:  Size  Location     Type
 13402 ;;                  1    wreg      void 
 13403 ;; Registers used:
 13404 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13405 ;; Tracked objects:
 13406 ;;		On entry : 1C/1
 13407 ;;		On exit  : 1C/0
 13408 ;;		Unchanged: 0/0
 13409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13414 ;;Total ram usage:        0 bytes
 13415 ;; Hardware stack levels used:    1
 13416 ;; Hardware stack levels required when called:    8
 13417 ;; This function calls:
 13418 ;;		_NavKeyStatusUpdate
 13419 ;;		_SetInterrupt
 13420 ;; This function is called by:
 13421 ;;		_NavKey_FSM
 13422 ;; This function uses a non-reentrant model
 13423 ;;
 13424                           
 13425                           
 13426                           ;psect for function _NavKey_DWButton_FSM
 13427  1484                     _NavKey_DWButton_FSM:	
 13428                           
 13429                           ;NavKey.c: 233: static uint8_t dn_fsm;;NavKey.c: 235: switch (dn_fsm) {
 13430                           
 13431                           ;incstack = 0
 13432                           ; Regs used in _NavKey_DWButton_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13433  1484  2C9B               	goto	l7270
 13434  1485                     l7252:	
 13435                           
 13436                           ;NavKey.c: 238: if (NavKey_PBstatus[1] == 1) {
 13437  1485  0B21               	decfsz	(_NavKey_PBstatus^(0+128)+1),w
 13438  1486  0008               	return
 13439  1487  3008               	movlw	8
 13440                           
 13441                           ;NavKey.c: 239: dn_fsm = NavKey_WAITRELEASE;
 13442  1488  01B7               	clrf	NavKey_DWButton_FSM@dn_fsm^(0+128)
 13443  1489  0AB7               	incf	NavKey_DWButton_FSM@dn_fsm^(0+128),f
 13444                           
 13445                           ;NavKey.c: 240: NavKeyStatusUpdate(S_DNP);
 13446  148A  00C7               	movwf	NavKeyStatusUpdate@stat^(0+128)
 13447  148B  01C8               	clrf	(NavKeyStatusUpdate@stat+1)^(0+128)
 13448  148C  24F2               	fcall	_NavKeyStatusUpdate
 13449                           
 13450                           ;NavKey.c: 241: SetInterrupt();
 13451  148D  3181  29D5         	ljmp	l6590
 13452  148F                     l7258:	
 13453                           
 13454                           ;NavKey.c: 246: if (NavKey_PBstatus[1] == 0) {
 13455  148F  0821               	movf	(_NavKey_PBstatus^(0+128)+1),w
 13456  1490  1D03               	btfss	3,2
 13457  1491  0008               	return
 13458  1492  3004               	movlw	4
 13459                           
 13460                           ;NavKey.c: 247: dn_fsm = NavKey_WAITPUSH;
 13461  1493  01B7               	clrf	NavKey_DWButton_FSM@dn_fsm^(0+128)
 13462                           
 13463                           ;NavKey.c: 248: NavKeyStatusUpdate(S_DNR);
 13464  1494  00C7               	movwf	NavKeyStatusUpdate@stat^(0+128)
 13465  1495  01C8               	clrf	(NavKeyStatusUpdate@stat+1)^(0+128)
 13466  1496  24F2               	fcall	_NavKeyStatusUpdate
 13467                           
 13468                           ;NavKey.c: 249: SetInterrupt();
 13469  1497  3181  29D5         	ljmp	l6590
 13470  1499                     l7266:	
 13471                           
 13472                           ;NavKey.c: 254: dn_fsm = NavKey_WAITPUSH;
 13473  1499  01B7               	clrf	NavKey_DWButton_FSM@dn_fsm^(0+128)
 13474                           
 13475                           ;NavKey.c: 255: break;
 13476  149A  0008               	return
 13477  149B                     l7270:	
 13478  149B  0021               	movlb	1	; select bank1
 13479  149C  0837               	movf	NavKey_DWButton_FSM@dn_fsm^(0+128),w
 13480                           
 13481                           ; Switch size 1, requested type "speed"
 13482                           ; Number of cases is 2, Range of values is 0 to 1
 13483                           ; switch strategies available:
 13484                           ; Name         Instructions Cycles
 13485                           ; simple_byte            7     4 (average)
 13486                           ; direct_byte           10     6 (fixed)
 13487                           ; jumptable            260     6 (fixed)
 13488                           ;	Chosen strategy is simple_byte
 13489  149D  3A00               	xorlw	0	; case 0
 13490  149E  1903               	skipnz
 13491  149F  2C85               	goto	l7252
 13492  14A0  3A01               	xorlw	1	; case 1
 13493  14A1  1903               	skipnz
 13494  14A2  2C8F               	goto	l7258
 13495  14A3  2C99               	goto	l7266
 13496  14A4  0008               	return
 13497  14A5                     __end_of_NavKey_DWButton_FSM:	
 13498  14A5                     __ptext19:	
 13499 ;; *************** function _NavKey_CentralButton_FSM *****************
 13500 ;; Defined at:
 13501 ;;		line 135 in file "NavKey.c"
 13502 ;; Parameters:    Size  Location     Type
 13503 ;;		None
 13504 ;; Auto vars:     Size  Location     Type
 13505 ;;		None
 13506 ;; Return value:  Size  Location     Type
 13507 ;;                  1    wreg      void 
 13508 ;; Registers used:
 13509 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13510 ;; Tracked objects:
 13511 ;;		On entry : 1F/1
 13512 ;;		On exit  : 1C/0
 13513 ;;		Unchanged: 0/0
 13514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13519 ;;Total ram usage:        0 bytes
 13520 ;; Hardware stack levels used:    1
 13521 ;; Hardware stack levels required when called:    8
 13522 ;; This function calls:
 13523 ;;		_NavKeyStatusUpdate
 13524 ;;		_SetInterrupt
 13525 ;; This function is called by:
 13526 ;;		_NavKey_FSM
 13527 ;; This function uses a non-reentrant model
 13528 ;;
 13529                           
 13530                           
 13531                           ;psect for function _NavKey_CentralButton_FSM
 13532  14A5                     _NavKey_CentralButton_FSM:	
 13533                           
 13534                           ;NavKey.c: 137: if (double_push_cnt > DoublePush) {
 13535                           
 13536                           ;incstack = 0
 13537                           ; Regs used in _NavKey_CentralButton_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13538  14A5  0832               	movf	(_double_push_cnt+1)^(0+128),w
 13539  14A6  0234               	subwf	(_DoublePush+1)^(0+128),w	;volatile
 13540  14A7  1D03               	skipz
 13541  14A8  2CAB               	goto	u4665
 13542  14A9  0831               	movf	_double_push_cnt^(0+128),w
 13543  14AA  0233               	subwf	_DoublePush^(0+128),w	;volatile
 13544  14AB                     u4665:	
 13545  14AB  1803               	skipnc
 13546  14AC  2CB0               	goto	l7172
 13547                           
 13548                           ;NavKey.c: 138: pb_fsm = NavKey_TIMEOUT;
 13549  14AD  3004               	movlw	4
 13550  14AE  00BA               	movwf	_pb_fsm^(0+128)
 13551                           
 13552                           ;NavKey.c: 139: } else {
 13553  14AF  2CE7               	goto	l7222
 13554  14B0                     l7172:	
 13555                           
 13556                           ;NavKey.c: 140: double_push_cnt++;
 13557  14B0  0AB1               	incf	_double_push_cnt^(0+128),f
 13558  14B1  1903               	skipnz
 13559  14B2  0AB2               	incf	(_double_push_cnt+1)^(0+128),f
 13560  14B3  2CE7               	goto	l7222
 13561  14B4                     l7174:	
 13562                           
 13563                           ;NavKey.c: 145: double_push_cnt = 0;
 13564  14B4  01B1               	clrf	_double_push_cnt^(0+128)
 13565  14B5  01B2               	clrf	(_double_push_cnt+1)^(0+128)
 13566                           
 13567                           ;NavKey.c: 146: if (NavKey_PBstatus[0] == 1) {
 13568  14B6  0B20               	decfsz	_NavKey_PBstatus^(0+128),w
 13569  14B7  0008               	return
 13570                           
 13571                           ;NavKey.c: 147: pb_fsm = NavKey_WAITRELEASE;
 13572  14B8  01BA               	clrf	_pb_fsm^(0+128)
 13573  14B9  0ABA               	incf	_pb_fsm^(0+128),f
 13574  14BA  0008               	return
 13575  14BB                     l7180:	
 13576                           
 13577                           ;NavKey.c: 153: if (NavKey_PBstatus[0] == 0) {
 13578  14BB  0820               	movf	_NavKey_PBstatus^(0+128),w
 13579  14BC  1D03               	btfss	3,2
 13580  14BD  0008               	return
 13581                           
 13582                           ;NavKey.c: 154: pb_fsm = NavKey_WAITDOUBLEPUSH;
 13583  14BE  3002               	movlw	2
 13584  14BF  00BA               	movwf	_pb_fsm^(0+128)
 13585  14C0  0008               	return
 13586  14C1                     l7184:	
 13587                           
 13588                           ;NavKey.c: 159: if (NavKey_PBstatus[0] == 1) {
 13589  14C1  0B20               	decfsz	_NavKey_PBstatus^(0+128),w
 13590  14C2  0008               	return
 13591                           
 13592                           ;NavKey.c: 160: pb_fsm = NavKey_WAITDOUBLERELEASED;
 13593  14C3  3003               	movlw	3
 13594  14C4  00BA               	movwf	_pb_fsm^(0+128)
 13595  14C5  0008               	return
 13596  14C6                     l7188:	
 13597                           
 13598                           ;NavKey.c: 165: if (NavKey_PBstatus[0] == 0) {
 13599  14C6  0820               	movf	_NavKey_PBstatus^(0+128),w
 13600  14C7  1D03               	btfss	3,2
 13601  14C8  0008               	return
 13602  14C9  3004               	movlw	4
 13603                           
 13604                           ;NavKey.c: 166: double_push_cnt = 0;
 13605  14CA  01B1               	clrf	_double_push_cnt^(0+128)
 13606  14CB  01B2               	clrf	(_double_push_cnt+1)^(0+128)
 13607  14CC                     L2:	
 13608                           
 13609                           ;NavKey.c: 167: pb_fsm = NavKey_WAITPUSH;
 13610  14CC  01BA               	clrf	_pb_fsm^(0+128)
 13611                           
 13612                           ;NavKey.c: 168: NavKeyStatusUpdate(S_CTRDP);
 13613  14CD  01C7               	clrf	NavKeyStatusUpdate@stat^(0+128)
 13614  14CE  00C8               	movwf	(NavKeyStatusUpdate@stat^(0+128)+1)
 13615  14CF  24F2               	fcall	_NavKeyStatusUpdate
 13616  14D0                     l7194:	
 13617                           
 13618                           ;NavKey.c: 169: SetInterrupt();
 13619  14D0  3181  29D5         	ljmp	l6590
 13620  14D2                     l7196:	
 13621  14D2  3002               	movlw	2
 13622                           
 13623                           ;NavKey.c: 174: double_push_cnt = 0;
 13624  14D3  01B1               	clrf	_double_push_cnt^(0+128)
 13625  14D4  01B2               	clrf	(_double_push_cnt+1)^(0+128)
 13626                           
 13627                           ;NavKey.c: 175: NavKeyStatusUpdate(S_CTRP);
 13628  14D5  01C7               	clrf	NavKeyStatusUpdate@stat^(0+128)
 13629  14D6  00C8               	movwf	(NavKeyStatusUpdate@stat^(0+128)+1)
 13630  14D7  24F2  3194         	fcall	_NavKeyStatusUpdate
 13631                           
 13632                           ;NavKey.c: 176: if (NavKey_PBstatus[0] == 1) {
 13633  14D9  0021               	movlb	1	; select bank1
 13634  14DA  0B20               	decfsz	_NavKey_PBstatus^(0+128),w
 13635  14DB  2CDF               	goto	l7204
 13636                           
 13637                           ;NavKey.c: 177: pb_fsm = NavKey_PUSHRESET;
 13638  14DC  3005               	movlw	5
 13639  14DD  00BA               	movwf	_pb_fsm^(0+128)
 13640                           
 13641                           ;NavKey.c: 178: } else {
 13642  14DE  2CD0               	goto	l7194
 13643  14DF                     l7204:	
 13644  14DF  3001               	movlw	1
 13645  14E0  2CCC               	goto	L2
 13646  14E1                     l7210:	
 13647                           ;NavKey.c: 180: NavKeyStatusUpdate(S_CTRR);
 13648                           
 13649                           ;NavKey.c: 179: pb_fsm = NavKey_WAITPUSH;
 13650                           
 13651                           
 13652                           ;NavKey.c: 186: double_push_cnt = 0;
 13653  14E1  01B1               	clrf	_double_push_cnt^(0+128)
 13654  14E2  01B2               	clrf	(_double_push_cnt+1)^(0+128)
 13655                           
 13656                           ;NavKey.c: 187: if (NavKey_PBstatus[0] == 0) {
 13657  14E3  0820               	movf	_NavKey_PBstatus^(0+128),w
 13658  14E4  1D03               	btfss	3,2
 13659  14E5  0008               	return
 13660  14E6  2CDF               	goto	l7204
 13661  14E7                     l7222:	
 13662  14E7  083A               	movf	_pb_fsm^(0+128),w
 13663                           
 13664                           ; Switch size 1, requested type "speed"
 13665                           ; Number of cases is 6, Range of values is 0 to 5
 13666                           ; switch strategies available:
 13667                           ; Name         Instructions Cycles
 13668                           ; direct_byte           18     6 (fixed)
 13669                           ; simple_byte           19    10 (average)
 13670                           ; jumptable            260     6 (fixed)
 13671                           ;	Chosen strategy is direct_byte
 13672  14E8  0084               	movwf	4
 13673  14E9  3006               	movlw	6
 13674  14EA  0204               	subwf	4,w
 13675  14EB  1803               	skipnc
 13676  14EC  0008               	return
 13677  14ED  318B               	movlp	high S7750
 13678  14EE  3504               	lslf	4,w
 13679  14EF  3E07               	addlw	low S7750
 13680  14F0  0082               	movwf	2
 13681  14F1  0008               	return
 13682  14F2                     __end_of_NavKey_CentralButton_FSM:	
 13683  14F2                     __ptext38:	
 13684 ;; *************** function _NavKeyStatusUpdate *****************
 13685 ;; Defined at:
 13686 ;;		line 102 in file "DataVariable.c"
 13687 ;; Parameters:    Size  Location     Type
 13688 ;;  stat            2    0[BANK1 ] enum E68
 13689 ;; Auto vars:     Size  Location     Type
 13690 ;;		None
 13691 ;; Return value:  Size  Location     Type
 13692 ;;                  1    wreg      void 
 13693 ;; Registers used:
 13694 ;;		wreg
 13695 ;; Tracked objects:
 13696 ;;		On entry : 1F/1
 13697 ;;		On exit  : 1F/0
 13698 ;;		Unchanged: 0/0
 13699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13700 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13703 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13704 ;;Total ram usage:        2 bytes
 13705 ;; Hardware stack levels used:    1
 13706 ;; Hardware stack levels required when called:    7
 13707 ;; This function calls:
 13708 ;;		Nothing
 13709 ;; This function is called by:
 13710 ;;		_Int2StatusUpdate
 13711 ;;		_NavKey_CentralButton_FSM
 13712 ;;		_NavKey_UPButton_FSM
 13713 ;;		_NavKey_DWButton_FSM
 13714 ;;		_NavKey_RTButton_FSM
 13715 ;;		_NavKey_LTButton_FSM
 13716 ;; This function uses a non-reentrant model
 13717 ;;
 13718                           
 13719                           
 13720                           ;psect for function _NavKeyStatusUpdate
 13721  14F2                     _NavKeyStatusUpdate:	
 13722  14F2                     l6588:	
 13723                           ;incstack = 0
 13724                           ; Regs used in _NavKeyStatusUpdate: [wreg]
 13725                           
 13726                           
 13727                           ;DataVariable.c: 103: NSTATUS.val |= (uint16_t) stat;
 13728  14F2  0847               	movf	NavKeyStatusUpdate@stat^(0+128),w
 13729  14F3  0020               	movlb	0	; select bank0
 13730  14F4  04B2               	iorwf	_NSTATUS,f	;volatile
 13731  14F5  0021               	movlb	1	; select bank1
 13732  14F6  0848               	movf	(NavKeyStatusUpdate@stat+1)^(0+128),w
 13733  14F7  0020               	movlb	0	; select bank0
 13734  14F8  04B3               	iorwf	_NSTATUS+1,f	;volatile
 13735  14F9  0008               	return
 13736  14FA                     __end_of_NavKeyStatusUpdate:	
 13737                           
 13738                           	psect	swtext1
 13739  0B07                     __pswtext1:	
 13740  0B07                     S7750:	
 13741  0B07  3194  2CB4         	ljmp	l7174
 13742  0B09  3194  2CBB         	ljmp	l7180
 13743  0B0B  3194  2CC1         	ljmp	l7184
 13744  0B0D  3194  2CC6         	ljmp	l7188
 13745  0B0F  3194  2CD2         	ljmp	l7196
 13746  0B11  3194  2CE1         	ljmp	l7210
 13747                           
 13748                           	psect	text20
 13749  09AE                     __ptext20:	
 13750 ;; *************** function _NavKeySwitch_KeyFilter *****************
 13751 ;; Defined at:
 13752 ;;		line 107 in file "NavKey.c"
 13753 ;; Parameters:    Size  Location     Type
 13754 ;;		None
 13755 ;; Auto vars:     Size  Location     Type
 13756 ;;  i               1    0[BANK1 ] unsigned char 
 13757 ;; Return value:  Size  Location     Type
 13758 ;;                  1    wreg      void 
 13759 ;; Registers used:
 13760 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13761 ;; Tracked objects:
 13762 ;;		On entry : 1F/1
 13763 ;;		On exit  : 1F/1
 13764 ;;		Unchanged: 0/0
 13765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13767 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13769 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13770 ;;Total ram usage:        1 bytes
 13771 ;; Hardware stack levels used:    1
 13772 ;; Hardware stack levels required when called:    7
 13773 ;; This function calls:
 13774 ;;		Nothing
 13775 ;; This function is called by:
 13776 ;;		_NavKey_FSM
 13777 ;; This function uses a non-reentrant model
 13778 ;;
 13779                           
 13780                           
 13781                           ;psect for function _NavKeySwitch_KeyFilter
 13782  09AE                     _NavKeySwitch_KeyFilter:	
 13783                           
 13784                           ;NavKey.c: 108: uint8_t i;;NavKey.c: 110: NavKey_PBtemp[0] = PORTBbits.RB4;
 13785                           
 13786                           ;incstack = 0
 13787                           ; Regs used in _NavKeySwitch_KeyFilter: [wreg+fsr1l+fsr1h+status,2+status,0]
 13788  09AE  3000               	movlw	0
 13789  09AF  0020               	movlb	0	; select bank0
 13790  09B0  1A0D               	btfsc	13,4	;volatile
 13791  09B1  3001               	movlw	1
 13792  09B2  0021               	movlb	1	; select bank1
 13793  09B3  00A5               	movwf	_NavKey_PBtemp^(0+128)
 13794                           
 13795                           ;NavKey.c: 111: NavKey_PBtemp[1] = PORTCbits.RC7;
 13796  09B4  3000               	movlw	0
 13797  09B5  0020               	movlb	0	; select bank0
 13798  09B6  1B8E               	btfsc	14,7	;volatile
 13799  09B7  3001               	movlw	1
 13800  09B8  0021               	movlb	1	; select bank1
 13801  09B9  00A6               	movwf	(_NavKey_PBtemp^(0+128)+1)
 13802                           
 13803                           ;NavKey.c: 112: NavKey_PBtemp[2] = PORTAbits.RA4;
 13804  09BA  3000               	movlw	0
 13805  09BB  0020               	movlb	0	; select bank0
 13806  09BC  1A0C               	btfsc	12,4	;volatile
 13807  09BD  3001               	movlw	1
 13808  09BE  0021               	movlb	1	; select bank1
 13809  09BF  00A7               	movwf	(_NavKey_PBtemp^(0+128)+2)
 13810                           
 13811                           ;NavKey.c: 113: NavKey_PBtemp[3] = PORTCbits.RC6;
 13812  09C0  3000               	movlw	0
 13813  09C1  0020               	movlb	0	; select bank0
 13814  09C2  1B0E               	btfsc	14,6	;volatile
 13815  09C3  3001               	movlw	1
 13816  09C4  0021               	movlb	1	; select bank1
 13817  09C5  00A8               	movwf	(_NavKey_PBtemp^(0+128)+3)
 13818                           
 13819                           ;NavKey.c: 114: NavKey_PBtemp[4] = PORTCbits.RC3;
 13820  09C6  3000               	movlw	0
 13821  09C7  0020               	movlb	0	; select bank0
 13822  09C8  198E               	btfsc	14,3	;volatile
 13823  09C9  3001               	movlw	1
 13824  09CA  0021               	movlb	1	; select bank1
 13825  09CB  00A9               	movwf	(_NavKey_PBtemp^(0+128)+4)
 13826                           
 13827                           ;NavKey.c: 116: for (i = 0; i < 5; i++) {
 13828  09CC  01C7               	clrf	NavKeySwitch_KeyFilter@i^(0+128)
 13829  09CD                     l7154:	
 13830                           
 13831                           ;NavKey.c: 117: if (NavKey_PBtemp[i] == 0) {
 13832  09CD  0847               	movf	NavKeySwitch_KeyFilter@i^(0+128),w
 13833  09CE  3EA5               	addlw	(low (_NavKey_PBtemp| 0))& (0+255)
 13834  09CF  0086               	movwf	6
 13835  09D0  0187               	clrf	7
 13836  09D1  0801               	movf	1,w
 13837  09D2  1D03               	btfss	3,2
 13838  09D3  29E8               	goto	l7160
 13839                           
 13840                           ;NavKey.c: 118: if (pb_cnt[i]++ >= 5) {
 13841  09D4  0847               	movf	NavKeySwitch_KeyFilter@i^(0+128),w
 13842  09D5  3EAA               	addlw	(low (_pb_cnt| 0))& (0+255)
 13843  09D6  0086               	movwf	6
 13844  09D7  0801               	movf	1,w
 13845  09D8  0A81               	incf	1,f
 13846  09D9  3A80               	xorlw	128
 13847  09DA  3E7B               	addlw	-133
 13848  09DB  1C03               	skipc
 13849  09DC  29FA               	goto	l7164
 13850                           
 13851                           ;NavKey.c: 119: pb_cnt[i] = 5;
 13852  09DD  0847               	movf	NavKeySwitch_KeyFilter@i^(0+128),w
 13853  09DE  3EAA               	addlw	(low (_pb_cnt| 0))& (0+255)
 13854  09DF  0086               	movwf	6
 13855  09E0  3005               	movlw	5
 13856  09E1  0081               	movwf	1
 13857                           
 13858                           ;NavKey.c: 120: NavKey_PBstatus[i] = 1;
 13859  09E2  0847               	movf	NavKeySwitch_KeyFilter@i^(0+128),w
 13860  09E3  3EA0               	addlw	(low (_NavKey_PBstatus| 0))& (0+255)
 13861  09E4  0086               	movwf	6
 13862  09E5  0181               	clrf	1
 13863  09E6  0A81               	incf	1,f
 13864  09E7  29FA               	goto	l7164
 13865  09E8                     l7160:	
 13866                           
 13867                           ;NavKey.c: 123: if (pb_cnt[i]-- <= 0) {
 13868  09E8  0847               	movf	NavKeySwitch_KeyFilter@i^(0+128),w
 13869  09E9  3EAA               	addlw	(low (_pb_cnt| 0))& (0+255)
 13870  09EA  0086               	movwf	6
 13871  09EB  0187               	clrf	7
 13872  09EC  0801               	movf	1,w
 13873  09ED  0381               	decf	1,f
 13874  09EE  3A80               	xorlw	128
 13875  09EF  3E7F               	addlw	-129
 13876  09F0  1803               	skipnc
 13877  09F1  29FA               	goto	l7164
 13878                           
 13879                           ;NavKey.c: 124: pb_cnt[i] = 0;
 13880  09F2  0847               	movf	NavKeySwitch_KeyFilter@i^(0+128),w
 13881  09F3  3EAA               	addlw	(low (_pb_cnt| 0))& (0+255)
 13882  09F4  0086               	movwf	6
 13883  09F5  0181               	clrf	1
 13884                           
 13885                           ;NavKey.c: 125: NavKey_PBstatus[i] = 0;
 13886  09F6  0847               	movf	NavKeySwitch_KeyFilter@i^(0+128),w
 13887  09F7  3EA0               	addlw	(low (_NavKey_PBstatus| 0))& (0+255)
 13888  09F8  0086               	movwf	6
 13889  09F9  0181               	clrf	1
 13890  09FA                     l7164:	
 13891  09FA  3005               	movlw	5
 13892  09FB  0AC7               	incf	NavKeySwitch_KeyFilter@i^(0+128),f
 13893  09FC  0247               	subwf	NavKeySwitch_KeyFilter@i^(0+128),w
 13894  09FD  1803               	btfsc	3,0
 13895  09FE  0008               	return
 13896  09FF  29CD               	goto	l7154
 13897  0A00                     __end_of_NavKeySwitch_KeyFilter:	
 13898                           
 13899                           	psect	swtext2
 13900  09A3                     __pswtext2:	
 13901  09A3                     S7752:	
 13902  09A3  3181  2932         	ljmp	l7104
 13903  09A5  3181  2949         	ljmp	l7118
 13904  09A7  3181  2957         	ljmp	l1148
 13905  09A9  3181  2966         	ljmp	l1151
 13906                           
 13907                           	psect	swtext3
 13908  0B13                     __pswtext3:	
 13909  0B13                     S7754:	
 13910  0B13  3181  297F         	ljmp	l7058
 13911  0B15  3181  2996         	ljmp	l7072
 13912  0B17  3181  29A4         	ljmp	l1133
 13913  0B19  3181  29B3         	ljmp	l1136
 13914                           
 13915                           	psect	swtext4
 13916  1044                     __pswtext4:	
 13917  1044                     S7756:	
 13918  1044  3180  28E7         	ljmp	l7012
 13919  1046  3180  28FE         	ljmp	l7026
 13920  1048  3181  290C         	ljmp	l1118
 13921  104A  3181  291A         	ljmp	l1121
 13922                           
 13923                           	psect	intentry
 13924  0004                     __pintentry:	
 13925 ;; *************** function _INTERRUPT_InterruptManager *****************
 13926 ;; Defined at:
 13927 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 13928 ;; Parameters:    Size  Location     Type
 13929 ;;		None
 13930 ;; Auto vars:     Size  Location     Type
 13931 ;;		None
 13932 ;; Return value:  Size  Location     Type
 13933 ;;                  1    wreg      void 
 13934 ;; Registers used:
 13935 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13936 ;; Tracked objects:
 13937 ;;		On entry : 0/0
 13938 ;;		On exit  : 0/0
 13939 ;;		Unchanged: 0/0
 13940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13945 ;;Total ram usage:        0 bytes
 13946 ;; Hardware stack levels used:    1
 13947 ;; Hardware stack levels required when called:    6
 13948 ;; This function calls:
 13949 ;;		_CLC1_ISR
 13950 ;;		_CLC2_ISR
 13951 ;;		_I2C1_ISR
 13952 ;;		_TMR3_ISR
 13953 ;; This function is called by:
 13954 ;;		Interrupt level 1
 13955 ;; This function uses a non-reentrant model
 13956 ;;
 13957                           
 13958  0004                     _INTERRUPT_InterruptManager:	
 13959                           
 13960                           ;incstack = 0
 13961  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 13962                           
 13963                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13964  0005  3180               	pagesel	$
 13965                           
 13966                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
 13967  0006  1F0B               	btfss	11,6	;volatile
 13968  0007  282E               	goto	i1l89
 13969                           
 13970                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: if(PIE3bits.CLC2IE == 1 && PIR3bits
      +                          .CLC2IF == 1)
 13971  0008  0021               	movlb	1	; select bank1
 13972  0009  1C93               	btfss	19,1	;volatile
 13973  000A  2812               	goto	i1l80
 13974  000B  0020               	movlb	0	; select bank0
 13975  000C  1C93               	btfss	19,1	;volatile
 13976  000D  2812               	goto	i1l80
 13977                           
 13978                           ;interrupt_manager.c: 58: {;interrupt_manager.c: 59: CLC2_ISR();
 13979  000E  3194  24FA  3180   	fcall	_CLC2_ISR
 13980                           
 13981                           ;interrupt_manager.c: 60: }
 13982  0011  282E               	goto	i1l89
 13983  0012                     i1l80:	
 13984                           
 13985                           ;interrupt_manager.c: 61: else if(PIE3bits.CLC1IE == 1 && PIR3bits.CLC1IF == 1)
 13986  0012  0021               	movlb	1	; select bank1
 13987  0013  1C13               	btfss	19,0	;volatile
 13988  0014  281C               	goto	i1l82
 13989  0015  0020               	movlb	0	; select bank0
 13990  0016  1C13               	btfss	19,0	;volatile
 13991  0017  281C               	goto	i1l82
 13992                           
 13993                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: CLC1_ISR();
 13994  0018  3195  2504  3180   	fcall	_CLC1_ISR
 13995                           
 13996                           ;interrupt_manager.c: 64: }
 13997  001B  282E               	goto	i1l89
 13998  001C                     i1l82:	
 13999                           
 14000                           ;interrupt_manager.c: 65: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
 14001  001C  0021               	movlb	1	; select bank1
 14002  001D  1D91               	btfss	17,3	;volatile
 14003  001E  2826               	goto	i1l84
 14004  001F  0020               	movlb	0	; select bank0
 14005  0020  1D91               	btfss	17,3	;volatile
 14006  0021  2826               	goto	i1l84
 14007                           
 14008                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: I2C1_ISR();
 14009  0022  318B  2321  3180   	fcall	_I2C1_ISR
 14010                           
 14011                           ;interrupt_manager.c: 68: }
 14012  0025  282E               	goto	i1l89
 14013  0026                     i1l84:	
 14014                           
 14015                           ;interrupt_manager.c: 69: else if(PIE3bits.TMR3IE == 1 && PIR3bits.TMR3IF == 1)
 14016  0026  0021               	movlb	1	; select bank1
 14017  0027  1E13               	btfss	19,4	;volatile
 14018  0028  282E               	goto	i1l89
 14019  0029  0020               	movlb	0	; select bank0
 14020  002A  1E13               	btfss	19,4	;volatile
 14021  002B  282E               	goto	i1l89
 14022                           
 14023                           ;interrupt_manager.c: 70: {;interrupt_manager.c: 71: TMR3_ISR();
 14024  002C  318A  22E4         	fcall	_TMR3_ISR
 14025  002E                     i1l89:	
 14026                           ;interrupt_manager.c: 72: }
 14027                           
 14028  002E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 14029  002F  0009               	retfie
 14030  0030                     __end_of_INTERRUPT_InterruptManager:	
 14031                           
 14032                           	psect	text42
 14033  0AE4                     __ptext42:	
 14034 ;; *************** function _TMR3_ISR *****************
 14035 ;; Defined at:
 14036 ;;		line 157 in file "mcc_generated_files/tmr3.c"
 14037 ;; Parameters:    Size  Location     Type
 14038 ;;		None
 14039 ;; Auto vars:     Size  Location     Type
 14040 ;;		None
 14041 ;; Return value:  Size  Location     Type
 14042 ;;                  1    wreg      void 
 14043 ;; Registers used:
 14044 ;;		wreg, status,2, status,0, pclath, cstack
 14045 ;; Tracked objects:
 14046 ;;		On entry : 1F/0
 14047 ;;		On exit  : 0/0
 14048 ;;		Unchanged: 0/0
 14049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14054 ;;Total ram usage:        0 bytes
 14055 ;; Hardware stack levels used:    1
 14056 ;; Hardware stack levels required when called:    2
 14057 ;; This function calls:
 14058 ;;		_TMR3_CallBack
 14059 ;;		_TMR3_WriteTimer
 14060 ;; This function is called by:
 14061 ;;		_INTERRUPT_InterruptManager
 14062 ;; This function uses a non-reentrant model
 14063 ;;
 14064                           
 14065                           
 14066                           ;psect for function _TMR3_ISR
 14067  0AE4                     _TMR3_ISR:	
 14068                           
 14069                           ;tmr3.c: 161: PIR3bits.TMR3IF = 0;
 14070                           
 14071                           ;incstack = 0
 14072                           ; Regs used in _TMR3_ISR: [wreg+status,2+status,0+pclath+cstack]
 14073  0AE4  1213               	bcf	19,4	;volatile
 14074                           
 14075                           ;tmr3.c: 162: TMR3_WriteTimer(timer3ReloadVal);
 14076  0AE5  0021               	movlb	1	; select bank1
 14077  0AE6  085A               	movf	(_timer3ReloadVal+1)^(0+128),w	;volatile
 14078  0AE7  00F1               	movwf	TMR3_WriteTimer@timerVal+1
 14079  0AE8  0859               	movf	_timer3ReloadVal^(0+128),w	;volatile
 14080  0AE9  00F0               	movwf	TMR3_WriteTimer@timerVal
 14081  0AEA  22F8  318A         	fcall	_TMR3_WriteTimer
 14082                           
 14083                           ;tmr3.c: 166: TMR3_CallBack();
 14084  0AEC  2AED               	ljmp	i1l5676
 14085  0AED                     __end_of_TMR3_ISR:	
 14086  0AED                     __ptext44:	
 14087 ;; *************** function _TMR3_CallBack *****************
 14088 ;; Defined at:
 14089 ;;		line 169 in file "mcc_generated_files/tmr3.c"
 14090 ;; Parameters:    Size  Location     Type
 14091 ;;		None
 14092 ;; Auto vars:     Size  Location     Type
 14093 ;;		None
 14094 ;; Return value:  Size  Location     Type
 14095 ;;                  1    wreg      void 
 14096 ;; Registers used:
 14097 ;;		wreg, status,2, status,0, pclath, cstack
 14098 ;; Tracked objects:
 14099 ;;		On entry : 1F/8
 14100 ;;		On exit  : 0/0
 14101 ;;		Unchanged: 0/0
 14102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14107 ;;Total ram usage:        0 bytes
 14108 ;; Hardware stack levels used:    1
 14109 ;; Hardware stack levels required when called:    1
 14110 ;; This function calls:
 14111 ;;		Absolute function
 14112 ;;		_TMR3_DefaultInterruptHandler
 14113 ;;		_TimerInt
 14114 ;; This function is called by:
 14115 ;;		_TMR3_ISR
 14116 ;; This function uses a non-reentrant model
 14117 ;;
 14118                           
 14119                           
 14120                           ;psect for function _TMR3_CallBack
 14121  0AED                     _TMR3_CallBack:	
 14122  0AED                     i1l5676:	
 14123                           ;incstack = 0
 14124                           ; Regs used in _TMR3_CallBack: [wreg+status,2+status,0+pclath+cstack]
 14125                           
 14126                           
 14127                           ;tmr3.c: 172: if(TMR3_InterruptHandler)
 14128  0AED  0021               	movlb	1	; select bank1
 14129  0AEE  0857               	movf	_TMR3_InterruptHandler^(0+128),w
 14130  0AEF  0458               	iorwf	(_TMR3_InterruptHandler+1)^(0+128),w
 14131  0AF0  1903               	btfsc	3,2
 14132  0AF1  0008               	return
 14133                           
 14134                           ;tmr3.c: 173: {;tmr3.c: 174: TMR3_InterruptHandler();
 14135  0AF2  0858               	movf	(_TMR3_InterruptHandler+1)^(0+128),w
 14136  0AF3  008A               	movwf	10
 14137  0AF4  0857               	movf	_TMR3_InterruptHandler^(0+128),w
 14138  0AF5  000A               	callw
 14139  0AF6  318A               	pagesel	$
 14140  0AF7  0008               	return
 14141  0AF8                     __end_of_TMR3_CallBack:	
 14142  0AF8                     __ptext43:	
 14143 ;; *************** function _TMR3_WriteTimer *****************
 14144 ;; Defined at:
 14145 ;;		line 120 in file "mcc_generated_files/tmr3.c"
 14146 ;; Parameters:    Size  Location     Type
 14147 ;;  timerVal        2    0[COMMON] unsigned int 
 14148 ;; Auto vars:     Size  Location     Type
 14149 ;;		None
 14150 ;; Return value:  Size  Location     Type
 14151 ;;                  1    wreg      void 
 14152 ;; Registers used:
 14153 ;;		wreg
 14154 ;; Tracked objects:
 14155 ;;		On entry : 1F/1
 14156 ;;		On exit  : 1F/8
 14157 ;;		Unchanged: 0/0
 14158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14159 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14162 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14163 ;;Total ram usage:        2 bytes
 14164 ;; Hardware stack levels used:    1
 14165 ;; This function calls:
 14166 ;;		Nothing
 14167 ;; This function is called by:
 14168 ;;		_TMR3_ISR
 14169 ;; This function uses a non-reentrant model
 14170 ;;
 14171                           
 14172                           
 14173                           ;psect for function _TMR3_WriteTimer
 14174  0AF8                     _TMR3_WriteTimer:	
 14175                           
 14176                           ;tmr3.c: 122: if (T3CONbits.T3SYNC == 1)
 14177                           
 14178                           ;incstack = 0
 14179                           ; Regs used in _TMR3_WriteTimer: [wreg]
 14180  0AF8  0028               	movlb	8	; select bank8
 14181  0AF9  1D13               	btfss	19,2	;volatile
 14182  0AFA  2B02               	goto	i1l5674
 14183                           
 14184                           ;tmr3.c: 123: {;tmr3.c: 125: T3CONbits.TMR3ON = 0;
 14185  0AFB  1013               	bcf	19,0	;volatile
 14186                           
 14187                           ;tmr3.c: 128: TMR3H = (timerVal >> 8);
 14188  0AFC  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 14189  0AFD  0092               	movwf	18	;volatile
 14190                           
 14191                           ;tmr3.c: 129: TMR3L = timerVal;
 14192  0AFE  0870               	movf	TMR3_WriteTimer@timerVal,w
 14193  0AFF  0091               	movwf	17	;volatile
 14194                           
 14195                           ;tmr3.c: 132: T3CONbits.TMR3ON =1;
 14196  0B00  1413               	bsf	19,0	;volatile
 14197                           
 14198                           ;tmr3.c: 133: }
 14199  0B01  0008               	return
 14200  0B02                     i1l5674:	
 14201                           
 14202                           ;tmr3.c: 134: else;tmr3.c: 135: {;tmr3.c: 137: TMR3H = (timerVal >> 8);
 14203  0B02  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 14204  0B03  0092               	movwf	18	;volatile
 14205                           
 14206                           ;tmr3.c: 138: TMR3L = timerVal;
 14207  0B04  0870               	movf	TMR3_WriteTimer@timerVal,w
 14208  0B05  0091               	movwf	17	;volatile
 14209  0B06  0008               	return
 14210  0B07                     __end_of_TMR3_WriteTimer:	
 14211                           
 14212                           	psect	text45
 14213  0003                     __ptext45:	
 14214 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 14215 ;; Defined at:
 14216 ;;		line 182 in file "mcc_generated_files/tmr3.c"
 14217 ;; Parameters:    Size  Location     Type
 14218 ;;		None
 14219 ;; Auto vars:     Size  Location     Type
 14220 ;;		None
 14221 ;; Return value:  Size  Location     Type
 14222 ;;                  1    wreg      void 
 14223 ;; Registers used:
 14224 ;;		None
 14225 ;; Tracked objects:
 14226 ;;		On entry : 1F/1
 14227 ;;		On exit  : 1F/1
 14228 ;;		Unchanged: 1F/0
 14229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14234 ;;Total ram usage:        0 bytes
 14235 ;; Hardware stack levels used:    1
 14236 ;; This function calls:
 14237 ;;		Nothing
 14238 ;; This function is called by:
 14239 ;;		_TMR3_Initialize
 14240 ;;		_TMR3_CallBack
 14241 ;; This function uses a non-reentrant model
 14242 ;;
 14243                           
 14244                           
 14245                           ;psect for function _TMR3_DefaultInterruptHandler
 14246  0003                     _TMR3_DefaultInterruptHandler:	
 14247                           
 14248                           ;incstack = 0
 14249                           ; Regs used in _TMR3_DefaultInterruptHandler: []
 14250  0003  0008               	return
 14251  0004                     __end_of_TMR3_DefaultInterruptHandler:	
 14252                           
 14253                           	psect	text46
 14254  09AB                     __ptext46:	
 14255 ;; *************** function _TimerInt *****************
 14256 ;; Defined at:
 14257 ;;		line 73 in file "main.c"
 14258 ;; Parameters:    Size  Location     Type
 14259 ;;		None
 14260 ;; Auto vars:     Size  Location     Type
 14261 ;;		None
 14262 ;; Return value:  Size  Location     Type
 14263 ;;                  1    wreg      void 
 14264 ;; Registers used:
 14265 ;;		None
 14266 ;; Tracked objects:
 14267 ;;		On entry : 1F/1
 14268 ;;		On exit  : 1F/1
 14269 ;;		Unchanged: 0/0
 14270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14275 ;;Total ram usage:        0 bytes
 14276 ;; Hardware stack levels used:    1
 14277 ;; This function calls:
 14278 ;;		Nothing
 14279 ;; This function is called by:
 14280 ;;		_main
 14281 ;;		_TMR3_CallBack
 14282 ;; This function uses a non-reentrant model
 14283 ;;
 14284                           
 14285                           
 14286                           ;psect for function _TimerInt
 14287  09AB                     _TimerInt:	
 14288                           
 14289                           ;main.c: 74: fsm_tmr = 1;
 14290                           
 14291                           ;incstack = 0
 14292                           ; Regs used in _TimerInt: []
 14293  09AB  01C6               	clrf	_fsm_tmr^(0+128)
 14294  09AC  0AC6               	incf	_fsm_tmr^(0+128),f
 14295  09AD  0008               	return
 14296  09AE                     __end_of_TimerInt:	
 14297                           
 14298                           	psect	text47
 14299  0B21                     __ptext47:	
 14300 ;; *************** function _I2C1_ISR *****************
 14301 ;; Defined at:
 14302 ;;		line 125 in file "mcc_generated_files/i2c1.c"
 14303 ;; Parameters:    Size  Location     Type
 14304 ;;		None
 14305 ;; Auto vars:     Size  Location     Type
 14306 ;;  i2c_data        1    6[BANK0 ] unsigned char 
 14307 ;; Return value:  Size  Location     Type
 14308 ;;                  1    wreg      void 
 14309 ;; Registers used:
 14310 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14311 ;; Tracked objects:
 14312 ;;		On entry : 1F/0
 14313 ;;		On exit  : 1F/4
 14314 ;;		Unchanged: 0/0
 14315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14317 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14319 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14320 ;;Total ram usage:        1 bytes
 14321 ;; Hardware stack levels used:    1
 14322 ;; Hardware stack levels required when called:    5
 14323 ;; This function calls:
 14324 ;;		_I2C1_StatusCallback
 14325 ;; This function is called by:
 14326 ;;		_INTERRUPT_InterruptManager
 14327 ;; This function uses a non-reentrant model
 14328 ;;
 14329                           
 14330                           
 14331                           ;psect for function _I2C1_ISR
 14332  0B21                     _I2C1_ISR:	
 14333                           
 14334                           ;i2c1.c: 132: PIR1bits.SSP1IF = 0;
 14335                           
 14336                           ;incstack = 0
 14337                           ; Regs used in _I2C1_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14338  0B21  1191               	bcf	17,3	;volatile
 14339                           
 14340                           ;i2c1.c: 133: i2c_data = SSP1BUF;
 14341  0B22  0024               	movlb	4	; select bank4
 14342  0B23  0811               	movf	17,w	;volatile
 14343  0B24  0020               	movlb	0	; select bank0
 14344  0B25  00D0               	movwf	I2C1_ISR@i2c_data
 14345                           
 14346                           ;i2c1.c: 134: if (1 == SSP1STATbits.R_nW) {
 14347  0B26  0024               	movlb	4	; select bank4
 14348  0B27  1D14               	btfss	20,2	;volatile
 14349  0B28  2B30               	goto	i1l171
 14350                           
 14351                           ;i2c1.c: 135: if ((1 == SSP1STATbits.D_nA) && (1 == SSP1CON2bits.ACKSTAT)) {
 14352  0B29  1A94               	btfsc	20,5	;volatile
 14353  0B2A  1F16               	btfss	22,6	;volatile
 14354  0B2B  2B2E               	goto	i1l6122
 14355                           
 14356                           ;i2c1.c: 137: I2C1_StatusCallback(I2C1_SLAVE_READ_COMPLETED);
 14357  0B2C  3003               	movlw	3
 14358  0B2D  2B38               	goto	L6
 14359  0B2E                     i1l6122:	
 14360                           ;i2c1.c: 138: } else {
 14361                           
 14362                           
 14363                           ;i2c1.c: 140: I2C1_StatusCallback(I2C1_SLAVE_READ_REQUEST);
 14364  0B2E  3001               	movlw	1
 14365  0B2F  2B38               	goto	L6
 14366  0B30                     i1l171:	
 14367  0B30  1A94               	btfsc	20,5	;volatile
 14368  0B31  2B34               	goto	i1l6126
 14369                           
 14370                           ;i2c1.c: 146: I2C1_StatusCallback(I2C1_SLAVE_WRITE_REQUEST);
 14371  0B32  3000               	movlw	0
 14372  0B33  2B38               	goto	L6
 14373  0B34                     i1l6126:	
 14374                           ;i2c1.c: 147: } else {
 14375                           
 14376                           
 14377                           ;i2c1.c: 148: I2C1_slaveWriteData = i2c_data;
 14378  0B34  0020               	movlb	0	; select bank0
 14379  0B35  0850               	movf	I2C1_ISR@i2c_data,w
 14380  0B36  00DF               	movwf	_I2C1_slaveWriteData	;volatile
 14381                           
 14382                           ;i2c1.c: 151: I2C1_StatusCallback(I2C1_SLAVE_WRITE_COMPLETED);
 14383  0B37  3002               	movlw	2
 14384  0B38                     L6:	
 14385  0B38  233C               	fcall	_I2C1_StatusCallback
 14386                           
 14387                           ;i2c1.c: 152: };i2c1.c: 154: SSP1CON1bits.CKP = 1;
 14388  0B39  0024               	movlb	4	; select bank4
 14389  0B3A  1615               	bsf	21,4	;volatile
 14390  0B3B  0008               	return
 14391  0B3C                     __end_of_I2C1_ISR:	
 14392  0B3C                     __ptext48:	
 14393 ;; *************** function _I2C1_StatusCallback *****************
 14394 ;; Defined at:
 14395 ;;		line 67 in file "i2c_register.c"
 14396 ;; Parameters:    Size  Location     Type
 14397 ;;  i2c_bus_stat    1    wreg     enum E68
 14398 ;; Auto vars:     Size  Location     Type
 14399 ;;  i2c_bus_stat    1    5[BANK0 ] enum E68
 14400 ;; Return value:  Size  Location     Type
 14401 ;;                  1    wreg      void 
 14402 ;; Registers used:
 14403 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14404 ;; Tracked objects:
 14405 ;;		On entry : 1B/4
 14406 ;;		On exit  : 1E/0
 14407 ;;		Unchanged: 0/0
 14408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14410 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14412 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14413 ;;Total ram usage:        1 bytes
 14414 ;; Hardware stack levels used:    1
 14415 ;; Hardware stack levels required when called:    4
 14416 ;; This function calls:
 14417 ;;		_Int2StatusClear
 14418 ;;		_RegisterRead
 14419 ;;		_RegisterWrite
 14420 ;;		_StatusClear
 14421 ;;		i1_ClearInterrupt
 14422 ;; This function is called by:
 14423 ;;		_I2C1_ISR
 14424 ;; This function uses a non-reentrant model
 14425 ;;
 14426                           
 14427                           
 14428                           ;psect for function _I2C1_StatusCallback
 14429  0B3C                     _I2C1_StatusCallback:	
 14430                           
 14431                           ;incstack = 0
 14432                           ; Regs used in _I2C1_StatusCallback: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14433                           ;I2C1_StatusCallback@i2c_bus_state stored from wreg
 14434  0B3C  0020               	movlb	0	; select bank0
 14435  0B3D  00CF               	movwf	I2C1_StatusCallback@i2c_bus_state
 14436                           
 14437                           ;i2c_register.c: 68: static uint8_t slaveWriteType = SLAVE_NORMAL_DATA;;i2c_register.c: 
      +                          70: switch (i2c_bus_state) {
 14438  0B3E  2B73               	goto	i1l5658
 14439  0B3F                     i1l722:	
 14440                           ;i2c_register.c: 71: case I2C1_SLAVE_WRITE_REQUEST:
 14441                           
 14442                           
 14443                           ;i2c_register.c: 73: slaveWriteType = SLAVE_DATA_ADDRESS;
 14444  0B3F  0021               	movlb	1	; select bank1
 14445  0B40  01BF               	clrf	I2C1_StatusCallback@slaveWriteType^(0+128)
 14446  0B41  0ABF               	incf	I2C1_StatusCallback@slaveWriteType^(0+128),f
 14447                           
 14448                           ;i2c_register.c: 74: break;
 14449  0B42  0008               	return
 14450  0B43                     i1l5628:	
 14451                           
 14452                           ;i2c_register.c: 81: EncoderReg = I2C1_slaveWriteData;
 14453  0B43  0020               	movlb	0	; select bank0
 14454  0B44  085F               	movf	_I2C1_slaveWriteData,w	;volatile
 14455  0B45  00B8               	movwf	_EncoderReg	;volatile
 14456                           
 14457                           ;i2c_register.c: 82: break;
 14458  0B46  2B5A               	goto	i1l5638
 14459  0B47                     i1l5630:	
 14460                           
 14461                           ;i2c_register.c: 86: RegisterWrite(EncoderReg, I2C1_slaveWriteData);
 14462  0B47  0020               	movlb	0	; select bank0
 14463  0B48  085F               	movf	_I2C1_slaveWriteData,w	;volatile
 14464  0B49  00CD               	movwf	RegisterWrite@data
 14465  0B4A  0838               	movf	_EncoderReg,w	;volatile
 14466  0B4B  318C  2406  318B   	fcall	_RegisterWrite
 14467                           
 14468                           ;i2c_register.c: 87: EncoderReg++;
 14469  0B4E  0020               	movlb	0	; select bank0
 14470  0B4F  0AB8               	incf	_EncoderReg,f	;volatile
 14471                           
 14472                           ;i2c_register.c: 88: break;
 14473  0B50  2B5A               	goto	i1l5638
 14474  0B51                     i1l5636:	
 14475  0B51  0021               	movlb	1	; select bank1
 14476  0B52  083F               	movf	I2C1_StatusCallback@slaveWriteType^(0+128),w
 14477                           
 14478                           ; Switch size 1, requested type "speed"
 14479                           ; Number of cases is 2, Range of values is 0 to 1
 14480                           ; switch strategies available:
 14481                           ; Name         Instructions Cycles
 14482                           ; simple_byte            7     4 (average)
 14483                           ; direct_byte           10     6 (fixed)
 14484                           ; jumptable            260     6 (fixed)
 14485                           ;	Chosen strategy is simple_byte
 14486  0B53  3A00               	xorlw	0	; case 0
 14487  0B54  1903               	skipnz
 14488  0B55  2B47               	goto	i1l5630
 14489  0B56  3A01               	xorlw	1	; case 1
 14490  0B57  1903               	skipnz
 14491  0B58  2B43               	goto	i1l5628
 14492  0B59  2B47               	goto	i1l5630
 14493  0B5A                     i1l5638:	
 14494                           
 14495                           ;i2c_register.c: 92: slaveWriteType = SLAVE_NORMAL_DATA;
 14496  0B5A  0021               	movlb	1	; select bank1
 14497  0B5B  01BF               	clrf	I2C1_StatusCallback@slaveWriteType^(0+128)
 14498                           
 14499                           ;i2c_register.c: 93: break;
 14500  0B5C  0008               	return
 14501  0B5D                     i1l5640:	
 14502                           
 14503                           ;i2c_register.c: 96: SSP1BUF = RegisterRead(EncoderReg);
 14504  0B5D  0838               	movf	_EncoderReg,w	;volatile
 14505  0B5E  2388               	fcall	_RegisterRead
 14506  0B5F  0024               	movlb	4	; select bank4
 14507  0B60  0091               	movwf	17	;volatile
 14508                           
 14509                           ;i2c_register.c: 97: EncoderReg++;
 14510  0B61  0020               	movlb	0	; select bank0
 14511  0B62  0AB8               	incf	_EncoderReg,f	;volatile
 14512                           
 14513                           ;i2c_register.c: 98: break;
 14514  0B63  0008               	return
 14515  0B64                     i1l5644:	
 14516                           
 14517                           ;i2c_register.c: 101: if (intclear == 1) {
 14518  0B64  0021               	movlb	1	; select bank1
 14519  0B65  0B41               	decfsz	_intclear^(0+128),w	;volatile
 14520  0B66  2B6D               	goto	i1l5650
 14521                           
 14522                           ;i2c_register.c: 102: StatusClear();
 14523  0B67  237E  318B         	fcall	_StatusClear
 14524                           
 14525                           ;i2c_register.c: 103: ClearInterrupt();
 14526  0B69  2382  318B         	fcall	i1_ClearInterrupt
 14527                           
 14528                           ;i2c_register.c: 104: intclear = 0;
 14529  0B6B  0021               	movlb	1	; select bank1
 14530  0B6C  01C1               	clrf	_intclear^(0+128)	;volatile
 14531  0B6D                     i1l5650:	
 14532                           
 14533                           ;i2c_register.c: 105: };i2c_register.c: 107: if (int2clear == 1) {
 14534  0B6D  0B40               	decfsz	_int2clear^(0+128),w	;volatile
 14535  0B6E  0008               	return
 14536                           
 14537                           ;i2c_register.c: 108: Int2StatusClear();
 14538  0B6F  2385               	fcall	_Int2StatusClear
 14539                           
 14540                           ;i2c_register.c: 109: int2clear = 0;
 14541  0B70  0021               	movlb	1	; select bank1
 14542  0B71  01C0               	clrf	_int2clear^(0+128)	;volatile
 14543  0B72  0008               	return
 14544  0B73                     i1l5658:	
 14545  0B73  084F               	movf	I2C1_StatusCallback@i2c_bus_state,w
 14546                           
 14547                           ; Switch size 1, requested type "speed"
 14548                           ; Number of cases is 4, Range of values is 0 to 3
 14549                           ; switch strategies available:
 14550                           ; Name         Instructions Cycles
 14551                           ; direct_byte           14     6 (fixed)
 14552                           ; simple_byte           13     7 (average)
 14553                           ; jumptable            260     6 (fixed)
 14554                           ;	Chosen strategy is direct_byte
 14555  0B74  0084               	movwf	4
 14556  0B75  3004               	movlw	4
 14557  0B76  0204               	subwf	4,w
 14558  0B77  1803               	skipnc
 14559  0B78  0008               	return
 14560  0B79  3190               	movlp	high i1S7758
 14561  0B7A  3504               	lslf	4,w
 14562  0B7B  3E4C               	addlw	low i1S7758
 14563  0B7C  0082               	movwf	2
 14564  0B7D  0008               	return
 14565  0B7E                     __end_of_I2C1_StatusCallback:	
 14566  0B7E                     __ptext50:	
 14567 ;; *************** function _StatusClear *****************
 14568 ;; Defined at:
 14569 ;;		line 118 in file "DataVariable.c"
 14570 ;; Parameters:    Size  Location     Type
 14571 ;;		None
 14572 ;; Auto vars:     Size  Location     Type
 14573 ;;		None
 14574 ;; Return value:  Size  Location     Type
 14575 ;;                  1    wreg      void 
 14576 ;; Registers used:
 14577 ;;		status,2
 14578 ;; Tracked objects:
 14579 ;;		On entry : 1F/1
 14580 ;;		On exit  : 1F/0
 14581 ;;		Unchanged: 0/0
 14582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14587 ;;Total ram usage:        0 bytes
 14588 ;; Hardware stack levels used:    1
 14589 ;; This function calls:
 14590 ;;		Nothing
 14591 ;; This function is called by:
 14592 ;;		_I2C1_StatusCallback
 14593 ;; This function uses a non-reentrant model
 14594 ;;
 14595                           
 14596                           
 14597                           ;psect for function _StatusClear
 14598  0B7E                     _StatusClear:	
 14599                           
 14600                           ;DataVariable.c: 119: NSTATUS.val = 0;
 14601                           
 14602                           ;incstack = 0
 14603                           ; Regs used in _StatusClear: [status,2]
 14604  0B7E  0020               	movlb	0	; select bank0
 14605  0B7F  01B2               	clrf	_NSTATUS	;volatile
 14606  0B80  01B3               	clrf	_NSTATUS+1	;volatile
 14607  0B81  0008               	return
 14608  0B82                     __end_of_StatusClear:	
 14609  0B82                     __ptext49:	
 14610 ;; *************** function i1_ClearInterrupt *****************
 14611 ;; Defined at:
 14612 ;;		line 66 in file "main.c"
 14613 ;; Parameters:    Size  Location     Type
 14614 ;;		None
 14615 ;; Auto vars:     Size  Location     Type
 14616 ;;		None
 14617 ;; Return value:  Size  Location     Type
 14618 ;;                  1    wreg      void 
 14619 ;; Registers used:
 14620 ;;		None
 14621 ;; Tracked objects:
 14622 ;;		On entry : 1F/0
 14623 ;;		On exit  : 1F/2
 14624 ;;		Unchanged: 0/0
 14625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14630 ;;Total ram usage:        0 bytes
 14631 ;; Hardware stack levels used:    1
 14632 ;; This function calls:
 14633 ;;		Nothing
 14634 ;; This function is called by:
 14635 ;;		_I2C1_StatusCallback
 14636 ;; This function uses a non-reentrant model
 14637 ;;
 14638                           
 14639                           
 14640                           ;psect for function i1_ClearInterrupt
 14641  0B82                     i1_ClearInterrupt:	
 14642                           
 14643                           ;incstack = 0
 14644                           ; Regs used in i1_ClearInterrupt: []
 14645                           ;main.c: 67: do { LATBbits.LATB5 = 1; } while(0);
 14646  0B82  0022               	movlb	2	; select bank2
 14647  0B83  168D               	bsf	13,5	;volatile
 14648  0B84  0008               	return
 14649  0B85                     __end_ofi1_ClearInterrupt:	
 14650  0B85                     __ptext72:	
 14651 ;; *************** function _Int2StatusClear *****************
 14652 ;; Defined at:
 14653 ;;		line 125 in file "DataVariable.c"
 14654 ;; Parameters:    Size  Location     Type
 14655 ;;		None
 14656 ;; Auto vars:     Size  Location     Type
 14657 ;;		None
 14658 ;; Return value:  Size  Location     Type
 14659 ;;                  1    wreg      void 
 14660 ;; Registers used:
 14661 ;;		status,2
 14662 ;; Tracked objects:
 14663 ;;		On entry : 1F/1
 14664 ;;		On exit  : 1F/0
 14665 ;;		Unchanged: 0/0
 14666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14671 ;;Total ram usage:        0 bytes
 14672 ;; Hardware stack levels used:    1
 14673 ;; This function calls:
 14674 ;;		Nothing
 14675 ;; This function is called by:
 14676 ;;		_I2C1_StatusCallback
 14677 ;; This function uses a non-reentrant model
 14678 ;;
 14679                           
 14680                           
 14681                           ;psect for function _Int2StatusClear
 14682  0B85                     _Int2StatusClear:	
 14683                           
 14684                           ;DataVariable.c: 126: SSTATUS = 0;
 14685                           
 14686                           ;incstack = 0
 14687                           ; Regs used in _Int2StatusClear: [status,2]
 14688  0B85  0020               	movlb	0	; select bank0
 14689  0B86  01C5               	clrf	_SSTATUS	;volatile
 14690  0B87  0008               	return
 14691  0B88                     __end_of_Int2StatusClear:	
 14692  0B88                     __ptext70:	
 14693 ;; *************** function _RegisterRead *****************
 14694 ;; Defined at:
 14695 ;;		line 288 in file "i2c_register.c"
 14696 ;; Parameters:    Size  Location     Type
 14697 ;;  add             1    wreg     unsigned char 
 14698 ;; Auto vars:     Size  Location     Type
 14699 ;;  add             1    1[COMMON] unsigned char 
 14700 ;;  return_value    1    2[COMMON] unsigned char 
 14701 ;; Return value:  Size  Location     Type
 14702 ;;                  1    wreg      unsigned char 
 14703 ;; Registers used:
 14704 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14705 ;; Tracked objects:
 14706 ;;		On entry : 1F/0
 14707 ;;		On exit  : E/0
 14708 ;;		Unchanged: 0/0
 14709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14711 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14713 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14714 ;;Total ram usage:        2 bytes
 14715 ;; Hardware stack levels used:    1
 14716 ;; Hardware stack levels required when called:    1
 14717 ;; This function calls:
 14718 ;;		_eeprom_read
 14719 ;; This function is called by:
 14720 ;;		_I2C1_StatusCallback
 14721 ;; This function uses a non-reentrant model
 14722 ;;
 14723                           
 14724                           
 14725                           ;psect for function _RegisterRead
 14726  0B88                     _RegisterRead:	
 14727                           
 14728                           ;incstack = 0
 14729                           ; Regs used in _RegisterRead: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14730                           ;RegisterRead@add stored from wreg
 14731  0B88  00F1               	movwf	RegisterRead@add
 14732                           
 14733                           ;i2c_register.c: 291: switch (add) {
 14734  0B89  2BDD               	goto	i1l5238
 14735  0B8A                     i1l5162:	
 14736                           
 14737                           ;i2c_register.c: 293: return_value = GCONF;
 14738  0B8A  0849               	movf	_GCONF,w	;volatile
 14739  0B8B  2BD9               	goto	L43
 14740  0B8C                     i1l5164:	
 14741                           ;i2c_register.c: 294: break;
 14742                           
 14743                           
 14744                           ;i2c_register.c: 297: return_value = GP1CONF;
 14745  0B8C  0848               	movf	_GP1CONF,w	;volatile
 14746  0B8D  2BD9               	goto	L43
 14747  0B8E                     i1l5166:	
 14748                           ;i2c_register.c: 298: break;
 14749                           
 14750                           
 14751                           ;i2c_register.c: 301: return_value = GP2CONF;
 14752  0B8E  0847               	movf	_GP2CONF,w	;volatile
 14753  0B8F  2BD9               	goto	L43
 14754  0B90                     i1l5168:	
 14755                           ;i2c_register.c: 302: break;
 14756                           
 14757                           
 14758                           ;i2c_register.c: 305: return_value = GP3CONF;
 14759  0B90  0846               	movf	_GP3CONF,w	;volatile
 14760  0B91  2BD9               	goto	L43
 14761  0B92                     i1l5170:	
 14762                           ;i2c_register.c: 306: break;
 14763                           
 14764                           
 14765                           ;i2c_register.c: 309: return_value = INTCONF.bval[1];
 14766  0B92  0831               	movf	_INTCONF+1,w	;volatile
 14767  0B93  2BD9               	goto	L43
 14768  0B94                     i1l5172:	
 14769                           ;i2c_register.c: 310: break;
 14770                           
 14771                           
 14772                           ;i2c_register.c: 313: return_value = INTCONF.bval[0];
 14773  0B94  0830               	movf	_INTCONF,w	;volatile
 14774  0B95  2BD9               	goto	L43
 14775  0B96                     i1l5174:	
 14776                           ;i2c_register.c: 314: break;
 14777                           
 14778                           
 14779                           ;i2c_register.c: 317: return_value = NSTATUS.bval[1];
 14780  0B96  0833               	movf	_NSTATUS+1,w	;volatile
 14781  0B97  2B99               	goto	L17
 14782  0B98                     i1l5176:	
 14783                           ;i2c_register.c: 319: break;
 14784                           
 14785                           ;i2c_register.c: 318: intclear = 1;
 14786                           
 14787                           
 14788                           ;i2c_register.c: 322: return_value = NSTATUS.bval[0];
 14789  0B98  0832               	movf	_NSTATUS,w	;volatile
 14790  0B99                     L17:	
 14791  0B99  00F2               	movwf	RegisterRead@return_value
 14792                           
 14793                           ;i2c_register.c: 323: intclear = 1;
 14794  0B9A  3001               	movlw	1
 14795  0B9B  0021               	movlb	1	; select bank1
 14796  0B9C  00C1               	movwf	_intclear^(0+128)	;volatile
 14797                           
 14798                           ;i2c_register.c: 324: break;
 14799  0B9D  2BE7               	goto	i1l5240
 14800  0B9E                     i1l5178:	
 14801                           
 14802                           ;i2c_register.c: 327: return_value = SSTATUS;
 14803  0B9E  0845               	movf	_SSTATUS,w	;volatile
 14804  0B9F  00F2               	movwf	RegisterRead@return_value
 14805                           
 14806                           ;i2c_register.c: 328: int2clear = 1;
 14807  0BA0  3001               	movlw	1
 14808  0BA1  0021               	movlb	1	; select bank1
 14809  0BA2  00C0               	movwf	_int2clear^(0+128)	;volatile
 14810                           
 14811                           ;i2c_register.c: 329: break;
 14812  0BA3  2BE7               	goto	i1l5240
 14813  0BA4                     i1l5180:	
 14814                           
 14815                           ;i2c_register.c: 332: return_value = FSTATUS;
 14816  0BA4  0844               	movf	_FSTATUS,w	;volatile
 14817  0BA5  2BD9               	goto	L43
 14818  0BA6                     i1l5182:	
 14819                           ;i2c_register.c: 333: break;
 14820                           
 14821                           
 14822                           ;i2c_register.c: 337: return_value = CVAL.bval[3];
 14823  0BA6  082F               	movf	_CVAL+3,w	;volatile
 14824  0BA7  2BD9               	goto	L43
 14825  0BA8                     i1l5184:	
 14826                           ;i2c_register.c: 338: break;
 14827                           
 14828                           
 14829                           ;i2c_register.c: 340: return_value = CVAL.bval[2];
 14830  0BA8  082E               	movf	_CVAL+2,w	;volatile
 14831  0BA9  2BD9               	goto	L43
 14832  0BAA                     i1l5186:	
 14833                           ;i2c_register.c: 341: break;
 14834                           
 14835                           
 14836                           ;i2c_register.c: 343: return_value = CVAL.bval[1];
 14837  0BAA  082D               	movf	_CVAL+1,w	;volatile
 14838  0BAB  2BD9               	goto	L43
 14839  0BAC                     i1l5188:	
 14840                           ;i2c_register.c: 344: break;
 14841                           
 14842                           
 14843                           ;i2c_register.c: 346: return_value = CVAL.bval[0];
 14844  0BAC  082C               	movf	_CVAL,w	;volatile
 14845  0BAD  2BD9               	goto	L43
 14846  0BAE                     i1l5190:	
 14847                           ;i2c_register.c: 347: break;
 14848                           
 14849                           
 14850                           ;i2c_register.c: 351: return_value = CMAX.bval[3];
 14851  0BAE  082B               	movf	_CMAX+3,w	;volatile
 14852  0BAF  2BD9               	goto	L43
 14853  0BB0                     i1l5192:	
 14854                           ;i2c_register.c: 352: break;
 14855                           
 14856                           
 14857                           ;i2c_register.c: 354: return_value = CMAX.bval[2];
 14858  0BB0  082A               	movf	_CMAX+2,w	;volatile
 14859  0BB1  2BD9               	goto	L43
 14860  0BB2                     i1l5194:	
 14861                           ;i2c_register.c: 355: break;
 14862                           
 14863                           
 14864                           ;i2c_register.c: 357: return_value = CMAX.bval[1];
 14865  0BB2  0829               	movf	_CMAX+1,w	;volatile
 14866  0BB3  2BD9               	goto	L43
 14867  0BB4                     i1l5196:	
 14868                           ;i2c_register.c: 358: break;
 14869                           
 14870                           
 14871                           ;i2c_register.c: 360: return_value = CMAX.bval[0];
 14872  0BB4  0828               	movf	_CMAX,w	;volatile
 14873  0BB5  2BD9               	goto	L43
 14874  0BB6                     i1l5198:	
 14875                           ;i2c_register.c: 361: break;
 14876                           
 14877                           
 14878                           ;i2c_register.c: 365: return_value = CMIN.bval[3];
 14879  0BB6  0827               	movf	_CMIN+3,w	;volatile
 14880  0BB7  2BD9               	goto	L43
 14881  0BB8                     i1l5200:	
 14882                           ;i2c_register.c: 366: break;
 14883                           
 14884                           
 14885                           ;i2c_register.c: 368: return_value = CMIN.bval[2];
 14886  0BB8  0826               	movf	_CMIN+2,w	;volatile
 14887  0BB9  2BD9               	goto	L43
 14888  0BBA                     i1l5202:	
 14889                           ;i2c_register.c: 369: break;
 14890                           
 14891                           
 14892                           ;i2c_register.c: 371: return_value = CMIN.bval[1];
 14893  0BBA  0825               	movf	_CMIN+1,w	;volatile
 14894  0BBB  2BD9               	goto	L43
 14895  0BBC                     i1l5204:	
 14896                           ;i2c_register.c: 372: break;
 14897                           
 14898                           
 14899                           ;i2c_register.c: 374: return_value = CMIN.bval[0];
 14900  0BBC  0824               	movf	_CMIN,w	;volatile
 14901  0BBD  2BD9               	goto	L43
 14902  0BBE                     i1l5206:	
 14903                           ;i2c_register.c: 375: break;
 14904                           
 14905                           
 14906                           ;i2c_register.c: 379: return_value = ISTEP.bval[3];
 14907  0BBE  0823               	movf	_ISTEP+3,w	;volatile
 14908  0BBF  2BD9               	goto	L43
 14909  0BC0                     i1l5208:	
 14910                           ;i2c_register.c: 380: break;
 14911                           
 14912                           
 14913                           ;i2c_register.c: 382: return_value = ISTEP.bval[2];
 14914  0BC0  0822               	movf	_ISTEP+2,w	;volatile
 14915  0BC1  2BD9               	goto	L43
 14916  0BC2                     i1l5210:	
 14917                           ;i2c_register.c: 383: break;
 14918                           
 14919                           
 14920                           ;i2c_register.c: 385: return_value = ISTEP.bval[1];
 14921  0BC2  0821               	movf	_ISTEP+1,w	;volatile
 14922  0BC3  2BD9               	goto	L43
 14923  0BC4                     i1l5212:	
 14924                           ;i2c_register.c: 386: break;
 14925                           
 14926                           
 14927                           ;i2c_register.c: 388: return_value = ISTEP.bval[0];
 14928  0BC4  0820               	movf	_ISTEP,w	;volatile
 14929  0BC5  2BD9               	goto	L43
 14930  0BC6                     i1l5214:	
 14931                           ;i2c_register.c: 389: break;
 14932                           
 14933                           
 14934                           ;i2c_register.c: 392: return_value = GP1REG;
 14935  0BC6  0843               	movf	_GP1REG,w	;volatile
 14936  0BC7  2BD9               	goto	L43
 14937  0BC8                     i1l5216:	
 14938                           ;i2c_register.c: 393: break;
 14939                           
 14940                           
 14941                           ;i2c_register.c: 396: return_value = GP2REG;
 14942  0BC8  0842               	movf	_GP2REG,w	;volatile
 14943  0BC9  2BD9               	goto	L43
 14944  0BCA                     i1l5218:	
 14945                           ;i2c_register.c: 397: break;
 14946                           
 14947                           
 14948                           ;i2c_register.c: 400: return_value = GP3REG;
 14949  0BCA  0841               	movf	_GP3REG,w	;volatile
 14950  0BCB  2BD9               	goto	L43
 14951  0BCC                     i1l5220:	
 14952                           ;i2c_register.c: 401: break;
 14953                           
 14954                           
 14955                           ;i2c_register.c: 404: return_value = DPPERIOD;
 14956  0BCC  0840               	movf	_DPPERIOD,w	;volatile
 14957  0BCD  2BD9               	goto	L43
 14958  0BCE                     i1l5222:	
 14959                           ;i2c_register.c: 405: break;
 14960                           
 14961                           
 14962                           ;i2c_register.c: 408: return_value = FADEGP;
 14963  0BCE  083F               	movf	_FADEGP,w	;volatile
 14964  0BCF  2BD9               	goto	L43
 14965  0BD0                     i1l5224:	
 14966                           ;i2c_register.c: 409: break;
 14967                           
 14968                           
 14969                           ;i2c_register.c: 412: return_value = GAMMAGP1;
 14970  0BD0  083E               	movf	_GAMMAGP1,w	;volatile
 14971  0BD1  2BD9               	goto	L43
 14972  0BD2                     i1l5226:	
 14973                           ;i2c_register.c: 413: break;
 14974                           
 14975                           
 14976                           ;i2c_register.c: 416: return_value = GAMMAGP2;
 14977  0BD2  083D               	movf	_GAMMAGP2,w	;volatile
 14978  0BD3  2BD9               	goto	L43
 14979  0BD4                     i1l5228:	
 14980                           ;i2c_register.c: 417: break;
 14981                           
 14982                           
 14983                           ;i2c_register.c: 420: return_value = GAMMAGP3;
 14984  0BD4  083C               	movf	_GAMMAGP3,w	;volatile
 14985  0BD5  2BD9               	goto	L43
 14986  0BD6                     i1l5230:	
 14987                           ;i2c_register.c: 421: break;
 14988                           
 14989                           
 14990                           ;i2c_register.c: 424: return_value = 0x5B;
 14991  0BD6  305B               	movlw	91
 14992  0BD7  2BD9               	goto	L43
 14993  0BD8                     i1l5232:	
 14994                           ;i2c_register.c: 425: break;
 14995                           
 14996                           
 14997                           ;i2c_register.c: 428: return_value = 0x11;
 14998  0BD8  3011               	movlw	17
 14999  0BD9                     L43:	
 15000  0BD9  00F2               	movwf	RegisterRead@return_value
 15001                           
 15002                           ;i2c_register.c: 429: break;
 15003  0BDA  2BE7               	goto	i1l5240
 15004  0BDB                     i1l5234:	
 15005                           
 15006                           ;i2c_register.c: 432: return_value = 0;
 15007  0BDB  01F2               	clrf	RegisterRead@return_value
 15008                           
 15009                           ;i2c_register.c: 433: break;
 15010  0BDC  2BE7               	goto	i1l5240
 15011  0BDD                     i1l5238:	
 15012  0BDD  0871               	movf	RegisterRead@add,w
 15013                           
 15014                           ; Switch size 1, requested type "speed"
 15015                           ; Number of cases is 36, Range of values is 0 to 113
 15016                           ; switch strategies available:
 15017                           ; Name         Instructions Cycles
 15018                           ; direct_byte          234     6 (fixed)
 15019                           ; simple_byte          109    55 (average)
 15020                           ; jumptable            260     6 (fixed)
 15021                           ;	Chosen strategy is direct_byte
 15022  0BDE  0084               	movwf	4
 15023  0BDF  3072               	movlw	114
 15024  0BE0  0204               	subwf	4,w
 15025  0BE1  1803               	skipnc
 15026  0BE2  2BDB               	goto	i1l5234
 15027  0BE3  318A               	movlp	high i1S7780
 15028  0BE4  3504               	lslf	4,w
 15029  0BE5  3E00               	addlw	low i1S7780
 15030  0BE6  0082               	movwf	2
 15031  0BE7                     i1l5240:	
 15032                           
 15033                           ;i2c_register.c: 436: if (add >= REG_EEPROMS) {
 15034  0BE7  3080               	movlw	128
 15035  0BE8  0271               	subwf	RegisterRead@add,w
 15036  0BE9  1C03               	skipc
 15037  0BEA  2BF5               	goto	i1l5248
 15038                           
 15039                           ;i2c_register.c: 437: if (C_MBANK == 0) {
 15040  0BEB  0020               	movlb	0	; select bank0
 15041  0BEC  083B               	movf	_C_MBANK,w	;volatile
 15042  0BED  1D03               	btfss	3,2
 15043  0BEE  2BF2               	goto	i1l5246
 15044                           
 15045                           ;i2c_register.c: 438: return_value = eeprom_read((uint8_t) (add - REG_EEPROMS));
 15046  0BEF  0871               	movf	RegisterRead@add,w
 15047  0BF0  3E80               	addlw	128
 15048  0BF1  2BF3               	goto	L44
 15049  0BF2                     i1l5246:	
 15050                           ;i2c_register.c: 439: } else {
 15051                           
 15052                           
 15053                           ;i2c_register.c: 440: return_value = eeprom_read(add);
 15054  0BF2  0871               	movf	RegisterRead@add,w
 15055  0BF3                     L44:	
 15056  0BF3  23F7               	fcall	_eeprom_read
 15057  0BF4  00F2               	movwf	RegisterRead@return_value
 15058  0BF5                     i1l5248:	
 15059                           
 15060                           ;i2c_register.c: 441: };i2c_register.c: 442: };i2c_register.c: 443: return return_value;
 15061  0BF5  0872               	movf	RegisterRead@return_value,w
 15062  0BF6  0008               	return
 15063  0BF7                     __end_of_RegisterRead:	
 15064  0BF7                     __ptext71:	
 15065 ;; *************** function _eeprom_read *****************
 15066 ;; Defined at:
 15067 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\pic\__eeread.c"
 15068 ;; Parameters:    Size  Location     Type
 15069 ;;  addr            1    wreg     unsigned char 
 15070 ;; Auto vars:     Size  Location     Type
 15071 ;;  addr            1    0[COMMON] unsigned char 
 15072 ;; Return value:  Size  Location     Type
 15073 ;;                  1    wreg      unsigned char 
 15074 ;; Registers used:
 15075 ;;		wreg
 15076 ;; Tracked objects:
 15077 ;;		On entry : 1F/0
 15078 ;;		On exit  : 1F/11
 15079 ;;		Unchanged: 0/0
 15080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15082 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15084 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15085 ;;Total ram usage:        1 bytes
 15086 ;; Hardware stack levels used:    1
 15087 ;; This function calls:
 15088 ;;		Nothing
 15089 ;; This function is called by:
 15090 ;;		_RegisterRead
 15091 ;; This function uses a non-reentrant model
 15092 ;;
 15093                           
 15094                           
 15095                           ;psect for function _eeprom_read
 15096  0BF7                     _eeprom_read:	
 15097                           
 15098                           ;incstack = 0
 15099                           ; Regs used in _eeprom_read: [wreg]
 15100                           ;eeprom_read@addr stored from wreg
 15101  0BF7  00F0               	movwf	eeprom_read@addr
 15102  0BF8  2BFA               	goto	i1l1525
 15103  0BF9                     u237_21:	
 15104  0BF9  0020               	movlb	0	; select bank0
 15105  0BFA                     i1l1525:	
 15106                           ;__eeread.c: 8: do
 15107                           
 15108  0BFA  0064               	clrwdt	;# 
 15109                           
 15110                           ;__eeread.c: 14: while (NVMCON1bits.WR);
 15111  0BFB  0031               	movlb	17	; select bank17
 15112  0BFC  1895               	btfsc	21,1	;volsfr
 15113  0BFD  2BF9               	goto	u237_21
 15114                           
 15115                           ;__eeread.c: 18: return ( NVMCON1bits.NVMREGS = 1, NVMADRL = (addr) & 0xFFU, NVMADRH = 0
      +                          x70, NVMCON1bits.RD = 1, NVMDATL);
 15116  0BFE  1715               	bsf	21,6	;volsfr
 15117  0BFF  0870               	movf	eeprom_read@addr,w
 15118  0C00  0091               	movwf	17	;volatile
 15119  0C01  3070               	movlw	112
 15120  0C02  0092               	movwf	18	;volatile
 15121  0C03  1415               	bsf	21,0	;volsfr
 15122  0C04  0813               	movf	19,w	;volatile
 15123  0C05  0008               	return
 15124  0C06                     __end_of_eeprom_read:	
 15125                           
 15126                           	psect	swtext5
 15127  104C                     __pswtext5:	
 15128  104C                     i1S7758:	
 15129  104C  318B  2B3F         	ljmp	i1l722
 15130  104E  318B  2B5D         	ljmp	i1l5640
 15131  1050  318B  2B51         	ljmp	i1l5636
 15132  1052  318B  2B64         	ljmp	i1l5644
 15133                           
 15134                           	psect	text51
 15135  0C06                     __ptext51:	
 15136 ;; *************** function _RegisterWrite *****************
 15137 ;; Defined at:
 15138 ;;		line 126 in file "i2c_register.c"
 15139 ;; Parameters:    Size  Location     Type
 15140 ;;  add             1    wreg     unsigned char 
 15141 ;;  data            1    3[BANK0 ] unsigned char 
 15142 ;; Auto vars:     Size  Location     Type
 15143 ;;  add             1    4[BANK0 ] unsigned char 
 15144 ;; Return value:  Size  Location     Type
 15145 ;;                  1    wreg      void 
 15146 ;; Registers used:
 15147 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15148 ;; Tracked objects:
 15149 ;;		On entry : 1F/0
 15150 ;;		On exit  : E/0
 15151 ;;		Unchanged: 0/0
 15152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15153 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15154 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15156 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15157 ;;Total ram usage:        2 bytes
 15158 ;; Hardware stack levels used:    1
 15159 ;; Hardware stack levels required when called:    3
 15160 ;; This function calls:
 15161 ;;		_Config_GP1
 15162 ;;		_Config_GP2
 15163 ;;		_Config_GP3
 15164 ;;		_GeneralDataSet
 15165 ;;		_GeneralDataSplit
 15166 ;;		_UpdateOut_GP1
 15167 ;;		_UpdateOut_GP2
 15168 ;;		_UpdateOut_GP3
 15169 ;;		_eeprom_write
 15170 ;;		i1___wmul
 15171 ;; This function is called by:
 15172 ;;		_I2C1_StatusCallback
 15173 ;; This function uses a non-reentrant model
 15174 ;;
 15175                           
 15176                           
 15177                           ;psect for function _RegisterWrite
 15178  0C06                     _RegisterWrite:	
 15179                           
 15180                           ;incstack = 0
 15181                           ; Regs used in _RegisterWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15182                           ;RegisterWrite@add stored from wreg
 15183  0C06  00CE               	movwf	RegisterWrite@add
 15184                           
 15185                           ;i2c_register.c: 128: switch (add) {
 15186  0C07  2CB1               	goto	i1l5144
 15187  0C08                     i1l5048:	
 15188                           
 15189                           ;i2c_register.c: 130: GCONF = data;
 15190  0C08  084D               	movf	RegisterWrite@data,w
 15191  0C09  00C9               	movwf	_GCONF	;volatile
 15192                           
 15193                           ;i2c_register.c: 131: GeneralDataSplit();
 15194  0C0A  27C6               	fcall	_GeneralDataSplit
 15195                           
 15196                           ;i2c_register.c: 132: GeneralDataSet();
 15197  0C0B  3192  22EF  318C   	fcall	_GeneralDataSet
 15198                           
 15199                           ;i2c_register.c: 133: break;
 15200  0C0E  2CBB               	goto	i1l5146
 15201  0C0F                     i1l5054:	
 15202                           
 15203                           ;i2c_register.c: 136: GP1CONF = data;
 15204  0C0F  084D               	movf	RegisterWrite@data,w
 15205  0C10  00C8               	movwf	_GP1CONF	;volatile
 15206                           
 15207                           ;i2c_register.c: 137: Config_GP1();
 15208  0C11  24CE  318C         	fcall	_Config_GP1
 15209                           
 15210                           ;i2c_register.c: 138: break;
 15211  0C13  2CBB               	goto	i1l5146
 15212  0C14                     i1l5058:	
 15213                           
 15214                           ;i2c_register.c: 141: GP2CONF = data;
 15215  0C14  084D               	movf	RegisterWrite@data,w
 15216  0C15  00C7               	movwf	_GP2CONF	;volatile
 15217                           
 15218                           ;i2c_register.c: 142: Config_GP2();
 15219  0C16  26D5  318C         	fcall	_Config_GP2
 15220                           
 15221                           ;i2c_register.c: 143: break;
 15222  0C18  2CBB               	goto	i1l5146
 15223  0C19                     i1l5062:	
 15224                           
 15225                           ;i2c_register.c: 146: GP3CONF = data;
 15226  0C19  084D               	movf	RegisterWrite@data,w
 15227  0C1A  00C6               	movwf	_GP3CONF	;volatile
 15228                           
 15229                           ;i2c_register.c: 147: Config_GP3();
 15230  0C1B  274D  318C         	fcall	_Config_GP3
 15231                           
 15232                           ;i2c_register.c: 148: break;
 15233  0C1D  2CBB               	goto	i1l5146
 15234  0C1E                     i1l5066:	
 15235                           
 15236                           ;i2c_register.c: 151: INTCONF.bval[1] = data;
 15237  0C1E  084D               	movf	RegisterWrite@data,w
 15238  0C1F  00B1               	movwf	_INTCONF+1	;volatile
 15239                           
 15240                           ;i2c_register.c: 152: break;
 15241  0C20  2CBB               	goto	i1l5146
 15242  0C21                     i1l5068:	
 15243                           
 15244                           ;i2c_register.c: 155: INTCONF.bval[0] = data;
 15245  0C21  084D               	movf	RegisterWrite@data,w
 15246  0C22  00B0               	movwf	_INTCONF	;volatile
 15247                           
 15248                           ;i2c_register.c: 156: break;
 15249  0C23  2CBB               	goto	i1l5146
 15250  0C24                     i1l5070:	
 15251                           
 15252                           ;i2c_register.c: 160: CVAL.bval[3] = data;
 15253  0C24  084D               	movf	RegisterWrite@data,w
 15254  0C25  00AF               	movwf	_CVAL+3	;volatile
 15255                           
 15256                           ;i2c_register.c: 161: break;
 15257  0C26  2CBB               	goto	i1l5146
 15258  0C27                     i1l5072:	
 15259                           
 15260                           ;i2c_register.c: 163: CVAL.bval[2] = data;
 15261  0C27  084D               	movf	RegisterWrite@data,w
 15262  0C28  00AE               	movwf	_CVAL+2	;volatile
 15263                           
 15264                           ;i2c_register.c: 164: break;
 15265  0C29  2CBB               	goto	i1l5146
 15266  0C2A                     i1l5074:	
 15267                           
 15268                           ;i2c_register.c: 166: CVAL.bval[1] = data;
 15269  0C2A  084D               	movf	RegisterWrite@data,w
 15270  0C2B  00AD               	movwf	_CVAL+1	;volatile
 15271                           
 15272                           ;i2c_register.c: 167: break;
 15273  0C2C  2CBB               	goto	i1l5146
 15274  0C2D                     i1l5076:	
 15275                           
 15276                           ;i2c_register.c: 169: CVAL.bval[0] = data;
 15277  0C2D  084D               	movf	RegisterWrite@data,w
 15278  0C2E  00AC               	movwf	_CVAL	;volatile
 15279                           
 15280                           ;i2c_register.c: 170: break;
 15281  0C2F  2CBB               	goto	i1l5146
 15282  0C30                     i1l5078:	
 15283                           
 15284                           ;i2c_register.c: 174: CMAX.bval[3] = data;
 15285  0C30  084D               	movf	RegisterWrite@data,w
 15286  0C31  00AB               	movwf	_CMAX+3	;volatile
 15287                           
 15288                           ;i2c_register.c: 175: break;
 15289  0C32  2CBB               	goto	i1l5146
 15290  0C33                     i1l5080:	
 15291                           
 15292                           ;i2c_register.c: 177: CMAX.bval[2] = data;
 15293  0C33  084D               	movf	RegisterWrite@data,w
 15294  0C34  00AA               	movwf	_CMAX+2	;volatile
 15295                           
 15296                           ;i2c_register.c: 178: break;
 15297  0C35  2CBB               	goto	i1l5146
 15298  0C36                     i1l5082:	
 15299                           
 15300                           ;i2c_register.c: 180: CMAX.bval[1] = data;
 15301  0C36  084D               	movf	RegisterWrite@data,w
 15302  0C37  00A9               	movwf	_CMAX+1	;volatile
 15303                           
 15304                           ;i2c_register.c: 181: break;
 15305  0C38  2CBB               	goto	i1l5146
 15306  0C39                     i1l5084:	
 15307                           
 15308                           ;i2c_register.c: 183: CMAX.bval[0] = data;
 15309  0C39  084D               	movf	RegisterWrite@data,w
 15310  0C3A  00A8               	movwf	_CMAX	;volatile
 15311                           
 15312                           ;i2c_register.c: 184: break;
 15313  0C3B  2CBB               	goto	i1l5146
 15314  0C3C                     i1l5086:	
 15315                           
 15316                           ;i2c_register.c: 188: CMIN.bval[3] = data;
 15317  0C3C  084D               	movf	RegisterWrite@data,w
 15318  0C3D  00A7               	movwf	_CMIN+3	;volatile
 15319                           
 15320                           ;i2c_register.c: 189: break;
 15321  0C3E  2CBB               	goto	i1l5146
 15322  0C3F                     i1l5088:	
 15323                           
 15324                           ;i2c_register.c: 191: CMIN.bval[2] = data;
 15325  0C3F  084D               	movf	RegisterWrite@data,w
 15326  0C40  00A6               	movwf	_CMIN+2	;volatile
 15327                           
 15328                           ;i2c_register.c: 192: break;
 15329  0C41  2CBB               	goto	i1l5146
 15330  0C42                     i1l5090:	
 15331                           
 15332                           ;i2c_register.c: 194: CMIN.bval[1] = data;
 15333  0C42  084D               	movf	RegisterWrite@data,w
 15334  0C43  00A5               	movwf	_CMIN+1	;volatile
 15335                           
 15336                           ;i2c_register.c: 195: break;
 15337  0C44  2CBB               	goto	i1l5146
 15338  0C45                     i1l5092:	
 15339                           
 15340                           ;i2c_register.c: 197: CMIN.bval[0] = data;
 15341  0C45  084D               	movf	RegisterWrite@data,w
 15342  0C46  00A4               	movwf	_CMIN	;volatile
 15343                           
 15344                           ;i2c_register.c: 198: break;
 15345  0C47  2CBB               	goto	i1l5146
 15346  0C48                     i1l5094:	
 15347                           
 15348                           ;i2c_register.c: 202: ISTEP.bval[3] = data;
 15349  0C48  084D               	movf	RegisterWrite@data,w
 15350  0C49  00A3               	movwf	_ISTEP+3	;volatile
 15351                           
 15352                           ;i2c_register.c: 203: break;
 15353  0C4A  2CBB               	goto	i1l5146
 15354  0C4B                     i1l5096:	
 15355                           
 15356                           ;i2c_register.c: 205: ISTEP.bval[2] = data;
 15357  0C4B  084D               	movf	RegisterWrite@data,w
 15358  0C4C  00A2               	movwf	_ISTEP+2	;volatile
 15359                           
 15360                           ;i2c_register.c: 206: break;
 15361  0C4D  2CBB               	goto	i1l5146
 15362  0C4E                     i1l5098:	
 15363                           
 15364                           ;i2c_register.c: 208: ISTEP.bval[1] = data;
 15365  0C4E  084D               	movf	RegisterWrite@data,w
 15366  0C4F  00A1               	movwf	_ISTEP+1	;volatile
 15367                           
 15368                           ;i2c_register.c: 209: break;
 15369  0C50  2CBB               	goto	i1l5146
 15370  0C51                     i1l5100:	
 15371                           
 15372                           ;i2c_register.c: 211: ISTEP.bval[0] = data;
 15373  0C51  084D               	movf	RegisterWrite@data,w
 15374  0C52  00A0               	movwf	_ISTEP	;volatile
 15375                           
 15376                           ;i2c_register.c: 212: break;
 15377  0C53  2CBB               	goto	i1l5146
 15378  0C54                     i1l5102:	
 15379                           
 15380                           ;i2c_register.c: 216: GP1REG = data;
 15381  0C54  084D               	movf	RegisterWrite@data,w
 15382  0C55  00C3               	movwf	_GP1REG	;volatile
 15383                           
 15384                           ;i2c_register.c: 217: if (GP1REG > 100)
 15385  0C56  3065               	movlw	101
 15386  0C57  0243               	subwf	_GP1REG,w	;volatile
 15387  0C58  1C03               	skipc
 15388  0C59  2C5C               	goto	i1l5106
 15389                           
 15390                           ;i2c_register.c: 218: GP1REG = 100;
 15391  0C5A  3064               	movlw	100
 15392  0C5B  00C3               	movwf	_GP1REG	;volatile
 15393  0C5C                     i1l5106:	
 15394                           
 15395                           ;i2c_register.c: 219: UpdateOut_GP1();
 15396  0C5C  3192  227F  318C   	fcall	_UpdateOut_GP1
 15397                           
 15398                           ;i2c_register.c: 220: break;
 15399  0C5F  2CBB               	goto	i1l5146
 15400  0C60                     i1l5108:	
 15401                           
 15402                           ;i2c_register.c: 223: GP2REG = data;
 15403  0C60  084D               	movf	RegisterWrite@data,w
 15404  0C61  00C2               	movwf	_GP2REG	;volatile
 15405                           
 15406                           ;i2c_register.c: 224: if (GP2REG > 100)
 15407  0C62  3065               	movlw	101
 15408  0C63  0242               	subwf	_GP2REG,w	;volatile
 15409  0C64  1C03               	skipc
 15410  0C65  2C68               	goto	i1l5112
 15411                           
 15412                           ;i2c_register.c: 225: GP2REG = 100;
 15413  0C66  3064               	movlw	100
 15414  0C67  00C2               	movwf	_GP2REG	;volatile
 15415  0C68                     i1l5112:	
 15416                           
 15417                           ;i2c_register.c: 226: UpdateOut_GP2();
 15418  0C68  3192  229B  318C   	fcall	_UpdateOut_GP2
 15419                           
 15420                           ;i2c_register.c: 227: break;
 15421  0C6B  2CBB               	goto	i1l5146
 15422  0C6C                     i1l5114:	
 15423                           
 15424                           ;i2c_register.c: 230: GP3REG = data;
 15425  0C6C  084D               	movf	RegisterWrite@data,w
 15426  0C6D  00C1               	movwf	_GP3REG	;volatile
 15427                           
 15428                           ;i2c_register.c: 231: if (GP3REG > 100)
 15429  0C6E  3065               	movlw	101
 15430  0C6F  0241               	subwf	_GP3REG,w	;volatile
 15431  0C70  1C03               	skipc
 15432  0C71  2C74               	goto	i1l5118
 15433                           
 15434                           ;i2c_register.c: 232: GP3REG = 100;
 15435  0C72  3064               	movlw	100
 15436  0C73  00C1               	movwf	_GP3REG	;volatile
 15437  0C74                     i1l5118:	
 15438                           
 15439                           ;i2c_register.c: 233: UpdateOut_GP3();
 15440  0C74  3192  22B7  318C   	fcall	_UpdateOut_GP3
 15441                           
 15442                           ;i2c_register.c: 234: break;
 15443  0C77  2CBB               	goto	i1l5146
 15444  0C78                     i1l5120:	
 15445                           
 15446                           ;i2c_register.c: 239: DPPERIOD = data;
 15447  0C78  084D               	movf	RegisterWrite@data,w
 15448  0C79  00C0               	movwf	_DPPERIOD	;volatile
 15449                           
 15450                           ;i2c_register.c: 240: DoublePush = ((uint16_t) DPPERIOD * 10);
 15451  0C7A  0840               	movf	_DPPERIOD,w	;volatile
 15452  0C7B  00F0               	movwf	i1___wmul@multiplier
 15453  0C7C  300A               	movlw	10
 15454  0C7D  01F1               	clrf	i1___wmul@multiplier+1
 15455  0C7E  00F2               	movwf	i1___wmul@multiplicand
 15456  0C7F  01F3               	clrf	i1___wmul@multiplicand+1
 15457  0C80  26B4  318C         	fcall	i1___wmul
 15458  0C82  0871               	movf	?i1___wmul+1,w
 15459  0C83  0021               	movlb	1	; select bank1
 15460  0C84  00B4               	movwf	(_DoublePush+1)^(0+128)	;volatile
 15461  0C85  0870               	movf	?i1___wmul,w
 15462  0C86  00B3               	movwf	_DoublePush^(0+128)	;volatile
 15463                           
 15464                           ;i2c_register.c: 241: if (DoublePush > 5) {
 15465  0C87  3000               	movlw	0
 15466  0C88  0234               	subwf	(_DoublePush+1)^(0+128),w	;volatile
 15467  0C89  3006               	movlw	6
 15468  0C8A  1903               	skipnz
 15469  0C8B  0233               	subwf	_DoublePush^(0+128),w	;volatile
 15470  0C8C  1C03               	skipc
 15471  0C8D  2CBB               	goto	i1l5146
 15472                           
 15473                           ;i2c_register.c: 242: DoublePush = DoublePush - 5;
 15474  0C8E  30FB               	movlw	251
 15475  0C8F  07B3               	addwf	_DoublePush^(0+128),f	;volatile
 15476  0C90  30FF               	movlw	255
 15477  0C91  3DB4               	addwfc	(_DoublePush+1)^(0+128),f	;volatile
 15478  0C92  2CBB               	goto	i1l5146
 15479  0C93                     i1l5128:	
 15480                           
 15481                           ;i2c_register.c: 247: FADEGP = data;
 15482  0C93  084D               	movf	RegisterWrite@data,w
 15483  0C94  00BF               	movwf	_FADEGP	;volatile
 15484                           
 15485                           ;i2c_register.c: 248: break;
 15486  0C95  2CBB               	goto	i1l5146
 15487  0C96                     i1l5130:	
 15488                           
 15489                           ;i2c_register.c: 251: GAMMAGP1 = data;
 15490  0C96  084D               	movf	RegisterWrite@data,w
 15491  0C97  00BE               	movwf	_GAMMAGP1	;volatile
 15492                           
 15493                           ;i2c_register.c: 252: if (GAMMAGP1 > 7) {
 15494  0C98  3008               	movlw	8
 15495  0C99  023E               	subwf	_GAMMAGP1,w	;volatile
 15496  0C9A  1C03               	skipc
 15497  0C9B  2CBB               	goto	i1l5146
 15498                           
 15499                           ;i2c_register.c: 253: GAMMAGP1 = 7;
 15500  0C9C  3007               	movlw	7
 15501  0C9D  00BE               	movwf	_GAMMAGP1	;volatile
 15502  0C9E  2CBB               	goto	i1l5146
 15503  0C9F                     i1l5134:	
 15504                           
 15505                           ;i2c_register.c: 257: GAMMAGP2 = data;
 15506  0C9F  084D               	movf	RegisterWrite@data,w
 15507  0CA0  00BD               	movwf	_GAMMAGP2	;volatile
 15508                           
 15509                           ;i2c_register.c: 258: if (GAMMAGP2 > 7) {
 15510  0CA1  3008               	movlw	8
 15511  0CA2  023D               	subwf	_GAMMAGP2,w	;volatile
 15512  0CA3  1C03               	skipc
 15513  0CA4  2CBB               	goto	i1l5146
 15514                           
 15515                           ;i2c_register.c: 259: GAMMAGP2 = 7;
 15516  0CA5  3007               	movlw	7
 15517  0CA6  00BD               	movwf	_GAMMAGP2	;volatile
 15518  0CA7  2CBB               	goto	i1l5146
 15519  0CA8                     i1l5138:	
 15520                           
 15521                           ;i2c_register.c: 263: GAMMAGP3 = data;
 15522  0CA8  084D               	movf	RegisterWrite@data,w
 15523  0CA9  00BC               	movwf	_GAMMAGP3	;volatile
 15524                           
 15525                           ;i2c_register.c: 264: if (GAMMAGP3 > 7) {
 15526  0CAA  3008               	movlw	8
 15527  0CAB  023C               	subwf	_GAMMAGP3,w	;volatile
 15528  0CAC  1C03               	skipc
 15529  0CAD  2CBB               	goto	i1l5146
 15530                           
 15531                           ;i2c_register.c: 265: GAMMAGP3 = 7;
 15532  0CAE  3007               	movlw	7
 15533  0CAF  00BC               	movwf	_GAMMAGP3	;volatile
 15534  0CB0  2CBB               	goto	i1l5146
 15535  0CB1                     i1l5144:	
 15536  0CB1  084E               	movf	RegisterWrite@add,w
 15537                           
 15538                           ; Switch size 1, requested type "speed"
 15539                           ; Number of cases is 30, Range of values is 0 to 33
 15540                           ; switch strategies available:
 15541                           ; Name         Instructions Cycles
 15542                           ; direct_byte           74     6 (fixed)
 15543                           ; simple_byte           91    46 (average)
 15544                           ; jumptable            260     6 (fixed)
 15545                           ;	Chosen strategy is direct_byte
 15546  0CB2  0084               	movwf	4
 15547  0CB3  3022               	movlw	34
 15548  0CB4  0204               	subwf	4,w
 15549  0CB5  1803               	skipnc
 15550  0CB6  2CBB               	goto	i1l5146
 15551  0CB7  3190               	movlp	high i1S7760
 15552  0CB8  3504               	lslf	4,w
 15553  0CB9  3E00               	addlw	low i1S7760
 15554  0CBA  0082               	movwf	2
 15555  0CBB                     i1l5146:	
 15556                           
 15557                           ;i2c_register.c: 271: if (add >= REG_EEPROMS) {
 15558  0CBB  3080               	movlw	128
 15559  0CBC  0020               	movlb	0	; select bank0
 15560  0CBD  024E               	subwf	RegisterWrite@add,w
 15561  0CBE  1C03               	skipc
 15562  0CBF  0008               	return
 15563                           
 15564                           ;i2c_register.c: 273: if (C_MBANK == 0) {
 15565  0CC0  083B               	movf	_C_MBANK,w	;volatile
 15566  0CC1  1D03               	btfss	3,2
 15567  0CC2  2CC9               	goto	i1l5152
 15568                           
 15569                           ;i2c_register.c: 274: eeprom_write((uint8_t) (add - REG_EEPROMS), (uint8_t) data);
 15570  0CC3  084D               	movf	RegisterWrite@data,w
 15571  0CC4  00F0               	movwf	eeprom_write@value
 15572  0CC5  084E               	movf	RegisterWrite@add,w
 15573  0CC6  3E80               	addlw	128
 15574  0CC7  3192  2AD3         	ljmp	_eeprom_write
 15575  0CC9                     i1l5152:	
 15576                           ;i2c_register.c: 276: } else {
 15577                           
 15578                           
 15579                           ;i2c_register.c: 277: eeprom_write((uint8_t) add, (uint8_t) data);
 15580  0CC9  084D               	movf	RegisterWrite@data,w
 15581  0CCA  00F0               	movwf	eeprom_write@value
 15582  0CCB  084E               	movf	RegisterWrite@add,w
 15583  0CCC  3192  2AD3         	ljmp	_eeprom_write
 15584  0CCE                     __end_of_RegisterWrite:	
 15585  0CCE                     __ptext66:	
 15586 ;; *************** function _Config_GP1 *****************
 15587 ;; Defined at:
 15588 ;;		line 138 in file "GPports.c"
 15589 ;; Parameters:    Size  Location     Type
 15590 ;;		None
 15591 ;; Auto vars:     Size  Location     Type
 15592 ;;		None
 15593 ;; Return value:  Size  Location     Type
 15594 ;;                  1    wreg      void 
 15595 ;; Registers used:
 15596 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15597 ;; Tracked objects:
 15598 ;;		On entry : 1F/0
 15599 ;;		On exit  : 1B/0
 15600 ;;		Unchanged: 0/0
 15601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15604 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15605 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15606 ;;Total ram usage:        2 bytes
 15607 ;; Hardware stack levels used:    1
 15608 ;; Hardware stack levels required when called:    2
 15609 ;; This function calls:
 15610 ;;		_PWM1_Initialize
 15611 ;;		i1_PWM_GP1
 15612 ;; This function is called by:
 15613 ;;		_RegisterWrite
 15614 ;; This function uses a non-reentrant model
 15615 ;;
 15616                           
 15617                           
 15618                           ;psect for function _Config_GP1
 15619  0CCE                     _Config_GP1:	
 15620                           
 15621                           ;GPports.c: 141: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 15622                           
 15623                           ;incstack = 0
 15624                           ; Regs used in _Config_GP1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15625  0CCE  3055               	movlw	85
 15626  0CCF  003C               	movlb	28	; select bank28
 15627  0CD0  008F               	movwf	15	;volsfr
 15628  0CD1  30AA               	movlw	170
 15629  0CD2  008F               	movwf	15	;volsfr
 15630  0CD3  100F               	bcf	15,0	;volsfr
 15631                           
 15632                           ;GPports.c: 142: RC2PPSbits.RC2PPS = 0x00;
 15633  0CD4  30E0               	movlw	-32
 15634  0CD5  003D               	movlb	29	; select bank29
 15635  0CD6  05A2               	andwf	34,f	;volatile
 15636                           
 15637                           ;GPports.c: 143: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 15638  0CD7  3055               	movlw	85
 15639  0CD8  003C               	movlb	28	; select bank28
 15640  0CD9  008F               	movwf	15	;volsfr
 15641  0CDA  30AA               	movlw	170
 15642  0CDB  008F               	movwf	15	;volsfr
 15643  0CDC  140F               	bsf	15,0	;volsfr
 15644                           
 15645                           ;GPports.c: 144: CCP1CON = 0;
 15646  0CDD  0025               	movlb	5	; select bank5
 15647  0CDE  0193               	clrf	19	;volatile
 15648                           
 15649                           ;GPports.c: 146: switch (GP1CONF & 0x03) {
 15650  0CDF  2D0D               	goto	i1l4634
 15651  0CE0                     i1l966:	
 15652                           ;GPports.c: 148: do { ANSELCbits.ANSC2 = 0; } while(0);
 15653                           
 15654  0CE0  0023               	movlb	3	; select bank3
 15655  0CE1  110E               	bcf	14,2	;volatile
 15656                           
 15657                           ;GPports.c: 149: do { LATCbits.LATC2 = 1; } while(0);
 15658  0CE2  0022               	movlb	2	; select bank2
 15659  0CE3  150E               	bsf	14,2	;volatile
 15660                           
 15661                           ;GPports.c: 150: do { TRISCbits.TRISC2 = 0; } while(0);
 15662  0CE4  0021               	movlb	1	; select bank1
 15663  0CE5  110E               	bcf	14,2	;volatile
 15664                           
 15665                           ;GPports.c: 151: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 15666  0CE6  3055               	movlw	85
 15667  0CE7  003C               	movlb	28	; select bank28
 15668  0CE8  008F               	movwf	15	;volsfr
 15669  0CE9  30AA               	movlw	170
 15670  0CEA  008F               	movwf	15	;volsfr
 15671  0CEB  100F               	bcf	15,0	;volsfr
 15672                           
 15673                           ;GPports.c: 152: RC2PPSbits.RC2PPS = 0x0C;
 15674  0CEC  003D               	movlb	29	; select bank29
 15675  0CED  0822               	movf	34,w	;volatile
 15676  0CEE  39E0               	andlw	-32
 15677  0CEF  380C               	iorlw	12
 15678  0CF0  00A2               	movwf	34	;volatile
 15679                           
 15680                           ;GPports.c: 153: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 15681  0CF1  3055               	movlw	85
 15682  0CF2  003C               	movlb	28	; select bank28
 15683  0CF3  008F               	movwf	15	;volsfr
 15684  0CF4  30AA               	movlw	170
 15685  0CF5  008F               	movwf	15	;volsfr
 15686  0CF6  140F               	bsf	15,0	;volsfr
 15687                           
 15688                           ;GPports.c: 154: PWM1_Initialize();
 15689  0CF7  26C9  318C         	fcall	_PWM1_Initialize
 15690                           
 15691                           ;GPports.c: 155: PWM_GP1(0);
 15692  0CF9  3000               	movlw	0
 15693  0CFA  2636  318C         	fcall	i1_PWM_GP1
 15694                           
 15695                           ;GPports.c: 156: break;
 15696  0CFC  2D27               	goto	i1l4638
 15697  0CFD                     i1l974:	
 15698                           ;GPports.c: 159: do { ANSELCbits.ANSC2 = 0; } while(0);
 15699                           
 15700  0CFD  0023               	movlb	3	; select bank3
 15701  0CFE  110E               	bcf	14,2	;volatile
 15702                           
 15703                           ;GPports.c: 160: do { TRISCbits.TRISC2 = 0; } while(0);
 15704  0CFF  0021               	movlb	1	; select bank1
 15705  0D00  110E               	bcf	14,2	;volatile
 15706                           
 15707                           ;GPports.c: 161: do { ODCONCbits.ODCC2 = 0; } while(0);
 15708  0D01  0025               	movlb	5	; select bank5
 15709  0D02  110E               	bcf	14,2	;volatile
 15710  0D03  2D27               	goto	i1l4638
 15711  0D04                     i1l981:	
 15712                           ;GPports.c: 165: do { TRISCbits.TRISC2 = 1; } while(0);
 15713                           
 15714  0D04  0021               	movlb	1	; select bank1
 15715  0D05  150E               	bsf	14,2	;volatile
 15716                           
 15717                           ;GPports.c: 166: do { ANSELCbits.ANSC2 = 1; } while(0);
 15718  0D06  0023               	movlb	3	; select bank3
 15719  0D07  2D0B               	goto	L10
 15720  0D08                     i1l986:	
 15721                           ;GPports.c: 169: do { ANSELCbits.ANSC2 = 0; } while(0);
 15722                           
 15723  0D08  0023               	movlb	3	; select bank3
 15724  0D09  110E               	bcf	14,2	;volatile
 15725                           
 15726                           ;GPports.c: 170: do { TRISCbits.TRISC2 = 1; } while(0);
 15727  0D0A  0021               	movlb	1	; select bank1
 15728  0D0B                     L10:	
 15729  0D0B  150E               	bsf	14,2	;volatile
 15730  0D0C  2D27               	goto	i1l4638
 15731  0D0D                     i1l4634:	
 15732  0D0D  0020               	movlb	0	; select bank0
 15733  0D0E  0848               	movf	_GP1CONF,w	;volatile
 15734  0D0F  3903               	andlw	3
 15735  0D10  00CB               	movwf	??_Config_GP1
 15736  0D11  01CC               	clrf	??_Config_GP1+1
 15737                           
 15738                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15739                           ; Switch size 1, requested type "speed"
 15740                           ; Number of cases is 1, Range of values is 0 to 0
 15741                           ; switch strategies available:
 15742                           ; Name         Instructions Cycles
 15743                           ; simple_byte            4     3 (average)
 15744                           ; direct_byte            8     6 (fixed)
 15745                           ; jumptable            260     6 (fixed)
 15746                           ;	Chosen strategy is simple_byte
 15747  0D12  084C               	movf	??_Config_GP1+1,w
 15748  0D13  3A00               	xorlw	0	; case 0
 15749  0D14  1903               	skipnz
 15750  0D15  2D17               	goto	i1l7774
 15751  0D16  2D27               	goto	i1l4638
 15752  0D17                     i1l7774:	
 15753                           
 15754                           ; Switch size 1, requested type "speed"
 15755                           ; Number of cases is 4, Range of values is 0 to 3
 15756                           ; switch strategies available:
 15757                           ; Name         Instructions Cycles
 15758                           ; direct_byte           14     6 (fixed)
 15759                           ; simple_byte           13     7 (average)
 15760                           ; jumptable            260     6 (fixed)
 15761                           ;	Chosen strategy is direct_byte
 15762  0D17  084B               	movf	??_Config_GP1,w
 15763  0D18  0084               	movwf	4
 15764  0D19  3004               	movlw	4
 15765  0D1A  0204               	subwf	4,w
 15766  0D1B  1803               	skipnc
 15767  0D1C  2D27               	goto	i1l4638
 15768  0D1D  3190               	movlp	high i1S7776
 15769  0D1E  3504               	lslf	4,w
 15770  0D1F  3E64               	addlw	low i1S7776
 15771  0D20  0082               	movwf	2
 15772  0D21                     i1l992:	
 15773                           ;GPports.c: 176: do { WPUCbits.WPUC2 = 0; } while(0);
 15774                           
 15775  0D21  0024               	movlb	4	; select bank4
 15776  0D22  110E               	bcf	14,2	;volatile
 15777  0D23  0008               	return
 15778  0D24                     i1l996:	
 15779                           ;GPports.c: 179: do { WPUCbits.WPUC2 = 1; } while(0);
 15780                           
 15781  0D24  0024               	movlb	4	; select bank4
 15782  0D25  150E               	bsf	14,2	;volatile
 15783  0D26  0008               	return
 15784  0D27                     i1l4638:	
 15785  0D27  0020               	movlb	0	; select bank0
 15786  0D28  0848               	movf	_GP1CONF,w	;volatile
 15787  0D29  3904               	andlw	4
 15788  0D2A  00CB               	movwf	??_Config_GP1
 15789  0D2B  01CC               	clrf	??_Config_GP1+1
 15790                           
 15791                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15792                           ; Switch size 1, requested type "speed"
 15793                           ; Number of cases is 1, Range of values is 0 to 0
 15794                           ; switch strategies available:
 15795                           ; Name         Instructions Cycles
 15796                           ; simple_byte            4     3 (average)
 15797                           ; direct_byte            8     6 (fixed)
 15798                           ; jumptable            260     6 (fixed)
 15799                           ;	Chosen strategy is simple_byte
 15800  0D2C  084C               	movf	??_Config_GP1+1,w
 15801  0D2D  3A00               	xorlw	0	; case 0
 15802  0D2E  1903               	skipnz
 15803  0D2F  2D31               	goto	i1l7778
 15804  0D30  2D39               	goto	i1l998
 15805  0D31                     i1l7778:	
 15806                           
 15807                           ; Switch size 1, requested type "speed"
 15808                           ; Number of cases is 2, Range of values is 0 to 4
 15809                           ; switch strategies available:
 15810                           ; Name         Instructions Cycles
 15811                           ; simple_byte            7     4 (average)
 15812                           ; direct_byte           16     6 (fixed)
 15813                           ; jumptable            260     6 (fixed)
 15814                           ;	Chosen strategy is simple_byte
 15815  0D31  084B               	movf	??_Config_GP1,w
 15816  0D32  3A00               	xorlw	0	; case 0
 15817  0D33  1903               	skipnz
 15818  0D34  2D21               	goto	i1l992
 15819  0D35  3A04               	xorlw	4	; case 4
 15820  0D36  1903               	skipnz
 15821  0D37  2D24               	goto	i1l996
 15822  0D38  2D39               	goto	i1l998
 15823  0D39                     i1l998:	
 15824  0D39  0008               	return
 15825  0D3A                     __end_of_Config_GP1:	
 15826  0D3A                     __ptext61:	
 15827 ;; *************** function i1_PWM_GP3 *****************
 15828 ;; Defined at:
 15829 ;;		line 90 in file "PWM.c"
 15830 ;; Parameters:    Size  Location     Type
 15831 ;;  duty            1    wreg     unsigned char 
 15832 ;; Auto vars:     Size  Location     Type
 15833 ;;  duty            1    0[BANK0 ] unsigned char 
 15834 ;; Return value:  Size  Location     Type
 15835 ;;                  1    wreg      void 
 15836 ;; Registers used:
 15837 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15838 ;; Tracked objects:
 15839 ;;		On entry : 1A/0
 15840 ;;		On exit  : 1F/6
 15841 ;;		Unchanged: 0/0
 15842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15844 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15845 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15846 ;;      Totals:         8       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15847 ;;Total ram usage:        9 bytes
 15848 ;; Hardware stack levels used:    1
 15849 ;; Hardware stack levels required when called:    1
 15850 ;; This function calls:
 15851 ;;		i1___wmul
 15852 ;; This function is called by:
 15853 ;;		_Config_GP3
 15854 ;;		_UpdateOut_GP3
 15855 ;; This function uses a non-reentrant model
 15856 ;;
 15857                           
 15858                           
 15859                           ;psect for function i1_PWM_GP3
 15860  0D3A                     i1_PWM_GP3:	
 15861                           
 15862                           ;incstack = 0
 15863                           ; Regs used in i1_PWM_GP3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15864                           ;i1PWM_GP3@duty stored from wreg
 15865  0D3A  0020               	movlb	0	; select bank0
 15866  0D3B  00CA               	movwf	i1PWM_GP3@duty
 15867                           
 15868                           ;PWM.c: 92: if (duty == 0) {
 15869  0D3C  084A               	movf	i1PWM_GP3@duty,w
 15870  0D3D  1D03               	btfss	3,2
 15871  0D3E  2D53               	goto	i1l4510
 15872                           
 15873                           ;PWM.c: 94: do { LATCbits.LATC0 = 1; } while(0);
 15874  0D3F  0022               	movlb	2	; select bank2
 15875  0D40  140E               	bsf	14,0	;volatile
 15876                           
 15877                           ;PWM.c: 95: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 15878  0D41  3055               	movlw	85
 15879  0D42  003C               	movlb	28	; select bank28
 15880  0D43  008F               	movwf	15	;volsfr
 15881  0D44  30AA               	movlw	170
 15882  0D45  008F               	movwf	15	;volsfr
 15883  0D46  100F               	bcf	15,0	;volsfr
 15884                           
 15885                           ;PWM.c: 96: RC0PPSbits.RC0PPS = 0x00;
 15886  0D47  30E0               	movlw	-32
 15887  0D48  003D               	movlb	29	; select bank29
 15888  0D49  05A0               	andwf	32,f	;volatile
 15889                           
 15890                           ;PWM.c: 97: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 15891  0D4A  3055               	movlw	85
 15892  0D4B  003C               	movlb	28	; select bank28
 15893  0D4C  008F               	movwf	15	;volsfr
 15894  0D4D  30AA               	movlw	170
 15895  0D4E  008F               	movwf	15	;volsfr
 15896  0D4F  140F               	bsf	15,0	;volsfr
 15897                           
 15898                           ;PWM.c: 98: CCP3CON = 0;
 15899  0D50  0026               	movlb	6	; select bank6
 15900  0D51  0193               	clrf	19	;volatile
 15901  0D52  0008               	return
 15902  0D53                     i1l4510:	
 15903                           
 15904                           ;PWM.c: 100: };PWM.c: 102: if (duty > 100)
 15905  0D53  3065               	movlw	101
 15906  0D54  024A               	subwf	i1PWM_GP3@duty,w
 15907  0D55  1C03               	skipc
 15908  0D56  2D59               	goto	i1l4514
 15909                           
 15910                           ;PWM.c: 103: duty = 100;
 15911  0D57  3064               	movlw	100
 15912  0D58  00CA               	movwf	i1PWM_GP3@duty
 15913  0D59                     i1l4514:	
 15914                           
 15915                           ;PWM.c: 105: if (CCP2CON == 0) {
 15916  0D59  0025               	movlb	5	; select bank5
 15917  0D5A  0817               	movf	23,w	;volatile
 15918  0D5B  1D03               	btfss	3,2
 15919  0D5C  2D71               	goto	i1l4530
 15920                           
 15921                           ;PWM.c: 106: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 15922  0D5D  3055               	movlw	85
 15923  0D5E  003C               	movlb	28	; select bank28
 15924  0D5F  008F               	movwf	15	;volsfr
 15925  0D60  30AA               	movlw	170
 15926  0D61  008F               	movwf	15	;volsfr
 15927  0D62  100F               	bcf	15,0	;volsfr
 15928                           
 15929                           ;PWM.c: 107: RC0PPSbits.RC0PPS = 0x0E;
 15930  0D63  003D               	movlb	29	; select bank29
 15931  0D64  0820               	movf	32,w	;volatile
 15932  0D65  39E0               	andlw	-32
 15933  0D66  380E               	iorlw	14
 15934  0D67  00A0               	movwf	32	;volatile
 15935                           
 15936                           ;PWM.c: 108: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 15937  0D68  3055               	movlw	85
 15938  0D69  003C               	movlb	28	; select bank28
 15939  0D6A  008F               	movwf	15	;volsfr
 15940  0D6B  30AA               	movlw	170
 15941  0D6C  008F               	movwf	15	;volsfr
 15942  0D6D  140F               	bsf	15,0	;volsfr
 15943                           
 15944                           ;PWM.c: 109: CCP3CON = 0x8F;
 15945  0D6E  308F               	movlw	143
 15946  0D6F  0026               	movlb	6	; select bank6
 15947  0D70  0093               	movwf	19	;volatile
 15948  0D71                     i1l4530:	
 15949                           
 15950                           ;PWM.c: 110: };PWM.c: 112: CCPR3H = gamma_table[GAMMAGP3][(uint8_t) (duty - 1)] >> 8;
 15951  0D71  0020               	movlb	0	; select bank0
 15952  0D72  084A               	movf	i1PWM_GP3@duty,w
 15953  0D73  3EFF               	addlw	255
 15954  0D74  00F6               	movwf	??i1_PWM_GP3
 15955  0D75  01F7               	clrf	??i1_PWM_GP3+1
 15956  0D76  35F6               	lslf	??i1_PWM_GP3,f
 15957  0D77  0DF7               	rlf	??i1_PWM_GP3+1,f
 15958  0D78  083C               	movf	_GAMMAGP3,w	;volatile
 15959  0D79  00F0               	movwf	i1___wmul@multiplier
 15960  0D7A  30C8               	movlw	200
 15961  0D7B  01F1               	clrf	i1___wmul@multiplier+1
 15962  0D7C  00F2               	movwf	i1___wmul@multiplicand
 15963  0D7D  01F3               	clrf	i1___wmul@multiplicand+1
 15964  0D7E  26B4  318C         	fcall	i1___wmul
 15965  0D80  302B               	movlw	low (_gamma_table| (0+32768))
 15966  0D81  00F8               	movwf	??i1_PWM_GP3+2
 15967  0D82  3084               	movlw	high (_gamma_table| (0+32768))
 15968  0D83  00F9               	movwf	??i1_PWM_GP3+3
 15969  0D84  0870               	movf	?i1___wmul,w
 15970  0D85  0778               	addwf	??i1_PWM_GP3+2,w
 15971  0D86  00FA               	movwf	??i1_PWM_GP3+4
 15972  0D87  0871               	movf	?i1___wmul+1,w
 15973  0D88  3D79               	addwfc	??i1_PWM_GP3+3,w
 15974  0D89  00FB               	movwf	??i1_PWM_GP3+5
 15975  0D8A  087A               	movf	??i1_PWM_GP3+4,w
 15976  0D8B  0776               	addwf	??i1_PWM_GP3,w
 15977  0D8C  0084               	movwf	4
 15978  0D8D  087B               	movf	??i1_PWM_GP3+5,w
 15979  0D8E  3D77               	addwfc	??i1_PWM_GP3+1,w
 15980  0D8F  0085               	movwf	5
 15981  0D90  3F00               	moviw [0]fsr0
 15982  0D91  00FC               	movwf	??i1_PWM_GP3+6
 15983  0D92  3F01               	moviw [1]fsr0
 15984  0D93  00FD               	movwf	??i1_PWM_GP3+7
 15985  0D94  0026               	movlb	6	; select bank6
 15986  0D95  0092               	movwf	18	;volatile
 15987                           
 15988                           ;PWM.c: 113: CCPR3L = gamma_table[GAMMAGP3][(uint8_t) (duty - 1)];
 15989  0D96  0020               	movlb	0	; select bank0
 15990  0D97  084A               	movf	i1PWM_GP3@duty,w
 15991  0D98  3EFF               	addlw	255
 15992  0D99  00F6               	movwf	??i1_PWM_GP3
 15993  0D9A  01F7               	clrf	??i1_PWM_GP3+1
 15994  0D9B  35F6               	lslf	??i1_PWM_GP3,f
 15995  0D9C  0DF7               	rlf	??i1_PWM_GP3+1,f
 15996  0D9D  083C               	movf	_GAMMAGP3,w	;volatile
 15997  0D9E  00F0               	movwf	i1___wmul@multiplier
 15998  0D9F  30C8               	movlw	200
 15999  0DA0  01F1               	clrf	i1___wmul@multiplier+1
 16000  0DA1  00F2               	movwf	i1___wmul@multiplicand
 16001  0DA2  01F3               	clrf	i1___wmul@multiplicand+1
 16002  0DA3  26B4               	fcall	i1___wmul
 16003  0DA4  302B               	movlw	low (_gamma_table| (0+32768))
 16004  0DA5  00F8               	movwf	??i1_PWM_GP3+2
 16005  0DA6  3084               	movlw	high (_gamma_table| (0+32768))
 16006  0DA7  00F9               	movwf	??i1_PWM_GP3+3
 16007  0DA8  0870               	movf	?i1___wmul,w
 16008  0DA9  0778               	addwf	??i1_PWM_GP3+2,w
 16009  0DAA  00FA               	movwf	??i1_PWM_GP3+4
 16010  0DAB  0871               	movf	?i1___wmul+1,w
 16011  0DAC  3D79               	addwfc	??i1_PWM_GP3+3,w
 16012  0DAD  00FB               	movwf	??i1_PWM_GP3+5
 16013  0DAE  087A               	movf	??i1_PWM_GP3+4,w
 16014  0DAF  0776               	addwf	??i1_PWM_GP3,w
 16015  0DB0  0084               	movwf	4
 16016  0DB1  087B               	movf	??i1_PWM_GP3+5,w
 16017  0DB2  3D77               	addwfc	??i1_PWM_GP3+1,w
 16018  0DB3  0085               	movwf	5
 16019  0DB4  0800               	movf	0,w	;code access
 16020  0DB5  0026               	movlb	6	; select bank6
 16021  0DB6  0091               	movwf	17	;volatile
 16022  0DB7  0008               	return
 16023  0DB8                     __end_ofi1_PWM_GP3:	
 16024  0DB8                     __ptext64:	
 16025 ;; *************** function i1_PWM_GP2 *****************
 16026 ;; Defined at:
 16027 ;;		line 61 in file "PWM.c"
 16028 ;; Parameters:    Size  Location     Type
 16029 ;;  duty            1    wreg     unsigned char 
 16030 ;; Auto vars:     Size  Location     Type
 16031 ;;  duty            1    0[BANK0 ] unsigned char 
 16032 ;; Return value:  Size  Location     Type
 16033 ;;                  1    wreg      void 
 16034 ;; Registers used:
 16035 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16036 ;; Tracked objects:
 16037 ;;		On entry : 1A/0
 16038 ;;		On exit  : 1F/5
 16039 ;;		Unchanged: 0/0
 16040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16042 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16043 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16044 ;;      Totals:         8       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16045 ;;Total ram usage:        9 bytes
 16046 ;; Hardware stack levels used:    1
 16047 ;; Hardware stack levels required when called:    1
 16048 ;; This function calls:
 16049 ;;		i1___wmul
 16050 ;; This function is called by:
 16051 ;;		_Config_GP2
 16052 ;;		_UpdateOut_GP2
 16053 ;; This function uses a non-reentrant model
 16054 ;;
 16055                           
 16056                           
 16057                           ;psect for function i1_PWM_GP2
 16058  0DB8                     i1_PWM_GP2:	
 16059                           
 16060                           ;incstack = 0
 16061                           ; Regs used in i1_PWM_GP2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 16062                           ;i1PWM_GP2@duty stored from wreg
 16063  0DB8  0020               	movlb	0	; select bank0
 16064  0DB9  00CA               	movwf	i1PWM_GP2@duty
 16065                           
 16066                           ;PWM.c: 63: if (duty == 0) {
 16067  0DBA  084A               	movf	i1PWM_GP2@duty,w
 16068  0DBB  1D03               	btfss	3,2
 16069  0DBC  2DD1               	goto	i1l4468
 16070                           
 16071                           ;PWM.c: 65: do { LATCbits.LATC1 = 1; } while(0);
 16072  0DBD  0022               	movlb	2	; select bank2
 16073  0DBE  148E               	bsf	14,1	;volatile
 16074                           
 16075                           ;PWM.c: 66: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 16076  0DBF  3055               	movlw	85
 16077  0DC0  003C               	movlb	28	; select bank28
 16078  0DC1  008F               	movwf	15	;volsfr
 16079  0DC2  30AA               	movlw	170
 16080  0DC3  008F               	movwf	15	;volsfr
 16081  0DC4  100F               	bcf	15,0	;volsfr
 16082                           
 16083                           ;PWM.c: 67: RC1PPSbits.RC1PPS = 0x00;
 16084  0DC5  30E0               	movlw	-32
 16085  0DC6  003D               	movlb	29	; select bank29
 16086  0DC7  05A1               	andwf	33,f	;volatile
 16087                           
 16088                           ;PWM.c: 68: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 16089  0DC8  3055               	movlw	85
 16090  0DC9  003C               	movlb	28	; select bank28
 16091  0DCA  008F               	movwf	15	;volsfr
 16092  0DCB  30AA               	movlw	170
 16093  0DCC  008F               	movwf	15	;volsfr
 16094  0DCD  140F               	bsf	15,0	;volsfr
 16095                           
 16096                           ;PWM.c: 69: CCP2CON = 0;
 16097  0DCE  0025               	movlb	5	; select bank5
 16098  0DCF  0197               	clrf	23	;volatile
 16099  0DD0  0008               	return
 16100  0DD1                     i1l4468:	
 16101                           
 16102                           ;PWM.c: 71: };PWM.c: 73: if (duty > 100)
 16103  0DD1  3065               	movlw	101
 16104  0DD2  024A               	subwf	i1PWM_GP2@duty,w
 16105  0DD3  1C03               	skipc
 16106  0DD4  2DD7               	goto	i1l4472
 16107                           
 16108                           ;PWM.c: 74: duty = 100;
 16109  0DD5  3064               	movlw	100
 16110  0DD6  00CA               	movwf	i1PWM_GP2@duty
 16111  0DD7                     i1l4472:	
 16112                           
 16113                           ;PWM.c: 76: if (CCP2CON == 0) {
 16114  0DD7  0025               	movlb	5	; select bank5
 16115  0DD8  0817               	movf	23,w	;volatile
 16116  0DD9  1D03               	btfss	3,2
 16117  0DDA  2DEF               	goto	i1l4488
 16118                           
 16119                           ;PWM.c: 77: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 16120  0DDB  3055               	movlw	85
 16121  0DDC  003C               	movlb	28	; select bank28
 16122  0DDD  008F               	movwf	15	;volsfr
 16123  0DDE  30AA               	movlw	170
 16124  0DDF  008F               	movwf	15	;volsfr
 16125  0DE0  100F               	bcf	15,0	;volsfr
 16126                           
 16127                           ;PWM.c: 78: RC1PPSbits.RC1PPS = 0x0D;
 16128  0DE1  003D               	movlb	29	; select bank29
 16129  0DE2  0821               	movf	33,w	;volatile
 16130  0DE3  39E0               	andlw	-32
 16131  0DE4  380D               	iorlw	13
 16132  0DE5  00A1               	movwf	33	;volatile
 16133                           
 16134                           ;PWM.c: 79: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 16135  0DE6  3055               	movlw	85
 16136  0DE7  003C               	movlb	28	; select bank28
 16137  0DE8  008F               	movwf	15	;volsfr
 16138  0DE9  30AA               	movlw	170
 16139  0DEA  008F               	movwf	15	;volsfr
 16140  0DEB  140F               	bsf	15,0	;volsfr
 16141                           
 16142                           ;PWM.c: 80: CCP2CON = 0x8F;
 16143  0DEC  308F               	movlw	143
 16144  0DED  0025               	movlb	5	; select bank5
 16145  0DEE  0097               	movwf	23	;volatile
 16146  0DEF                     i1l4488:	
 16147                           
 16148                           ;PWM.c: 81: };PWM.c: 83: CCPR2H = gamma_table[GAMMAGP2][(uint8_t) (duty - 1)] >> 8;
 16149  0DEF  0020               	movlb	0	; select bank0
 16150  0DF0  084A               	movf	i1PWM_GP2@duty,w
 16151  0DF1  3EFF               	addlw	255
 16152  0DF2  00F6               	movwf	??i1_PWM_GP2
 16153  0DF3  01F7               	clrf	??i1_PWM_GP2+1
 16154  0DF4  35F6               	lslf	??i1_PWM_GP2,f
 16155  0DF5  0DF7               	rlf	??i1_PWM_GP2+1,f
 16156  0DF6  083D               	movf	_GAMMAGP2,w	;volatile
 16157  0DF7  00F0               	movwf	i1___wmul@multiplier
 16158  0DF8  30C8               	movlw	200
 16159  0DF9  01F1               	clrf	i1___wmul@multiplier+1
 16160  0DFA  00F2               	movwf	i1___wmul@multiplicand
 16161  0DFB  01F3               	clrf	i1___wmul@multiplicand+1
 16162  0DFC  26B4  318C         	fcall	i1___wmul
 16163  0DFE  302B               	movlw	low (_gamma_table| (0+32768))
 16164  0DFF  00F8               	movwf	??i1_PWM_GP2+2
 16165  0E00  3084               	movlw	high (_gamma_table| (0+32768))
 16166  0E01  00F9               	movwf	??i1_PWM_GP2+3
 16167  0E02  0870               	movf	?i1___wmul,w
 16168  0E03  0778               	addwf	??i1_PWM_GP2+2,w
 16169  0E04  00FA               	movwf	??i1_PWM_GP2+4
 16170  0E05  0871               	movf	?i1___wmul+1,w
 16171  0E06  3D79               	addwfc	??i1_PWM_GP2+3,w
 16172  0E07  00FB               	movwf	??i1_PWM_GP2+5
 16173  0E08  087A               	movf	??i1_PWM_GP2+4,w
 16174  0E09  0776               	addwf	??i1_PWM_GP2,w
 16175  0E0A  0084               	movwf	4
 16176  0E0B  087B               	movf	??i1_PWM_GP2+5,w
 16177  0E0C  3D77               	addwfc	??i1_PWM_GP2+1,w
 16178  0E0D  0085               	movwf	5
 16179  0E0E  3F00               	moviw [0]fsr0
 16180  0E0F  00FC               	movwf	??i1_PWM_GP2+6
 16181  0E10  3F01               	moviw [1]fsr0
 16182  0E11  00FD               	movwf	??i1_PWM_GP2+7
 16183  0E12  0025               	movlb	5	; select bank5
 16184  0E13  0096               	movwf	22	;volatile
 16185                           
 16186                           ;PWM.c: 84: CCPR2L = gamma_table[GAMMAGP2][(uint8_t) (duty - 1)];
 16187  0E14  0020               	movlb	0	; select bank0
 16188  0E15  084A               	movf	i1PWM_GP2@duty,w
 16189  0E16  3EFF               	addlw	255
 16190  0E17  00F6               	movwf	??i1_PWM_GP2
 16191  0E18  01F7               	clrf	??i1_PWM_GP2+1
 16192  0E19  35F6               	lslf	??i1_PWM_GP2,f
 16193  0E1A  0DF7               	rlf	??i1_PWM_GP2+1,f
 16194  0E1B  083D               	movf	_GAMMAGP2,w	;volatile
 16195  0E1C  00F0               	movwf	i1___wmul@multiplier
 16196  0E1D  30C8               	movlw	200
 16197  0E1E  01F1               	clrf	i1___wmul@multiplier+1
 16198  0E1F  00F2               	movwf	i1___wmul@multiplicand
 16199  0E20  01F3               	clrf	i1___wmul@multiplicand+1
 16200  0E21  26B4               	fcall	i1___wmul
 16201  0E22  302B               	movlw	low (_gamma_table| (0+32768))
 16202  0E23  00F8               	movwf	??i1_PWM_GP2+2
 16203  0E24  3084               	movlw	high (_gamma_table| (0+32768))
 16204  0E25  00F9               	movwf	??i1_PWM_GP2+3
 16205  0E26  0870               	movf	?i1___wmul,w
 16206  0E27  0778               	addwf	??i1_PWM_GP2+2,w
 16207  0E28  00FA               	movwf	??i1_PWM_GP2+4
 16208  0E29  0871               	movf	?i1___wmul+1,w
 16209  0E2A  3D79               	addwfc	??i1_PWM_GP2+3,w
 16210  0E2B  00FB               	movwf	??i1_PWM_GP2+5
 16211  0E2C  087A               	movf	??i1_PWM_GP2+4,w
 16212  0E2D  0776               	addwf	??i1_PWM_GP2,w
 16213  0E2E  0084               	movwf	4
 16214  0E2F  087B               	movf	??i1_PWM_GP2+5,w
 16215  0E30  3D77               	addwfc	??i1_PWM_GP2+1,w
 16216  0E31  0085               	movwf	5
 16217  0E32  0800               	movf	0,w	;code access
 16218  0E33  0025               	movlb	5	; select bank5
 16219  0E34  0095               	movwf	21	;volatile
 16220  0E35  0008               	return
 16221  0E36                     __end_ofi1_PWM_GP2:	
 16222  0E36                     __ptext67:	
 16223 ;; *************** function i1_PWM_GP1 *****************
 16224 ;; Defined at:
 16225 ;;		line 30 in file "PWM.c"
 16226 ;; Parameters:    Size  Location     Type
 16227 ;;  duty            1    wreg     unsigned char 
 16228 ;; Auto vars:     Size  Location     Type
 16229 ;;  duty            1    0[BANK0 ] unsigned char 
 16230 ;; Return value:  Size  Location     Type
 16231 ;;                  1    wreg      void 
 16232 ;; Registers used:
 16233 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16234 ;; Tracked objects:
 16235 ;;		On entry : 1A/0
 16236 ;;		On exit  : 1F/5
 16237 ;;		Unchanged: 0/0
 16238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16240 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16241 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16242 ;;      Totals:         8       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16243 ;;Total ram usage:        9 bytes
 16244 ;; Hardware stack levels used:    1
 16245 ;; Hardware stack levels required when called:    1
 16246 ;; This function calls:
 16247 ;;		i1___wmul
 16248 ;; This function is called by:
 16249 ;;		_Config_GP1
 16250 ;;		_UpdateOut_GP1
 16251 ;; This function uses a non-reentrant model
 16252 ;;
 16253                           
 16254                           
 16255                           ;psect for function i1_PWM_GP1
 16256  0E36                     i1_PWM_GP1:	
 16257                           
 16258                           ;incstack = 0
 16259                           ; Regs used in i1_PWM_GP1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 16260                           ;i1PWM_GP1@duty stored from wreg
 16261  0E36  0020               	movlb	0	; select bank0
 16262  0E37  00CA               	movwf	i1PWM_GP1@duty
 16263                           
 16264                           ;PWM.c: 32: if (duty == 0) {
 16265  0E38  084A               	movf	i1PWM_GP1@duty,w
 16266  0E39  1D03               	btfss	3,2
 16267  0E3A  2E4F               	goto	i1l4426
 16268                           
 16269                           ;PWM.c: 34: do { LATCbits.LATC2 = 1; } while(0);
 16270  0E3B  0022               	movlb	2	; select bank2
 16271  0E3C  150E               	bsf	14,2	;volatile
 16272                           
 16273                           ;PWM.c: 35: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 16274  0E3D  3055               	movlw	85
 16275  0E3E  003C               	movlb	28	; select bank28
 16276  0E3F  008F               	movwf	15	;volsfr
 16277  0E40  30AA               	movlw	170
 16278  0E41  008F               	movwf	15	;volsfr
 16279  0E42  100F               	bcf	15,0	;volsfr
 16280                           
 16281                           ;PWM.c: 36: RC2PPSbits.RC2PPS = 0x00;
 16282  0E43  30E0               	movlw	-32
 16283  0E44  003D               	movlb	29	; select bank29
 16284  0E45  05A2               	andwf	34,f	;volatile
 16285                           
 16286                           ;PWM.c: 37: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 16287  0E46  3055               	movlw	85
 16288  0E47  003C               	movlb	28	; select bank28
 16289  0E48  008F               	movwf	15	;volsfr
 16290  0E49  30AA               	movlw	170
 16291  0E4A  008F               	movwf	15	;volsfr
 16292  0E4B  140F               	bsf	15,0	;volsfr
 16293                           
 16294                           ;PWM.c: 38: CCP1CON = 0;
 16295  0E4C  0025               	movlb	5	; select bank5
 16296  0E4D  0193               	clrf	19	;volatile
 16297  0E4E  0008               	return
 16298  0E4F                     i1l4426:	
 16299                           
 16300                           ;PWM.c: 40: };PWM.c: 42: if (duty > 100)
 16301  0E4F  3065               	movlw	101
 16302  0E50  024A               	subwf	i1PWM_GP1@duty,w
 16303  0E51  1C03               	skipc
 16304  0E52  2E55               	goto	i1l4430
 16305                           
 16306                           ;PWM.c: 43: duty = 100;
 16307  0E53  3064               	movlw	100
 16308  0E54  00CA               	movwf	i1PWM_GP1@duty
 16309  0E55                     i1l4430:	
 16310                           
 16311                           ;PWM.c: 45: if (CCP1CON == 0) {
 16312  0E55  0025               	movlb	5	; select bank5
 16313  0E56  0813               	movf	19,w	;volatile
 16314  0E57  1D03               	btfss	3,2
 16315  0E58  2E6D               	goto	i1l4446
 16316                           
 16317                           ;PWM.c: 46: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 16318  0E59  3055               	movlw	85
 16319  0E5A  003C               	movlb	28	; select bank28
 16320  0E5B  008F               	movwf	15	;volsfr
 16321  0E5C  30AA               	movlw	170
 16322  0E5D  008F               	movwf	15	;volsfr
 16323  0E5E  100F               	bcf	15,0	;volsfr
 16324                           
 16325                           ;PWM.c: 47: RC2PPSbits.RC2PPS = 0x0C;
 16326  0E5F  003D               	movlb	29	; select bank29
 16327  0E60  0822               	movf	34,w	;volatile
 16328  0E61  39E0               	andlw	-32
 16329  0E62  380C               	iorlw	12
 16330  0E63  00A2               	movwf	34	;volatile
 16331                           
 16332                           ;PWM.c: 48: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 16333  0E64  3055               	movlw	85
 16334  0E65  003C               	movlb	28	; select bank28
 16335  0E66  008F               	movwf	15	;volsfr
 16336  0E67  30AA               	movlw	170
 16337  0E68  008F               	movwf	15	;volsfr
 16338  0E69  140F               	bsf	15,0	;volsfr
 16339                           
 16340                           ;PWM.c: 49: CCP1CON = 0x8F;
 16341  0E6A  308F               	movlw	143
 16342  0E6B  0025               	movlb	5	; select bank5
 16343  0E6C  0093               	movwf	19	;volatile
 16344  0E6D                     i1l4446:	
 16345                           
 16346                           ;PWM.c: 50: };PWM.c: 52: CCPR1H = gamma_table[GAMMAGP1][(uint8_t) (duty - 1)] >> 8;
 16347  0E6D  0020               	movlb	0	; select bank0
 16348  0E6E  084A               	movf	i1PWM_GP1@duty,w
 16349  0E6F  3EFF               	addlw	255
 16350  0E70  00F6               	movwf	??i1_PWM_GP1
 16351  0E71  01F7               	clrf	??i1_PWM_GP1+1
 16352  0E72  35F6               	lslf	??i1_PWM_GP1,f
 16353  0E73  0DF7               	rlf	??i1_PWM_GP1+1,f
 16354  0E74  083E               	movf	_GAMMAGP1,w	;volatile
 16355  0E75  00F0               	movwf	i1___wmul@multiplier
 16356  0E76  30C8               	movlw	200
 16357  0E77  01F1               	clrf	i1___wmul@multiplier+1
 16358  0E78  00F2               	movwf	i1___wmul@multiplicand
 16359  0E79  01F3               	clrf	i1___wmul@multiplicand+1
 16360  0E7A  26B4  318C         	fcall	i1___wmul
 16361  0E7C  302B               	movlw	low (_gamma_table| (0+32768))
 16362  0E7D  00F8               	movwf	??i1_PWM_GP1+2
 16363  0E7E  3084               	movlw	high (_gamma_table| (0+32768))
 16364  0E7F  00F9               	movwf	??i1_PWM_GP1+3
 16365  0E80  0870               	movf	?i1___wmul,w
 16366  0E81  0778               	addwf	??i1_PWM_GP1+2,w
 16367  0E82  00FA               	movwf	??i1_PWM_GP1+4
 16368  0E83  0871               	movf	?i1___wmul+1,w
 16369  0E84  3D79               	addwfc	??i1_PWM_GP1+3,w
 16370  0E85  00FB               	movwf	??i1_PWM_GP1+5
 16371  0E86  087A               	movf	??i1_PWM_GP1+4,w
 16372  0E87  0776               	addwf	??i1_PWM_GP1,w
 16373  0E88  0084               	movwf	4
 16374  0E89  087B               	movf	??i1_PWM_GP1+5,w
 16375  0E8A  3D77               	addwfc	??i1_PWM_GP1+1,w
 16376  0E8B  0085               	movwf	5
 16377  0E8C  3F00               	moviw [0]fsr0
 16378  0E8D  00FC               	movwf	??i1_PWM_GP1+6
 16379  0E8E  3F01               	moviw [1]fsr0
 16380  0E8F  00FD               	movwf	??i1_PWM_GP1+7
 16381  0E90  0025               	movlb	5	; select bank5
 16382  0E91  0092               	movwf	18	;volatile
 16383                           
 16384                           ;PWM.c: 53: CCPR1L = gamma_table[GAMMAGP1][(uint8_t) (duty - 1)];
 16385  0E92  0020               	movlb	0	; select bank0
 16386  0E93  084A               	movf	i1PWM_GP1@duty,w
 16387  0E94  3EFF               	addlw	255
 16388  0E95  00F6               	movwf	??i1_PWM_GP1
 16389  0E96  01F7               	clrf	??i1_PWM_GP1+1
 16390  0E97  35F6               	lslf	??i1_PWM_GP1,f
 16391  0E98  0DF7               	rlf	??i1_PWM_GP1+1,f
 16392  0E99  083E               	movf	_GAMMAGP1,w	;volatile
 16393  0E9A  00F0               	movwf	i1___wmul@multiplier
 16394  0E9B  30C8               	movlw	200
 16395  0E9C  01F1               	clrf	i1___wmul@multiplier+1
 16396  0E9D  00F2               	movwf	i1___wmul@multiplicand
 16397  0E9E  01F3               	clrf	i1___wmul@multiplicand+1
 16398  0E9F  26B4               	fcall	i1___wmul
 16399  0EA0  302B               	movlw	low (_gamma_table| (0+32768))
 16400  0EA1  00F8               	movwf	??i1_PWM_GP1+2
 16401  0EA2  3084               	movlw	high (_gamma_table| (0+32768))
 16402  0EA3  00F9               	movwf	??i1_PWM_GP1+3
 16403  0EA4  0870               	movf	?i1___wmul,w
 16404  0EA5  0778               	addwf	??i1_PWM_GP1+2,w
 16405  0EA6  00FA               	movwf	??i1_PWM_GP1+4
 16406  0EA7  0871               	movf	?i1___wmul+1,w
 16407  0EA8  3D79               	addwfc	??i1_PWM_GP1+3,w
 16408  0EA9  00FB               	movwf	??i1_PWM_GP1+5
 16409  0EAA  087A               	movf	??i1_PWM_GP1+4,w
 16410  0EAB  0776               	addwf	??i1_PWM_GP1,w
 16411  0EAC  0084               	movwf	4
 16412  0EAD  087B               	movf	??i1_PWM_GP1+5,w
 16413  0EAE  3D77               	addwfc	??i1_PWM_GP1+1,w
 16414  0EAF  0085               	movwf	5
 16415  0EB0  0800               	movf	0,w	;code access
 16416  0EB1  0025               	movlb	5	; select bank5
 16417  0EB2  0091               	movwf	17	;volatile
 16418  0EB3  0008               	return
 16419  0EB4                     __end_ofi1_PWM_GP1:	
 16420  0EB4                     __ptext68:	
 16421 ;; *************** function i1___wmul *****************
 16422 ;; Defined at:
 16423 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
 16424 ;; Parameters:    Size  Location     Type
 16425 ;;  multiplier      2    0[COMMON] unsigned int 
 16426 ;;  multiplicand    2    2[COMMON] unsigned int 
 16427 ;; Auto vars:     Size  Location     Type
 16428 ;;  __wmul          2    4[COMMON] unsigned int 
 16429 ;; Return value:  Size  Location     Type
 16430 ;;                  2    0[COMMON] unsigned int 
 16431 ;; Registers used:
 16432 ;;		wreg, status,2, status,0
 16433 ;; Tracked objects:
 16434 ;;		On entry : 1F/0
 16435 ;;		On exit  : 1F/0
 16436 ;;		Unchanged: 1F/0
 16437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16438 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16439 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16441 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16442 ;;Total ram usage:        6 bytes
 16443 ;; Hardware stack levels used:    1
 16444 ;; This function calls:
 16445 ;;		Nothing
 16446 ;; This function is called by:
 16447 ;;		_RegisterWrite
 16448 ;;		i1_PWM_GP1
 16449 ;;		i1_PWM_GP2
 16450 ;;		i1_PWM_GP3
 16451 ;; This function uses a non-reentrant model
 16452 ;;
 16453                           
 16454                           
 16455                           ;psect for function i1___wmul
 16456  0EB4                     i1___wmul:	
 16457                           
 16458                           ;incstack = 0
 16459                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
 16460  0EB4  01F4               	clrf	i1___wmul@product
 16461  0EB5  01F5               	clrf	i1___wmul@product+1
 16462  0EB6                     i1l4350:	
 16463  0EB6  1C70               	btfss	i1___wmul@multiplier,0
 16464  0EB7  2EBC               	goto	i1l4354
 16465  0EB8  0872               	movf	i1___wmul@multiplicand,w
 16466  0EB9  07F4               	addwf	i1___wmul@product,f
 16467  0EBA  0873               	movf	i1___wmul@multiplicand+1,w
 16468  0EBB  3DF5               	addwfc	i1___wmul@product+1,f
 16469  0EBC                     i1l4354:	
 16470  0EBC  35F2               	lslf	i1___wmul@multiplicand,f
 16471  0EBD  0DF3               	rlf	i1___wmul@multiplicand+1,f
 16472  0EBE  36F1               	lsrf	i1___wmul@multiplier+1,f
 16473  0EBF  0CF0               	rrf	i1___wmul@multiplier,f
 16474  0EC0  0870               	movf	i1___wmul@multiplier,w
 16475  0EC1  0471               	iorwf	i1___wmul@multiplier+1,w
 16476  0EC2  1D03               	btfss	3,2
 16477  0EC3  2EB6               	goto	i1l4350
 16478  0EC4  0875               	movf	i1___wmul@product+1,w
 16479  0EC5  00F1               	movwf	?i1___wmul+1
 16480  0EC6  0874               	movf	i1___wmul@product,w
 16481  0EC7  00F0               	movwf	?i1___wmul
 16482  0EC8  0008               	return
 16483  0EC9                     __end_ofi1___wmul:	
 16484  0EC9                     __ptext69:	
 16485 ;; *************** function _PWM1_Initialize *****************
 16486 ;; Defined at:
 16487 ;;		line 64 in file "mcc_generated_files/pwm1.c"
 16488 ;; Parameters:    Size  Location     Type
 16489 ;;		None
 16490 ;; Auto vars:     Size  Location     Type
 16491 ;;		None
 16492 ;; Return value:  Size  Location     Type
 16493 ;;                  1    wreg      void 
 16494 ;; Registers used:
 16495 ;;		wreg, status,2, status,0
 16496 ;; Tracked objects:
 16497 ;;		On entry : 1F/1C
 16498 ;;		On exit  : 1F/5
 16499 ;;		Unchanged: 0/0
 16500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16505 ;;Total ram usage:        0 bytes
 16506 ;; Hardware stack levels used:    1
 16507 ;; This function calls:
 16508 ;;		Nothing
 16509 ;; This function is called by:
 16510 ;;		_Config_GP1
 16511 ;; This function uses a non-reentrant model
 16512 ;;
 16513                           
 16514                           
 16515                           ;psect for function _PWM1_Initialize
 16516  0EC9                     _PWM1_Initialize:	
 16517                           
 16518                           ;pwm1.c: 69: CCP1CON = 0x8F;
 16519                           
 16520                           ;incstack = 0
 16521                           ; Regs used in _PWM1_Initialize: [wreg+status,2+status,0]
 16522  0EC9  308F               	movlw	143
 16523  0ECA  0025               	movlb	5	; select bank5
 16524  0ECB  0093               	movwf	19	;volatile
 16525                           
 16526                           ;pwm1.c: 72: CCPR1H = 0x03;
 16527  0ECC  3003               	movlw	3
 16528  0ECD  0092               	movwf	18	;volatile
 16529                           
 16530                           ;pwm1.c: 75: CCPR1L = 0xFF;
 16531  0ECE  30FF               	movlw	255
 16532  0ECF  0091               	movwf	17	;volatile
 16533                           
 16534                           ;pwm1.c: 78: CCPTMRSbits.C1TSEL = 0x1;
 16535  0ED0  081F               	movf	31,w	;volatile
 16536  0ED1  39FC               	andlw	-4
 16537  0ED2  3801               	iorlw	1
 16538  0ED3  009F               	movwf	31	;volatile
 16539  0ED4  0008               	return
 16540  0ED5                     __end_of_PWM1_Initialize:	
 16541  0ED5                     __ptext63:	
 16542 ;; *************** function _Config_GP2 *****************
 16543 ;; Defined at:
 16544 ;;		line 189 in file "GPports.c"
 16545 ;; Parameters:    Size  Location     Type
 16546 ;;		None
 16547 ;; Auto vars:     Size  Location     Type
 16548 ;;		None
 16549 ;; Return value:  Size  Location     Type
 16550 ;;                  1    wreg      void 
 16551 ;; Registers used:
 16552 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16553 ;; Tracked objects:
 16554 ;;		On entry : 1F/0
 16555 ;;		On exit  : 1B/0
 16556 ;;		Unchanged: 0/0
 16557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16560 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16561 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16562 ;;Total ram usage:        2 bytes
 16563 ;; Hardware stack levels used:    1
 16564 ;; Hardware stack levels required when called:    2
 16565 ;; This function calls:
 16566 ;;		_PWM2_Initialize
 16567 ;;		i1_PWM_GP2
 16568 ;; This function is called by:
 16569 ;;		_RegisterWrite
 16570 ;; This function uses a non-reentrant model
 16571 ;;
 16572                           
 16573                           
 16574                           ;psect for function _Config_GP2
 16575  0ED5                     _Config_GP2:	
 16576                           
 16577                           ;GPports.c: 192: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 16578                           
 16579                           ;incstack = 0
 16580                           ; Regs used in _Config_GP2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 16581  0ED5  3055               	movlw	85
 16582  0ED6  003C               	movlb	28	; select bank28
 16583  0ED7  008F               	movwf	15	;volsfr
 16584  0ED8  30AA               	movlw	170
 16585  0ED9  008F               	movwf	15	;volsfr
 16586  0EDA  100F               	bcf	15,0	;volsfr
 16587                           
 16588                           ;GPports.c: 193: RC1PPSbits.RC1PPS = 0x00;
 16589  0EDB  30E0               	movlw	-32
 16590  0EDC  003D               	movlb	29	; select bank29
 16591  0EDD  05A1               	andwf	33,f	;volatile
 16592                           
 16593                           ;GPports.c: 194: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 16594  0EDE  3055               	movlw	85
 16595  0EDF  003C               	movlb	28	; select bank28
 16596  0EE0  008F               	movwf	15	;volsfr
 16597  0EE1  30AA               	movlw	170
 16598  0EE2  008F               	movwf	15	;volsfr
 16599  0EE3  140F               	bsf	15,0	;volsfr
 16600                           
 16601                           ;GPports.c: 195: CCP2CON = 0;
 16602  0EE4  0025               	movlb	5	; select bank5
 16603  0EE5  0197               	clrf	23	;volatile
 16604                           
 16605                           ;GPports.c: 196: switch (GP2CONF & 0x03) {
 16606  0EE6  2F14               	goto	i1l4684
 16607  0EE7                     i1l1003:	
 16608                           ;GPports.c: 198: do { ANSELCbits.ANSC1 = 0; } while(0);
 16609                           
 16610  0EE7  0023               	movlb	3	; select bank3
 16611  0EE8  108E               	bcf	14,1	;volatile
 16612                           
 16613                           ;GPports.c: 199: do { LATCbits.LATC1 = 1; } while(0);
 16614  0EE9  0022               	movlb	2	; select bank2
 16615  0EEA  148E               	bsf	14,1	;volatile
 16616                           
 16617                           ;GPports.c: 200: do { TRISCbits.TRISC1 = 0; } while(0);
 16618  0EEB  0021               	movlb	1	; select bank1
 16619  0EEC  108E               	bcf	14,1	;volatile
 16620                           
 16621                           ;GPports.c: 201: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 16622  0EED  3055               	movlw	85
 16623  0EEE  003C               	movlb	28	; select bank28
 16624  0EEF  008F               	movwf	15	;volsfr
 16625  0EF0  30AA               	movlw	170
 16626  0EF1  008F               	movwf	15	;volsfr
 16627  0EF2  100F               	bcf	15,0	;volsfr
 16628                           
 16629                           ;GPports.c: 202: RC1PPSbits.RC1PPS = 0x0D;
 16630  0EF3  003D               	movlb	29	; select bank29
 16631  0EF4  0821               	movf	33,w	;volatile
 16632  0EF5  39E0               	andlw	-32
 16633  0EF6  380D               	iorlw	13
 16634  0EF7  00A1               	movwf	33	;volatile
 16635                           
 16636                           ;GPports.c: 203: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 16637  0EF8  3055               	movlw	85
 16638  0EF9  003C               	movlb	28	; select bank28
 16639  0EFA  008F               	movwf	15	;volsfr
 16640  0EFB  30AA               	movlw	170
 16641  0EFC  008F               	movwf	15	;volsfr
 16642  0EFD  140F               	bsf	15,0	;volsfr
 16643                           
 16644                           ;GPports.c: 204: PWM2_Initialize();
 16645  0EFE  2741  318C         	fcall	_PWM2_Initialize
 16646                           
 16647                           ;GPports.c: 205: PWM_GP2(0);
 16648  0F00  3000               	movlw	0
 16649  0F01  25B8  318C         	fcall	i1_PWM_GP2
 16650                           
 16651                           ;GPports.c: 206: break;
 16652  0F03  2F2E               	goto	i1l4688
 16653  0F04                     i1l1011:	
 16654                           ;GPports.c: 209: do { ANSELCbits.ANSC1 = 0; } while(0);
 16655                           
 16656  0F04  0023               	movlb	3	; select bank3
 16657  0F05  108E               	bcf	14,1	;volatile
 16658                           
 16659                           ;GPports.c: 210: do { TRISCbits.TRISC1 = 0; } while(0);
 16660  0F06  0021               	movlb	1	; select bank1
 16661  0F07  108E               	bcf	14,1	;volatile
 16662                           
 16663                           ;GPports.c: 211: do { ODCONCbits.ODCC1 = 0; } while(0);
 16664  0F08  0025               	movlb	5	; select bank5
 16665  0F09  108E               	bcf	14,1	;volatile
 16666  0F0A  2F2E               	goto	i1l4688
 16667  0F0B                     i1l1018:	
 16668                           ;GPports.c: 215: do { TRISCbits.TRISC1 = 1; } while(0);
 16669                           
 16670  0F0B  0021               	movlb	1	; select bank1
 16671  0F0C  148E               	bsf	14,1	;volatile
 16672                           
 16673                           ;GPports.c: 216: do { ANSELCbits.ANSC1 = 1; } while(0);
 16674  0F0D  0023               	movlb	3	; select bank3
 16675  0F0E  2F12               	goto	L9
 16676  0F0F                     i1l1023:	
 16677                           ;GPports.c: 220: do { ANSELCbits.ANSC1 = 0; } while(0);
 16678                           
 16679  0F0F  0023               	movlb	3	; select bank3
 16680  0F10  108E               	bcf	14,1	;volatile
 16681                           
 16682                           ;GPports.c: 221: do { TRISCbits.TRISC1 = 1; } while(0);
 16683  0F11  0021               	movlb	1	; select bank1
 16684  0F12                     L9:	
 16685  0F12  148E               	bsf	14,1	;volatile
 16686  0F13  2F2E               	goto	i1l4688
 16687  0F14                     i1l4684:	
 16688  0F14  0020               	movlb	0	; select bank0
 16689  0F15  0847               	movf	_GP2CONF,w	;volatile
 16690  0F16  3903               	andlw	3
 16691  0F17  00CB               	movwf	??_Config_GP2
 16692  0F18  01CC               	clrf	??_Config_GP2+1
 16693                           
 16694                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16695                           ; Switch size 1, requested type "speed"
 16696                           ; Number of cases is 1, Range of values is 0 to 0
 16697                           ; switch strategies available:
 16698                           ; Name         Instructions Cycles
 16699                           ; simple_byte            4     3 (average)
 16700                           ; direct_byte            8     6 (fixed)
 16701                           ; jumptable            260     6 (fixed)
 16702                           ;	Chosen strategy is simple_byte
 16703  0F19  084C               	movf	??_Config_GP2+1,w
 16704  0F1A  3A00               	xorlw	0	; case 0
 16705  0F1B  1903               	skipnz
 16706  0F1C  2F1E               	goto	i1l7768
 16707  0F1D  2F2E               	goto	i1l4688
 16708  0F1E                     i1l7768:	
 16709                           
 16710                           ; Switch size 1, requested type "speed"
 16711                           ; Number of cases is 4, Range of values is 0 to 3
 16712                           ; switch strategies available:
 16713                           ; Name         Instructions Cycles
 16714                           ; direct_byte           14     6 (fixed)
 16715                           ; simple_byte           13     7 (average)
 16716                           ; jumptable            260     6 (fixed)
 16717                           ;	Chosen strategy is direct_byte
 16718  0F1E  084B               	movf	??_Config_GP2,w
 16719  0F1F  0084               	movwf	4
 16720  0F20  3004               	movlw	4
 16721  0F21  0204               	subwf	4,w
 16722  0F22  1803               	skipnc
 16723  0F23  2F2E               	goto	i1l4688
 16724  0F24  3190               	movlp	high i1S7770
 16725  0F25  3504               	lslf	4,w
 16726  0F26  3E5C               	addlw	low i1S7770
 16727  0F27  0082               	movwf	2
 16728  0F28                     i1l1029:	
 16729                           ;GPports.c: 227: do { WPUCbits.WPUC1 = 0; } while(0);
 16730                           
 16731  0F28  0024               	movlb	4	; select bank4
 16732  0F29  108E               	bcf	14,1	;volatile
 16733  0F2A  0008               	return
 16734  0F2B                     i1l1033:	
 16735                           ;GPports.c: 230: do { WPUCbits.WPUC1 = 1; } while(0);
 16736                           
 16737  0F2B  0024               	movlb	4	; select bank4
 16738  0F2C  148E               	bsf	14,1	;volatile
 16739  0F2D  0008               	return
 16740  0F2E                     i1l4688:	
 16741  0F2E  0020               	movlb	0	; select bank0
 16742  0F2F  0847               	movf	_GP2CONF,w	;volatile
 16743  0F30  3904               	andlw	4
 16744  0F31  00CB               	movwf	??_Config_GP2
 16745  0F32  01CC               	clrf	??_Config_GP2+1
 16746                           
 16747                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16748                           ; Switch size 1, requested type "speed"
 16749                           ; Number of cases is 1, Range of values is 0 to 0
 16750                           ; switch strategies available:
 16751                           ; Name         Instructions Cycles
 16752                           ; simple_byte            4     3 (average)
 16753                           ; direct_byte            8     6 (fixed)
 16754                           ; jumptable            260     6 (fixed)
 16755                           ;	Chosen strategy is simple_byte
 16756  0F33  084C               	movf	??_Config_GP2+1,w
 16757  0F34  3A00               	xorlw	0	; case 0
 16758  0F35  1903               	skipnz
 16759  0F36  2F38               	goto	i1l7772
 16760  0F37  2F40               	goto	i1l1035
 16761  0F38                     i1l7772:	
 16762                           
 16763                           ; Switch size 1, requested type "speed"
 16764                           ; Number of cases is 2, Range of values is 0 to 4
 16765                           ; switch strategies available:
 16766                           ; Name         Instructions Cycles
 16767                           ; simple_byte            7     4 (average)
 16768                           ; direct_byte           16     6 (fixed)
 16769                           ; jumptable            260     6 (fixed)
 16770                           ;	Chosen strategy is simple_byte
 16771  0F38  084B               	movf	??_Config_GP2,w
 16772  0F39  3A00               	xorlw	0	; case 0
 16773  0F3A  1903               	skipnz
 16774  0F3B  2F28               	goto	i1l1029
 16775  0F3C  3A04               	xorlw	4	; case 4
 16776  0F3D  1903               	skipnz
 16777  0F3E  2F2B               	goto	i1l1033
 16778  0F3F  2F40               	goto	i1l1035
 16779  0F40                     i1l1035:	
 16780  0F40  0008               	return
 16781  0F41                     __end_of_Config_GP2:	
 16782  0F41                     __ptext65:	
 16783 ;; *************** function _PWM2_Initialize *****************
 16784 ;; Defined at:
 16785 ;;		line 64 in file "mcc_generated_files/pwm2.c"
 16786 ;; Parameters:    Size  Location     Type
 16787 ;;		None
 16788 ;; Auto vars:     Size  Location     Type
 16789 ;;		None
 16790 ;; Return value:  Size  Location     Type
 16791 ;;                  1    wreg      void 
 16792 ;; Registers used:
 16793 ;;		wreg, status,2, status,0
 16794 ;; Tracked objects:
 16795 ;;		On entry : 1F/1C
 16796 ;;		On exit  : 1F/5
 16797 ;;		Unchanged: 0/0
 16798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16803 ;;Total ram usage:        0 bytes
 16804 ;; Hardware stack levels used:    1
 16805 ;; This function calls:
 16806 ;;		Nothing
 16807 ;; This function is called by:
 16808 ;;		_Config_GP2
 16809 ;; This function uses a non-reentrant model
 16810 ;;
 16811                           
 16812                           
 16813                           ;psect for function _PWM2_Initialize
 16814  0F41                     _PWM2_Initialize:	
 16815                           
 16816                           ;pwm2.c: 69: CCP2CON = 0x8F;
 16817                           
 16818                           ;incstack = 0
 16819                           ; Regs used in _PWM2_Initialize: [wreg+status,2+status,0]
 16820  0F41  308F               	movlw	143
 16821  0F42  0025               	movlb	5	; select bank5
 16822  0F43  0097               	movwf	23	;volatile
 16823                           
 16824                           ;pwm2.c: 72: CCPR2H = 0x03;
 16825  0F44  3003               	movlw	3
 16826  0F45  0096               	movwf	22	;volatile
 16827                           
 16828                           ;pwm2.c: 75: CCPR2L = 0xFF;
 16829  0F46  30FF               	movlw	255
 16830  0F47  0095               	movwf	21	;volatile
 16831                           
 16832                           ;pwm2.c: 78: CCPTMRSbits.C2TSEL = 0x1;
 16833  0F48  081F               	movf	31,w	;volatile
 16834  0F49  39F3               	andlw	-13
 16835  0F4A  3804               	iorlw	4
 16836  0F4B  009F               	movwf	31	;volatile
 16837  0F4C  0008               	return
 16838  0F4D                     __end_of_PWM2_Initialize:	
 16839  0F4D                     __ptext60:	
 16840 ;; *************** function _Config_GP3 *****************
 16841 ;; Defined at:
 16842 ;;		line 240 in file "GPports.c"
 16843 ;; Parameters:    Size  Location     Type
 16844 ;;		None
 16845 ;; Auto vars:     Size  Location     Type
 16846 ;;		None
 16847 ;; Return value:  Size  Location     Type
 16848 ;;                  1    wreg      void 
 16849 ;; Registers used:
 16850 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16851 ;; Tracked objects:
 16852 ;;		On entry : 1F/0
 16853 ;;		On exit  : 1B/0
 16854 ;;		Unchanged: 0/0
 16855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16858 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16859 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16860 ;;Total ram usage:        2 bytes
 16861 ;; Hardware stack levels used:    1
 16862 ;; Hardware stack levels required when called:    2
 16863 ;; This function calls:
 16864 ;;		_PWM3_Initialize
 16865 ;;		i1_PWM_GP3
 16866 ;; This function is called by:
 16867 ;;		_RegisterWrite
 16868 ;; This function uses a non-reentrant model
 16869 ;;
 16870                           
 16871                           
 16872                           ;psect for function _Config_GP3
 16873  0F4D                     _Config_GP3:	
 16874                           
 16875                           ;GPports.c: 242: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 16876                           
 16877                           ;incstack = 0
 16878                           ; Regs used in _Config_GP3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 16879  0F4D  3055               	movlw	85
 16880  0F4E  003C               	movlb	28	; select bank28
 16881  0F4F  008F               	movwf	15	;volsfr
 16882  0F50  30AA               	movlw	170
 16883  0F51  008F               	movwf	15	;volsfr
 16884  0F52  100F               	bcf	15,0	;volsfr
 16885                           
 16886                           ;GPports.c: 243: RC0PPSbits.RC0PPS = 0x00;
 16887  0F53  30E0               	movlw	-32
 16888  0F54  003D               	movlb	29	; select bank29
 16889  0F55  05A0               	andwf	32,f	;volatile
 16890                           
 16891                           ;GPports.c: 244: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 16892  0F56  3055               	movlw	85
 16893  0F57  003C               	movlb	28	; select bank28
 16894  0F58  008F               	movwf	15	;volsfr
 16895  0F59  30AA               	movlw	170
 16896  0F5A  008F               	movwf	15	;volsfr
 16897  0F5B  140F               	bsf	15,0	;volsfr
 16898                           
 16899                           ;GPports.c: 245: CCP3CON = 0;
 16900  0F5C  0026               	movlb	6	; select bank6
 16901  0F5D  0193               	clrf	19	;volatile
 16902                           
 16903                           ;GPports.c: 246: switch (GP3CONF & 0x03) {
 16904  0F5E  2F8C               	goto	i1l4734
 16905  0F5F                     i1l1040:	
 16906                           ;GPports.c: 248: do { ANSELCbits.ANSC0 = 0; } while(0);
 16907                           
 16908  0F5F  0023               	movlb	3	; select bank3
 16909  0F60  100E               	bcf	14,0	;volatile
 16910                           
 16911                           ;GPports.c: 249: do { LATCbits.LATC0 = 1; } while(0);
 16912  0F61  0022               	movlb	2	; select bank2
 16913  0F62  140E               	bsf	14,0	;volatile
 16914                           
 16915                           ;GPports.c: 250: do { TRISCbits.TRISC0 = 0; } while(0);
 16916  0F63  0021               	movlb	1	; select bank1
 16917  0F64  100E               	bcf	14,0	;volatile
 16918                           
 16919                           ;GPports.c: 251: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 16920  0F65  3055               	movlw	85
 16921  0F66  003C               	movlb	28	; select bank28
 16922  0F67  008F               	movwf	15	;volsfr
 16923  0F68  30AA               	movlw	170
 16924  0F69  008F               	movwf	15	;volsfr
 16925  0F6A  100F               	bcf	15,0	;volsfr
 16926                           
 16927                           ;GPports.c: 252: RC0PPSbits.RC0PPS = 0x0E;
 16928  0F6B  003D               	movlb	29	; select bank29
 16929  0F6C  0820               	movf	32,w	;volatile
 16930  0F6D  39E0               	andlw	-32
 16931  0F6E  380E               	iorlw	14
 16932  0F6F  00A0               	movwf	32	;volatile
 16933                           
 16934                           ;GPports.c: 253: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 16935  0F70  3055               	movlw	85
 16936  0F71  003C               	movlb	28	; select bank28
 16937  0F72  008F               	movwf	15	;volsfr
 16938  0F73  30AA               	movlw	170
 16939  0F74  008F               	movwf	15	;volsfr
 16940  0F75  140F               	bsf	15,0	;volsfr
 16941                           
 16942                           ;GPports.c: 254: PWM3_Initialize();
 16943  0F76  27B9  318C         	fcall	_PWM3_Initialize
 16944                           
 16945                           ;GPports.c: 255: PWM_GP3(0);
 16946  0F78  3000               	movlw	0
 16947  0F79  253A  318C         	fcall	i1_PWM_GP3
 16948                           
 16949                           ;GPports.c: 256: break;
 16950  0F7B  2FA6               	goto	i1l4738
 16951  0F7C                     i1l1048:	
 16952                           ;GPports.c: 259: do { ANSELCbits.ANSC0 = 0; } while(0);
 16953                           
 16954  0F7C  0023               	movlb	3	; select bank3
 16955  0F7D  100E               	bcf	14,0	;volatile
 16956                           
 16957                           ;GPports.c: 260: do { TRISCbits.TRISC0 = 0; } while(0);
 16958  0F7E  0021               	movlb	1	; select bank1
 16959  0F7F  100E               	bcf	14,0	;volatile
 16960                           
 16961                           ;GPports.c: 261: do { ODCONCbits.ODCC0 = 0; } while(0);
 16962  0F80  0025               	movlb	5	; select bank5
 16963  0F81  100E               	bcf	14,0	;volatile
 16964  0F82  2FA6               	goto	i1l4738
 16965  0F83                     i1l1055:	
 16966                           ;GPports.c: 265: do { TRISCbits.TRISC0 = 1; } while(0);
 16967                           
 16968  0F83  0021               	movlb	1	; select bank1
 16969  0F84  140E               	bsf	14,0	;volatile
 16970                           
 16971                           ;GPports.c: 266: do { ANSELCbits.ANSC0 = 1; } while(0);
 16972  0F85  0023               	movlb	3	; select bank3
 16973  0F86  2F8A               	goto	L8
 16974  0F87                     i1l1060:	
 16975                           ;GPports.c: 270: do { ANSELCbits.ANSC0 = 0; } while(0);
 16976                           
 16977  0F87  0023               	movlb	3	; select bank3
 16978  0F88  100E               	bcf	14,0	;volatile
 16979                           
 16980                           ;GPports.c: 271: do { TRISCbits.TRISC0 = 1; } while(0);
 16981  0F89  0021               	movlb	1	; select bank1
 16982  0F8A                     L8:	
 16983  0F8A  140E               	bsf	14,0	;volatile
 16984  0F8B  2FA6               	goto	i1l4738
 16985  0F8C                     i1l4734:	
 16986  0F8C  0020               	movlb	0	; select bank0
 16987  0F8D  0846               	movf	_GP3CONF,w	;volatile
 16988  0F8E  3903               	andlw	3
 16989  0F8F  00CB               	movwf	??_Config_GP3
 16990  0F90  01CC               	clrf	??_Config_GP3+1
 16991                           
 16992                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16993                           ; Switch size 1, requested type "speed"
 16994                           ; Number of cases is 1, Range of values is 0 to 0
 16995                           ; switch strategies available:
 16996                           ; Name         Instructions Cycles
 16997                           ; simple_byte            4     3 (average)
 16998                           ; direct_byte            8     6 (fixed)
 16999                           ; jumptable            260     6 (fixed)
 17000                           ;	Chosen strategy is simple_byte
 17001  0F91  084C               	movf	??_Config_GP3+1,w
 17002  0F92  3A00               	xorlw	0	; case 0
 17003  0F93  1903               	skipnz
 17004  0F94  2F96               	goto	i1l7762
 17005  0F95  2FA6               	goto	i1l4738
 17006  0F96                     i1l7762:	
 17007                           
 17008                           ; Switch size 1, requested type "speed"
 17009                           ; Number of cases is 4, Range of values is 0 to 3
 17010                           ; switch strategies available:
 17011                           ; Name         Instructions Cycles
 17012                           ; direct_byte           14     6 (fixed)
 17013                           ; simple_byte           13     7 (average)
 17014                           ; jumptable            260     6 (fixed)
 17015                           ;	Chosen strategy is direct_byte
 17016  0F96  084B               	movf	??_Config_GP3,w
 17017  0F97  0084               	movwf	4
 17018  0F98  3004               	movlw	4
 17019  0F99  0204               	subwf	4,w
 17020  0F9A  1803               	skipnc
 17021  0F9B  2FA6               	goto	i1l4738
 17022  0F9C  3190               	movlp	high i1S7764
 17023  0F9D  3504               	lslf	4,w
 17024  0F9E  3E54               	addlw	low i1S7764
 17025  0F9F  0082               	movwf	2
 17026  0FA0                     i1l1066:	
 17027                           ;GPports.c: 277: do { WPUCbits.WPUC0 = 0; } while(0);
 17028                           
 17029  0FA0  0024               	movlb	4	; select bank4
 17030  0FA1  100E               	bcf	14,0	;volatile
 17031  0FA2  0008               	return
 17032  0FA3                     i1l1070:	
 17033                           ;GPports.c: 280: do { WPUCbits.WPUC0 = 1; } while(0);
 17034                           
 17035  0FA3  0024               	movlb	4	; select bank4
 17036  0FA4  140E               	bsf	14,0	;volatile
 17037  0FA5  0008               	return
 17038  0FA6                     i1l4738:	
 17039  0FA6  0020               	movlb	0	; select bank0
 17040  0FA7  0846               	movf	_GP3CONF,w	;volatile
 17041  0FA8  3904               	andlw	4
 17042  0FA9  00CB               	movwf	??_Config_GP3
 17043  0FAA  01CC               	clrf	??_Config_GP3+1
 17044                           
 17045                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17046                           ; Switch size 1, requested type "speed"
 17047                           ; Number of cases is 1, Range of values is 0 to 0
 17048                           ; switch strategies available:
 17049                           ; Name         Instructions Cycles
 17050                           ; simple_byte            4     3 (average)
 17051                           ; direct_byte            8     6 (fixed)
 17052                           ; jumptable            260     6 (fixed)
 17053                           ;	Chosen strategy is simple_byte
 17054  0FAB  084C               	movf	??_Config_GP3+1,w
 17055  0FAC  3A00               	xorlw	0	; case 0
 17056  0FAD  1903               	skipnz
 17057  0FAE  2FB0               	goto	i1l7766
 17058  0FAF  2FB8               	goto	i1l1072
 17059  0FB0                     i1l7766:	
 17060                           
 17061                           ; Switch size 1, requested type "speed"
 17062                           ; Number of cases is 2, Range of values is 0 to 4
 17063                           ; switch strategies available:
 17064                           ; Name         Instructions Cycles
 17065                           ; simple_byte            7     4 (average)
 17066                           ; direct_byte           16     6 (fixed)
 17067                           ; jumptable            260     6 (fixed)
 17068                           ;	Chosen strategy is simple_byte
 17069  0FB0  084B               	movf	??_Config_GP3,w
 17070  0FB1  3A00               	xorlw	0	; case 0
 17071  0FB2  1903               	skipnz
 17072  0FB3  2FA0               	goto	i1l1066
 17073  0FB4  3A04               	xorlw	4	; case 4
 17074  0FB5  1903               	skipnz
 17075  0FB6  2FA3               	goto	i1l1070
 17076  0FB7  2FB8               	goto	i1l1072
 17077  0FB8                     i1l1072:	
 17078  0FB8  0008               	return
 17079  0FB9                     __end_of_Config_GP3:	
 17080  0FB9                     __ptext62:	
 17081 ;; *************** function _PWM3_Initialize *****************
 17082 ;; Defined at:
 17083 ;;		line 64 in file "mcc_generated_files/pwm3.c"
 17084 ;; Parameters:    Size  Location     Type
 17085 ;;		None
 17086 ;; Auto vars:     Size  Location     Type
 17087 ;;		None
 17088 ;; Return value:  Size  Location     Type
 17089 ;;                  1    wreg      void 
 17090 ;; Registers used:
 17091 ;;		wreg, status,2, status,0
 17092 ;; Tracked objects:
 17093 ;;		On entry : 1F/1C
 17094 ;;		On exit  : 1F/5
 17095 ;;		Unchanged: 0/0
 17096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17101 ;;Total ram usage:        0 bytes
 17102 ;; Hardware stack levels used:    1
 17103 ;; This function calls:
 17104 ;;		Nothing
 17105 ;; This function is called by:
 17106 ;;		_Config_GP3
 17107 ;; This function uses a non-reentrant model
 17108 ;;
 17109                           
 17110                           
 17111                           ;psect for function _PWM3_Initialize
 17112  0FB9                     _PWM3_Initialize:	
 17113                           
 17114                           ;pwm3.c: 69: CCP3CON = 0x8F;
 17115                           
 17116                           ;incstack = 0
 17117                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
 17118  0FB9  308F               	movlw	143
 17119  0FBA  0026               	movlb	6	; select bank6
 17120  0FBB  0093               	movwf	19	;volatile
 17121                           
 17122                           ;pwm3.c: 72: CCPR3H = 0x03;
 17123  0FBC  3003               	movlw	3
 17124  0FBD  0092               	movwf	18	;volatile
 17125                           
 17126                           ;pwm3.c: 75: CCPR3L = 0xFF;
 17127  0FBE  30FF               	movlw	255
 17128  0FBF  0091               	movwf	17	;volatile
 17129                           
 17130                           ;pwm3.c: 78: CCPTMRSbits.C3TSEL = 0x1;
 17131  0FC0  0025               	movlb	5	; select bank5
 17132  0FC1  081F               	movf	31,w	;volatile
 17133  0FC2  39CF               	andlw	-49
 17134  0FC3  3810               	iorlw	16
 17135  0FC4  009F               	movwf	31	;volatile
 17136  0FC5  0008               	return
 17137  0FC6                     __end_of_PWM3_Initialize:	
 17138  0FC6                     __ptext56:	
 17139 ;; *************** function _GeneralDataSplit *****************
 17140 ;; Defined at:
 17141 ;;		line 86 in file "DataVariable.c"
 17142 ;; Parameters:    Size  Location     Type
 17143 ;;		None
 17144 ;; Auto vars:     Size  Location     Type
 17145 ;;		None
 17146 ;; Return value:  Size  Location     Type
 17147 ;;                  1    wreg      void 
 17148 ;; Registers used:
 17149 ;;		wreg, status,2, status,0
 17150 ;; Tracked objects:
 17151 ;;		On entry : 1F/0
 17152 ;;		On exit  : 1F/1
 17153 ;;		Unchanged: 0/0
 17154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17157 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17158 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17159 ;;Total ram usage:        1 bytes
 17160 ;; Hardware stack levels used:    1
 17161 ;; This function calls:
 17162 ;;		Nothing
 17163 ;; This function is called by:
 17164 ;;		_RegisterWrite
 17165 ;; This function uses a non-reentrant model
 17166 ;;
 17167                           
 17168                           
 17169                           ;psect for function _GeneralDataSplit
 17170  0FC6                     _GeneralDataSplit:	
 17171                           
 17172                           ;DataVariable.c: 88: C_DTYPE = GCONF & 0x01U;
 17173                           
 17174                           ;incstack = 0
 17175                           ; Regs used in _GeneralDataSplit: [wreg+status,2+status,0]
 17176  0FC6  0849               	movf	_GCONF,w	;volatile
 17177  0FC7  00B9               	movwf	_C_DTYPE	;volatile
 17178  0FC8  3001               	movlw	1
 17179  0FC9  05B9               	andwf	_C_DTYPE,f	;volatile
 17180                           
 17181                           ;DataVariable.c: 89: C_WRAPE = (bool) (GCONF >> 1) & 0x01U;
 17182  0FCA  3649               	lsrf	_GCONF,w	;volatile
 17183  0FCB  00BA               	movwf	_C_WRAPE	;volatile
 17184  0FCC  3001               	movlw	1
 17185  0FCD  05BA               	andwf	_C_WRAPE,f	;volatile
 17186                           
 17187                           ;DataVariable.c: 90: C_DIRE = (bool) (GCONF >> 2) & 0x01U;
 17188  0FCE  0849               	movf	_GCONF,w	;volatile
 17189  0FCF  00F0               	movwf	??_GeneralDataSplit
 17190  0FD0  36F0               	lsrf	??_GeneralDataSplit,f
 17191  0FD1  36F0               	lsrf	??_GeneralDataSplit,f
 17192  0FD2  0870               	movf	??_GeneralDataSplit,w
 17193  0FD3  0021               	movlb	1	; select bank1
 17194  0FD4  00C2               	movwf	_C_DIRE^(0+128)	;volatile
 17195  0FD5  3001               	movlw	1
 17196  0FD6  05C2               	andwf	_C_DIRE^(0+128),f	;volatile
 17197                           
 17198                           ;DataVariable.c: 91: C_IPUD = (bool) (GCONF >> 3) & 0x01U;
 17199  0FD7  0020               	movlb	0	; select bank0
 17200  0FD8  0849               	movf	_GCONF,w	;volatile
 17201  0FD9  00F0               	movwf	??_GeneralDataSplit
 17202  0FDA  36F0               	lsrf	??_GeneralDataSplit,f
 17203  0FDB  36F0               	lsrf	??_GeneralDataSplit,f
 17204  0FDC  36F0               	lsrf	??_GeneralDataSplit,f
 17205  0FDD  0870               	movf	??_GeneralDataSplit,w
 17206  0FDE  0021               	movlb	1	; select bank1
 17207  0FDF  00C3               	movwf	_C_IPUD^(0+128)	;volatile
 17208  0FE0  3001               	movlw	1
 17209  0FE1  05C3               	andwf	_C_IPUD^(0+128),f	;volatile
 17210                           
 17211                           ;DataVariable.c: 92: C_CKSRC = (bool) (GCONF >> 4) & 0x01U;
 17212  0FE2  0020               	movlb	0	; select bank0
 17213  0FE3  0E49               	swapf	_GCONF,w	;volatile
 17214  0FE4  390F               	andlw	15
 17215  0FE5  0021               	movlb	1	; select bank1
 17216  0FE6  00C4               	movwf	_C_CKSRC^(0+128)	;volatile
 17217  0FE7  3001               	movlw	1
 17218  0FE8  05C4               	andwf	_C_CKSRC^(0+128),f	;volatile
 17219                           
 17220                           ;DataVariable.c: 93: C_MBANK = (bool) (GCONF >> 5) & 0x01U;
 17221  0FE9  0020               	movlb	0	; select bank0
 17222  0FEA  0849               	movf	_GCONF,w	;volatile
 17223  0FEB  00F0               	movwf	??_GeneralDataSplit
 17224  0FEC  3005               	movlw	5
 17225  0FED                     u215_25:	
 17226  0FED  36F0               	lsrf	??_GeneralDataSplit,f
 17227  0FEE  0B89               	decfsz	9,f
 17228  0FEF  2FED               	goto	u215_25
 17229  0FF0  0870               	movf	??_GeneralDataSplit,w
 17230  0FF1  00BB               	movwf	_C_MBANK	;volatile
 17231  0FF2  3001               	movlw	1
 17232  0FF3  05BB               	andwf	_C_MBANK,f	;volatile
 17233                           
 17234                           ;DataVariable.c: 94: C_RESET = (bool) (GCONF >> 7) & 0x01U;
 17235  0FF4  0849               	movf	_GCONF,w	;volatile
 17236  0FF5  00F0               	movwf	??_GeneralDataSplit
 17237  0FF6  3007               	movlw	7
 17238  0FF7                     u216_25:	
 17239  0FF7  36F0               	lsrf	??_GeneralDataSplit,f
 17240  0FF8  0B89               	decfsz	9,f
 17241  0FF9  2FF7               	goto	u216_25
 17242  0FFA  0870               	movf	??_GeneralDataSplit,w
 17243  0FFB  0021               	movlb	1	; select bank1
 17244  0FFC  00C5               	movwf	_C_RESET^(0+128)	;volatile
 17245  0FFD  3001               	movlw	1
 17246  0FFE  05C5               	andwf	_C_RESET^(0+128),f	;volatile
 17247  0FFF  0008               	return
 17248  1000                     __end_of_GeneralDataSplit:	
 17249                           
 17250                           	psect	swtext6
 17251  1000                     __pswtext6:	
 17252  1000                     i1S7760:	
 17253  1000  318C  2C08         	ljmp	i1l5048
 17254  1002  318C  2C0F         	ljmp	i1l5054
 17255  1004  318C  2C14         	ljmp	i1l5058
 17256  1006  318C  2C19         	ljmp	i1l5062
 17257  1008  318C  2C1E         	ljmp	i1l5066
 17258  100A  318C  2C21         	ljmp	i1l5068
 17259  100C  318C  2CBB         	ljmp	i1l5146
 17260  100E  318C  2CBB         	ljmp	i1l5146
 17261  1010  318C  2CBB         	ljmp	i1l5146
 17262  1012  318C  2CBB         	ljmp	i1l5146
 17263  1014  318C  2C24         	ljmp	i1l5070
 17264  1016  318C  2C27         	ljmp	i1l5072
 17265  1018  318C  2C2A         	ljmp	i1l5074
 17266  101A  318C  2C2D         	ljmp	i1l5076
 17267  101C  318C  2C30         	ljmp	i1l5078
 17268  101E  318C  2C33         	ljmp	i1l5080
 17269  1020  318C  2C36         	ljmp	i1l5082
 17270  1022  318C  2C39         	ljmp	i1l5084
 17271  1024  318C  2C3C         	ljmp	i1l5086
 17272  1026  318C  2C3F         	ljmp	i1l5088
 17273  1028  318C  2C42         	ljmp	i1l5090
 17274  102A  318C  2C45         	ljmp	i1l5092
 17275  102C  318C  2C48         	ljmp	i1l5094
 17276  102E  318C  2C4B         	ljmp	i1l5096
 17277  1030  318C  2C4E         	ljmp	i1l5098
 17278  1032  318C  2C51         	ljmp	i1l5100
 17279  1034  318C  2C54         	ljmp	i1l5102
 17280  1036  318C  2C60         	ljmp	i1l5108
 17281  1038  318C  2C6C         	ljmp	i1l5114
 17282  103A  318C  2C78         	ljmp	i1l5120
 17283  103C  318C  2C93         	ljmp	i1l5128
 17284  103E  318C  2C96         	ljmp	i1l5130
 17285  1040  318C  2C9F         	ljmp	i1l5134
 17286  1042  318C  2CA8         	ljmp	i1l5138
 17287                           
 17288                           	psect	text52
 17289  12D3                     __ptext52:	
 17290 ;; *************** function _eeprom_write *****************
 17291 ;; Defined at:
 17292 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\pic\__eewrite.c"
 17293 ;; Parameters:    Size  Location     Type
 17294 ;;  addr            1    wreg     unsigned char 
 17295 ;;  value           1    0[COMMON] unsigned char 
 17296 ;; Auto vars:     Size  Location     Type
 17297 ;;  addr            1    1[COMMON] unsigned char 
 17298 ;; Return value:  Size  Location     Type
 17299 ;;                  1    wreg      void 
 17300 ;; Registers used:
 17301 ;;		wreg, status,2
 17302 ;; Tracked objects:
 17303 ;;		On entry : 1F/0
 17304 ;;		On exit  : 1F/11
 17305 ;;		Unchanged: 0/0
 17306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17307 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17308 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17310 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17311 ;;Total ram usage:        2 bytes
 17312 ;; Hardware stack levels used:    1
 17313 ;; This function calls:
 17314 ;;		Nothing
 17315 ;; This function is called by:
 17316 ;;		_RegisterWrite
 17317 ;; This function uses a non-reentrant model
 17318 ;;
 17319                           
 17320                           
 17321                           ;psect for function _eeprom_write
 17322  12D3                     _eeprom_write:	
 17323                           
 17324                           ;incstack = 0
 17325                           ; Regs used in _eeprom_write: [wreg+status,2]
 17326                           ;eeprom_write@addr stored from wreg
 17327  12D3  00F1               	movwf	eeprom_write@addr
 17328  12D4                     i1l1547:	
 17329                           ;__eewrite.c: 8: do { while (NVMCON1bits.WR) { continue; } NVMCON1bits.NVMREGS = 1; NVMA
      +                          DRL = (addr) & 0xFFU; NVMADRH = 0x70; NVMDATH = 0; NVMDATL = (value) & 0xFFU; STATUSbits
      +                          .CARRY = 0; if (INTCONbits.GIE) { STATUSbits.CARRY = 1; } INTCONbits.GIE = 0; NVMCON1bit
      +                          s.W
 17330                           
 17331  12D4  0031               	movlb	17	; select bank17
 17332  12D5  1895               	btfsc	21,1	;volsfr
 17333  12D6  2AD4               	goto	i1l1547
 17334  12D7  1715               	bsf	21,6	;volsfr
 17335  12D8  0871               	movf	eeprom_write@addr,w
 17336  12D9  0091               	movwf	17	;volatile
 17337  12DA  3070               	movlw	112
 17338  12DB  0092               	movwf	18	;volatile
 17339  12DC  0194               	clrf	20	;volatile
 17340  12DD  0870               	movf	eeprom_write@value,w
 17341  12DE  0093               	movwf	19	;volatile
 17342  12DF  1003               	bcf	3,0	;volatile
 17343  12E0  1B8B               	btfsc	11,7	;volatile
 17344  12E1  1403               	bsf	3,0	;volatile
 17345  12E2  138B               	bcf	11,7	;volatile
 17346  12E3  1515               	bsf	21,2	;volsfr
 17347  12E4  3055               	movlw	85
 17348  12E5  0096               	movwf	22	;volsfr
 17349  12E6  30AA               	movlw	170
 17350  12E7  0096               	movwf	22	;volsfr
 17351  12E8  1495               	bsf	21,1	;volsfr
 17352  12E9                     i1l1551:	
 17353  12E9  1895               	btfsc	21,1	;volsfr
 17354  12EA  2AE9               	goto	i1l1551
 17355  12EB  1115               	bcf	21,2	;volsfr
 17356  12EC  1803               	btfsc	3,0	;volatile
 17357  12ED  178B               	bsf	11,7	;volatile
 17358  12EE  0008               	return
 17359  12EF                     __end_of_eeprom_write:	
 17360                           
 17361                           	psect	text53
 17362  12B7                     __ptext53:	
 17363 ;; *************** function _UpdateOut_GP3 *****************
 17364 ;; Defined at:
 17365 ;;		line 330 in file "GPports.c"
 17366 ;; Parameters:    Size  Location     Type
 17367 ;;		None
 17368 ;; Auto vars:     Size  Location     Type
 17369 ;;		None
 17370 ;; Return value:  Size  Location     Type
 17371 ;;                  1    wreg      void 
 17372 ;; Registers used:
 17373 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17374 ;; Tracked objects:
 17375 ;;		On entry : 1F/0
 17376 ;;		On exit  : 19/0
 17377 ;;		Unchanged: 0/0
 17378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17381 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17382 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17383 ;;Total ram usage:        1 bytes
 17384 ;; Hardware stack levels used:    1
 17385 ;; Hardware stack levels required when called:    2
 17386 ;; This function calls:
 17387 ;;		i1_PWM_GP3
 17388 ;; This function is called by:
 17389 ;;		_RegisterWrite
 17390 ;; This function uses a non-reentrant model
 17391 ;;
 17392                           
 17393                           
 17394                           ;psect for function _UpdateOut_GP3
 17395  12B7                     _UpdateOut_GP3:	
 17396                           
 17397                           ;GPports.c: 331: if ((GP3CONF & 0x03) == 0x01) {
 17398                           
 17399                           ;incstack = 0
 17400                           ; Regs used in _UpdateOut_GP3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17401  12B7  3003               	movlw	3
 17402  12B8  0546               	andwf	_GP3CONF,w	;volatile
 17403  12B9  00CB               	movwf	??_UpdateOut_GP3
 17404  12BA  0B4B               	decfsz	??_UpdateOut_GP3,w
 17405  12BB  2AC8               	goto	i1l4788
 17406                           
 17407                           ;GPports.c: 332: if (GP3REG == 0) {
 17408  12BC  0841               	movf	_GP3REG,w	;volatile
 17409  12BD  1D03               	btfss	3,2
 17410  12BE  2AC2               	goto	i1l1104
 17411                           
 17412                           ;GPports.c: 333: do { LATCbits.LATC0 = 0; } while(0);
 17413  12BF  0022               	movlb	2	; select bank2
 17414  12C0  100E               	bcf	14,0	;volatile
 17415  12C1  0008               	return
 17416  12C2                     i1l1104:	
 17417                           ;GPports.c: 335: do { LATCbits.LATC0 = 1; } while(0);
 17418                           
 17419  12C2  0022               	movlb	2	; select bank2
 17420  12C3  140E               	bsf	14,0	;volatile
 17421                           
 17422                           ;GPports.c: 336: GP3REG = 1;
 17423  12C4  3001               	movlw	1
 17424  12C5  0020               	movlb	0	; select bank0
 17425  12C6  00C1               	movwf	_GP3REG	;volatile
 17426  12C7  0008               	return
 17427  12C8                     i1l4788:	
 17428                           
 17429                           ;GPports.c: 339: };GPports.c: 340: if ((GP3CONF & 0x03) == 0x00) {
 17430  12C8  0846               	movf	_GP3CONF,w	;volatile
 17431  12C9  3903               	andlw	3
 17432  12CA  1D03               	btfss	3,2
 17433  12CB  0008               	return
 17434                           
 17435                           ;GPports.c: 341: if (FADEGP == 0) {
 17436  12CC  083F               	movf	_FADEGP,w	;volatile
 17437  12CD  1D03               	btfss	3,2
 17438  12CE  0008               	return
 17439                           
 17440                           ;GPports.c: 342: PWM_GP3(GP3REG);
 17441  12CF  0841               	movf	_GP3REG,w	;volatile
 17442  12D0  318D  253A         	fcall	i1_PWM_GP3
 17443  12D2  0008               	return
 17444  12D3                     __end_of_UpdateOut_GP3:	
 17445                           
 17446                           	psect	text54
 17447  129B                     __ptext54:	
 17448 ;; *************** function _UpdateOut_GP2 *****************
 17449 ;; Defined at:
 17450 ;;		line 309 in file "GPports.c"
 17451 ;; Parameters:    Size  Location     Type
 17452 ;;		None
 17453 ;; Auto vars:     Size  Location     Type
 17454 ;;		None
 17455 ;; Return value:  Size  Location     Type
 17456 ;;                  1    wreg      void 
 17457 ;; Registers used:
 17458 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17459 ;; Tracked objects:
 17460 ;;		On entry : 1F/0
 17461 ;;		On exit  : 18/0
 17462 ;;		Unchanged: 0/0
 17463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17466 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17467 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17468 ;;Total ram usage:        1 bytes
 17469 ;; Hardware stack levels used:    1
 17470 ;; Hardware stack levels required when called:    2
 17471 ;; This function calls:
 17472 ;;		i1_PWM_GP2
 17473 ;; This function is called by:
 17474 ;;		_RegisterWrite
 17475 ;; This function uses a non-reentrant model
 17476 ;;
 17477                           
 17478                           
 17479                           ;psect for function _UpdateOut_GP2
 17480  129B                     _UpdateOut_GP2:	
 17481                           
 17482                           ;GPports.c: 310: if ((GP2CONF & 0x03) == 0x01) {
 17483                           
 17484                           ;incstack = 0
 17485                           ; Regs used in _UpdateOut_GP2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17486  129B  3003               	movlw	3
 17487  129C  0547               	andwf	_GP2CONF,w	;volatile
 17488  129D  00CB               	movwf	??_UpdateOut_GP2
 17489  129E  0B4B               	decfsz	??_UpdateOut_GP2,w
 17490  129F  2AAC               	goto	i1l4774
 17491                           
 17492                           ;GPports.c: 311: if (GP2REG == 0) {
 17493  12A0  0842               	movf	_GP2REG,w	;volatile
 17494  12A1  1D03               	btfss	3,2
 17495  12A2  2AA6               	goto	i1l1092
 17496                           
 17497                           ;GPports.c: 312: do { LATCbits.LATC1 = 0; } while(0);
 17498  12A3  0022               	movlb	2	; select bank2
 17499  12A4  108E               	bcf	14,1	;volatile
 17500  12A5  0008               	return
 17501  12A6                     i1l1092:	
 17502                           ;GPports.c: 314: do { LATCbits.LATC1 = 1; } while(0);
 17503                           
 17504  12A6  0022               	movlb	2	; select bank2
 17505  12A7  148E               	bsf	14,1	;volatile
 17506                           
 17507                           ;GPports.c: 315: GP2REG = 1;
 17508  12A8  3001               	movlw	1
 17509  12A9  0020               	movlb	0	; select bank0
 17510  12AA  00C2               	movwf	_GP2REG	;volatile
 17511  12AB  0008               	return
 17512  12AC                     i1l4774:	
 17513                           
 17514                           ;GPports.c: 318: };GPports.c: 320: if ((GP2CONF & 0x03) == 0x00) {
 17515  12AC  0847               	movf	_GP2CONF,w	;volatile
 17516  12AD  3903               	andlw	3
 17517  12AE  1D03               	btfss	3,2
 17518  12AF  0008               	return
 17519                           
 17520                           ;GPports.c: 321: if (FADEGP == 0) {
 17521  12B0  083F               	movf	_FADEGP,w	;volatile
 17522  12B1  1D03               	btfss	3,2
 17523  12B2  0008               	return
 17524                           
 17525                           ;GPports.c: 322: PWM_GP2(GP2REG);
 17526  12B3  0842               	movf	_GP2REG,w	;volatile
 17527  12B4  318D  25B8         	fcall	i1_PWM_GP2
 17528  12B6  0008               	return
 17529  12B7                     __end_of_UpdateOut_GP2:	
 17530                           
 17531                           	psect	text55
 17532  127F                     __ptext55:	
 17533 ;; *************** function _UpdateOut_GP1 *****************
 17534 ;; Defined at:
 17535 ;;		line 289 in file "GPports.c"
 17536 ;; Parameters:    Size  Location     Type
 17537 ;;		None
 17538 ;; Auto vars:     Size  Location     Type
 17539 ;;		None
 17540 ;; Return value:  Size  Location     Type
 17541 ;;                  1    wreg      void 
 17542 ;; Registers used:
 17543 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17544 ;; Tracked objects:
 17545 ;;		On entry : 1F/0
 17546 ;;		On exit  : 18/0
 17547 ;;		Unchanged: 0/0
 17548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17551 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17552 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17553 ;;Total ram usage:        1 bytes
 17554 ;; Hardware stack levels used:    1
 17555 ;; Hardware stack levels required when called:    2
 17556 ;; This function calls:
 17557 ;;		i1_PWM_GP1
 17558 ;; This function is called by:
 17559 ;;		_RegisterWrite
 17560 ;; This function uses a non-reentrant model
 17561 ;;
 17562                           
 17563                           
 17564                           ;psect for function _UpdateOut_GP1
 17565  127F                     _UpdateOut_GP1:	
 17566                           
 17567                           ;GPports.c: 290: if ((GP1CONF & 0x03) == 0x01) {
 17568                           
 17569                           ;incstack = 0
 17570                           ; Regs used in _UpdateOut_GP1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17571  127F  3003               	movlw	3
 17572  1280  0548               	andwf	_GP1CONF,w	;volatile
 17573  1281  00CB               	movwf	??_UpdateOut_GP1
 17574  1282  0B4B               	decfsz	??_UpdateOut_GP1,w
 17575  1283  2A90               	goto	i1l4760
 17576                           
 17577                           ;GPports.c: 291: if (GP1REG == 0) {
 17578  1284  0843               	movf	_GP1REG,w	;volatile
 17579  1285  1D03               	btfss	3,2
 17580  1286  2A8A               	goto	i1l1080
 17581                           
 17582                           ;GPports.c: 292: do { LATCbits.LATC2 = 0; } while(0);
 17583  1287  0022               	movlb	2	; select bank2
 17584  1288  110E               	bcf	14,2	;volatile
 17585  1289  0008               	return
 17586  128A                     i1l1080:	
 17587                           ;GPports.c: 294: do { LATCbits.LATC2 = 1; } while(0);
 17588                           
 17589  128A  0022               	movlb	2	; select bank2
 17590  128B  150E               	bsf	14,2	;volatile
 17591                           
 17592                           ;GPports.c: 295: GP1REG = 1;
 17593  128C  3001               	movlw	1
 17594  128D  0020               	movlb	0	; select bank0
 17595  128E  00C3               	movwf	_GP1REG	;volatile
 17596  128F  0008               	return
 17597  1290                     i1l4760:	
 17598                           
 17599                           ;GPports.c: 298: };GPports.c: 299: if ((GP1CONF & 0x03) == 0x00) {
 17600  1290  0848               	movf	_GP1CONF,w	;volatile
 17601  1291  3903               	andlw	3
 17602  1292  1D03               	btfss	3,2
 17603  1293  0008               	return
 17604                           
 17605                           ;GPports.c: 300: if (FADEGP == 0) {
 17606  1294  083F               	movf	_FADEGP,w	;volatile
 17607  1295  1D03               	btfss	3,2
 17608  1296  0008               	return
 17609                           
 17610                           ;GPports.c: 301: PWM_GP1(GP1REG);
 17611  1297  0843               	movf	_GP1REG,w	;volatile
 17612  1298  318E  2636         	fcall	i1_PWM_GP1
 17613  129A  0008               	return
 17614  129B                     __end_of_UpdateOut_GP1:	
 17615                           
 17616                           	psect	text57
 17617  12EF                     __ptext57:	
 17618 ;; *************** function _GeneralDataSet *****************
 17619 ;; Defined at:
 17620 ;;		line 449 in file "i2c_register.c"
 17621 ;; Parameters:    Size  Location     Type
 17622 ;;		None
 17623 ;; Auto vars:     Size  Location     Type
 17624 ;;		None
 17625 ;; Return value:  Size  Location     Type
 17626 ;;                  1    wreg      void 
 17627 ;; Registers used:
 17628 ;;		wreg, status,2, status,0, pclath, cstack
 17629 ;; Tracked objects:
 17630 ;;		On entry : 1F/1
 17631 ;;		On exit  : 0/0
 17632 ;;		Unchanged: 0/0
 17633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17638 ;;Total ram usage:        0 bytes
 17639 ;; Hardware stack levels used:    1
 17640 ;; Hardware stack levels required when called:    1
 17641 ;; This function calls:
 17642 ;;		_I2C1_Initialize_ClockStreach
 17643 ;;		i1_I2C1_Initialize
 17644 ;; This function is called by:
 17645 ;;		_RegisterWrite
 17646 ;; This function uses a non-reentrant model
 17647 ;;
 17648                           
 17649                           
 17650                           ;psect for function _GeneralDataSet
 17651  12EF                     _GeneralDataSet:	
 17652                           
 17653                           ;i2c_register.c: 451: if (C_DIRE == 0) {
 17654                           
 17655                           ;incstack = 0
 17656                           ; Regs used in _GeneralDataSet: [wreg+status,2+status,0+pclath+cstack]
 17657  12EF  0842               	movf	_C_DIRE^(0+128),w	;volatile
 17658                           
 17659                           ;i2c_register.c: 452: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 17660  12F0  3055               	movlw	85
 17661  12F1  1D03               	btfss	3,2
 17662  12F2  2B06               	goto	L7
 17663  12F3  003C               	movlb	28	; select bank28
 17664  12F4  008F               	movwf	15	;volsfr
 17665  12F5  30AA               	movlw	170
 17666  12F6  008F               	movwf	15	;volsfr
 17667  12F7  100F               	bcf	15,0	;volsfr
 17668                           
 17669                           ;i2c_register.c: 453: CLCIN1PPSbits.CLCIN1PPS = 0x14;
 17670  12F8  0829               	movf	41,w	;volatile
 17671  12F9  39E0               	andlw	-32
 17672  12FA  3814               	iorlw	20
 17673  12FB  00A9               	movwf	41	;volatile
 17674                           
 17675                           ;i2c_register.c: 454: CLCIN0PPSbits.CLCIN0PPS = 0x15;
 17676  12FC  0828               	movf	40,w	;volatile
 17677  12FD  39E0               	andlw	-32
 17678  12FE  3815               	iorlw	21
 17679  12FF  00A8               	movwf	40	;volatile
 17680                           
 17681                           ;i2c_register.c: 455: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 17682  1300  3055               	movlw	85
 17683  1301  008F               	movwf	15	;volsfr
 17684  1302  30AA               	movlw	170
 17685  1303  008F               	movwf	15	;volsfr
 17686  1304  140F               	bsf	15,0	;volsfr
 17687                           
 17688                           ;i2c_register.c: 456: } else {
 17689  1305  2B18               	goto	i1l4590
 17690  1306                     L7:	
 17691                           ;i2c_register.c: 457: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 17692                           
 17693  1306  003C               	movlb	28	; select bank28
 17694  1307  008F               	movwf	15	;volsfr
 17695  1308  30AA               	movlw	170
 17696  1309  008F               	movwf	15	;volsfr
 17697  130A  100F               	bcf	15,0	;volsfr
 17698                           
 17699                           ;i2c_register.c: 458: CLCIN1PPSbits.CLCIN1PPS = 0x15;
 17700  130B  0829               	movf	41,w	;volatile
 17701  130C  39E0               	andlw	-32
 17702  130D  3815               	iorlw	21
 17703  130E  00A9               	movwf	41	;volatile
 17704                           
 17705                           ;i2c_register.c: 459: CLCIN0PPSbits.CLCIN0PPS = 0x14;
 17706  130F  0828               	movf	40,w	;volatile
 17707  1310  39E0               	andlw	-32
 17708  1311  3814               	iorlw	20
 17709  1312  00A8               	movwf	40	;volatile
 17710                           
 17711                           ;i2c_register.c: 460: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 17712  1313  3055               	movlw	85
 17713  1314  008F               	movwf	15	;volsfr
 17714  1315  30AA               	movlw	170
 17715  1316  008F               	movwf	15	;volsfr
 17716  1317  140F               	bsf	15,0	;volsfr
 17717  1318                     i1l4590:	
 17718                           
 17719                           ;i2c_register.c: 461: };i2c_register.c: 463: if (C_IPUD == 1) {
 17720  1318  0021               	movlb	1	; select bank1
 17721  1319  0B43               	decfsz	_C_IPUD^(0+128),w	;volatile
 17722  131A  2B1E               	goto	i1l836
 17723                           
 17724                           ;i2c_register.c: 464: do { WPUBbits.WPUB5 = 0; } while(0);
 17725  131B  0024               	movlb	4	; select bank4
 17726  131C  128D               	bcf	13,5	;volatile
 17727  131D  2B20               	goto	i1l838
 17728  131E                     i1l836:	
 17729                           ;i2c_register.c: 467: do { WPUBbits.WPUB5 = 1; } while(0);
 17730                           
 17731                           ;i2c_register.c: 465: do { LATBbits.LATB5 = 1; } while(0);
 17732                           
 17733  131E  0024               	movlb	4	; select bank4
 17734  131F  168D               	bsf	13,5	;volatile
 17735  1320                     i1l838:	
 17736                           ;i2c_register.c: 468: do { LATBbits.LATB5 = 1; } while(0);
 17737                           
 17738  1320  0022               	movlb	2	; select bank2
 17739  1321  168D               	bsf	13,5	;volatile
 17740                           
 17741                           ;i2c_register.c: 470: };i2c_register.c: 473: if (C_CKSRC == 1) {
 17742  1322  0021               	movlb	1	; select bank1
 17743  1323  0B44               	decfsz	_C_CKSRC^(0+128),w	;volatile
 17744  1324  2B28               	goto	i1l4596
 17745                           
 17746                           ;i2c_register.c: 474: I2C1_Initialize_ClockStreach();
 17747  1325  232E  3192         	fcall	_I2C1_Initialize_ClockStreach
 17748                           
 17749                           ;i2c_register.c: 475: } else {
 17750  1327  2B2A               	goto	i1l4598
 17751  1328                     i1l4596:	
 17752                           
 17753                           ;i2c_register.c: 476: I2C1_Initialize();
 17754  1328  2342  3192         	fcall	i1_I2C1_Initialize
 17755  132A                     i1l4598:	
 17756                           
 17757                           ;i2c_register.c: 477: };i2c_register.c: 479: if (C_RESET == 1) {
 17758  132A  0B45               	decfsz	_C_RESET^(0+128),w	;volatile
 17759  132B  0008               	return
 17760  132C  0001               	reset	;# 
 17761  132D  0008               	return
 17762  132E                     __end_of_GeneralDataSet:	
 17763  132E                     __ptext59:	
 17764 ;; *************** function _I2C1_Initialize_ClockStreach *****************
 17765 ;; Defined at:
 17766 ;;		line 100 in file "mcc_generated_files/i2c1.c"
 17767 ;; Parameters:    Size  Location     Type
 17768 ;;		None
 17769 ;; Auto vars:     Size  Location     Type
 17770 ;;		None
 17771 ;; Return value:  Size  Location     Type
 17772 ;;                  1    wreg      void 
 17773 ;; Registers used:
 17774 ;;		wreg, status,2
 17775 ;; Tracked objects:
 17776 ;;		On entry : 1F/1
 17777 ;;		On exit  : 1F/1
 17778 ;;		Unchanged: 0/0
 17779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17784 ;;Total ram usage:        0 bytes
 17785 ;; Hardware stack levels used:    1
 17786 ;; This function calls:
 17787 ;;		Nothing
 17788 ;; This function is called by:
 17789 ;;		_GeneralDataSet
 17790 ;; This function uses a non-reentrant model
 17791 ;;
 17792                           
 17793                           
 17794                           ;psect for function _I2C1_Initialize_ClockStreach
 17795  132E                     _I2C1_Initialize_ClockStreach:	
 17796                           
 17797                           ;i2c1.c: 103: SSP1CON1 = 0x00;
 17798                           
 17799                           ;incstack = 0
 17800                           ; Regs used in _I2C1_Initialize_ClockStreach: [wreg+status,2]
 17801  132E  0024               	movlb	4	; select bank4
 17802  132F  0195               	clrf	21	;volatile
 17803                           
 17804                           ;i2c1.c: 104: SSP1CON2 = 0x00;
 17805  1330  0196               	clrf	22	;volatile
 17806                           
 17807                           ;i2c1.c: 106: SSP1STAT = 0x00;
 17808  1331  0194               	clrf	20	;volatile
 17809                           
 17810                           ;i2c1.c: 108: SSP1CON1 = 0x26;
 17811  1332  3026               	movlw	38
 17812  1333  0095               	movwf	21	;volatile
 17813                           
 17814                           ;i2c1.c: 110: SSP1CON2 = 0x01;
 17815  1334  3001               	movlw	1
 17816  1335  0096               	movwf	22	;volatile
 17817                           
 17818                           ;i2c1.c: 112: SSP1CON3 = 0x00;
 17819  1336  0197               	clrf	23	;volatile
 17820                           
 17821                           ;i2c1.c: 114: SSP1MSK = (0x7F << 1);
 17822  1337  30FE               	movlw	254
 17823  1338  0093               	movwf	19	;volatile
 17824                           
 17825                           ;i2c1.c: 116: SSP1ADD = i2c_address;
 17826  1339  0020               	movlb	0	; select bank0
 17827  133A  085E               	movf	_i2c_address,w	;volatile
 17828  133B  0024               	movlb	4	; select bank4
 17829  133C  0092               	movwf	18	;volatile
 17830                           
 17831                           ;i2c1.c: 119: PIR1bits.SSP1IF = 0;
 17832  133D  0020               	movlb	0	; select bank0
 17833  133E  1191               	bcf	17,3	;volatile
 17834                           
 17835                           ;i2c1.c: 121: PIE1bits.SSP1IE = 1;
 17836  133F  0021               	movlb	1	; select bank1
 17837  1340  1591               	bsf	17,3	;volatile
 17838  1341  0008               	return
 17839  1342                     __end_of_I2C1_Initialize_ClockStreach:	
 17840  1342                     __ptext58:	
 17841 ;; *************** function i1_I2C1_Initialize *****************
 17842 ;; Defined at:
 17843 ;;		line 75 in file "mcc_generated_files/i2c1.c"
 17844 ;; Parameters:    Size  Location     Type
 17845 ;;		None
 17846 ;; Auto vars:     Size  Location     Type
 17847 ;;		None
 17848 ;; Return value:  Size  Location     Type
 17849 ;;                  1    wreg      void 
 17850 ;; Registers used:
 17851 ;;		wreg, status,2
 17852 ;; Tracked objects:
 17853 ;;		On entry : 1F/1
 17854 ;;		On exit  : 1F/1
 17855 ;;		Unchanged: 0/0
 17856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17861 ;;Total ram usage:        0 bytes
 17862 ;; Hardware stack levels used:    1
 17863 ;; This function calls:
 17864 ;;		Nothing
 17865 ;; This function is called by:
 17866 ;;		_GeneralDataSet
 17867 ;; This function uses a non-reentrant model
 17868 ;;
 17869                           
 17870                           
 17871                           ;psect for function i1_I2C1_Initialize
 17872  1342                     i1_I2C1_Initialize:	
 17873                           
 17874                           ;i2c1.c: 78: SSP1CON1 = 0x00;
 17875                           
 17876                           ;incstack = 0
 17877                           ; Regs used in i1_I2C1_Initialize: [wreg+status,2]
 17878  1342  0024               	movlb	4	; select bank4
 17879  1343  0195               	clrf	21	;volatile
 17880                           
 17881                           ;i2c1.c: 79: SSP1CON2 = 0x00;
 17882  1344  0196               	clrf	22	;volatile
 17883                           
 17884                           ;i2c1.c: 81: SSP1STAT = 0x00;
 17885  1345  0194               	clrf	20	;volatile
 17886                           
 17887                           ;i2c1.c: 83: SSP1CON1 = 0x26;
 17888  1346  3026               	movlw	38
 17889  1347  0095               	movwf	21	;volatile
 17890                           
 17891                           ;i2c1.c: 85: SSP1CON2 = 0x00;
 17892  1348  0196               	clrf	22	;volatile
 17893                           
 17894                           ;i2c1.c: 87: SSP1CON3 = 0x00;
 17895  1349  0197               	clrf	23	;volatile
 17896                           
 17897                           ;i2c1.c: 89: SSP1MSK = (0x7F << 1);
 17898  134A  30FE               	movlw	254
 17899  134B  0093               	movwf	19	;volatile
 17900                           
 17901                           ;i2c1.c: 91: SSP1ADD = i2c_address;
 17902  134C  0020               	movlb	0	; select bank0
 17903  134D  085E               	movf	_i2c_address,w	;volatile
 17904  134E  0024               	movlb	4	; select bank4
 17905  134F  0092               	movwf	18	;volatile
 17906                           
 17907                           ;i2c1.c: 94: PIR1bits.SSP1IF = 0;
 17908  1350  0020               	movlb	0	; select bank0
 17909  1351  1191               	bcf	17,3	;volatile
 17910                           
 17911                           ;i2c1.c: 96: PIE1bits.SSP1IE = 1;
 17912  1352  0021               	movlb	1	; select bank1
 17913  1353  1591               	bsf	17,3	;volatile
 17914  1354  0008               	return
 17915  1355                     __end_ofi1_I2C1_Initialize:	
 17916                           
 17917                           	psect	swtext7
 17918  1054                     __pswtext7:	
 17919  1054                     i1S7764:	
 17920  1054  318F  2F5F         	ljmp	i1l1040
 17921  1056  318F  2F7C         	ljmp	i1l1048
 17922  1058  318F  2F83         	ljmp	i1l1055
 17923  105A  318F  2F87         	ljmp	i1l1060
 17924                           
 17925                           	psect	swtext8
 17926  105C                     __pswtext8:	
 17927  105C                     i1S7770:	
 17928  105C  318E  2EE7         	ljmp	i1l1003
 17929  105E  318F  2F04         	ljmp	i1l1011
 17930  1060  318F  2F0B         	ljmp	i1l1018
 17931  1062  318F  2F0F         	ljmp	i1l1023
 17932                           
 17933                           	psect	swtext9
 17934  1064                     __pswtext9:	
 17935  1064                     i1S7776:	
 17936  1064  318C  2CE0         	ljmp	i1l966
 17937  1066  318C  2CFD         	ljmp	i1l974
 17938  1068  318D  2D04         	ljmp	i1l981
 17939  106A  318D  2D08         	ljmp	i1l986
 17940                           
 17941                           	psect	swtext10
 17942  0A00                     __pswtext10:	
 17943  0A00                     i1S7780:	
 17944  0A00  318B  2B8A         	ljmp	i1l5162
 17945  0A02  318B  2B8C         	ljmp	i1l5164
 17946  0A04  318B  2B8E         	ljmp	i1l5166
 17947  0A06  318B  2B90         	ljmp	i1l5168
 17948  0A08  318B  2B92         	ljmp	i1l5170
 17949  0A0A  318B  2B94         	ljmp	i1l5172
 17950  0A0C  318B  2B96         	ljmp	i1l5174
 17951  0A0E  318B  2B98         	ljmp	i1l5176
 17952  0A10  318B  2B9E         	ljmp	i1l5178
 17953  0A12  318B  2BA4         	ljmp	i1l5180
 17954  0A14  318B  2BA6         	ljmp	i1l5182
 17955  0A16  318B  2BA8         	ljmp	i1l5184
 17956  0A18  318B  2BAA         	ljmp	i1l5186
 17957  0A1A  318B  2BAC         	ljmp	i1l5188
 17958  0A1C  318B  2BAE         	ljmp	i1l5190
 17959  0A1E  318B  2BB0         	ljmp	i1l5192
 17960  0A20  318B  2BB2         	ljmp	i1l5194
 17961  0A22  318B  2BB4         	ljmp	i1l5196
 17962  0A24  318B  2BB6         	ljmp	i1l5198
 17963  0A26  318B  2BB8         	ljmp	i1l5200
 17964  0A28  318B  2BBA         	ljmp	i1l5202
 17965  0A2A  318B  2BBC         	ljmp	i1l5204
 17966  0A2C  318B  2BBE         	ljmp	i1l5206
 17967  0A2E  318B  2BC0         	ljmp	i1l5208
 17968  0A30  318B  2BC2         	ljmp	i1l5210
 17969  0A32  318B  2BC4         	ljmp	i1l5212
 17970  0A34  318B  2BC6         	ljmp	i1l5214
 17971  0A36  318B  2BC8         	ljmp	i1l5216
 17972  0A38  318B  2BCA         	ljmp	i1l5218
 17973  0A3A  318B  2BCC         	ljmp	i1l5220
 17974  0A3C  318B  2BCE         	ljmp	i1l5222
 17975  0A3E  318B  2BD0         	ljmp	i1l5224
 17976  0A40  318B  2BD2         	ljmp	i1l5226
 17977  0A42  318B  2BD4         	ljmp	i1l5228
 17978  0A44  318B  2BDB         	ljmp	i1l5234
 17979  0A46  318B  2BDB         	ljmp	i1l5234
 17980  0A48  318B  2BDB         	ljmp	i1l5234
 17981  0A4A  318B  2BDB         	ljmp	i1l5234
 17982  0A4C  318B  2BDB         	ljmp	i1l5234
 17983  0A4E  318B  2BDB         	ljmp	i1l5234
 17984  0A50  318B  2BDB         	ljmp	i1l5234
 17985  0A52  318B  2BDB         	ljmp	i1l5234
 17986  0A54  318B  2BDB         	ljmp	i1l5234
 17987  0A56  318B  2BDB         	ljmp	i1l5234
 17988  0A58  318B  2BDB         	ljmp	i1l5234
 17989  0A5A  318B  2BDB         	ljmp	i1l5234
 17990  0A5C  318B  2BDB         	ljmp	i1l5234
 17991  0A5E  318B  2BDB         	ljmp	i1l5234
 17992  0A60  318B  2BDB         	ljmp	i1l5234
 17993  0A62  318B  2BDB         	ljmp	i1l5234
 17994  0A64  318B  2BDB         	ljmp	i1l5234
 17995  0A66  318B  2BDB         	ljmp	i1l5234
 17996  0A68  318B  2BDB         	ljmp	i1l5234
 17997  0A6A  318B  2BDB         	ljmp	i1l5234
 17998  0A6C  318B  2BDB         	ljmp	i1l5234
 17999  0A6E  318B  2BDB         	ljmp	i1l5234
 18000  0A70  318B  2BDB         	ljmp	i1l5234
 18001  0A72  318B  2BDB         	ljmp	i1l5234
 18002  0A74  318B  2BDB         	ljmp	i1l5234
 18003  0A76  318B  2BDB         	ljmp	i1l5234
 18004  0A78  318B  2BDB         	ljmp	i1l5234
 18005  0A7A  318B  2BDB         	ljmp	i1l5234
 18006  0A7C  318B  2BDB         	ljmp	i1l5234
 18007  0A7E  318B  2BDB         	ljmp	i1l5234
 18008  0A80  318B  2BDB         	ljmp	i1l5234
 18009  0A82  318B  2BDB         	ljmp	i1l5234
 18010  0A84  318B  2BDB         	ljmp	i1l5234
 18011  0A86  318B  2BDB         	ljmp	i1l5234
 18012  0A88  318B  2BDB         	ljmp	i1l5234
 18013  0A8A  318B  2BDB         	ljmp	i1l5234
 18014  0A8C  318B  2BDB         	ljmp	i1l5234
 18015  0A8E  318B  2BDB         	ljmp	i1l5234
 18016  0A90  318B  2BDB         	ljmp	i1l5234
 18017  0A92  318B  2BDB         	ljmp	i1l5234
 18018  0A94  318B  2BDB         	ljmp	i1l5234
 18019  0A96  318B  2BDB         	ljmp	i1l5234
 18020  0A98  318B  2BDB         	ljmp	i1l5234
 18021  0A9A  318B  2BDB         	ljmp	i1l5234
 18022  0A9C  318B  2BDB         	ljmp	i1l5234
 18023  0A9E  318B  2BDB         	ljmp	i1l5234
 18024  0AA0  318B  2BDB         	ljmp	i1l5234
 18025  0AA2  318B  2BDB         	ljmp	i1l5234
 18026  0AA4  318B  2BDB         	ljmp	i1l5234
 18027  0AA6  318B  2BDB         	ljmp	i1l5234
 18028  0AA8  318B  2BDB         	ljmp	i1l5234
 18029  0AAA  318B  2BDB         	ljmp	i1l5234
 18030  0AAC  318B  2BDB         	ljmp	i1l5234
 18031  0AAE  318B  2BDB         	ljmp	i1l5234
 18032  0AB0  318B  2BDB         	ljmp	i1l5234
 18033  0AB2  318B  2BDB         	ljmp	i1l5234
 18034  0AB4  318B  2BDB         	ljmp	i1l5234
 18035  0AB6  318B  2BDB         	ljmp	i1l5234
 18036  0AB8  318B  2BDB         	ljmp	i1l5234
 18037  0ABA  318B  2BDB         	ljmp	i1l5234
 18038  0ABC  318B  2BDB         	ljmp	i1l5234
 18039  0ABE  318B  2BDB         	ljmp	i1l5234
 18040  0AC0  318B  2BDB         	ljmp	i1l5234
 18041  0AC2  318B  2BDB         	ljmp	i1l5234
 18042  0AC4  318B  2BDB         	ljmp	i1l5234
 18043  0AC6  318B  2BDB         	ljmp	i1l5234
 18044  0AC8  318B  2BDB         	ljmp	i1l5234
 18045  0ACA  318B  2BDB         	ljmp	i1l5234
 18046  0ACC  318B  2BDB         	ljmp	i1l5234
 18047  0ACE  318B  2BDB         	ljmp	i1l5234
 18048  0AD0  318B  2BDB         	ljmp	i1l5234
 18049  0AD2  318B  2BDB         	ljmp	i1l5234
 18050  0AD4  318B  2BDB         	ljmp	i1l5234
 18051  0AD6  318B  2BDB         	ljmp	i1l5234
 18052  0AD8  318B  2BDB         	ljmp	i1l5234
 18053  0ADA  318B  2BDB         	ljmp	i1l5234
 18054  0ADC  318B  2BDB         	ljmp	i1l5234
 18055  0ADE  318B  2BDB         	ljmp	i1l5234
 18056  0AE0  318B  2BD6         	ljmp	i1l5230
 18057  0AE2  318B  2BD8         	ljmp	i1l5232
 18058                           
 18059                           	psect	text73
 18060  14FA                     __ptext73:	
 18061 ;; *************** function _CLC2_ISR *****************
 18062 ;; Defined at:
 18063 ;;		line 89 in file "mcc_generated_files/clc2.c"
 18064 ;; Parameters:    Size  Location     Type
 18065 ;;		None
 18066 ;; Auto vars:     Size  Location     Type
 18067 ;;		None
 18068 ;; Return value:  Size  Location     Type
 18069 ;;                  1    wreg      void 
 18070 ;; Registers used:
 18071 ;;		wreg, status,2, status,0, pclath, cstack
 18072 ;; Tracked objects:
 18073 ;;		On entry : 1F/0
 18074 ;;		On exit  : 1F/0
 18075 ;;		Unchanged: 0/0
 18076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18081 ;;Total ram usage:        0 bytes
 18082 ;; Hardware stack levels used:    1
 18083 ;; Hardware stack levels required when called:    3
 18084 ;; This function calls:
 18085 ;;		_CLC_1_Interrupt
 18086 ;;		_CLC_2_Interrupt
 18087 ;; This function is called by:
 18088 ;;		_INTERRUPT_InterruptManager
 18089 ;; This function uses a non-reentrant model
 18090 ;;
 18091                           
 18092                           
 18093                           ;psect for function _CLC2_ISR
 18094  14FA                     _CLC2_ISR:	
 18095                           
 18096                           ;clc2.c: 90: if (PORTCbits.RC4 == 0 && (PORTCbits.RC5 == 0))
 18097                           
 18098                           ;incstack = 0
 18099                           ; Regs used in _CLC2_ISR: [wreg+status,2+status,0+pclath+cstack]
 18100  14FA  1E0E               	btfss	14,4	;volatile
 18101  14FB  1A8E               	btfsc	14,5	;volatile
 18102  14FC  2D00               	goto	i1l6096
 18103                           
 18104                           ;clc2.c: 91: CLC_1_Interrupt();
 18105  14FD  250E  3194         	fcall	_CLC_1_Interrupt
 18106  14FF  2D01               	goto	i1l6098
 18107  1500                     i1l6096:	
 18108                           
 18109                           ;clc2.c: 92: else;clc2.c: 93: CLC_2_Interrupt();
 18110  1500  2597               	fcall	_CLC_2_Interrupt
 18111  1501                     i1l6098:	
 18112                           
 18113                           ;clc2.c: 95: PIR3bits.CLC2IF = 0;
 18114  1501  0020               	movlb	0	; select bank0
 18115  1502  1093               	bcf	19,1	;volatile
 18116  1503  0008               	return
 18117  1504                     __end_of_CLC2_ISR:	
 18118  1504                     __ptext74:	
 18119 ;; *************** function _CLC1_ISR *****************
 18120 ;; Defined at:
 18121 ;;		line 89 in file "mcc_generated_files/clc1.c"
 18122 ;; Parameters:    Size  Location     Type
 18123 ;;		None
 18124 ;; Auto vars:     Size  Location     Type
 18125 ;;		None
 18126 ;; Return value:  Size  Location     Type
 18127 ;;                  1    wreg      void 
 18128 ;; Registers used:
 18129 ;;		wreg, status,2, status,0, pclath, cstack
 18130 ;; Tracked objects:
 18131 ;;		On entry : 1F/0
 18132 ;;		On exit  : 1F/0
 18133 ;;		Unchanged: 0/0
 18134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18139 ;;Total ram usage:        0 bytes
 18140 ;; Hardware stack levels used:    1
 18141 ;; Hardware stack levels required when called:    3
 18142 ;; This function calls:
 18143 ;;		_CLC_1_Interrupt
 18144 ;;		_CLC_2_Interrupt
 18145 ;; This function is called by:
 18146 ;;		_INTERRUPT_InterruptManager
 18147 ;; This function uses a non-reentrant model
 18148 ;;
 18149                           
 18150                           
 18151                           ;psect for function _CLC1_ISR
 18152  1504                     _CLC1_ISR:	
 18153                           
 18154                           ;clc1.c: 90: if (PORTCbits.RC4 == 0 && (PORTCbits.RC5 == 0))
 18155                           
 18156                           ;incstack = 0
 18157                           ; Regs used in _CLC1_ISR: [wreg+status,2+status,0+pclath+cstack]
 18158  1504  1E0E               	btfss	14,4	;volatile
 18159  1505  1A8E               	btfsc	14,5	;volatile
 18160  1506  2D0A               	goto	i1l6106
 18161                           
 18162                           ;clc1.c: 91: CLC_2_Interrupt();
 18163  1507  2597  3194         	fcall	_CLC_2_Interrupt
 18164  1509  2D0B               	goto	i1l6108
 18165  150A                     i1l6106:	
 18166                           
 18167                           ;clc1.c: 92: else;clc1.c: 93: CLC_1_Interrupt();
 18168  150A  250E               	fcall	_CLC_1_Interrupt
 18169  150B                     i1l6108:	
 18170                           
 18171                           ;clc1.c: 95: PIR3bits.CLC1IF = 0;
 18172  150B  0020               	movlb	0	; select bank0
 18173  150C  1013               	bcf	19,0	;volatile
 18174  150D  0008               	return
 18175  150E                     __end_of_CLC1_ISR:	
 18176  150E                     __ptext77:	
 18177 ;; *************** function _CLC_1_Interrupt *****************
 18178 ;; Defined at:
 18179 ;;		line 24 in file "NavKey.c"
 18180 ;; Parameters:    Size  Location     Type
 18181 ;;		None
 18182 ;; Auto vars:     Size  Location     Type
 18183 ;;		None
 18184 ;; Return value:  Size  Location     Type
 18185 ;;                  1    wreg      void 
 18186 ;; Registers used:
 18187 ;;		wreg, status,2, status,0, pclath, cstack
 18188 ;; Tracked objects:
 18189 ;;		On entry : 1F/0
 18190 ;;		On exit  : 1C/0
 18191 ;;		Unchanged: 0/0
 18192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18195 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18196 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18197 ;;Total ram usage:        4 bytes
 18198 ;; Hardware stack levels used:    1
 18199 ;; Hardware stack levels required when called:    1
 18200 ;; This function calls:
 18201 ;;		___fladd
 18202 ;;		___flge
 18203 ;;		i1_NavKeyStatusUpdate
 18204 ;;		i1_SetInterrupt
 18205 ;; This function is called by:
 18206 ;;		_CLC2_ISR
 18207 ;;		_CLC1_ISR
 18208 ;; This function uses a non-reentrant model
 18209 ;;
 18210                           
 18211                           
 18212                           ;psect for function _CLC_1_Interrupt
 18213  150E                     _CLC_1_Interrupt:	
 18214                           
 18215                           ;NavKey.c: 26: if (en_prev == 1)
 18216                           
 18217                           ;incstack = 0
 18218                           ; Regs used in _CLC_1_Interrupt: [wreg+status,2+status,0+pclath+cstack]
 18219  150E  0021               	movlb	1	; select bank1
 18220  150F  0B39               	decfsz	_en_prev^(0+128),w
 18221  1510  2D18               	goto	i1l5558
 18222                           
 18223                           ;NavKey.c: 27: if (en_deb < 10)
 18224  1511  3000               	movlw	0
 18225  1512  0230               	subwf	(_en_deb+1)^(0+128),w
 18226  1513  300A               	movlw	10
 18227  1514  1903               	skipnz
 18228  1515  022F               	subwf	_en_deb^(0+128),w
 18229  1516  1C03               	btfss	3,0
 18230  1517  0008               	return
 18231  1518                     i1l5558:	
 18232                           
 18233                           ;NavKey.c: 31: en_deb = 0;
 18234  1518  01AF               	clrf	_en_deb^(0+128)
 18235  1519  01B0               	clrf	(_en_deb+1)^(0+128)
 18236                           
 18237                           ;NavKey.c: 32: en_prev = 0;
 18238  151A  01B9               	clrf	_en_prev^(0+128)
 18239                           
 18240                           ;NavKey.c: 34: if (C_DTYPE == 0) {
 18241  151B  0020               	movlb	0	; select bank0
 18242  151C  0839               	movf	_C_DTYPE,w	;volatile
 18243  151D  1D03               	btfss	3,2
 18244  151E  2D4A               	goto	i1l5576
 18245                           
 18246                           ;NavKey.c: 35: CVAL.val = CVAL.val + ISTEP.val;
 18247  151F  082C               	movf	_CVAL,w	;volatile
 18248  1520  0720               	addwf	_ISTEP,w	;volatile
 18249  1521  00D2               	movwf	??_CLC_1_Interrupt
 18250  1522  082D               	movf	_CVAL+1,w	;volatile
 18251  1523  3D21               	addwfc	_ISTEP+1,w	;volatile
 18252  1524  00D3               	movwf	??_CLC_1_Interrupt+1
 18253  1525  082E               	movf	_CVAL+2,w	;volatile
 18254  1526  3D22               	addwfc	_ISTEP+2,w	;volatile
 18255  1527  00D4               	movwf	??_CLC_1_Interrupt+2
 18256  1528  082F               	movf	_CVAL+3,w	;volatile
 18257  1529  3D23               	addwfc	_ISTEP+3,w	;volatile
 18258  152A  00D5               	movwf	??_CLC_1_Interrupt+3
 18259  152B  00AF               	movwf	_CVAL+3	;volatile
 18260  152C  0854               	movf	??_CLC_1_Interrupt+2,w
 18261  152D  00AE               	movwf	_CVAL+2	;volatile
 18262  152E  0853               	movf	??_CLC_1_Interrupt+1,w
 18263  152F  00AD               	movwf	_CVAL+1	;volatile
 18264  1530  0852               	movf	??_CLC_1_Interrupt,w
 18265  1531  00AC               	movwf	_CVAL	;volatile
 18266                           
 18267                           ;NavKey.c: 36: NavKeyStatusUpdate(S_RINC);
 18268  1532  3008               	movlw	8
 18269  1533  01F0               	clrf	i1NavKeyStatusUpdate@stat
 18270  1534  00F1               	movwf	i1NavKeyStatusUpdate@stat+1
 18271  1535  2621  3194         	fcall	i1_NavKeyStatusUpdate
 18272                           
 18273                           ;NavKey.c: 37: if (CVAL.val > CMAX.val) {
 18274  1537  082B               	movf	_CMAX+3,w	;volatile
 18275  1538  3A80               	xorlw	128
 18276  1539  00D2               	movwf	??_CLC_1_Interrupt
 18277  153A  082F               	movf	_CVAL+3,w	;volatile
 18278  153B  3A80               	xorlw	128
 18279  153C  0252               	subwf	??_CLC_1_Interrupt,w
 18280  153D  1D03               	skipz
 18281  153E  2D7C               	goto	L48
 18282  153F  082E               	movf	_CVAL+2,w	;volatile
 18283  1540  022A               	subwf	_CMAX+2,w	;volatile
 18284  1541  1D03               	skipz
 18285  1542  2D7C               	goto	L48
 18286  1543  082D               	movf	_CVAL+1,w	;volatile
 18287  1544  0229               	subwf	_CMAX+1,w	;volatile
 18288  1545  1D03               	skipz
 18289  1546  2D7C               	goto	L48
 18290  1547  082C               	movf	_CVAL,w	;volatile
 18291  1548  0228               	subwf	_CMAX,w	;volatile
 18292  1549  2D7C               	goto	L48
 18293  154A                     i1l5576:	
 18294                           ;NavKey.c: 42: CVAL.val = CMAX.val;
 18295                           
 18296                           ;NavKey.c: 41: } else {
 18297                           
 18298                           ;NavKey.c: 40: CVAL.val = CMIN.val;
 18299                           
 18300                           ;NavKey.c: 39: if (C_WRAPE == 1) {
 18301                           
 18302                           ;NavKey.c: 38: NavKeyStatusUpdate(S_RMAX);
 18303                           
 18304                           
 18305                           ;NavKey.c: 46: CVAL.fval = CVAL.fval + ISTEP.fval;
 18306  154A  0823               	movf	_ISTEP+3,w	;volatile
 18307  154B  00F3               	movwf	___fladd@b+3
 18308  154C  0822               	movf	_ISTEP+2,w	;volatile
 18309  154D  00F2               	movwf	___fladd@b+2
 18310  154E  0821               	movf	_ISTEP+1,w	;volatile
 18311  154F  00F1               	movwf	___fladd@b+1
 18312  1550  0820               	movf	_ISTEP,w	;volatile
 18313  1551  00F0               	movwf	___fladd@b
 18314  1552  082F               	movf	_CVAL+3,w	;volatile
 18315  1553  00F7               	movwf	___fladd@a+3
 18316  1554  082E               	movf	_CVAL+2,w	;volatile
 18317  1555  00F6               	movwf	___fladd@a+2
 18318  1556  082D               	movf	_CVAL+1,w	;volatile
 18319  1557  00F5               	movwf	___fladd@a+1
 18320  1558  082C               	movf	_CVAL,w	;volatile
 18321  1559  00F4               	movwf	___fladd@a
 18322  155A  2688  3194         	fcall	___fladd
 18323  155C  0873               	movf	?___fladd+3,w
 18324  155D  0020               	movlb	0	; select bank0
 18325  155E  00AF               	movwf	_CVAL+3	;volatile
 18326  155F  0872               	movf	?___fladd+2,w
 18327  1560  00AE               	movwf	_CVAL+2	;volatile
 18328  1561  0871               	movf	?___fladd+1,w
 18329  1562  00AD               	movwf	_CVAL+1	;volatile
 18330  1563  0870               	movf	?___fladd,w
 18331  1564  00AC               	movwf	_CVAL	;volatile
 18332                           
 18333                           ;NavKey.c: 47: NavKeyStatusUpdate(S_RINC);
 18334  1565  3008               	movlw	8
 18335  1566  01F0               	clrf	i1NavKeyStatusUpdate@stat
 18336  1567  00F1               	movwf	i1NavKeyStatusUpdate@stat+1
 18337  1568  2621  3194         	fcall	i1_NavKeyStatusUpdate
 18338                           
 18339                           ;NavKey.c: 48: if (CVAL.fval > CMAX.fval) {
 18340  156A  082B               	movf	_CMAX+3,w	;volatile
 18341  156B  00F3               	movwf	___flge@ff1+3
 18342  156C  082A               	movf	_CMAX+2,w	;volatile
 18343  156D  00F2               	movwf	___flge@ff1+2
 18344  156E  0829               	movf	_CMAX+1,w	;volatile
 18345  156F  00F1               	movwf	___flge@ff1+1
 18346  1570  0828               	movf	_CMAX,w	;volatile
 18347  1571  00F0               	movwf	___flge@ff1
 18348  1572  082F               	movf	_CVAL+3,w	;volatile
 18349  1573  00F7               	movwf	___flge@ff2+3
 18350  1574  082E               	movf	_CVAL+2,w	;volatile
 18351  1575  00F6               	movwf	___flge@ff2+2
 18352  1576  082D               	movf	_CVAL+1,w	;volatile
 18353  1577  00F5               	movwf	___flge@ff2+1
 18354  1578  082C               	movf	_CVAL,w	;volatile
 18355  1579  00F4               	movwf	___flge@ff2
 18356  157A  2626  3194         	fcall	___flge
 18357  157C                     L48:	
 18358  157C  1803               	btfsc	3,0
 18359  157D  2D95               	goto	i1l5586
 18360                           
 18361                           ;NavKey.c: 49: NavKeyStatusUpdate(S_RMAX);
 18362  157E  3020               	movlw	32
 18363  157F  01F0               	clrf	i1NavKeyStatusUpdate@stat
 18364  1580  00F1               	movwf	i1NavKeyStatusUpdate@stat+1
 18365  1581  2621  3194         	fcall	i1_NavKeyStatusUpdate
 18366                           
 18367                           ;NavKey.c: 50: if (C_WRAPE == 1) {
 18368  1583  0B3A               	decfsz	_C_WRAPE,w	;volatile
 18369  1584  2D8D               	goto	i1l5584
 18370                           
 18371                           ;NavKey.c: 51: CVAL.fval = CMIN.fval;
 18372  1585  0827               	movf	_CMIN+3,w	;volatile
 18373  1586  00AF               	movwf	_CVAL+3	;volatile
 18374  1587  0826               	movf	_CMIN+2,w	;volatile
 18375  1588  00AE               	movwf	_CVAL+2	;volatile
 18376  1589  0825               	movf	_CMIN+1,w	;volatile
 18377  158A  00AD               	movwf	_CVAL+1	;volatile
 18378  158B  0824               	movf	_CMIN,w	;volatile
 18379  158C  2D94               	goto	L47
 18380  158D                     i1l5584:	
 18381                           ;NavKey.c: 52: } else {
 18382                           
 18383                           
 18384                           ;NavKey.c: 53: CVAL.fval = CMAX.fval;
 18385  158D  082B               	movf	_CMAX+3,w	;volatile
 18386  158E  00AF               	movwf	_CVAL+3	;volatile
 18387  158F  082A               	movf	_CMAX+2,w	;volatile
 18388  1590  00AE               	movwf	_CVAL+2	;volatile
 18389  1591  0829               	movf	_CMAX+1,w	;volatile
 18390  1592  00AD               	movwf	_CVAL+1	;volatile
 18391  1593  0828               	movf	_CMAX,w	;volatile
 18392  1594                     L47:	
 18393  1594  00AC               	movwf	_CVAL	;volatile
 18394  1595                     i1l5586:	
 18395                           
 18396                           ;NavKey.c: 54: };NavKey.c: 55: };NavKey.c: 56: };NavKey.c: 59: SetInterrupt();
 18397  1595  27D7               	fcall	i1_SetInterrupt
 18398  1596  0008               	return
 18399  1597                     __end_of_CLC_1_Interrupt:	
 18400  1597                     __ptext75:	
 18401 ;; *************** function _CLC_2_Interrupt *****************
 18402 ;; Defined at:
 18403 ;;		line 66 in file "NavKey.c"
 18404 ;; Parameters:    Size  Location     Type
 18405 ;;		None
 18406 ;; Auto vars:     Size  Location     Type
 18407 ;;		None
 18408 ;; Return value:  Size  Location     Type
 18409 ;;                  1    wreg      void 
 18410 ;; Registers used:
 18411 ;;		wreg, status,2, status,0, pclath, cstack
 18412 ;; Tracked objects:
 18413 ;;		On entry : 1F/0
 18414 ;;		On exit  : 1C/0
 18415 ;;		Unchanged: 0/0
 18416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18419 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18420 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18421 ;;Total ram usage:        4 bytes
 18422 ;; Hardware stack levels used:    1
 18423 ;; Hardware stack levels required when called:    2
 18424 ;; This function calls:
 18425 ;;		___flge
 18426 ;;		___flsub
 18427 ;;		i1_NavKeyStatusUpdate
 18428 ;;		i1_SetInterrupt
 18429 ;; This function is called by:
 18430 ;;		_CLC2_ISR
 18431 ;;		_CLC1_ISR
 18432 ;; This function uses a non-reentrant model
 18433 ;;
 18434                           
 18435                           
 18436                           ;psect for function _CLC_2_Interrupt
 18437  1597                     _CLC_2_Interrupt:	
 18438                           
 18439                           ;NavKey.c: 68: if (en_prev == 0)
 18440                           
 18441                           ;incstack = 0
 18442                           ; Regs used in _CLC_2_Interrupt: [wreg+status,2+status,0+pclath+cstack]
 18443  1597  0021               	movlb	1	; select bank1
 18444  1598  0839               	movf	_en_prev^(0+128),w
 18445  1599  1D03               	btfss	3,2
 18446  159A  2DA2               	goto	i1l5594
 18447                           
 18448                           ;NavKey.c: 69: if (en_deb < 10)
 18449  159B  3000               	movlw	0
 18450  159C  0230               	subwf	(_en_deb+1)^(0+128),w
 18451  159D  300A               	movlw	10
 18452  159E  1903               	skipnz
 18453  159F  022F               	subwf	_en_deb^(0+128),w
 18454  15A0  1C03               	btfss	3,0
 18455  15A1  0008               	return
 18456  15A2                     i1l5594:	
 18457                           
 18458                           ;NavKey.c: 72: en_deb = 0;
 18459  15A2  01AF               	clrf	_en_deb^(0+128)
 18460  15A3  01B0               	clrf	(_en_deb+1)^(0+128)
 18461                           
 18462                           ;NavKey.c: 73: en_prev = 1;
 18463  15A4  01B9               	clrf	_en_prev^(0+128)
 18464  15A5  0AB9               	incf	_en_prev^(0+128),f
 18465                           
 18466                           ;NavKey.c: 75: if (C_DTYPE == 0) {
 18467  15A6  0020               	movlb	0	; select bank0
 18468  15A7  0839               	movf	_C_DTYPE,w	;volatile
 18469  15A8  1D03               	btfss	3,2
 18470  15A9  2DD5               	goto	i1l5614
 18471                           
 18472                           ;NavKey.c: 77: CVAL.val = CVAL.val - ISTEP.val;
 18473  15AA  0820               	movf	_ISTEP,w	;volatile
 18474  15AB  022C               	subwf	_CVAL,w	;volatile
 18475  15AC  00DA               	movwf	??_CLC_2_Interrupt
 18476  15AD  0821               	movf	_ISTEP+1,w	;volatile
 18477  15AE  3B2D               	subwfb	_CVAL+1,w	;volatile
 18478  15AF  00DB               	movwf	??_CLC_2_Interrupt+1
 18479  15B0  0822               	movf	_ISTEP+2,w	;volatile
 18480  15B1  3B2E               	subwfb	_CVAL+2,w	;volatile
 18481  15B2  00DC               	movwf	??_CLC_2_Interrupt+2
 18482  15B3  0823               	movf	_ISTEP+3,w	;volatile
 18483  15B4  3B2F               	subwfb	_CVAL+3,w	;volatile
 18484  15B5  00DD               	movwf	??_CLC_2_Interrupt+3
 18485  15B6  00AF               	movwf	_CVAL+3	;volatile
 18486  15B7  085C               	movf	??_CLC_2_Interrupt+2,w
 18487  15B8  00AE               	movwf	_CVAL+2	;volatile
 18488  15B9  085B               	movf	??_CLC_2_Interrupt+1,w
 18489  15BA  00AD               	movwf	_CVAL+1	;volatile
 18490  15BB  085A               	movf	??_CLC_2_Interrupt,w
 18491  15BC  00AC               	movwf	_CVAL	;volatile
 18492                           
 18493                           ;NavKey.c: 78: NavKeyStatusUpdate(S_RDEC);
 18494  15BD  3010               	movlw	16
 18495  15BE  01F0               	clrf	i1NavKeyStatusUpdate@stat
 18496  15BF  00F1               	movwf	i1NavKeyStatusUpdate@stat+1
 18497  15C0  2621  3194         	fcall	i1_NavKeyStatusUpdate
 18498                           
 18499                           ;NavKey.c: 79: if (CVAL.val < CMIN.val) {
 18500  15C2  082F               	movf	_CVAL+3,w	;volatile
 18501  15C3  3A80               	xorlw	128
 18502  15C4  00DA               	movwf	??_CLC_2_Interrupt
 18503  15C5  0827               	movf	_CMIN+3,w	;volatile
 18504  15C6  3A80               	xorlw	128
 18505  15C7  025A               	subwf	??_CLC_2_Interrupt,w
 18506  15C8  1D03               	skipz
 18507  15C9  2E06               	goto	L46
 18508  15CA  0826               	movf	_CMIN+2,w	;volatile
 18509  15CB  022E               	subwf	_CVAL+2,w	;volatile
 18510  15CC  1D03               	skipz
 18511  15CD  2E06               	goto	L46
 18512  15CE  0825               	movf	_CMIN+1,w	;volatile
 18513  15CF  022D               	subwf	_CVAL+1,w	;volatile
 18514  15D0  1D03               	skipz
 18515  15D1  2E06               	goto	L46
 18516  15D2  0824               	movf	_CMIN,w	;volatile
 18517  15D3  022C               	subwf	_CVAL,w	;volatile
 18518  15D4  2E06               	goto	L46
 18519  15D5                     i1l5614:	
 18520                           ;NavKey.c: 84: CVAL.val = CMIN.val;
 18521                           
 18522                           ;NavKey.c: 83: } else {
 18523                           
 18524                           ;NavKey.c: 82: CVAL.val = CMAX.val;
 18525                           
 18526                           ;NavKey.c: 81: if (C_WRAPE == 1) {
 18527                           
 18528                           ;NavKey.c: 80: NavKeyStatusUpdate(S_RMIN);
 18529                           
 18530                           
 18531                           ;NavKey.c: 88: CVAL.fval = CVAL.fval - ISTEP.fval;
 18532  15D5  0823               	movf	_ISTEP+3,w	;volatile
 18533  15D6  00D5               	movwf	___flsub@a+3
 18534  15D7  0822               	movf	_ISTEP+2,w	;volatile
 18535  15D8  00D4               	movwf	___flsub@a+2
 18536  15D9  0821               	movf	_ISTEP+1,w	;volatile
 18537  15DA  00D3               	movwf	___flsub@a+1
 18538  15DB  0820               	movf	_ISTEP,w	;volatile
 18539  15DC  00D2               	movwf	___flsub@a
 18540  15DD  082F               	movf	_CVAL+3,w	;volatile
 18541  15DE  00D9               	movwf	___flsub@b+3
 18542  15DF  082E               	movf	_CVAL+2,w	;volatile
 18543  15E0  00D8               	movwf	___flsub@b+2
 18544  15E1  082D               	movf	_CVAL+1,w	;volatile
 18545  15E2  00D7               	movwf	___flsub@b+1
 18546  15E3  082C               	movf	_CVAL,w	;volatile
 18547  15E4  00D6               	movwf	___flsub@b
 18548  15E5  27E3  3194         	fcall	___flsub
 18549  15E7  0855               	movf	?___flsub+3,w
 18550  15E8  00AF               	movwf	_CVAL+3	;volatile
 18551  15E9  0854               	movf	?___flsub+2,w
 18552  15EA  00AE               	movwf	_CVAL+2	;volatile
 18553  15EB  0853               	movf	?___flsub+1,w
 18554  15EC  00AD               	movwf	_CVAL+1	;volatile
 18555  15ED  0852               	movf	?___flsub,w
 18556  15EE  00AC               	movwf	_CVAL	;volatile
 18557                           
 18558                           ;NavKey.c: 89: NavKeyStatusUpdate(S_RDEC);
 18559  15EF  3010               	movlw	16
 18560  15F0  01F0               	clrf	i1NavKeyStatusUpdate@stat
 18561  15F1  00F1               	movwf	i1NavKeyStatusUpdate@stat+1
 18562  15F2  2621  3194         	fcall	i1_NavKeyStatusUpdate
 18563                           
 18564                           ;NavKey.c: 90: if (CVAL.fval < CMIN.fval) {
 18565  15F4  082F               	movf	_CVAL+3,w	;volatile
 18566  15F5  00F3               	movwf	___flge@ff1+3
 18567  15F6  082E               	movf	_CVAL+2,w	;volatile
 18568  15F7  00F2               	movwf	___flge@ff1+2
 18569  15F8  082D               	movf	_CVAL+1,w	;volatile
 18570  15F9  00F1               	movwf	___flge@ff1+1
 18571  15FA  082C               	movf	_CVAL,w	;volatile
 18572  15FB  00F0               	movwf	___flge@ff1
 18573  15FC  0827               	movf	_CMIN+3,w	;volatile
 18574  15FD  00F7               	movwf	___flge@ff2+3
 18575  15FE  0826               	movf	_CMIN+2,w	;volatile
 18576  15FF  00F6               	movwf	___flge@ff2+2
 18577  1600  0825               	movf	_CMIN+1,w	;volatile
 18578  1601  00F5               	movwf	___flge@ff2+1
 18579  1602  0824               	movf	_CMIN,w	;volatile
 18580  1603  00F4               	movwf	___flge@ff2
 18581  1604  2626  3194         	fcall	___flge
 18582  1606                     L46:	
 18583  1606  1803               	btfsc	3,0
 18584  1607  2E1F               	goto	i1l5624
 18585                           
 18586                           ;NavKey.c: 91: NavKeyStatusUpdate(S_RMIN);
 18587  1608  3040               	movlw	64
 18588  1609  01F0               	clrf	i1NavKeyStatusUpdate@stat
 18589  160A  00F1               	movwf	i1NavKeyStatusUpdate@stat+1
 18590  160B  2621  3194         	fcall	i1_NavKeyStatusUpdate
 18591                           
 18592                           ;NavKey.c: 92: if (C_WRAPE == 1) {
 18593  160D  0B3A               	decfsz	_C_WRAPE,w	;volatile
 18594  160E  2E17               	goto	i1l5622
 18595                           
 18596                           ;NavKey.c: 93: CVAL.fval = CMAX.fval;
 18597  160F  082B               	movf	_CMAX+3,w	;volatile
 18598  1610  00AF               	movwf	_CVAL+3	;volatile
 18599  1611  082A               	movf	_CMAX+2,w	;volatile
 18600  1612  00AE               	movwf	_CVAL+2	;volatile
 18601  1613  0829               	movf	_CMAX+1,w	;volatile
 18602  1614  00AD               	movwf	_CVAL+1	;volatile
 18603  1615  0828               	movf	_CMAX,w	;volatile
 18604  1616  2E1E               	goto	L45
 18605  1617                     i1l5622:	
 18606                           ;NavKey.c: 94: } else {
 18607                           
 18608                           
 18609                           ;NavKey.c: 95: CVAL.fval = CMIN.fval;
 18610  1617  0827               	movf	_CMIN+3,w	;volatile
 18611  1618  00AF               	movwf	_CVAL+3	;volatile
 18612  1619  0826               	movf	_CMIN+2,w	;volatile
 18613  161A  00AE               	movwf	_CVAL+2	;volatile
 18614  161B  0825               	movf	_CMIN+1,w	;volatile
 18615  161C  00AD               	movwf	_CVAL+1	;volatile
 18616  161D  0824               	movf	_CMIN,w	;volatile
 18617  161E                     L45:	
 18618  161E  00AC               	movwf	_CVAL	;volatile
 18619  161F                     i1l5624:	
 18620                           
 18621                           ;NavKey.c: 96: };NavKey.c: 97: };NavKey.c: 98: };NavKey.c: 100: SetInterrupt();
 18622  161F  27D7               	fcall	i1_SetInterrupt
 18623  1620  0008               	return
 18624  1621                     __end_of_CLC_2_Interrupt:	
 18625  1621                     __ptext79:	
 18626 ;; *************** function i1_NavKeyStatusUpdate *****************
 18627 ;; Defined at:
 18628 ;;		line 102 in file "DataVariable.c"
 18629 ;; Parameters:    Size  Location     Type
 18630 ;;  stat            2    0[COMMON] enum E68
 18631 ;; Auto vars:     Size  Location     Type
 18632 ;;		None
 18633 ;; Return value:  Size  Location     Type
 18634 ;;                  1    wreg      void 
 18635 ;; Registers used:
 18636 ;;		wreg
 18637 ;; Tracked objects:
 18638 ;;		On entry : 1F/0
 18639 ;;		On exit  : 1F/0
 18640 ;;		Unchanged: 0/0
 18641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18642 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18645 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18646 ;;Total ram usage:        2 bytes
 18647 ;; Hardware stack levels used:    1
 18648 ;; This function calls:
 18649 ;;		Nothing
 18650 ;; This function is called by:
 18651 ;;		_CLC_1_Interrupt
 18652 ;;		_CLC_2_Interrupt
 18653 ;; This function uses a non-reentrant model
 18654 ;;
 18655                           
 18656                           
 18657                           ;psect for function i1_NavKeyStatusUpdate
 18658  1621                     i1_NavKeyStatusUpdate:	
 18659                           
 18660                           ;DataVariable.c: 103: NSTATUS.val |= (uint16_t) stat;
 18661                           
 18662                           ;incstack = 0
 18663                           ; Regs used in i1_NavKeyStatusUpdate: [wreg]
 18664  1621  0870               	movf	i1NavKeyStatusUpdate@stat,w
 18665  1622  04B2               	iorwf	_NSTATUS,f	;volatile
 18666  1623  0871               	movf	i1NavKeyStatusUpdate@stat+1,w
 18667  1624  04B3               	iorwf	_NSTATUS+1,f	;volatile
 18668  1625  0008               	return
 18669  1626                     __end_ofi1_NavKeyStatusUpdate:	
 18670  1626                     __ptext80:	
 18671 ;; *************** function ___flge *****************
 18672 ;; Defined at:
 18673 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
 18674 ;; Parameters:    Size  Location     Type
 18675 ;;  ff1             4    0[COMMON] void 
 18676 ;;  ff2             4    4[COMMON] void 
 18677 ;; Auto vars:     Size  Location     Type
 18678 ;;		None
 18679 ;; Return value:  Size  Location     Type
 18680 ;;		None               void
 18681 ;; Registers used:
 18682 ;;		wreg, status,2, status,0
 18683 ;; Tracked objects:
 18684 ;;		On entry : 1F/0
 18685 ;;		On exit  : 1F/0
 18686 ;;		Unchanged: 1F/0
 18687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18688 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18690 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18691 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18692 ;;Total ram usage:       12 bytes
 18693 ;; Hardware stack levels used:    1
 18694 ;; This function calls:
 18695 ;;		Nothing
 18696 ;; This function is called by:
 18697 ;;		_CLC_1_Interrupt
 18698 ;;		_CLC_2_Interrupt
 18699 ;; This function uses a non-reentrant model
 18700 ;;
 18701                           
 18702                           
 18703                           ;psect for function ___flge
 18704  1626                     ___flge:	
 18705                           
 18706                           ;incstack = 0
 18707                           ; Regs used in ___flge: [wreg+status,2+status,0]
 18708  1626  3080               	movlw	128
 18709  1627  01F8               	clrf	??___flge
 18710  1628  01F9               	clrf	??___flge+1
 18711  1629  0572               	andwf	___flge@ff1+2,w
 18712  162A  00FA               	movwf	??___flge+2
 18713  162B  307F               	movlw	127
 18714  162C  0573               	andwf	___flge@ff1+3,w
 18715  162D  00FB               	movwf	??___flge+3
 18716  162E  047A               	iorwf	??___flge+2,w
 18717  162F  0479               	iorwf	??___flge+1,w
 18718  1630  0478               	iorwf	??___flge,w
 18719  1631  1D03               	skipz
 18720  1632  2E37               	goto	i1l5386
 18721  1633  01F0               	clrf	___flge@ff1
 18722  1634  01F1               	clrf	___flge@ff1+1
 18723  1635  01F2               	clrf	___flge@ff1+2
 18724  1636  01F3               	clrf	___flge@ff1+3
 18725  1637                     i1l5386:	
 18726  1637  3080               	movlw	128
 18727  1638  01F8               	clrf	??___flge
 18728  1639  01F9               	clrf	??___flge+1
 18729  163A  0576               	andwf	___flge@ff2+2,w
 18730  163B  00FA               	movwf	??___flge+2
 18731  163C  307F               	movlw	127
 18732  163D  0577               	andwf	___flge@ff2+3,w
 18733  163E  00FB               	movwf	??___flge+3
 18734  163F  047A               	iorwf	??___flge+2,w
 18735  1640  0479               	iorwf	??___flge+1,w
 18736  1641  0478               	iorwf	??___flge,w
 18737  1642  1D03               	skipz
 18738  1643  2E48               	goto	i1l1740
 18739  1644  01F4               	clrf	___flge@ff2
 18740  1645  01F5               	clrf	___flge@ff2+1
 18741  1646  01F6               	clrf	___flge@ff2+2
 18742  1647  01F7               	clrf	___flge@ff2+3
 18743  1648                     i1l1740:	
 18744  1648  1FF3               	btfss	___flge@ff1+3,7
 18745  1649  2E5F               	goto	i1l5392
 18746  164A  3080               	movlw	128
 18747  164B  01F8               	clrf	??___flge
 18748  164C  01F9               	clrf	??___flge+1
 18749  164D  01FA               	clrf	??___flge+2
 18750  164E  00FB               	movwf	??___flge+3
 18751  164F  0870               	movf	___flge@ff1,w
 18752  1650  02F8               	subwf	??___flge,f
 18753  1651  0871               	movf	___flge@ff1+1,w
 18754  1652  3BF9               	subwfb	??___flge+1,f
 18755  1653  0872               	movf	___flge@ff1+2,w
 18756  1654  3BFA               	subwfb	??___flge+2,f
 18757  1655  0873               	movf	___flge@ff1+3,w
 18758  1656  3BFB               	subwfb	??___flge+3,f
 18759  1657  087B               	movf	??___flge+3,w
 18760  1658  00F3               	movwf	___flge@ff1+3
 18761  1659  087A               	movf	??___flge+2,w
 18762  165A  00F2               	movwf	___flge@ff1+2
 18763  165B  0879               	movf	??___flge+1,w
 18764  165C  00F1               	movwf	___flge@ff1+1
 18765  165D  0878               	movf	??___flge,w
 18766  165E  00F0               	movwf	___flge@ff1
 18767  165F                     i1l5392:	
 18768  165F  1FF7               	btfss	___flge@ff2+3,7
 18769  1660  2E76               	goto	i1l1742
 18770  1661  3080               	movlw	128
 18771  1662  01F8               	clrf	??___flge
 18772  1663  01F9               	clrf	??___flge+1
 18773  1664  01FA               	clrf	??___flge+2
 18774  1665  00FB               	movwf	??___flge+3
 18775  1666  0874               	movf	___flge@ff2,w
 18776  1667  02F8               	subwf	??___flge,f
 18777  1668  0875               	movf	___flge@ff2+1,w
 18778  1669  3BF9               	subwfb	??___flge+1,f
 18779  166A  0876               	movf	___flge@ff2+2,w
 18780  166B  3BFA               	subwfb	??___flge+2,f
 18781  166C  0877               	movf	___flge@ff2+3,w
 18782  166D  3BFB               	subwfb	??___flge+3,f
 18783  166E  087B               	movf	??___flge+3,w
 18784  166F  00F7               	movwf	___flge@ff2+3
 18785  1670  087A               	movf	??___flge+2,w
 18786  1671  00F6               	movwf	___flge@ff2+2
 18787  1672  0879               	movf	??___flge+1,w
 18788  1673  00F5               	movwf	___flge@ff2+1
 18789  1674  0878               	movf	??___flge,w
 18790  1675  00F4               	movwf	___flge@ff2
 18791  1676                     i1l1742:	
 18792  1676  3080               	movlw	128
 18793  1677  06F3               	xorwf	___flge@ff1+3,f
 18794  1678  06F7               	xorwf	___flge@ff2+3,f
 18795  1679  0877               	movf	___flge@ff2+3,w
 18796  167A  0273               	subwf	___flge@ff1+3,w
 18797  167B  1D03               	skipz
 18798  167C  0008               	return
 18799  167D  0876               	movf	___flge@ff2+2,w
 18800  167E  0272               	subwf	___flge@ff1+2,w
 18801  167F  1D03               	skipz
 18802  1680  0008               	return
 18803  1681  0875               	movf	___flge@ff2+1,w
 18804  1682  0271               	subwf	___flge@ff1+1,w
 18805  1683  1D03               	skipz
 18806  1684  0008               	return
 18807  1685  0874               	movf	___flge@ff2,w
 18808  1686  0270               	subwf	___flge@ff1,w
 18809  1687  0008               	return
 18810  1688                     __end_of___flge:	
 18811  1688                     __ptext81:	
 18812 ;; *************** function ___fladd *****************
 18813 ;; Defined at:
 18814 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
 18815 ;; Parameters:    Size  Location     Type
 18816 ;;  b               4    0[COMMON] void 
 18817 ;;  a               4    4[COMMON] void 
 18818 ;; Auto vars:     Size  Location     Type
 18819 ;;  grs             1   11[COMMON] unsigned char 
 18820 ;;  bexp            1   10[COMMON] unsigned char 
 18821 ;;  aexp            1    9[COMMON] unsigned char 
 18822 ;;  signs           1    8[COMMON] unsigned char 
 18823 ;; Return value:  Size  Location     Type
 18824 ;;                  4    0[COMMON] unsigned char 
 18825 ;; Registers used:
 18826 ;;		wreg, status,2, status,0
 18827 ;; Tracked objects:
 18828 ;;		On entry : 1F/0
 18829 ;;		On exit  : 0/0
 18830 ;;		Unchanged: 0/0
 18831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18832 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18833 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18834 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18835 ;;      Totals:        12       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18836 ;;Total ram usage:       20 bytes
 18837 ;; Hardware stack levels used:    1
 18838 ;; This function calls:
 18839 ;;		Nothing
 18840 ;; This function is called by:
 18841 ;;		_CLC_1_Interrupt
 18842 ;;		___flsub
 18843 ;; This function uses a non-reentrant model
 18844 ;;
 18845                           
 18846                           
 18847                           ;psect for function ___fladd
 18848  1688                     ___fladd:	
 18849                           
 18850                           ;incstack = 0
 18851                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 18852  1688  0873               	movf	___fladd@b+3,w
 18853  1689  00F8               	movwf	___fladd@signs
 18854  168A  3080               	movlw	128
 18855  168B  05F8               	andwf	___fladd@signs,f
 18856  168C  3573               	lslf	___fladd@b+3,w
 18857  168D  00FA               	movwf	___fladd@bexp
 18858  168E  1BF2               	btfsc	___fladd@b+2,7
 18859  168F  147A               	bsf	___fladd@bexp,0
 18860  1690  087A               	movf	___fladd@bexp,w
 18861  1691  1903               	btfsc	3,2
 18862  1692  2E9B               	goto	i1l1851
 18863  1693  0F7A               	incfsz	___fladd@bexp,w
 18864  1694  2E99               	goto	i1l1852
 18865  1695  01F0               	clrf	___fladd@b
 18866  1696  01F1               	clrf	___fladd@b+1
 18867  1697  01F2               	clrf	___fladd@b+2
 18868  1698  01F3               	clrf	___fladd@b+3
 18869  1699                     i1l1852:	
 18870  1699  17F2               	bsf	___fladd@b+2,7
 18871  169A  2E9E               	goto	L50
 18872  169B                     i1l1851:	
 18873  169B  01F0               	clrf	___fladd@b
 18874  169C  01F1               	clrf	___fladd@b+1
 18875  169D  01F2               	clrf	___fladd@b+2
 18876  169E                     L50:	
 18877  169E  01F3               	clrf	___fladd@b+3
 18878  169F  0877               	movf	___fladd@a+3,w
 18879  16A0  00F9               	movwf	___fladd@aexp
 18880  16A1  3080               	movlw	128
 18881  16A2  05F9               	andwf	___fladd@aexp,f
 18882  16A3  0879               	movf	___fladd@aexp,w
 18883  16A4  0678               	xorwf	___fladd@signs,w
 18884  16A5  1D03               	btfss	3,2
 18885  16A6  1778               	bsf	___fladd@signs,6
 18886  16A7  3577               	lslf	___fladd@a+3,w
 18887  16A8  00F9               	movwf	___fladd@aexp
 18888  16A9  1BF6               	btfsc	___fladd@a+2,7
 18889  16AA  1479               	bsf	___fladd@aexp,0
 18890  16AB  0879               	movf	___fladd@aexp,w
 18891  16AC  1903               	btfsc	3,2
 18892  16AD  2EB6               	goto	i1l1856
 18893  16AE  0F79               	incfsz	___fladd@aexp,w
 18894  16AF  2EB4               	goto	i1l1857
 18895  16B0  01F4               	clrf	___fladd@a
 18896  16B1  01F5               	clrf	___fladd@a+1
 18897  16B2  01F6               	clrf	___fladd@a+2
 18898  16B3  01F7               	clrf	___fladd@a+3
 18899  16B4                     i1l1857:	
 18900  16B4  17F6               	bsf	___fladd@a+2,7
 18901  16B5  2EB9               	goto	L51
 18902  16B6                     i1l1856:	
 18903  16B6  01F4               	clrf	___fladd@a
 18904  16B7  01F5               	clrf	___fladd@a+1
 18905  16B8  01F6               	clrf	___fladd@a+2
 18906  16B9                     L51:	
 18907  16B9  01F7               	clrf	___fladd@a+3
 18908  16BA  087A               	movf	___fladd@bexp,w
 18909  16BB  0279               	subwf	___fladd@aexp,w
 18910  16BC  1803               	skipnc
 18911  16BD  2EE0               	goto	i1l4908
 18912  16BE  1F78               	btfss	___fladd@signs,6
 18913  16BF  2EC2               	goto	i1l4878
 18914  16C0  3080               	movlw	128
 18915  16C1  06F8               	xorwf	___fladd@signs,f
 18916  16C2                     i1l4878:	
 18917  16C2  087A               	movf	___fladd@bexp,w
 18918  16C3  00FB               	movwf	___fladd@grs
 18919  16C4  0879               	movf	___fladd@aexp,w
 18920  16C5  00FA               	movwf	___fladd@bexp
 18921  16C6  087B               	movf	___fladd@grs,w
 18922  16C7  00F9               	movwf	___fladd@aexp
 18923  16C8  0870               	movf	___fladd@b,w
 18924  16C9  00FB               	movwf	___fladd@grs
 18925  16CA  0874               	movf	___fladd@a,w
 18926  16CB  00F0               	movwf	___fladd@b
 18927  16CC  087B               	movf	___fladd@grs,w
 18928  16CD  00F4               	movwf	___fladd@a
 18929  16CE  0871               	movf	___fladd@b+1,w
 18930  16CF  00FB               	movwf	___fladd@grs
 18931  16D0  0875               	movf	___fladd@a+1,w
 18932  16D1  00F1               	movwf	___fladd@b+1
 18933  16D2  087B               	movf	___fladd@grs,w
 18934  16D3  00F5               	movwf	___fladd@a+1
 18935  16D4  0872               	movf	___fladd@b+2,w
 18936  16D5  00FB               	movwf	___fladd@grs
 18937  16D6  0876               	movf	___fladd@a+2,w
 18938  16D7  00F2               	movwf	___fladd@b+2
 18939  16D8  087B               	movf	___fladd@grs,w
 18940  16D9  00F6               	movwf	___fladd@a+2
 18941  16DA  0873               	movf	___fladd@b+3,w
 18942  16DB  00FB               	movwf	___fladd@grs
 18943  16DC  0877               	movf	___fladd@a+3,w
 18944  16DD  00F3               	movwf	___fladd@b+3
 18945  16DE  087B               	movf	___fladd@grs,w
 18946  16DF  00F7               	movwf	___fladd@a+3
 18947  16E0                     i1l4908:	
 18948  16E0  01FB               	clrf	___fladd@grs
 18949  16E1  0879               	movf	___fladd@aexp,w
 18950  16E2  00CA               	movwf	??___fladd
 18951  16E3  01CB               	clrf	??___fladd+1
 18952  16E4  084B               	movf	??___fladd+1,w
 18953  16E5  00CD               	movwf	??___fladd+3
 18954  16E6  087A               	movf	___fladd@bexp,w
 18955  16E7  024A               	subwf	??___fladd,w
 18956  16E8  00CC               	movwf	??___fladd+2
 18957  16E9  1C03               	skipc
 18958  16EA  03CD               	decf	??___fladd+3,f
 18959  16EB  084D               	movf	??___fladd+3,w
 18960  16EC  3A80               	xorlw	128
 18961  16ED  00CE               	movwf	??___fladd+4
 18962  16EE  3080               	movlw	128
 18963  16EF  024E               	subwf	??___fladd+4,w
 18964  16F0  1D03               	skipz
 18965  16F1  2EF4               	goto	u249_25
 18966  16F2  301A               	movlw	26
 18967  16F3  024C               	subwf	??___fladd+2,w
 18968  16F4                     u249_25:	
 18969  16F4  1C03               	skipc
 18970  16F5  2F15               	goto	i1l4922
 18971  16F6  0873               	movf	___fladd@b+3,w
 18972  16F7  0472               	iorwf	___fladd@b+2,w
 18973  16F8  0471               	iorwf	___fladd@b+1,w
 18974  16F9  0470               	iorwf	___fladd@b,w
 18975  16FA  1903               	btfsc	3,2
 18976  16FB  2EFE               	goto	u250_20
 18977  16FC  3001               	movlw	1
 18978  16FD  2EFF               	goto	u251_20
 18979  16FE                     u250_20:	
 18980  16FE  3000               	movlw	0
 18981  16FF                     u251_20:	
 18982  16FF  00FB               	movwf	___fladd@grs
 18983  1700  01F0               	clrf	___fladd@b
 18984  1701  01F1               	clrf	___fladd@b+1
 18985  1702  01F2               	clrf	___fladd@b+2
 18986  1703  01F3               	clrf	___fladd@b+3
 18987  1704  0879               	movf	___fladd@aexp,w
 18988  1705  00FA               	movwf	___fladd@bexp
 18989  1706  2F19               	goto	i1l1862
 18990  1707                     i1l1864:	
 18991  1707  1C7B               	btfss	___fladd@grs,0
 18992  1708  2F0D               	goto	i1l1865
 18993  1709  367B               	lsrf	___fladd@grs,w
 18994  170A  3801               	iorlw	1
 18995  170B  00FB               	movwf	___fladd@grs
 18996  170C  2F0E               	goto	i1l1866
 18997  170D                     i1l1865:	
 18998  170D  36FB               	lsrf	___fladd@grs,f
 18999  170E                     i1l1866:	
 19000  170E  1870               	btfsc	___fladd@b,0
 19001  170F  17FB               	bsf	___fladd@grs,7
 19002  1710  37F3               	asrf	___fladd@b+3,f
 19003  1711  0CF2               	rrf	___fladd@b+2,f
 19004  1712  0CF1               	rrf	___fladd@b+1,f
 19005  1713  0CF0               	rrf	___fladd@b,f
 19006  1714  0AFA               	incf	___fladd@bexp,f
 19007  1715                     i1l4922:	
 19008  1715  0879               	movf	___fladd@aexp,w
 19009  1716  027A               	subwf	___fladd@bexp,w
 19010  1717  1C03               	skipc
 19011  1718  2F07               	goto	i1l1864
 19012  1719                     i1l1862:	
 19013  1719  1B78               	btfsc	___fladd@signs,6
 19014  171A  2F3C               	goto	i1l4940
 19015  171B  087A               	movf	___fladd@bexp,w
 19016  171C  1D03               	btfss	3,2
 19017  171D  2F23               	goto	i1l4928
 19018  171E  01F0               	clrf	?___fladd
 19019  171F  01F1               	clrf	?___fladd+1
 19020  1720  01F2               	clrf	?___fladd+2
 19021  1721  01F3               	clrf	?___fladd+3
 19022  1722  0008               	return
 19023  1723                     i1l4928:	
 19024  1723  0874               	movf	___fladd@a,w
 19025  1724  07F0               	addwf	___fladd@b,f
 19026  1725  0875               	movf	___fladd@a+1,w
 19027  1726  3DF1               	addwfc	___fladd@b+1,f
 19028  1727  0876               	movf	___fladd@a+2,w
 19029  1728  3DF2               	addwfc	___fladd@b+2,f
 19030  1729  0877               	movf	___fladd@a+3,w
 19031  172A  3DF3               	addwfc	___fladd@b+3,f
 19032  172B  1C73               	btfss	___fladd@b+3,0
 19033  172C  2FA5               	goto	i1l4970
 19034  172D  1C7B               	btfss	___fladd@grs,0
 19035  172E  2F33               	goto	i1l1873
 19036  172F  367B               	lsrf	___fladd@grs,w
 19037  1730  3801               	iorlw	1
 19038  1731  00FB               	movwf	___fladd@grs
 19039  1732  2F34               	goto	i1l1874
 19040  1733                     i1l1873:	
 19041  1733  36FB               	lsrf	___fladd@grs,f
 19042  1734                     i1l1874:	
 19043  1734  1870               	btfsc	___fladd@b,0
 19044  1735  17FB               	bsf	___fladd@grs,7
 19045  1736  37F3               	asrf	___fladd@b+3,f
 19046  1737  0CF2               	rrf	___fladd@b+2,f
 19047  1738  0CF1               	rrf	___fladd@b+1,f
 19048  1739  0CF0               	rrf	___fladd@b,f
 19049  173A  0AFA               	incf	___fladd@bexp,f
 19050  173B  2FA5               	goto	i1l4970
 19051  173C                     i1l4940:	
 19052  173C  0873               	movf	___fladd@b+3,w
 19053  173D  3A80               	xorlw	128
 19054  173E  0020               	movlb	0	; select bank0
 19055  173F  00CA               	movwf	??___fladd
 19056  1740  0877               	movf	___fladd@a+3,w
 19057  1741  3A80               	xorlw	128
 19058  1742  024A               	subwf	??___fladd,w
 19059  1743  1D03               	skipz
 19060  1744  2F4F               	goto	u260_23
 19061  1745  0876               	movf	___fladd@a+2,w
 19062  1746  0272               	subwf	___fladd@b+2,w
 19063  1747  1D03               	skipz
 19064  1748  2F4F               	goto	u260_23
 19065  1749  0875               	movf	___fladd@a+1,w
 19066  174A  0271               	subwf	___fladd@b+1,w
 19067  174B  1D03               	skipz
 19068  174C  2F4F               	goto	u260_23
 19069  174D  0874               	movf	___fladd@a,w
 19070  174E  0270               	subwf	___fladd@b,w
 19071  174F                     u260_23:	
 19072  174F  1803               	skipnc
 19073  1750  2F7E               	goto	i1l4950
 19074  1751  30FF               	movlw	255
 19075  1752  00CA               	movwf	??___fladd
 19076  1753  00CB               	movwf	??___fladd+1
 19077  1754  00CC               	movwf	??___fladd+2
 19078  1755  00CD               	movwf	??___fladd+3
 19079  1756  0870               	movf	___fladd@b,w
 19080  1757  0274               	subwf	___fladd@a,w
 19081  1758  00CE               	movwf	??___fladd+4
 19082  1759  0871               	movf	___fladd@b+1,w
 19083  175A  3B75               	subwfb	___fladd@a+1,w
 19084  175B  00CF               	movwf	??___fladd+5
 19085  175C  0872               	movf	___fladd@b+2,w
 19086  175D  3B76               	subwfb	___fladd@a+2,w
 19087  175E  00D0               	movwf	??___fladd+6
 19088  175F  0873               	movf	___fladd@b+3,w
 19089  1760  3B77               	subwfb	___fladd@a+3,w
 19090  1761  00D1               	movwf	??___fladd+7
 19091  1762  084E               	movf	??___fladd+4,w
 19092  1763  07CA               	addwf	??___fladd,f
 19093  1764  084F               	movf	??___fladd+5,w
 19094  1765  3DCB               	addwfc	??___fladd+1,f
 19095  1766  0850               	movf	??___fladd+6,w
 19096  1767  3DCC               	addwfc	??___fladd+2,f
 19097  1768  0851               	movf	??___fladd+7,w
 19098  1769  3DCD               	addwfc	??___fladd+3,f
 19099  176A  084D               	movf	??___fladd+3,w
 19100  176B  00F3               	movwf	___fladd@b+3
 19101  176C  084C               	movf	??___fladd+2,w
 19102  176D  00F2               	movwf	___fladd@b+2
 19103  176E  084B               	movf	??___fladd+1,w
 19104  176F  00F1               	movwf	___fladd@b+1
 19105  1770  084A               	movf	??___fladd,w
 19106  1771  00F0               	movwf	___fladd@b
 19107  1772  3080               	movlw	128
 19108  1773  06F8               	xorwf	___fladd@signs,f
 19109  1774  09FB               	comf	___fladd@grs,f
 19110  1775  0FFB               	incfsz	___fladd@grs,f
 19111  1776  2F86               	goto	i1l1879
 19112  1777  3001               	movlw	1
 19113  1778  07F0               	addwf	___fladd@b,f
 19114  1779  3000               	movlw	0
 19115  177A  3DF1               	addwfc	___fladd@b+1,f
 19116  177B  3DF2               	addwfc	___fladd@b+2,f
 19117  177C  3DF3               	addwfc	___fladd@b+3,f
 19118  177D  2F86               	goto	i1l1879
 19119  177E                     i1l4950:	
 19120  177E  0874               	movf	___fladd@a,w
 19121  177F  02F0               	subwf	___fladd@b,f
 19122  1780  0875               	movf	___fladd@a+1,w
 19123  1781  3BF1               	subwfb	___fladd@b+1,f
 19124  1782  0876               	movf	___fladd@a+2,w
 19125  1783  3BF2               	subwfb	___fladd@b+2,f
 19126  1784  0877               	movf	___fladd@a+3,w
 19127  1785  3BF3               	subwfb	___fladd@b+3,f
 19128  1786                     i1l1879:	
 19129  1786  0873               	movf	___fladd@b+3,w
 19130  1787  0472               	iorwf	___fladd@b+2,w
 19131  1788  0471               	iorwf	___fladd@b+1,w
 19132  1789  0470               	iorwf	___fladd@b,w
 19133  178A  1D03               	skipz
 19134  178B  2FA3               	goto	i1l4968
 19135  178C  087B               	movf	___fladd@grs,w
 19136  178D  1D03               	btfss	3,2
 19137  178E  2FA3               	goto	i1l4968
 19138  178F  01F0               	clrf	?___fladd
 19139  1790  01F1               	clrf	?___fladd+1
 19140  1791  01F2               	clrf	?___fladd+2
 19141  1792  01F3               	clrf	?___fladd+3
 19142  1793  0008               	return
 19143  1794                     i1l4956:	
 19144  1794  35F0               	lslf	___fladd@b,f
 19145  1795  0DF1               	rlf	___fladd@b+1,f
 19146  1796  0DF2               	rlf	___fladd@b+2,f
 19147  1797  0DF3               	rlf	___fladd@b+3,f
 19148  1798  1BFB               	btfsc	___fladd@grs,7
 19149  1799  1470               	bsf	___fladd@b,0
 19150  179A  1C7B               	btfss	___fladd@grs,0
 19151  179B  2F9F               	goto	i1l1884
 19152  179C  1403               	setc
 19153  179D  0DFB               	rlf	___fladd@grs,f
 19154  179E  2FA0               	goto	i1l4964
 19155  179F                     i1l1884:	
 19156  179F  35FB               	lslf	___fladd@grs,f
 19157  17A0                     i1l4964:	
 19158  17A0  087A               	movf	___fladd@bexp,w
 19159  17A1  1D03               	btfss	3,2
 19160  17A2  03FA               	decf	___fladd@bexp,f
 19161  17A3                     i1l4968:	
 19162  17A3  1FF2               	btfss	___fladd@b+2,7
 19163  17A4  2F94               	goto	i1l4956
 19164  17A5                     i1l4970:	
 19165  17A5  01F9               	clrf	___fladd@aexp
 19166  17A6  1FFB               	btfss	___fladd@grs,7
 19167  17A7  2FB0               	goto	i1l4980
 19168  17A8  087B               	movf	___fladd@grs,w
 19169  17A9  397F               	andlw	127
 19170  17AA  1903               	btfsc	3,2
 19171  17AB  1870               	btfsc	___fladd@b,0
 19172  17AC  2FAE               	goto	i1l4976
 19173  17AD  2FB0               	goto	i1l4980
 19174  17AE                     i1l4976:	
 19175  17AE  01F9               	clrf	___fladd@aexp
 19176  17AF  0AF9               	incf	___fladd@aexp,f
 19177  17B0                     i1l4980:	
 19178  17B0  0879               	movf	___fladd@aexp,w
 19179  17B1  1903               	btfsc	3,2
 19180  17B2  2FC1               	goto	i1l4992
 19181  17B3  3001               	movlw	1
 19182  17B4  07F0               	addwf	___fladd@b,f
 19183  17B5  3000               	movlw	0
 19184  17B6  3DF1               	addwfc	___fladd@b+1,f
 19185  17B7  3DF2               	addwfc	___fladd@b+2,f
 19186  17B8  3DF3               	addwfc	___fladd@b+3,f
 19187  17B9  1C73               	btfss	___fladd@b+3,0
 19188  17BA  2FC1               	goto	i1l4992
 19189  17BB  37F3               	asrf	___fladd@b+3,f
 19190  17BC  0CF2               	rrf	___fladd@b+2,f
 19191  17BD  0CF1               	rrf	___fladd@b+1,f
 19192  17BE  0CF0               	rrf	___fladd@b,f
 19193  17BF  0F7A               	incfsz	___fladd@bexp,w
 19194  17C0  0AFA               	incf	___fladd@bexp,f
 19195  17C1                     i1l4992:	
 19196  17C1  0A7A               	incf	___fladd@bexp,w
 19197  17C2  1D03               	btfss	3,2
 19198  17C3  087A               	movf	___fladd@bexp,w
 19199  17C4  1D03               	btfss	3,2
 19200  17C5  2FCD               	goto	i1l5000
 19201  17C6  01F0               	clrf	___fladd@b
 19202  17C7  01F1               	clrf	___fladd@b+1
 19203  17C8  01F2               	clrf	___fladd@b+2
 19204  17C9  01F3               	clrf	___fladd@b+3
 19205  17CA  087A               	movf	___fladd@bexp,w
 19206  17CB  1903               	btfsc	3,2
 19207  17CC  01F8               	clrf	___fladd@signs
 19208  17CD                     i1l5000:	
 19209  17CD  1C7A               	btfss	___fladd@bexp,0
 19210  17CE  2FD1               	goto	i1l1899
 19211  17CF  17F2               	bsf	___fladd@b+2,7
 19212  17D0  2FD2               	goto	i1l5004
 19213  17D1                     i1l1899:	
 19214  17D1  13F2               	bcf	___fladd@b+2,7
 19215  17D2                     i1l5004:	
 19216  17D2  367A               	lsrf	___fladd@bexp,w
 19217  17D3  00F3               	movwf	___fladd@b+3
 19218  17D4  1BF8               	btfsc	___fladd@signs,7
 19219  17D5  17F3               	bsf	___fladd@b+3,7
 19220  17D6  0008               	return
 19221  17D7                     __end_of___fladd:	
 19222  007E                     btemp	set	126	;btemp
 19223  007E                     int$flags	set	126
 19224  007E                     wtemp0	set	126
 19225  17D7                     __ptext78:	
 19226 ;; *************** function i1_SetInterrupt *****************
 19227 ;; Defined at:
 19228 ;;		line 56 in file "main.c"
 19229 ;; Parameters:    Size  Location     Type
 19230 ;;		None
 19231 ;; Auto vars:     Size  Location     Type
 19232 ;;		None
 19233 ;; Return value:  Size  Location     Type
 19234 ;;                  1    wreg      void 
 19235 ;; Registers used:
 19236 ;;		wreg, status,2, status,0
 19237 ;; Tracked objects:
 19238 ;;		On entry : 1F/0
 19239 ;;		On exit  : 1D/0
 19240 ;;		Unchanged: 0/0
 19241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19244 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19245 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19246 ;;Total ram usage:        2 bytes
 19247 ;; Hardware stack levels used:    1
 19248 ;; This function calls:
 19249 ;;		Nothing
 19250 ;; This function is called by:
 19251 ;;		_CLC_1_Interrupt
 19252 ;;		_CLC_2_Interrupt
 19253 ;; This function uses a non-reentrant model
 19254 ;;
 19255                           
 19256                           
 19257                           ;psect for function i1_SetInterrupt
 19258  17D7                     i1_SetInterrupt:	
 19259                           
 19260                           ;main.c: 58: if ((NSTATUS.val & INTCONF.val) != 0) {
 19261                           
 19262                           ;incstack = 0
 19263                           ; Regs used in i1_SetInterrupt: [wreg+status,2+status,0]
 19264  17D7  0830               	movf	_INTCONF,w	;volatile
 19265  17D8  0532               	andwf	_NSTATUS,w	;volatile
 19266  17D9  00F0               	movwf	??i1_SetInterrupt
 19267  17DA  0831               	movf	_INTCONF+1,w	;volatile
 19268  17DB  0533               	andwf	_NSTATUS+1,w	;volatile
 19269  17DC  00F1               	movwf	??i1_SetInterrupt+1
 19270  17DD  0470               	iorwf	??i1_SetInterrupt,w
 19271  17DE  1903               	btfsc	3,2
 19272  17DF  0008               	return
 19273                           
 19274                           ;main.c: 59: do { LATBbits.LATB5 = 0; } while(0);
 19275  17E0  0022               	movlb	2	; select bank2
 19276  17E1  128D               	bcf	13,5	;volatile
 19277  17E2  0008               	return
 19278  17E3                     __end_ofi1_SetInterrupt:	
 19279  17E3                     __ptext76:	
 19280 ;; *************** function ___flsub *****************
 19281 ;; Defined at:
 19282 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
 19283 ;; Parameters:    Size  Location     Type
 19284 ;;  a               4    8[BANK0 ] void 
 19285 ;;  b               4   12[BANK0 ] void 
 19286 ;; Auto vars:     Size  Location     Type
 19287 ;;		None
 19288 ;; Return value:  Size  Location     Type
 19289 ;;                  4    8[BANK0 ] void 
 19290 ;; Registers used:
 19291 ;;		wreg, status,2, status,0, pclath, cstack
 19292 ;; Tracked objects:
 19293 ;;		On entry : 1F/0
 19294 ;;		On exit  : 1F/0
 19295 ;;		Unchanged: 0/0
 19296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19297 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19300 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19301 ;;Total ram usage:        8 bytes
 19302 ;; Hardware stack levels used:    1
 19303 ;; Hardware stack levels required when called:    1
 19304 ;; This function calls:
 19305 ;;		___fladd
 19306 ;; This function is called by:
 19307 ;;		_CLC_2_Interrupt
 19308 ;; This function uses a non-reentrant model
 19309 ;;
 19310                           
 19311                           
 19312                           ;psect for function ___flsub
 19313  17E3                     ___flsub:	
 19314                           
 19315                           ;incstack = 0
 19316                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 19317  17E3  3080               	movlw	128
 19318  17E4  06D5               	xorwf	___flsub@a+3,f
 19319  17E5  0859               	movf	___flsub@b+3,w
 19320  17E6  00F3               	movwf	___fladd@b+3
 19321  17E7  0858               	movf	___flsub@b+2,w
 19322  17E8  00F2               	movwf	___fladd@b+2
 19323  17E9  0857               	movf	___flsub@b+1,w
 19324  17EA  00F1               	movwf	___fladd@b+1
 19325  17EB  0856               	movf	___flsub@b,w
 19326  17EC  00F0               	movwf	___fladd@b
 19327  17ED  0855               	movf	___flsub@a+3,w
 19328  17EE  00F7               	movwf	___fladd@a+3
 19329  17EF  0854               	movf	___flsub@a+2,w
 19330  17F0  00F6               	movwf	___fladd@a+2
 19331  17F1  0853               	movf	___flsub@a+1,w
 19332  17F2  00F5               	movwf	___fladd@a+1
 19333  17F3  0852               	movf	___flsub@a,w
 19334  17F4  00F4               	movwf	___fladd@a
 19335  17F5  2688               	fcall	___fladd
 19336  17F6  0873               	movf	?___fladd+3,w
 19337  17F7  0020               	movlb	0	; select bank0
 19338  17F8  00D5               	movwf	?___flsub+3
 19339  17F9  0872               	movf	?___fladd+2,w
 19340  17FA  00D4               	movwf	?___flsub+2
 19341  17FB  0871               	movf	?___fladd+1,w
 19342  17FC  00D3               	movwf	?___flsub+1
 19343  17FD  0870               	movf	?___fladd,w
 19344  17FE  00D2               	movwf	?___flsub
 19345  17FF  0008               	return
 19346  1800                     __end_of___flsub:	


Data Sizes:
    Strings     0
    Constant    1400
    Data        1
    BSS         81
    Persistent  37
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     20      64
    BANK1            80     16      59
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TimerInt(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TimerInt(), Absolute function(), TMR3_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR3_ISR->_TMR3_WriteTimer
    _UpdateOut_GP3->i1_PWM_GP3
    _UpdateOut_GP2->i1_PWM_GP2
    _UpdateOut_GP1->i1_PWM_GP1
    _Config_GP3->i1_PWM_GP3
    i1_PWM_GP3->i1___wmul
    _Config_GP2->i1_PWM_GP2
    i1_PWM_GP2->i1___wmul
    _Config_GP1->i1_PWM_GP1
    i1_PWM_GP1->i1___wmul
    _RegisterRead->_eeprom_read
    _CLC_2_Interrupt->___flge
    ___flsub->___fladd
    _CLC_1_Interrupt->___fladd
    _CLC_1_Interrupt->___flge

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _I2C1_ISR->_I2C1_StatusCallback
    _I2C1_StatusCallback->_RegisterWrite
    _RegisterWrite->_Config_GP1
    _RegisterWrite->_Config_GP2
    _RegisterWrite->_Config_GP3
    _UpdateOut_GP3->i1_PWM_GP3
    _UpdateOut_GP2->i1_PWM_GP2
    _UpdateOut_GP1->i1_PWM_GP1
    _Config_GP3->i1_PWM_GP3
    _Config_GP2->i1_PWM_GP2
    _Config_GP1->i1_PWM_GP1
    _CLC2_ISR->_CLC_2_Interrupt
    _CLC1_ISR->_CLC_2_Interrupt
    _CLC_2_Interrupt->___flsub
    ___flsub->___fladd
    _CLC_1_Interrupt->___fladd

Critical Paths under _main in BANK1

    _main->_GP_Ports_FSM
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _NavKey_UPButton_FSM->_NavKeyStatusUpdate
    _NavKey_UPButton_FSM->_SetInterrupt
    _NavKey_RTButton_FSM->_NavKeyStatusUpdate
    _NavKey_RTButton_FSM->_SetInterrupt
    _NavKey_LTButton_FSM->_NavKeyStatusUpdate
    _NavKey_LTButton_FSM->_SetInterrupt
    _NavKey_DWButton_FSM->_NavKeyStatusUpdate
    _NavKey_DWButton_FSM->_SetInterrupt
    _NavKey_CentralButton_FSM->_NavKeyStatusUpdate
    _NavKey_CentralButton_FSM->_SetInterrupt
    _GP3_FSM->_ADC_GetConversion
    _GP2_FSM->_ADC_GetConversion
    _GP1_FSM->_ADC_GetConversion
    _FADE_GP3->_PWM_GP3
    _PWM_GP3->___wmul
    _FADE_GP2->_PWM_GP2
    _PWM_GP2->___wmul
    _FADE_GP1->_PWM_GP1
    _PWM_GP1->___wmul
    _FadeProcessClear->_Int2StatusUpdate
    _Int2StatusUpdate->_NavKeyStatusUpdate

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   23582
                     _ClearInterrupt
                        _DataInitSet
                       _GP_Ports_FSM
                         _NavKey_FSM
                  _SYSTEM_Initialize
           _TMR3_SetInterruptHandler
                    _TMR3_StartTimer
 ---------------------------------------------------------------------------------
 (1) _TMR3_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     211
                    _CLC1_Initialize
                    _CLC2_Initialize
                    _I2C1_AddressSet
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0     211
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR3_SetInterruptHandler                             2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_AddressSet                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _NavKey_FSM                                           0     0      0    8490
             _NavKeySwitch_KeyFilter
           _NavKey_CentralButton_FSM
                _NavKey_DWButton_FSM
                _NavKey_LTButton_FSM
                _NavKey_RTButton_FSM
                _NavKey_UPButton_FSM
 ---------------------------------------------------------------------------------
 (2) _NavKey_UPButton_FSM                                  0     0      0    1641
                 _NavKeyStatusUpdate
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (2) _NavKey_RTButton_FSM                                  0     0      0    1641
                 _NavKeyStatusUpdate
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (2) _NavKey_LTButton_FSM                                  0     0      0    1641
                 _NavKeyStatusUpdate
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (2) _NavKey_DWButton_FSM                                  0     0      0    1641
                 _NavKeyStatusUpdate
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (2) _NavKey_CentralButton_FSM                             0     0      0    1641
                 _NavKeyStatusUpdate
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (2) _NavKeySwitch_KeyFilter                               1     1      0     285
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _GP_Ports_FSM                                         1     1      0   14670
                                             15 BANK1      1     1      0
                           _FADE_GP1
                           _FADE_GP2
                           _FADE_GP3
                            _GP1_FSM
                            _GP2_FSM
                            _GP3_FSM
 ---------------------------------------------------------------------------------
 (2) _GP3_FSM                                              2     2      0    1703
                                              4 BANK1      2     2      0
                  _ADC_GetConversion
                     _ADC_Initialize
                   _Int2StatusUpdate
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (2) _GP2_FSM                                              2     2      0    1703
                                              4 BANK1      2     2      0
                  _ADC_GetConversion
                     _ADC_Initialize
                   _Int2StatusUpdate
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (2) _GP1_FSM                                              2     2      0    1703
                                              4 BANK1      2     2      0
                  _ADC_GetConversion
                     _ADC_Initialize
                   _Int2StatusUpdate
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (3) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ADC_GetConversion                                    4     2      2      31
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (2) _FADE_GP3                                             0     0      0    3187
                   _FadeProcessClear
                     _FadeProcessSet
                            _PWM_GP3
 ---------------------------------------------------------------------------------
 (3) _PWM_GP3                                              9     9      0    1453
                                              6 BANK1      9     9      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _FADE_GP2                                             0     0      0    3187
                   _FadeProcessClear
                     _FadeProcessSet
                            _PWM_GP2
 ---------------------------------------------------------------------------------
 (3) _PWM_GP2                                              9     9      0    1453
                                              6 BANK1      9     9      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _FADE_GP1                                             0     0      0    3187
                   _FadeProcessClear
                     _FadeProcessSet
                            _PWM_GP1
 ---------------------------------------------------------------------------------
 (3) _PWM_GP1                                              9     9      0    1453
                                              6 BANK1      9     9      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1326
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _FadeProcessSet                                       1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (3) _FadeProcessClear                                     1     1      0    1703
                                              3 BANK1      1     1      0
                   _Int2StatusUpdate
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (3) _SetInterrupt                                         2     2      0       0
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (3) _Int2StatusUpdate                                     1     1      0    1672
                                              2 BANK1      1     1      0
                 _NavKeyStatusUpdate
 ---------------------------------------------------------------------------------
 (3) _NavKeyStatusUpdate                                   2     0      2    1641
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _DataInitSet                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ClearInterrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0   17567
                           _CLC1_ISR
                           _CLC2_ISR
                           _I2C1_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR3_ISR                                             0     0      0     229
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (8) _TMR3_WriteTimer                                      2     0      2     229
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) _TMR3_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                           _TimerInt *
 ---------------------------------------------------------------------------------
 (9) _TimerInt                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _TMR3_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_ISR                                             1     1      0    5008
                                              6 BANK0      1     1      0
                _I2C1_StatusCallback
 ---------------------------------------------------------------------------------
 (8) _I2C1_StatusCallback                                  1     1      0    4984
                                              5 BANK0      1     1      0
                    _Int2StatusClear
                       _RegisterRead
                      _RegisterWrite
                        _StatusClear
                   i1_ClearInterrupt
 ---------------------------------------------------------------------------------
 (9) i1_ClearInterrupt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _StatusClear                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _RegisterWrite                                        2     1      1    4790
                                              3 BANK0      2     1      1
                         _Config_GP1
                         _Config_GP2
                         _Config_GP3
                     _GeneralDataSet
                   _GeneralDataSplit
                      _UpdateOut_GP1
                      _UpdateOut_GP2
                      _UpdateOut_GP3
                       _eeprom_write
                           i1___wmul
 ---------------------------------------------------------------------------------
 (10) _eeprom_write                                        2     1      1     196
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (10) _UpdateOut_GP3                                       1     1      0     545
                                              1 BANK0      1     1      0
                          i1_PWM_GP3
 ---------------------------------------------------------------------------------
 (10) _UpdateOut_GP2                                       1     1      0     545
                                              1 BANK0      1     1      0
                          i1_PWM_GP2
 ---------------------------------------------------------------------------------
 (10) _UpdateOut_GP1                                       1     1      0     545
                                              1 BANK0      1     1      0
                          i1_PWM_GP1
 ---------------------------------------------------------------------------------
 (10) _GeneralDataSplit                                    1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _GeneralDataSet                                      0     0      0       0
       _I2C1_Initialize_ClockStreach
                  i1_I2C1_Initialize
 ---------------------------------------------------------------------------------
 (11) i1_I2C1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_Initialize_ClockStreach                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _Config_GP3                                          2     2      0     545
                                              1 BANK0      2     2      0
                    _PWM3_Initialize
                          i1_PWM_GP3
 ---------------------------------------------------------------------------------
 (11) i1_PWM_GP3                                           9     9      0     545
                                              6 COMMON     8     8      0
                                              0 BANK0      1     1      0
                           i1___wmul
 ---------------------------------------------------------------------------------
 (11) _PWM3_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _Config_GP2                                          2     2      0     545
                                              1 BANK0      2     2      0
                    _PWM2_Initialize
                          i1_PWM_GP2
 ---------------------------------------------------------------------------------
 (11) i1_PWM_GP2                                           9     9      0     545
                                              6 COMMON     8     8      0
                                              0 BANK0      1     1      0
                           i1___wmul
 ---------------------------------------------------------------------------------
 (11) _PWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _Config_GP1                                          2     2      0     545
                                              1 BANK0      2     2      0
                    _PWM1_Initialize
                          i1_PWM_GP1
 ---------------------------------------------------------------------------------
 (11) i1_PWM_GP1                                           9     9      0     545
                                              6 COMMON     8     8      0
                                              0 BANK0      1     1      0
                           i1___wmul
 ---------------------------------------------------------------------------------
 (10) i1___wmul                                            6     2      4     456
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (11) _PWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _RegisterRead                                         2     2      0     172
                                              1 COMMON     2     2      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (10) _eeprom_read                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _Int2StatusClear                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _CLC2_ISR                                             0     0      0    6165
                    _CLC_1_Interrupt
                    _CLC_2_Interrupt
 ---------------------------------------------------------------------------------
 (7) _CLC1_ISR                                             0     0      0    6165
                    _CLC_1_Interrupt
                    _CLC_2_Interrupt
 ---------------------------------------------------------------------------------
 (8) _CLC_2_Interrupt                                      4     4      0    3181
                                             16 BANK0      4     4      0
                             ___flge
                            ___flsub
               i1_NavKeyStatusUpdate
                     i1_SetInterrupt
 ---------------------------------------------------------------------------------
 (9) ___flsub                                              8     0      8    2465
                                              8 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (8) _CLC_1_Interrupt                                      4     4      0    2984
                                              8 BANK0      4     4      0
                            ___fladd
                             ___flge
               i1_NavKeyStatusUpdate
                     i1_SetInterrupt
 ---------------------------------------------------------------------------------
 (9) i1_SetInterrupt                                       2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) i1_NavKeyStatusUpdate                                 2     0      2     230
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (9) ___flge                                              12     4      8     486
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (10) ___fladd                                            20    12      8    2268
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearInterrupt
   _DataInitSet
   _GP_Ports_FSM
     _FADE_GP1
       _FadeProcessClear
         _Int2StatusUpdate
           _NavKeyStatusUpdate
         _SetInterrupt
       _FadeProcessSet
       _PWM_GP1
         ___wmul
     _FADE_GP2
       _FadeProcessClear
         _Int2StatusUpdate
           _NavKeyStatusUpdate
         _SetInterrupt
       _FadeProcessSet
       _PWM_GP2
         ___wmul
     _FADE_GP3
       _FadeProcessClear
         _Int2StatusUpdate
           _NavKeyStatusUpdate
         _SetInterrupt
       _FadeProcessSet
       _PWM_GP3
         ___wmul
     _GP1_FSM
       _ADC_GetConversion
       _ADC_Initialize
       _Int2StatusUpdate
         _NavKeyStatusUpdate
       _SetInterrupt
     _GP2_FSM
       _ADC_GetConversion
       _ADC_Initialize
       _Int2StatusUpdate
         _NavKeyStatusUpdate
       _SetInterrupt
     _GP3_FSM
       _ADC_GetConversion
       _ADC_Initialize
       _Int2StatusUpdate
         _NavKeyStatusUpdate
       _SetInterrupt
   _NavKey_FSM
     _NavKeySwitch_KeyFilter
     _NavKey_CentralButton_FSM
       _NavKeyStatusUpdate
       _SetInterrupt
     _NavKey_DWButton_FSM
       _NavKeyStatusUpdate
       _SetInterrupt
     _NavKey_LTButton_FSM
       _NavKeyStatusUpdate
       _SetInterrupt
     _NavKey_RTButton_FSM
       _NavKeyStatusUpdate
       _SetInterrupt
     _NavKey_UPButton_FSM
       _NavKeyStatusUpdate
       _SetInterrupt
   _SYSTEM_Initialize
     _CLC1_Initialize
     _CLC2_Initialize
     _I2C1_AddressSet
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _WDT_Initialize
   _TMR3_SetInterruptHandler
   _TMR3_StartTimer

 _INTERRUPT_InterruptManager (ROOT)
   _CLC1_ISR
     _CLC_1_Interrupt
       ___fladd
       ___flge
       i1_NavKeyStatusUpdate
       i1_SetInterrupt
     _CLC_2_Interrupt
       ___flge
       ___flsub
         ___fladd
       i1_NavKeyStatusUpdate
       i1_SetInterrupt
   _CLC2_ISR
     _CLC_1_Interrupt
       ___fladd
       ___flge
       i1_NavKeyStatusUpdate
       i1_SetInterrupt
     _CLC_2_Interrupt
       ___flge
       ___flsub
         ___fladd
       i1_NavKeyStatusUpdate
       i1_SetInterrupt
   _I2C1_ISR
     _I2C1_StatusCallback
       _Int2StatusClear
       _RegisterRead
         _eeprom_read
       _RegisterWrite
         _Config_GP1
           _PWM1_Initialize
           i1_PWM_GP1
             i1___wmul
         _Config_GP2
           _PWM2_Initialize
           i1_PWM_GP2
             i1___wmul
         _Config_GP3
           _PWM3_Initialize
           i1_PWM_GP3
             i1___wmul
         _GeneralDataSet
           _I2C1_Initialize_ClockStreach
           i1_I2C1_Initialize
         _GeneralDataSplit
         _UpdateOut_GP1
           i1_PWM_GP1
             i1___wmul
         _UpdateOut_GP2
           i1_PWM_GP2
             i1___wmul
         _UpdateOut_GP3
           i1_PWM_GP3
             i1___wmul
         _eeprom_write
         i1___wmul
       _StatusClear
       i1_ClearInterrupt
   _TMR3_ISR
     _TMR3_CallBack
       Absolute function(Fake) *
       _TMR3_DefaultInterruptHandler *
       _TimerInt *
     _TMR3_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      40       5       80.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     10      3B       7       73.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      89      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      89      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Apr 11 16:23:15 2019

                   ??_NavKey_RTButton_FSM 00C9                                         pc 0002  
                             __CFG_CP$OFF 0000                       ___wmul@multiplicand 00C9  
                        i1___wmul@product 0074                 __size_ofi1_ClearInterrupt 0003  
                         ??_UpdateOut_GP1 004B                           ??_UpdateOut_GP2 004B  
                         ??_UpdateOut_GP3 004B                                       l353 01F7  
                                     _PR2 001E                              __CFG_CPD$OFF 0000  
                 __size_of_PMD_Initialize 000E                           _TMR2_Initialize 13E4  
                       ??_CLC2_Initialize 00C7                                       wreg 0009  
                         __end_of_GP1_FSM 0131                           __end_of_GP2_FSM 01CB  
                         __end_of_GP3_FSM 017E                  RegisterRead@return_value 0072  
                   ??_NavKey_UPButton_FSM 00C9                                      S7750 0B07  
                                    S7752 09A3                                      S7754 0B13  
                                    S7756 1044                              __CFG_LVP$OFF 0000  
                        __end_of_I2C1_ISR 0B3C                                      l1121 011A  
                                    l1133 01A4                                      l1118 010C  
                                    l1151 0166                                      l1136 01B3  
                                    l1148 0157                           _timer3ReloadVal 00D9  
                                    l7020 00F2                                      l7012 00E7  
                                    l7022 00FA                                      l7102 0131  
                                    l7112 013D                                      l7104 0132  
                                    l7026 00FE                                      l7050 0126  
                                    l7114 0145                                      l7210 14E1  
                                    l7036 0116                                      l7204 14DF  
                                    l7118 0149                                      l7142 0172  
                                    l7222 14E7                                      l7310 1478  
                                    l7302 146E                                      l7230 1422  
                                    l7072 0196                                      l7128 0162  
                                    l7160 09E8                                      l6602 03EE  
                                    l7082 01AF                                      l7066 018A  
                                    l7058 017F                                      l7154 09CD  
                                    l7314 147A                                      l6612 0201  
                                    l7068 0192                                      l7164 09FA  
                                    l7180 14BB                                      l7172 14B0  
                                    l7252 1485                                      l7244 1436  
                                    l7236 142C                                      l7412 005C  
                                    l6702 02F9                                      l7174 14B4  
                                    l7270 149B                                      l7096 01BF  
                                    l7184 14C1                                      l7280 144D  
                                    l7248 1438                                      l6722 0317  
                                    l6706 02FF                                      l7194 14D0  
                                    l7266 1499                                      l7258 148F  
                                    l7274 1443                                      l6660 037C  
                                    l7196 14D2                                      l7188 14C6  
                                    l7292 1459                                      l6590 01D5  
                                    l7294 1463                                      l7366 0413  
                                    l6680 039A                                      l6664 0382  
                                    l6744 0276                                      l7296 1464  
                                    l7288 1457                                      l6922 00A6  
                                    l7386 00D8                                      l6588 14F2  
                                    l6764 0294                                      l6748 027C  
                                    l7396 0047                                      l6598 03E8  
                                    l6890 1405                                      l6956 0242  
                                    l6990 0218                                      _CMAX 0028  
                                    _CMIN 0024                   __end_of_PWM1_Initialize 0ED5  
                                    _CVAL 002C                                      _LATA 010C  
                                    _LATB 010D                                      _LATC 010E  
                                    _PMD0 0911                                      _PMD1 0912  
                                    _PMD2 0913                                      _PMD3 0914  
                                    _PMD4 0915                                      _PMD5 0916  
                                    i1l80 0012                                      u4665 14AB  
                                    i1l82 001C                                      i1l84 0026  
                                    i1l89 002E                                      u4867 01F2  
                         ?_ClearInterrupt 0070                                      _TMR2 001D  
                                    _WPUA 020C                                      _WPUB 020D  
                                    _WPUC 020E                            ??_eeprom_write 0071  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
                                    _main 0047                           __end_of_PWM_GP1 03E6  
                         __end_of_PWM_GP2 0363                           __end_of_PWM_GP3 02E0  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                          __end_of_FADE_GP1 00C1  
                        __end_of_FADE_GP2 025D                          __end_of_FADE_GP3 0233  
                        __end_of_CLC1_ISR 150E                          __end_of_CLC2_ISR 1504  
                           __CFG_BOREN$ON 0000                             __CFG_BORV$LOW 0000  
                                    start 0030                ??_NavKey_CentralButton_FSM 00C9  
                         _CLC_1_Interrupt 150E                           _TMR3_Initialize 1405  
                 __end_of_Int2StatusClear 0B88                             __CFG_CSWEN$ON 0000  
                     _I2C1_StatusCallback 0B3C                               _DataInitSet 0068  
                           i1PWM_GP1@duty 004A                   __end_of_PWM2_Initialize 0F4D  
                           i1PWM_GP2@duty 004A                             i1PWM_GP3@duty 004A  
                         _CLC_2_Interrupt 1597            __size_of_OSCILLATOR_Initialize 0009  
           __end_of_OSCILLATOR_Initialize 139F                                     _ADACT 009F  
                         __end_of___fladd 17D7                                     ?_main 0070  
                           __CFG_WDTE$OFF 0000                           __end_of___flsub 1800  
                                   _GCONF 0049                                     _T2CON 001F  
                                   _T3CON 0413                        __size_ofi1_PWM_GP1 007E  
                      __size_ofi1_PWM_GP2 007E                        __size_ofi1_PWM_GP3 007E  
                          __CFG_DEBUG$OFF 0000                                     i1l171 0B30  
                                   i1l722 0B3F                                     i1l836 131E  
                                   i1l838 1320                                _Config_GP1 0CCE  
                              _Config_GP2 0ED5                                _Config_GP3 0F4D  
                                   i1l981 0D04                                     i1l974 0CFD  
                                   i1l966 0CE0                                     i1l992 0D21  
                                   i1l986 0D08                                     i1l996 0D24  
                                   i1l998 0D39                                _EncoderReg 0038  
                                   _ISTEP 0020                                     _OSCEN 091D  
                                   _TMR3H 0412                                     _TMR3L 0411  
                                   _TRISA 008C                                     _TRISB 008D  
                                   _TRISC 008E                        FadeProcessSet@stat 00C7  
       __size_of_TMR3_SetInterruptHandler 0005                 ?_TMR3_SetInterruptHandler 00C7  
                       ??_I2C1_Initialize 00C7                      ?_I2C1_StatusCallback 0070  
                        __end_of_TMR3_ISR 0AED            ??_TMR3_DefaultInterruptHandler 0070  
                          _WDT_Initialize 13EC                   NavKeySwitch_KeyFilter@i 00C7  
                       ?_GeneralDataSplit 0070                   __end_of_PWM3_Initialize 0FC6  
                                   pclath 000A                                _DoublePush 00B3  
                        __end_ofi1___wmul 0EC9                        ??_GeneralDataSplit 0070  
                              _NavKey_FSM 0409               __end_of_NavKey_LTButton_FSM 1484  
                                   status 0003                       i1___wmul@multiplier 0070  
                                   wtemp0 007E                __size_ofi1_I2C1_Initialize 0013  
                          __CFG_MCLRE$OFF 0000                           __initialization 0032  
              __end_of_NavKeyStatusUpdate 14FA                              __end_of_main 0065  
                __end_of_Int2StatusUpdate 01D5                   ?_NavKeySwitch_KeyFilter 0070  
                 __end_of_TMR2_Initialize 13EC               ?_INTERRUPT_InterruptManager 0070  
                                  ??_main 00D7                                 ??_GP1_FSM 00CB  
                               ??_GP2_FSM 00CB                                 ??_GP3_FSM 00CB  
                         _TMR3_StartTimer 0428                     _TMR3_InterruptHandler 00D7  
                    i1_NavKeyStatusUpdate 1621                  __end_of_FadeProcessClear 0404  
                        __end_of_TimerInt 09AE                          ??i1_SetInterrupt 0070  
                  __end_of_WDT_Initialize 13F0                     ??_I2C1_StatusCallback 007E  
                                  _ADCON0 009D                                    _ADCON1 009E  
                                  _FADEGP 003F                                    _ADRESH 009C  
                                  _ADRESL 009B                                    i1S7760 1000  
                                  i1S7770 105C                                    _CCPR1H 0292  
                                  i1S7780 0A00                                    i1S7764 1054  
                                  _CCPR2H 0296                                    i1S7758 104C  
                                  _CCPR3H 0312                                    _CCPR1L 0291  
                                  i1S7776 1064                                 ??_PWM_GP1 00CD  
                                  _CCPR2L 0295                                 ??_PWM_GP2 00CD  
                               ??_PWM_GP3 00CD                                    _CCPR3L 0311  
                                  _GP1REG 0043                                    _ANSELA 018C  
                                  _ANSELB 018D                                    _ANSELC 018E  
                                  _GP2REG 0042                                    _GP3REG 0041  
                                  _T3GCON 0414                                    i1l1011 0F04  
                                  i1l1003 0EE7                                    i1l1023 0F0F  
                                  i1l1040 0F5F                                    i1l1104 12C2  
                                  i1l1033 0F2B                                    i1l1018 0F0B  
                                  i1l1035 0F40                                    i1l1060 0F87  
                                  i1l1029 0F28                                    i1l1070 0FA3  
                        ?_PWM1_Initialize 0070                                    i1l1055 0F83  
                                  i1l1072 0FB8                                    i1l1048 0F7C  
                                  i1l1080 128A                                    i1l1066 0FA0  
                                  i1l1092 12A6                   __end_of_CLC_1_Interrupt 1597  
                                  _ODCONA 028C                                    _ODCONB 028D  
                                  _ODCONC 028E                                    i1l1525 0BFA  
                                  i1l1551 12E9                                    i1l5000 17CD  
                                  i1l1547 12D4                                    i1l5004 17D2  
                                  i1l1740 1648                                    i1l5100 0C51  
                                  i1l1742 1676                                    i1l5102 0C54  
                                  i1l5200 0BB8                                    i1l5120 0C78  
                                  i1l5112 0C68                                    i1l5210 0BC2  
                                  i1l5202 0BBA                                    i1l5130 0C96  
                                  i1l5114 0C6C                                    i1l5106 0C5C  
                                  i1l1851 169B                                    i1l1852 1699  
                                  i1l5220 0BCC                                    i1l5212 0BC4  
                                  i1l5204 0BBC                                    i1l5108 0C60  
                 __end_of_TMR3_Initialize 1421                                    i1l1862 1719  
                                  i1l5230 0BD6                                    i1l5222 0BCE  
                                  i1l5214 0BC6                                    i1l5206 0BBE  
                                  i1l4350 0EB6                                    i1l4430 0E55  
                                  i1l4510 0D53                                    i1l5134 0C9F  
                                  i1l5118 0C74                                    i1l5070 0C24  
                                  i1l5062 0C19                                    i1l5054 0C0F  
                                  i1l1864 1707                                    i1l1856 16B6  
                                  i1l5232 0BD8                                    i1l5224 0BD0  
                                  i1l5216 0BC8                                    i1l5208 0BC0  
                                  i1l5240 0BE7                                    i1l5152 0CC9  
                                  i1l5128 0C93                                    i1l5080 0C33  
                                  i1l5072 0C27                                    i1l5048 0C08  
                                  i1l5144 0CB1                                    i1l1873 1733  
                                  i1l1865 170D                                    i1l1857 16B4  
                                  i1l1874 1734                                    i1l1866 170E  
                                  i1l6106 150A                                    i1l5234 0BDB  
                                  i1l5226 0BD2                                    i1l5218 0BCA  
                                  i1l5170 0B92                                    i1l5162 0B8A  
                                  i1l4354 0EBC                                    i1l4426 0E4F  
                                  i1l4530 0D71                                    i1l4514 0D59  
                                  i1l5138 0CA8                                    i1l5090 0C42  
                                  i1l5082 0C36                                    i1l5074 0C2A  
                                  i1l5066 0C1E                                    i1l5058 0C14  
                                  i1l5146 0CBB                                    i1l6122 0B2E  
                                  i1l1884 179F                                    i1l6108 150B  
                                  i1l5228 0BD4                                    i1l5180 0BA4  
                                  i1l5172 0B94                                    i1l5164 0B8C  
                                  i1l5092 0C45                                    i1l5084 0C39  
                                  i1l5076 0C2D                                    i1l5068 0C21  
                                  i1l5246 0BF2                                    i1l5190 0BAE  
                                  i1l5182 0BA6                                    i1l5174 0B96  
                                  i1l5166 0B8E                                    i1l5238 0BDD  
                                  i1l4446 0E6D                                    i1l5094 0C48  
                                  i1l5086 0C3C                                    i1l5078 0C30  
                                  i1l6126 0B34                                    i1l1879 1786  
                                  i1l5248 0BF5                                    i1l5192 0BB0  
                                  i1l5184 0BA8                                    i1l5176 0B98  
                                  i1l5168 0B90                                    i1l4472 0DD7  
                                  i1l5096 0C4B                                    i1l5088 0C3F  
                                  i1l5194 0BB2                                    i1l5186 0BAA  
                                  i1l5178 0B9E                                    i1l4634 0D0D  
                                  i1l5098 0C4E                                    i1l1899 17D1  
                                  i1l5196 0BB4                                    i1l5188 0BAC  
                                  i1l4468 0DD1                                    i1l5622 1617  
                                  i1l5614 15D5                                    i1l5198 0BB6  
                                  i1l4638 0D27                                    i1l4734 0F8C  
                                  i1l4590 1318                                    i1l5630 0B47  
                                  i1l5392 165F                                    i1l5624 161F  
                                  i1l6096 1500                                    i1l4488 0DEF  
                                  i1l4760 1290                                    i1l5640 0B5D  
                                  i1l4922 1715                                    i1l5386 1637  
                                  i1l6098 1501                                    i1l4738 0FA6  
                                  i1l5650 0B6D                                    i1l4940 173C  
                                  i1l4908 16E0                                    i1l4684 0F14  
                                  i1l4596 1328                                    i1l5644 0B64  
                                  i1l5636 0B51                                    i1l5628 0B43  
                                  _C_DIRE 00C2                                    i1l4950 177E  
                                  i1l5558 1518                                    i1l4598 132A  
                                  i1l4774 12AC                                    i1l5638 0B5A  
                                  i1l4928 1723                                    i1l5584 158D  
                                  i1l5576 154A                                    i1l4688 0F2E  
                                  i1l4970 17A5                                    i1l5586 1595  
                                  i1l5594 15A2                                    i1l5658 0B73  
                                  i1l5674 0B02                                    i1l4980 17B0  
                                  i1l4964 17A0                                    i1l4956 1794  
                                  i1l4788 12C8                                    i1l5676 0AED  
                                  i1l4878 16C2                                    i1l4992 17C1  
                                  i1l4976 17AE                                    i1l4968 17A3  
                                  u215_25 0FED                                    i1l7762 0F96  
                                  i1l7772 0F38                                    u216_25 0FF7  
                                  i1l7774 0D17                                    i1l7766 0FB0  
                                  i1l7768 0F1E                                    i1l7778 0D31  
                                  u250_20 16FE                                    u251_20 16FF  
                                  u260_23 174F                                    u237_21 0BF9  
                                  _C_IPUD 00C3                                    u249_25 16F4  
                                  _OSCFRQ 091F                                    _WDTCON 0097  
                       __end_ofi1_PWM_GP1 0EB4                         __end_ofi1_PWM_GP2 0E36  
                       __end_ofi1_PWM_GP3 0DB8                           _TMR3_WriteTimer 0AF8  
                          __CFG_PWRTE$OFF 0000                   __end_of_CLC_2_Interrupt 1621  
                        ?_Int2StatusClear 0070                      __size_of_eeprom_read 000F  
          __end_of_NavKeySwitch_KeyFilter 0A00                   __size_of_GeneralDataSet 003F  
                                  ___flge 1626                                 ??___fladd 004A  
                                  ___wmul 03E6                            __CFG_STVREN$ON 0000  
                               ??___flsub 007C                                    _en_deb 00AF  
                                  _pb_cnt 00AA                                    _pb_fsm 00BA  
                        ?_PWM2_Initialize 0070                                 ?_I2C1_ISR 0070  
                        i1_ClearInterrupt 0B82                      __end_of_eeprom_write 12EF  
                         _I2C1_AddressSet 137D                               ?_Config_GP1 0070  
                             ?_Config_GP2 0070                               ?_Config_GP3 0070  
                   ?i1_NavKeyStatusUpdate 0070                            _PMD_Initialize 13D6  
                               ?_FADE_GP1 0070                                 ?_FADE_GP2 0070  
                               ?_FADE_GP3 0070                                 ?_CLC1_ISR 0070  
                               ?_CLC2_ISR 0070                           ?_WDT_Initialize 0070  
                ADC_GetConversion@channel 00CA  TMR3_SetInterruptHandler@InterruptHandler 00C7  
                           ?_RegisterRead 0070                           _CLC1_Initialize 13F0  
    __end_of_I2C1_Initialize_ClockStreach 1342     __size_of_I2C1_Initialize_ClockStreach 0014  
            _I2C1_Initialize_ClockStreach 132E                             ?_SetInterrupt 0070  
                              ___flge@ff1 0070                                ___flge@ff2 0074  
                        ?_PWM3_Initialize 0070                               _i2c_address 005E  
                       _SYSTEM_Initialize 1355                               ?_NavKey_FSM 0070  
            __size_of_NavKey_DWButton_FSM 0021                   __end_of__initialization 0044  
                         eeprom_read@addr 0070                        ?_SYSTEM_Initialize 0070  
                   __end_of_TMR3_CallBack 0AF8                      FadeProcessClear@stat 00CA  
                          __pcstackCOMMON 0070                              __pidataBANK0 0000  
                     ??_SYSTEM_Initialize 00C9                   __end_of_TMR3_StartTimer 042B  
                         _CLC2_Initialize 1368                                 ?_TMR3_ISR 0070  
                              ??_I2C1_ISR 007E                          ?_TMR2_Initialize 0070  
                  __end_of_PMD_Initialize 13E4                   __size_of_FadeProcessSet 0005  
                           ??_StatusClear 0070                                 ?i1___wmul 0070  
               NavKey_UPButton_FSM@up_fsm 00B8                                ??_FADE_GP1 00D6  
                              ??_FADE_GP2 00D6                                ??_FADE_GP3 00D6  
                              ??_CLC1_ISR 007C                                ??_CLC2_ISR 007C  
                        ??_ClearInterrupt 00C7                         eeprom_write@value 0070  
                          ??_RegisterRead 0071                            ??_SetInterrupt 00C7  
               __end_of_SYSTEM_Initialize 1368                   __end_of_TMR3_WriteTimer 0B07  
                              __pbssBANK0 0020                                __pbssBANK1 00A0  
                        ?_CLC_1_Interrupt 0070                          ?_TMR3_Initialize 0070  
                  __size_of_RegisterWrite 00C8               __end_of_NavKey_RTButton_FSM 1463  
                     __size_of_Config_GP1 006C                       __size_of_Config_GP2 006C  
                     __size_of_Config_GP3 006C                          ?_CLC_2_Interrupt 0070  
                          _SSP1DATPPSbits 0E21                                __pmaintext 0047  
                           _CLCIN0PPSbits 0E28                             ?_GP_Ports_FSM 0070  
                               ?_TimerInt 0070                             _CLCIN1PPSbits 0E29  
                                 ?___flge 0070          __end_of_TMR3_SetInterruptHandler 0428  
                                 ?___wmul 00C7                   __end_of_I2C1_AddressSet 1383  
                              ??_TMR3_ISR 0072                              ?_DataInitSet 0070  
                              __pintentry 0004                           _I2C1_Initialize 1383  
                                 _CCP1CON 0293                                   _CCP2CON 0297  
                                 _CCP3CON 0313                                   _CLC1CON 0F10  
                                 _CLC2CON 0F1A                                   _CLC1POL 0F11  
                                 _CLC2POL 0F1B                                   _GP1CONF 0048  
                                 _GP2CONF 0047                            _SSP1CLKPPSbits 0E20  
                                 _GP3CONF 0046                           ?_PMD_Initialize 0070  
                  ??i1_NavKeyStatusUpdate 0072                       __CFG_RSTOSC$HFINT32 0000  
                 __size_of_ADC_Initialize 0008                       __size_of_NavKey_FSM 001A  
                              ??i1___wmul 0074                                   _GP1_FSM 00E6  
                                 _GP2_FSM 017E                                   _GP3_FSM 0131  
             __end_of_NavKey_UPButton_FSM 1442                   __end_of_CLC1_Initialize 1405  
                   __end_of_UpdateOut_GP1 129B                     __end_of_UpdateOut_GP2 12B7  
                   __end_of_UpdateOut_GP3 12D3                                   _C_CKSRC 00C4  
                                 _C_MBANK 003B                                   _FSTATUS 0044  
                                 _INTCONF 0030         I2C1_StatusCallback@slaveWriteType 00BF  
                                 _C_DTYPE 0039                                   _C_RESET 00C5  
                                 _OSCCON1 0919                                   _OSCCON3 091B  
                                 _C_WRAPE 003A                                   _NVMADRH 0892  
                                 _NVMADRL 0891                                   _NVMDATH 0894  
                                 _OSCTUNE 091E                                   _NVMDATL 0893  
                                 _NVMCON2 0896                                   _NSTATUS 0032  
                                 _SSP1ADD 0212                                   _PPSLOCK 0E0F  
                                 _SSP1BUF 0211                                __pswtext10 0A00  
                                 _SSP1MSK 0213                       __end_of_StatusClear 0B82  
                                 _PWM_GP1 0363                                   _PWM_GP2 02E0  
                                 _PWM_GP3 025D                                   _SSTATUS 0045  
                         _double_push_cnt 00B1                   __end_of_CLC2_Initialize 137D  
                          ??_GP_Ports_FSM 00D6                            _GeneralDataSet 12EF  
                              ??_TimerInt 0070                 __size_of_GeneralDataSplit 003A  
                   __size_of_eeprom_write 001C                           RegisterRead@add 0071  
                         __size_of___flge 0062                                   ___fladd 1688  
                        ?_TMR3_StartTimer 0070                                   ___flsub 17E3  
                         __size_of___wmul 0015                                   _gp1_fsm 00BD  
                                 _gp2_fsm 00BC                                   _gp3_fsm 00BB  
                       ?_Int2StatusUpdate 0070                        ??_Int2StatusUpdate 00C9  
                                 __ptext1 0428                                   __ptext2 1355  
                                 __ptext3 13EC                                   __ptext4 1405  
                                 __ptext5 0423                                   __ptext6 13E4  
                                 __ptext7 13D6                                   __ptext8 139F  
                                 __ptext9 1396                             _RegisterWrite 0C06  
                                 _en_prev 00B9                     _OSCILLATOR_Initialize 1396  
       __size_of_NavKey_CentralButton_FSM 004D                                   _fsm_tmr 00C6  
               ?_NavKey_CentralButton_FSM 0070                                 _T3CONbits 0413  
                      _NavKeyStatusUpdate 14F2                  ??_PIN_MANAGER_Initialize 00C7  
                       ?_FadeProcessClear 0070                        ??_FadeProcessClear 00CA  
              __size_of_SYSTEM_Initialize 0013                                   clrloop0 0B1C  
                    end_of_initialization 0044                          ?_TMR3_WriteTimer 0070  
                     ?_NavKeyStatusUpdate 00C7                  __end_ofi1_ClearInterrupt 0B85  
                            _eeprom_write 12D3                    __end_of_GeneralDataSet 132E  
                 __end_of_I2C1_Initialize 1396                                 i1_PWM_GP1 0E36  
                               i1_PWM_GP2 0DB8                                 i1_PWM_GP3 0D3A  
            __size_of_NavKey_LTButton_FSM 0021                      __end_of_RegisterRead 0BF7  
                        ?_I2C1_AddressSet 0070                      ??_NavKeyStatusUpdate 00C9  
                    __end_of_SetInterrupt 01E6                     i1___wmul@multiplicand 0072  
                          _FadeProcessSet 0404                            ?_RegisterWrite 004D  
             __end_of_I2C1_StatusCallback 0B7E                          ??_WDT_Initialize 00C7  
                     _NavKey_DWButton_FSM 1484                                 _PORTAbits 000C  
                               _PORTBbits 000D                                 _PORTCbits 000E  
                _TMR3_SetInterruptHandler 0423                               _StatusClear 0B7E  
                            ??_Config_GP1 004B                              ??_Config_GP2 004B  
                            ??_Config_GP3 004B                         __size_of_I2C1_ISR 001B  
                        ?_CLC1_Initialize 0070                               ___fladd@grs 007B  
                               _TRISCbits 008E                         __size_of_FADE_GP1 0029  
                       __size_of_FADE_GP2 002A                         __size_of_FADE_GP3 002A  
                       __size_of_CLC1_ISR 000A                         __size_of_CLC2_ISR 000A  
                        __CFG_FEXTOSC$OFF 0000                              ??_NavKey_FSM 00C9  
                    ?_NavKey_DWButton_FSM 0070                             ??_eeprom_read 0070  
                        ?_CLC2_Initialize 0070                           ?_GeneralDataSet 0070  
                      __end_of_Config_GP1 0D3A                        __end_of_Config_GP2 0F41  
                      __end_of_Config_GP3 0FB9                  __size_of_PWM1_Initialize 000C  
                              ?i1_PWM_GP1 0070                                ?i1_PWM_GP2 0070  
                              ?i1_PWM_GP3 0070                      Int2StatusUpdate@stat 00C9  
                             PWM_GP1@duty 00D5                               PWM_GP2@duty 00D5  
                  __end_of_FadeProcessSet 0409                               PWM_GP3@duty 00D5  
                          __end_of___flge 1688                            __end_of___wmul 03FB  
                       __size_of_TMR3_ISR 0009                      __size_of_DataInitSet 0030  
                          _ADC_Initialize 0201                  __size_of_Int2StatusClear 0003  
                  ?_OSCILLATOR_Initialize 0070                        __end_of_NavKey_FSM 0423  
                     start_initialization 0032                         __size_ofi1___wmul 0015  
                     __end_of_gamma_table 09A3                  __size_of_PWM2_Initialize 000C  
         __size_of_PIN_MANAGER_Initialize 0037                      __end_of_GP_Ports_FSM 00E6  
                   ??_NavKey_DWButton_FSM 00C9                   __size_ofi1_SetInterrupt 000C  
                        ?_I2C1_Initialize 0070                          __CFG_LPBOREN$OFF 0000  
                __size_of_PWM3_Initialize 000D                          _GeneralDataSplit 0FC6  
                                ??___flge 0078                          ??_PMD_Initialize 00C7  
                        I2C1_ISR@i2c_data 0050                                  ??___wmul 00CB  
                     __end_of_eeprom_read 0C06                               _CCPTMRSbits 029F  
                         ?_FadeProcessSet 0070                           ??_RegisterWrite 007E  
                  __end_of_ADC_Initialize 0209                               __pdataBANK0 005F  
                       __size_of_TimerInt 0003                                  ?_GP1_FSM 0070  
                                ?_GP2_FSM 0070                                  ?_GP3_FSM 0070  
                               ___fladd@a 0074                                 ___fladd@b 0070  
                               ___flsub@a 0052                                 ___flsub@b 0056  
                               ___latbits 0002                             __pcstackBANK0 004A  
                           __pcstackBANK1 00C7          I2C1_StatusCallback@i2c_bus_state 004F  
                __size_of_TMR2_Initialize 0008                    __size_of_TMR3_CallBack 000B  
                                ?_PWM_GP1 0070                                  ?_PWM_GP2 0070  
                                ?_PWM_GP3 0070                          eeprom_write@addr 0071  
                ??_NavKeySwitch_KeyFilter 00C7                                 __pnvBANK0 005E  
                               __pnvBANK1 00D7                     __size_of_RegisterRead 006F  
                   __size_of_SetInterrupt 0011                    _PIN_MANAGER_Initialize 139F  
        __end_of_NavKey_CentralButton_FSM 14F2                  __size_of_CLC_1_Interrupt 0089  
                __size_of_TMR3_Initialize 001C                               ??i1_PWM_GP1 0076  
                             ??i1_PWM_GP2 0076                               ??i1_PWM_GP3 0076  
                                ?___fladd 0070              __size_of_NavKey_RTButton_FSM 0021  
                                ?___flsub 0052                           ?_ADC_Initialize 0070  
                        __CFG_PPS1WAY$OFF 0000                                  _I2C1_ISR 0B21  
                             _gamma_table 042B                         ??_PWM1_Initialize 0070  
            ??_INTERRUPT_InterruptManager 007E                                 _int2clear 00C0  
                __size_of_CLC_2_Interrupt 008A                                 __pswtext1 0B07  
                               __pswtext2 09A3                                 __pswtext3 0B13  
                               __pswtext4 1044                                 __pswtext5 104C  
                               __pswtext6 1000                                 __pswtext7 1054  
                               __pswtext8 105C                                 __pswtext9 1064  
                                _CLC1GLS0 0F16                                  _CLC1GLS1 0F17  
                                _CLC1GLS2 0F18                                  _CLC1GLS3 0F19  
                                _CLC2GLS0 0F20                                  _CLC2GLS1 0F21  
                                _CLC2GLS2 0F22                                  _CLC2GLS3 0F23  
                                _CLC1SEL0 0F12                                  _CLC1SEL1 0F13  
                                _CLC1SEL2 0F14                                  _CLC1SEL3 0F15  
                                _CLC2SEL0 0F1C                                  _CLC2SEL1 0F1D  
                                _CLC2SEL2 0F1E                                  _CLC2SEL3 0F1F  
           __size_ofi1_NavKeyStatusUpdate 0005                  i1NavKeyStatusUpdate@stat 0070  
                                _FADE_GP1 0098                                  _FADE_GP2 0233  
                                _FADE_GP3 0209                                  _CLC1_ISR 1504  
                                _CLC2_ISR 14FA                                  _GAMMAGP1 003E  
                                _GAMMAGP2 003D                                  _GAMMAGP3 003C  
                       ??_Int2StatusClear 0070                       _NavKey_LTButton_FSM 1463  
               __size_of_Int2StatusUpdate 000A              __size_of_NavKey_UPButton_FSM 0021  
                            _RegisterRead 0B88                              _SetInterrupt 01D5  
                                _DPPERIOD 0040                         ??_PWM2_Initialize 0070  
                       ?i1_ClearInterrupt 0070                            ___wmul@product 00CB  
                                _LATBbits 010D                                  _LATCbits 010E  
                 __size_of_ClearInterrupt 0003                                 clear_ram0 0B1B  
                             _eeprom_read 0BF7             ?_I2C1_Initialize_ClockStreach 0070  
                                _PIE1bits 0091                                  _PIE3bits 0093  
                      ??i1_ClearInterrupt 0070                 __size_of_FadeProcessClear 0009  
                  __size_of_UpdateOut_GP1 001C                    __size_of_UpdateOut_GP2 001C  
                  __size_of_UpdateOut_GP3 001C       __size_of_INTERRUPT_InterruptManager 002C  
                                _PIR1bits 0011                                  _PIR3bits 0013  
              ??_TMR3_SetInterruptHandler 00C9                             _TMR3_CallBack 0AED  
                             _gp_fade_cnt 0034                      ?_NavKey_LTButton_FSM 0070  
                                _SSP1CON1 0215                                  _SSP1CON2 0216  
                                _SSP1CON3 0217                                  _TMR3_ISR 0AE4  
                                _SSP1STAT 0214                           _NavKey_PBstatus 00A0  
                     _I2C1_slaveWriteData 005F                         ??_PWM3_Initialize 0070  
                              _ADCON0bits 009D                     __size_of_GP_Ports_FSM 0025  
                       ___wmul@multiplier 00C7                                  i1___wmul 0EB4  
                            ?_StatusClear 0070                          __size_of_GP1_FSM 004B  
                        __size_of_GP2_FSM 004D                          __size_of_GP3_FSM 004D  
                                _WPUBbits 020D                                  _WPUCbits 020E  
                __size_of_TMR3_StartTimer 0003                         RegisterWrite@data 004D  
               NavKey_DWButton_FSM@dn_fsm 00B7                          ??_GeneralDataSet 0070  
                        __size_of_PWM_GP1 0083                          __size_of_PWM_GP2 0083  
                        __size_of_PWM_GP3 0083                         ??_TMR2_Initialize 00C7  
                          i1_SetInterrupt 17D7           __size_of_NavKeySwitch_KeyFilter 0052  
                          ?_TMR3_CallBack 0070                  __size_of_TMR3_WriteTimer 000F  
                   ??_NavKey_LTButton_FSM 00C9                         _ADC_GetConversion 01E6  
                                _TimerInt 09AB                              _GP_Ports_FSM 00C1  
                 ??_OSCILLATOR_Initialize 00C7                        ?_ADC_GetConversion 00C7  
                        __size_of___fladd 014F               __size_of_NavKeyStatusUpdate 0008  
                        __size_of___flsub 001D                  _NavKey_CentralButton_FSM 14A5  
                       ??_CLC_1_Interrupt 0052                         ??_TMR3_Initialize 00C9  
                              _ANSELCbits 018E                       ??_ADC_GetConversion 00C9  
                __size_of_I2C1_AddressSet 0006                             _UpdateOut_GP1 127F  
                           _UpdateOut_GP2 129B                             _UpdateOut_GP3 12B7  
                       ??_CLC_2_Interrupt 005A              __size_of_I2C1_StatusCallback 0042  
                __end_of_GeneralDataSplit 1000                                  __ptext10 1383  
                                __ptext11 137D                                  __ptext20 09AE  
                                __ptext12 1368                                  __ptext21 00C1  
                                __ptext13 13F0                                  __ptext30 02E0  
                                __ptext22 0131                                  __ptext14 0409  
                                __ptext31 0098                                  __ptext23 017E  
                                __ptext15 1421                                  __ptext40 0065  
                                __ptext32 0363                                  __ptext24 00E6  
                                __ptext16 1442                                  __ptext33 03E6  
                                __ptext25 0201                                  __ptext17 1463  
                                __ptext50 0B7E                                  __ptext42 0AE4  
                                __ptext34 0404                                  __ptext26 01E6  
                                __ptext18 1484                                  __ptext51 0C06  
                                __ptext43 0AF8                                  __ptext35 03FB  
                                __ptext27 0209                                  __ptext19 14A5  
                                __ptext60 0F4D                                  __ptext52 12D3  
                                __ptext44 0AED                                  __ptext36 01D5  
                                __ptext28 025D                                  __ptext61 0D3A  
                                __ptext53 12B7                                  __ptext45 0003  
                                __ptext37 01CB                                  __ptext29 0233  
                                __ptext70 0B88                                  __ptext62 0FB9  
                                __ptext54 129B                                  __ptext46 09AB  
                                __ptext38 14F2                                  __ptext71 0BF7  
                                __ptext63 0ED5                                  __ptext55 127F  
                                __ptext47 0B21                                  __ptext39 0068  
                                __ptext80 1626                                  __ptext72 0B85  
                                __ptext64 0DB8                                  __ptext56 0FC6  
                                __ptext48 0B3C                                  __ptext81 1688  
                                __ptext73 14FA                                  __ptext65 0F41  
                                __ptext57 12EF                                  __ptext49 0B82  
                                __ptext74 1504                                  __ptext66 0CCE  
                                __ptext58 1342                                  __ptext75 1597  
                                __ptext67 0E36                                  __ptext59 132E  
                                __ptext76 17E3                                  __ptext68 0EB4  
                                __ptext77 150E                                  __ptext69 0EC9  
                                __ptext78 17D7                                  __ptext79 1621  
                            _SSP1CON1bits 0215                              _SSP1CON2bits 0216  
                  __end_ofi1_SetInterrupt 17E3                  __size_of_CLC1_Initialize 0015  
                 TMR3_WriteTimer@timerVal 0070                                  _gp_timer 00BE  
                           __size_of_main 001E                                  _intclear 00C1  
               __end_of_ADC_GetConversion 0201                          ??_FadeProcessSet 00C7  
                              _RC0PPSbits 0EA0                                _RC1PPSbits 0EA1  
                                _temp_gp1 0037                                  _temp_gp2 0036  
                                _temp_gp3 0035                                _RC2PPSbits 0EA2  
                              _RB6PPSbits 0E9E            ??_I2C1_Initialize_ClockStreach 0070  
                           ??_DataInitSet 00C7                                  int$flags 007E  
                              _RB7PPSbits 0E9F                                _ODCONCbits 028E  
      __end_of_INTERRUPT_InterruptManager 0030                _INTERRUPT_InterruptManager 0004  
                __size_of_CLC2_Initialize 0015                          RegisterWrite@add 004E  
                            _SSP1STATbits 0214      __end_of_TMR3_DefaultInterruptHandler 0004  
   __size_of_TMR3_DefaultInterruptHandler 0001              _TMR3_DefaultInterruptHandler 0003  
                  _NavKeySwitch_KeyFilter 09AE                            ?_UpdateOut_GP1 0070  
                          ?_UpdateOut_GP2 0070                            ?_UpdateOut_GP3 0070  
                              _INTCONbits 000B                               _NVMCON1bits 0895  
             __end_of_NavKey_DWButton_FSM 14A5                          _Int2StatusUpdate 01CB  
                     _NavKey_RTButton_FSM 1442                   __size_of_WDT_Initialize 0004  
                       ??_TMR3_StartTimer 00C7                           ?i1_SetInterrupt 0070  
                                intlevel1 0000                   ?_PIN_MANAGER_Initialize 0070  
                          _ClearInterrupt 0065                           ??_TMR3_CallBack 0070  
                       __CFG_CLKOUTEN$OFF 0000                               _PPSLOCKbits 0E0F  
                         _PWM1_Initialize 0EC9                          _FadeProcessClear 03FB  
                        ??_ADC_Initialize 00C7                             _NavKey_PBtemp 00A5  
                       i1_I2C1_Initialize 1342                      ?_NavKey_RTButton_FSM 0070  
                     _NavKey_UPButton_FSM 1421                        ?i1_I2C1_Initialize 0070  
                         _Int2StatusClear 0B85                         ??_TMR3_WriteTimer 0072  
                __size_of_I2C1_Initialize 0013                     __end_of_RegisterWrite 0CCE  
               NavKey_LTButton_FSM@lt_fsm 00B5                             __pstringtext1 042B  
               NavKey_RTButton_FSM@rt_fsm 00B6             ?_TMR3_DefaultInterruptHandler 0070  
                     __end_of_DataInitSet 0098                       ??i1_I2C1_Initialize 0070  
                         _PWM2_Initialize 0F41                      __size_of_StatusClear 0004  
                    ?_NavKey_UPButton_FSM 0070                             ___fladd@signs 0078  
                  NavKeyStatusUpdate@stat 00C7                    __end_of_ClearInterrupt 0068  
                       ??_I2C1_AddressSet 00C7            __end_of_PIN_MANAGER_Initialize 13D6  
                           ?_eeprom_write 0070                              ___fladd@aexp 0079  
                            ___fladd@bexp 007A                                _STATUSbits 0003  
            __end_ofi1_NavKeyStatusUpdate 1626                              ?_eeprom_read 0070  
              __size_of_ADC_GetConversion 001B                 __end_ofi1_I2C1_Initialize 1355  
                         _PWM3_Initialize 0FB9                         ??_CLC1_Initialize 00C7  
